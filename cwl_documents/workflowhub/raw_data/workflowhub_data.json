[
  {
    "": 1,
    "discussion_links": [],
    "title": "Virus genome assembly with Unicycler and Spades.",
    "license": "MIT",
    "description": "Virus genome assembly with Unicycler and Spades,\nThe 2 assemblers works in parallel. The graph  visualization is made with Bandage.\nworkflow git repository : https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/blob/master/Assembly/workflow/assembly-wf-virus.cwl\nBased on  https://github.com/galaxyproject/SARS-CoV-2/blob/master/genomics/2-Assembly/as_wf.png",
    "latest_version": 1,
    "tags": "['Assembly', 'covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/3?version=1', 'commit': 'c03490495899c483a57b2f32b0bce0290c07f08d', 'ref': 'refs/heads/master', 'tree': '/workflows/3/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-04-10T10:45:00.000Z",
    "updated_at": "2023-01-16T13:39:45.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_file_type', 'name': None, 'description': 'Paired and single end data', 'type': [{'type': 'enum', 'symbols': ['paired', 'single']}], 'default_value': None}, {'id': 'mode', 'name': None, 'description': 'Bridging mode, values:\\nconservative (smaller contigs, lower misassembly)\\nnormal (moderate contig size and misassembly rate)\\nbold  (longest contigs, higher misassembly rate)\\n', 'type': [{'type': 'enum', 'symbols': ['conservative', 'normal', 'bold']}], 'default_value': None}, {'id': 'fastq1_type', 'name': None, 'description': 'Type of the First set of reads. Only when fastq_file_type = single  or  paired', 'type': [{'type': 'enum', 'symbols': ['fastqsanger', 'fastqsanger.gz']}], 'default_value': 'fastqsanger'}, {'id': 'fastq1', 'name': None, 'description': 'First set of reads with forward reads. Only when fastq_file_type = single or paired', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'fastq2_type', 'name': None, 'description': 'Type of the Second set of reads. Only when fastq_file_type=paired', 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['fastqsanger', 'fastqsanger.gz']}], 'default_value': 'null'}, {'id': 'fastq2', 'name': None, 'description': 'Second set of reads with reverse reads. Only when fastq_file_type=paired', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'libraries_metadata', 'name': None, 'description': 'reads library metadata\\nrelated to   libraries_fwd_rev and libraries_mono inputs\\nlib_index(id) must match\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'libraries_fwd_rev', 'name': None, 'description': 'reads file\\norientation must be a value in  ff, fr, rf\\nK-mer choices can be chosen by SPAdes instead of being entered manually\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'libraries_mono', 'name': None, 'description': 'reads file\\nfile_type value must be in : interleaved, merged, unpaired\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'pacbio_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'nanopore_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'sanger_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'trusted_contigs', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'untrusted_contigs', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'auto_kmer_choice', 'name': None, 'description': 'Automatically choose k-mer values.\\nK-mer choices can be chosen by SPAdes instead of being entered manually\\n', 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'kmers', 'name': None, 'description': 'K-mers to use, separated by commas.\\nComma-separated list of k-mer sizes to be used \\n(all values must be odd, less than 128, listed in ascending order,\\n and smaller than the read length). The default value is 21,33,55\\n', 'type': [{'type': 'string'}], 'default_value': '21,33,55'}, {'id': 'cov_state', 'name': None, 'description': \"Coverage cutoff ( 'auto', or 'off', or 'value'). auto if null\\nwhen cov_state=value (User Specific) , cov_cutoff must be provided\\n\", 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': [False, 'value', 'auto']}], 'default_value': None}, {'id': 'cov_cutoff', 'name': None, 'description': 'coverage cutoff value (a positive float number )\\n', 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'iontorrent', 'name': None, 'description': 'true if Libraries are IonTorrent reads.\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'sc', 'name': None, 'description': 'This option is required for MDA. \\ntrue if single-cell data. \\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'onlyassembler', 'name': None, 'description': 'Run only assembly if true\\n(without read error correction)\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'careful', 'name': None, 'description': 'Careful correction.\\nTries to reduce number of mismatches and short indels. \\nAlso runs MismatchCorrector, a post processing tool,\\nwhich uses BWA tool (comes with SPAdes).\\n', 'type': [{'type': 'boolean'}], 'default_value': True}], 'outputs': [{'id': 'out_contigs_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_contigs']}, {'id': 'out_scaffolds_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_scaffolds']}, {'id': 'out_contig_stats_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_contig_stats']}, {'id': 'out_scaffold_stats_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_scaffold_stats']}, {'id': 'assembly_graph_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/assembly_graph']}, {'id': 'assembly_graph_with_scaffolds_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/assembly_graph_with_scaffolds']}, {'id': 'all_log_spades', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['spades/all_log']}, {'id': 'assembly_image_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_image_spades/image']}, {'id': 'assembly_info_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_info_spades/assembly_graph_info']}, {'id': 'assembly_graph_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unicycler/assembly_graph']}, {'id': 'assembly_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unicycler/assembly']}, {'id': 'assembly_image_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_image_unicycler/image']}, {'id': 'assembly_info_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_info_unicycler/assembly_graph_info']}], 'steps': [{'id': 'unicycler', 'name': None, 'description': None, 'sink_ids': ['unicycler/assembly_graph', 'unicycler/assembly']}, {'id': 'spades', 'name': None, 'description': None, 'sink_ids': ['spades/out_contigs', 'spades/out_scaffolds', 'spades/out_contig_stats', 'spades/out_scaffold_stats', 'spades/assembly_graph', 'spades/assembly_graph_with_scaffolds', 'spades/all_log']}, {'id': 'bandage_image_unicycler', 'name': None, 'description': None, 'sink_ids': ['bandage_image_unicycler/image']}, {'id': 'bandage_info_unicycler', 'name': None, 'description': None, 'sink_ids': ['bandage_info_unicycler/assembly_graph_info']}, {'id': 'bandage_image_spades', 'name': None, 'description': None, 'sink_ids': ['bandage_image_spades/image']}, {'id': 'bandage_info_spades', 'name': None, 'description': None, 'sink_ids': ['bandage_info_spades/assembly_graph_info']}], 'links': [{'id': 'fastq1_type', 'source_id': 'fastq1_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'fastq1', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq2_type', 'source_id': 'fastq2_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'fastq2', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'mode', 'source_id': 'mode', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq_file_type', 'source_id': 'fastq_file_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'pacbio_reads', 'source_id': 'pacbio_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'sanger_reads', 'source_id': 'sanger_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_metadata', 'source_id': 'libraries_metadata', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_fwd_rev', 'source_id': 'libraries_fwd_rev', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_mono', 'source_id': 'libraries_mono', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'trusted_contigs', 'source_id': 'trusted_contigs', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'untrusted_contigs', 'source_id': 'untrusted_contigs', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'cov_state', 'source_id': 'cov_state', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'cov_cutoff', 'source_id': 'cov_cutoff', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'iontorrent', 'source_id': 'iontorrent', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'sc', 'source_id': 'sc', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'onlyassembler', 'source_id': 'onlyassembler', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'careful', 'source_id': 'careful', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'auto_kmer_choice', 'source_id': 'auto_kmer_choice', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'kmers', 'source_id': 'kmers', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'unicycler/assembly_graph', 'sink_id': 'bandage_image_unicycler', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'unicycler/assembly_graph', 'sink_id': 'bandage_info_unicycler', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'spades/assembly_graph', 'sink_id': 'bandage_image_spades', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'spades/assembly_graph', 'sink_id': 'bandage_info_spades', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 3,
    "text_field": "['assembly-wf-virus.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: assembly_wf_virus\nlabel: assembly-wf-virus\n \ndoc:  \"Virus genome assembly with Unicycler and spades, in parallel. visualisation with bandage\"\n\n\ninputs:\n\n##############unicycler\n\n  - id: fastq_file_type\n    type:\n      type: enum\n      symbols: [paired,single]\n    doc:  \"Paired and single end data\"\n  \n  \n  - id: mode\n    type:\n      type: enum\n      symbols: [conservative,normal,bold]\n    doc: |\n        Bridging mode, values:\n        conservative (smaller contigs, lower misassembly)\n        normal (moderate contig size and misassembly rate)\n        bold  (longest contigs, higher misassembly rate)\n\n\n  - id: fastq1_type\n    type:\n      type: enum\n      symbols:\n        - fastqsanger\n        - fastqsanger.gz\n    doc: \"Type of the First set of reads. Only when fastq_file_type = single  or  paired\"  \n    default: fastqsanger\n\n  - id: fastq1\n    type: File\n    doc: \"First set of reads with forward reads. Only when fastq_file_type = single or paired\" \n\n\n  - id: fastq2_type\n    type:\n     - \"null\"\n     -  type: enum\n        symbols:\n         - fastqsanger\n         - fastqsanger.gz\n    default: \"null\"\n    doc: \"Type of the Second set of reads. Only when fastq_file_type=paired\"  \n\n    \n  - id: fastq2\n    type: File?\n    doc: \"Second set of reads with reverse reads. Only when fastq_file_type=paired\"  \n\n\n\n\n\n##############spades\n\n\n  - id: libraries_metadata\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n             - name: lib_index\n               type: int? \n\n             - name: orientation\n               type: string?\n  \n             - name: lib_type\n               type: string? \n\n\n    doc: |\n        reads library metadata\n        related to   libraries_fwd_rev and libraries_mono inputs\n        lib_index(id) must match\n\n\n  - id: libraries_fwd_rev\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n\n             - name: lib_index\n               type: int? \n\n             - name: fwd_reads\n               type: File?\n\n             - name: rev_reads\n               type: File?\n    doc: |\n        reads file\n        orientation must be a value in  ff, fr, rf\n        K-mer choices can be chosen by SPAdes instead of being entered manually\n\n\n  - id: libraries_mono\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n\n             - name: lib_index\n               type: int? \n\n             - name: file_type\n               type: string?\n\n             - name: reads\n               type: File?\n    doc: |\n        reads file\n        file_type value must be in : interleaved, merged, unpaired\n\n\n\n  - id: pacbio_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: nanopore_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: sanger_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: trusted_contigs\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: untrusted_contigs\n    type:\n      - \"null\"\n      - type: array\n        items: File\n \n\n\n \n\n  - id: auto_kmer_choice\n    type:  boolean\n    default: true\n    doc: |\n        Automatically choose k-mer values.\n        K-mer choices can be chosen by SPAdes instead of being entered manually\n\n  - id: kmers\n    type:  string\n    default: \"21,33,55\"\n    doc: |\n        K-mers to use, separated by commas.\n        Comma-separated list of k-mer sizes to be used \n        (all values must be odd, less than 128, listed in ascending order,\n         and smaller than the read length). The default value is 21,33,55\n\n\n\n  - id: cov_state\n    type:\n     - \"null\"\n     -  type: enum\n        symbols:\n          - off\n          - value\n          - auto\n    doc: |\n        Coverage cutoff ( 'auto', or 'off', or 'value'). auto if null\n        when cov_state=value (User Specific) , cov_cutoff must be provided\n\n\n  - id: cov_cutoff\n    type:  float?\n    doc: |\n        coverage cutoff value (a positive float number )\n\n  - id: iontorrent\n    type:  boolean\n    default: false\n    doc: |\n        true if Libraries are IonTorrent reads.\n\n  - id: sc\n    type:  boolean\n    default: false\n    doc: |\n        This option is required for MDA. \n        true if single-cell data. \n\n  - id: onlyassembler\n    type: boolean\n    default: false\n    doc: |\n        Run only assembly if true\n        (without read error correction)\n\n\n  - id: careful\n    type: boolean\n    default: true\n    doc: |\n        Careful correction.\n        Tries to reduce number of mismatches and short indels. \n        Also runs MismatchCorrector, a post processing tool,\n        which uses BWA tool (comes with SPAdes).\n\n \n\n\n\n\noutputs:\n\n  - id: out_contigs_spades\n    outputSource:\n      - spades/out_contigs\n    type: 'File'\n\n  - id: out_scaffolds_spades\n    outputSource:\n      - spades/out_scaffolds\n    type: 'File'\n\n  - id: out_contig_stats_spades\n    outputSource:\n      - spades/out_contig_stats\n    type: 'File'\n\n\n  - id: out_scaffold_stats_spades\n    outputSource:\n      - spades/out_scaffold_stats\n    type: 'File'\n\n\n  - id: assembly_graph_spades\n    outputSource:\n      - spades/assembly_graph\n    type: 'File'\n\n  - id: assembly_graph_with_scaffolds_spades\n    outputSource:\n      - spades/assembly_graph_with_scaffolds\n    type: 'File'\n\n  - id: all_log_spades\n    outputSource:\n      - spades/all_log\n    type: 'File[]'\n\n#  - id: all_script\n#    outputSource:\n#      - spades/all_script\n#    type: 'File[]'\n\n  - id: assembly_image_spades\n    outputSource:\n      - bandage_image_spades/image\n\n\n    type: File\n\n  - id: assembly_info_spades\n    outputSource:\n      - bandage_info_spades/assembly_graph_info\n    type: File\n\n\n  - id: assembly_graph_unicycler\n    outputSource:\n      - unicycler/assembly_graph\n    type: File\n \n  - id: assembly_unicycler\n    outputSource:\n      - unicycler/assembly\n    type: File\n \n\n#  - id: exec_script2\n#    outputSource:\n#      - unicycler/exec_script\n#    type: File\n\n\n  - id: assembly_image_unicycler\n    outputSource:\n      - bandage_image_unicycler/image\n    type: File\n\n  - id: assembly_info_unicycler\n    outputSource:\n      - bandage_info_unicycler/assembly_graph_info\n    type: File\n\n\n\n\n\n\n\n\n\n\nsteps:\n\n  - id: unicycler\n    in:\n      - id: fastq1_type\n        source: fastq1_type\n      - id: fastq1\n        source: fastq1\n      - id: fastq2_type\n        source: fastq2_type\n      - id: fastq2\n        source: fastq2\n      - id: mode\n        source: mode\n      - id: fastq_file_type\n        source: fastq_file_type\n\n\n    out:\n#      - id: exec_script\n      - id: assembly_graph\n      - id: assembly\n \n    run: ../../bio-cwl-tools/unicycler/unicycler.cwl\n \n\n\n  - id: spades\n    in:\n\n      - id: nanopore_reads\n        source: nanopore_reads\n      - id: pacbio_reads\n        source: pacbio_reads\n      - id: sanger_reads\n        source: sanger_reads\n      - id: libraries_metadata\n        source: libraries_metadata\n      - id: libraries_fwd_rev\n        source: libraries_fwd_rev\n      - id: libraries_mono\n        source: libraries_mono\n      - id: trusted_contigs\n        source: trusted_contigs\n      - id: untrusted_contigs\n        source: untrusted_contigs\n      - id: cov_state\n        source: cov_state\n      - id: cov_cutoff\n        source: cov_cutoff\n      - id: iontorrent\n        source: iontorrent\n      - id: sc\n        source: sc\n      - id: onlyassembler\n        source: onlyassembler\n      - id: careful\n        source: careful\n\n      - id: auto_kmer_choice\n        source: auto_kmer_choice\n\n      - id: kmers\n        source: kmers\n \n    out:\n\n      - id: out_contigs\n      - id: out_scaffolds\n\n      - id: out_contig_stats\n      - id: out_scaffold_stats\n\n      - id: assembly_graph\n      - id: assembly_graph_with_scaffolds\n\n      - id: all_log\n#      - id: all_script\n\n    run: ../../bio-cwl-tools/spades/spades.cwl\n \n \n  - id: bandage_image_unicycler\n    in:\n      - id: graph\n        source: unicycler/assembly_graph\n    out:\n      - id: image\n    run: ../../bio-cwl-tools/bandage/bandage-image.cwl\n \n  - id: bandage_info_unicycler\n    in:\n      - id: graph\n        source: unicycler/assembly_graph\n    out:\n      - id: assembly_graph_info\n    run: ../../bio-cwl-tools/bandage/bandage-info.cwl\n \n  - id: bandage_image_spades\n    in:\n      - id: graph\n        source: spades/assembly_graph\n    out:\n      - id: image\n    run: ../../bio-cwl-tools/bandage/bandage-image.cwl\n \n  - id: bandage_info_spades\n    in:\n      - id: graph\n        source: spades/assembly_graph\n    out:\n      - id: assembly_graph_info\n    run: ../../bio-cwl-tools/bandage/bandage-info.cwl\n\n\n    \nrequirements: []",
    "p_tag_content": "Virus genome assembly with Unicycler and Spades,\nThe 2 assemblers works in parallel. The graph  visualization is made with Bandage.\nworkflow git repository :https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/blob/master/Assembly/workflow/assembly-wf-virus.cwlBased onhttps://github.com/galaxyproject/SARS-CoV-2/blob/master/genomics/2-Assembly/as_wf.png Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/3?version=1 Added/updated 1 files Views:4231Downloads:690 Created: 10th Apr 2020 at 11:45 Last updated: 30th Jun 2020 at 09:05 None Teams:CWL workflow SARS-CoV-2 Organizations:IRISA The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 22,
    "discussion_links": [],
    "title": "CNV_pipeline",
    "license": "Apache-2.0",
    "description": "# StructuralVariants Workflow",
    "latest_version": 11,
    "tags": "['CODEX2', 'ExomeDepth', 'GRIDSS', 'TransBioNet', 'cancer', 'manta', 'structural variants', 'variant calling']",
    "versions": "[{'version': 1, 'revision_comments': \"Merge branch 'master' into 'master'\\r\\n\\r\\nUpdated abstracts\\r\\n\\r\\nSee merge request lrodrig1/structuralvariants_poc!3\", 'url': 'https://workflowhub.eu/workflows/278?version=1', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '27011e882ea07bfcac23faec299341ec6215312b', 'ref': 'refs/tags/1.0.1', 'tree': '/workflows/278/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'rename json and html reports of fastp CWL tool\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=2', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '13e8e651c7a46032f4642f6053d5dde6276ef3b0', 'ref': 'refs/tags/1.0.2', 'tree': '/workflows/278/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'update algoType parameter on bwa index process (CWL), updating abstract too\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=3', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '26ae4914651d5b3e188028d1e9d88a391b3f6730', 'ref': 'refs/tags/1.0.3', 'tree': '/workflows/278/git/3/tree', 'doi': None}, {'version': 4, 'revision_comments': 'read group param as default\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=4', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '9ac2d150a57d1996210ed6a44dd0c0404dab383c', 'ref': 'refs/tags/1.0.4', 'tree': '/workflows/278/git/4/tree', 'doi': None}, {'version': 5, 'revision_comments': 'added new steps to control optionality for reference fasta input\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=5', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'a4a3547b9790e99a58424a0dfcb4e467a7691d6a', 'ref': 'refs/tags/1.0.5', 'tree': '/workflows/278/git/5/tree', 'doi': None}, {'version': 6, 'revision_comments': 'update r-base container\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=6', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '32a040f94e9798bf91858da51598f0d68c35797d', 'ref': 'refs/tags/1.0.6', 'tree': '/workflows/278/git/6/tree', 'doi': None}, {'version': 7, 'revision_comments': 'add gunzip in bwa-index subworkflow\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=7', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '94bcf49c6f22055a359336d2e593f8289f1c5e48', 'ref': 'refs/tags/1.0.7', 'tree': '/workflows/278/git/7/tree', 'doi': None}, {'version': 8, 'revision_comments': 'add support for input BED to exomeDepth (CWL)\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=8', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'a4784466d994e47c361b63b2925c791625c98b4a', 'ref': 'refs/tags/1.0.8', 'tree': '/workflows/278/git/8/tree', 'doi': None}, {'version': 9, 'revision_comments': 'minor change in main of CWL workflow\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=9', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'b62c7bfcf5eb7ac3c1ed06879200fdf5db947e4b', 'ref': 'refs/tags/1.0.9', 'tree': '/workflows/278/git/9/tree', 'doi': None}, {'version': 10, 'revision_comments': 'minor changes in main.nf\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=10', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '6f16906b30adad5136b0c8135d1e7c07c5741763', 'ref': 'refs/tags/1.1.0', 'tree': '/workflows/278/git/10/tree', 'doi': None}, {'version': 11, 'revision_comments': 'deleted cnvChr channel\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=11', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '93fbc4e51770d953fc44104a7b09436f75719470', 'ref': 'refs/tags/1.1.3', 'tree': '/workflows/278/git/11/tree', 'doi': None}]",
    "version": 11,
    "revision_comments": "deleted cnvChr channel",
    "created_at": "2022-10-11T11:04:44.000Z",
    "updated_at": "2023-01-16T13:57:59.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS)', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "Daniel López-López",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq1', 'name': None, 'description': 'FASTQ 1 list of files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'fastq2', 'name': None, 'description': 'FASTQ 2 list of files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'generate_bwa_indexes', 'name': None, 'description': 'enable generation of reference genome indexes', 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'reference_fasta', 'name': None, 'description': 'reference genome', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reference_fai', 'name': None, 'description': 'fai index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_amb', 'name': None, 'description': 'amb index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_ann', 'name': None, 'description': 'ann index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_bwt', 'name': None, 'description': 'bwt index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_pac', 'name': None, 'description': 'pac index reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_sa', 'name': None, 'description': 'sa index reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bed', 'name': None, 'description': 'capture kit', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'samples', 'name': None, 'description': 'TXT file mapping cases ID, samples ID and batch', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'threads_fastqc', 'name': None, 'description': 'number of threads for fastqc', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_fastp', 'name': None, 'description': 'number of threads for fastp', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_bwa_mem', 'name': None, 'description': 'number of threads for bwa-mem', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_samtools', 'name': None, 'description': 'number of threads for samtools', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_gridss', 'name': None, 'description': 'number of threads for GRIDSS', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'bwt_algorithm', 'name': None, 'description': 'BWT construction algorithm: bwtsw or is (Default: auto)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'read_group', 'name': None, 'description': 'FASTA read group (used to fix BAM files)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'min_mapping_quality', 'name': None, 'description': 'skip alignments with MAPQ smaller than this minimum', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'bits_set', 'name': None, 'description': 'skip output alignments with this bits set', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'manta_exome', 'name': None, 'description': 'provide appropriate settings for WES', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'manta_min_len', 'name': None, 'description': 'minimum CNV lenght for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'manta_max_len', 'name': None, 'description': 'maximum CNV lenght for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'manta_min_q', 'name': None, 'description': 'minimum CNV quality for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'blacklist', 'name': None, 'description': 'BED file containing regions to ignore', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'gridss_min_len', 'name': None, 'description': 'minimum CNV lenght for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gridss_max_len', 'name': None, 'description': 'maximum CNV lenght for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gridss_min_q', 'name': None, 'description': 'minimum CNV quality for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_min_len', 'name': None, 'description': 'minimum CNV lenght for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_max_len', 'name': None, 'description': 'maximum CNV lenght for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_min_bf', 'name': None, 'description': 'minimum CNV Bayes factor for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_min_len', 'name': None, 'description': 'minimum CNV lenght for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_max_len', 'name': None, 'description': 'maximum CNV lenght for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_min_lratio', 'name': None, 'description': 'minimum CNV lratio for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'enable_manta', 'name': None, 'description': 'execute MANTA predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_gridss', 'name': None, 'description': 'execute GRIDSS predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_exomeDepth', 'name': None, 'description': 'execute EXOME_DEPTH predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_codex', 'name': None, 'description': 'execute CODEX predictions', 'type': [{'type': 'boolean'}], 'default_value': None}], 'outputs': [{'id': 'fastqc_raw_zip', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_raw_zip']}, {'id': 'fastqc_raw_html', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_raw_html']}, {'id': 'html_report', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/html_report']}, {'id': 'json_report', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/json_report']}, {'id': 'fastqc_paired_zip', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_paired_zip']}, {'id': 'fastqc_paired_html', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_paired_html']}, {'id': 'output_bam_filtering', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['bam_filtering/output']}, {'id': 'output_manta', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_manta/output']}, {'id': 'output_gridss', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_gridss/output']}, {'id': 'output_exomedepth', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_exomedepth/output']}, {'id': 'output_codex', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_codex/output']}, {'id': 'output_all', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['final_filtering/output']}], 'steps': [{'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'trimmed_fastq', 'name': None, 'description': None, 'sink_ids': ['trimmed_fastq/fastqc_raw_zip', 'trimmed_fastq/fastqc_raw_html', 'trimmed_fastq/paired_R1', 'trimmed_fastq/paired_R2', 'trimmed_fastq/unpaired_R1', 'trimmed_fastq/unpaired_R2', 'trimmed_fastq/html_report', 'trimmed_fastq/json_report', 'trimmed_fastq/fastqc_paired_zip', 'trimmed_fastq/fastqc_paired_html']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/output_paired', 'bwa_mem/output_unpairedR1', 'bwa_mem/output_unpairedR2']}, {'id': 'samtools_view_sam2bam', 'name': None, 'description': None, 'sink_ids': ['samtools_view_sam2bam/output_paired', 'samtools_view_sam2bam/output_unpairedR1', 'samtools_view_sam2bam/output_unpairedR2']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/output_paired', 'samtools_sort/output_unpairedR1', 'samtools_sort/output_unpairedR2']}, {'id': 'samtools_merge', 'name': None, 'description': None, 'sink_ids': ['samtools_merge/output']}, {'id': 'samtools_index', 'name': None, 'description': None, 'sink_ids': ['samtools_index/output']}, {'id': 'picard_markduplicates', 'name': None, 'description': None, 'sink_ids': ['picard_markduplicates/alignments', 'picard_markduplicates/metrics']}, {'id': 'bam_filtering', 'name': None, 'description': None, 'sink_ids': ['bam_filtering/output']}, {'id': 'cnv_manta', 'name': None, 'description': None, 'sink_ids': ['cnv_manta/output']}, {'id': 'cnv_gridss', 'name': None, 'description': None, 'sink_ids': ['cnv_gridss/output']}, {'id': 'cnv_exomedepth', 'name': None, 'description': None, 'sink_ids': ['cnv_exomedepth/output']}, {'id': 'cnv_codex', 'name': None, 'description': None, 'sink_ids': ['cnv_codex/output']}, {'id': 'final_filtering', 'name': None, 'description': None, 'sink_ids': ['final_filtering/output']}], 'links': [{'id': 'generate_bwa_indexes', 'source_id': 'generate_bwa_indexes', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'reference_fasta', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_fai', 'source_id': 'reference_fai', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_amb', 'source_id': 'reference_amb', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_ann', 'source_id': 'reference_ann', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_bwt', 'source_id': 'reference_bwt', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_pac', 'source_id': 'reference_pac', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_sa', 'source_id': 'reference_sa', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'algoType', 'source_id': 'bwt_algorithm', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'fastq1', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'fastq2', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'threads_fastqc', 'source_id': 'threads_fastqc', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'threads_fastp', 'source_id': 'threads_fastp', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'paired_R1', 'source_id': 'trimmed_fastq/paired_R1', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'paired_R2', 'source_id': 'trimmed_fastq/paired_R2', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'trimmed_fastq/unpaired_R1', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'trimmed_fastq/unpaired_R2', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_bwa_mem', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'read_group', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'bwa_mem/output_paired', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'bwa_mem/output_unpairedR1', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'bwa_mem/output_unpairedR2', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'samtools_view_sam2bam/output_paired', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'samtools_view_sam2bam/output_unpairedR1', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'samtools_view_sam2bam/output_unpairedR2', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'samtools_sort/output_paired', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'samtools_sort/output_unpairedR1', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'samtools_sort/output_unpairedR2', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_merge/output', 'sink_id': 'samtools_index', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_index/output', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/alignments', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'min_mapping_quality', 'source_id': 'min_mapping_quality', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'bits_set', 'source_id': 'bits_set', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'exome', 'source_id': 'manta_exome', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'manta_min_len', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'manta_max_len', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'min_q', 'source_id': 'manta_min_q', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'enable_manta', 'source_id': 'enable_manta', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'blacklist', 'source_id': 'blacklist', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_gridss', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'gridss_min_len', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'gridss_max_len', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'min_q', 'source_id': 'gridss_min_q', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'enable_gridss', 'source_id': 'enable_gridss', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'exomeDepth_min_len', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'exomeDepth_max_len', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'min_bf', 'source_id': 'exomeDepth_min_bf', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'enable_exomeDepth', 'source_id': 'enable_exomeDepth', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'codex_min_len', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'codex_max_len', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'min_lratio', 'source_id': 'codex_min_lratio', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'enable_codex', 'source_id': 'enable_codex', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'manta_input', 'source_id': 'cnv_manta/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'gridss_input', 'source_id': 'cnv_gridss/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'exomeDepth_input', 'source_id': 'cnv_exomedepth/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'codex_input', 'source_id': 'cnv_codex/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 278,
    "text_field": "['structuralvariants', 'cwl', 'abstract_operations', 'subworkflows', 'abstract_workflow', 'subworkflows', 'tools', 'docs', 'nextflow', 'modules', 'subworkflows', 'templates', '.gitignore', 'INSTALL.md', 'LICENSE', 'README.md', 'constraints.txt', 'requirements.txt', '.gitignore', 'README.md', 'batch_parser.cwl', 'bedops_union.cwl', 'bgzip.cwl', 'bundle_secondaryfiles.cwl', 'bwa_index.cwl', 'bwa_mem_paired.cwl', 'bwa_mem_unpaired.cwl', 'codex.cwl', 'codex_filter.cwl', 'collapse.cwl', 'exome_depth.cwl', 'exome_depth_filter.cwl', 'fastp.cwl', 'fastqc.cwl', 'gridss.cwl', 'gridss_filter.cwl', 'gunzip.cwl', 'manta.cwl', 'manta_filter.cwl', 'merge_all.cwl', 'picard_markduplicates.cwl', 'samtools_faidx.cwl', 'samtools_index.cwl', 'samtools_merge.cwl', 'samtools_sort.cwl', 'samtools_view.cwl', 'samtools_view_sam2bam.cwl', 'structural_variants.cwl', 'bam_filtering.cwl', 'bwa_index.cwl', 'bwa_mem.cwl', 'cnv_codex.cwl', 'cnv_exome_depth.cwl', 'cnv_gridss.cwl', 'cnv_manta.cwl', 'final_filtering.cwl', 'indexing_bed.cwl', 'picard_markduplicates.cwl', 'samtools_sort.cwl', 'samtools_view_sam2bam.cwl', 'trimmed_fastq.cwl', 'svtools.cwl', 'tabix.cwl', 'abstract_workflow.cwl', 'bam_filtering.cwl', 'bwa_index.cwl', 'bwa_mem.cwl', 'cnv_codex.cwl', 'cnv_exome_depth.cwl', 'cnv_gridss.cwl', 'cnv_manta.cwl', 'final_filtering.cwl', 'indexing_bed.cwl', 'indexing_bed.yaml', 'picard_markduplicates.cwl', 'samtools_sort.cwl', 'samtools_view_sam2bam.cwl', 'trimmed_fastq.cwl', 'batch_parser.cwl', 'bedops_union.cwl', 'bgzip.cwl', 'bundle_secondaryfiles.cwl', 'bwa_index.cwl', 'bwa_mem_paired.cwl', 'bwa_mem_unpaired.cwl', 'codex.cwl', 'codex_filter.cwl', 'collapse.cwl', 'exome_depth.cwl', 'exome_depth_filter.cwl', 'fastp.cwl', 'fastqc.cwl', 'gridss.cwl', 'gridss_filter.cwl', 'gunzip.cwl', 'manta.cwl', 'manta_filter.cwl', 'merge_all.cwl', 'picard_markduplicates.cwl', 'samtools_faidx.cwl', 'samtools_index.cwl', 'samtools_merge.cwl', 'samtools_sort.cwl', 'samtools_view.cwl', 'samtools_view_sam2bam.cwl', 'structural_variants.cwl', 'svtools.cwl', 'tabix.cwl', 'tools_list.txt', 'workflow.cwl', 'workflow.yaml', 'workflow_idxs.yaml', 'CNV_pipeline-cwlviewer.svg', '.gitignore', 'main.nf', 'batch_parser.nf', 'bedops_union.nf', 'bwa_index.nf', 'bwa_mem_paired.nf', 'bwa_mem_unpaired.nf', 'codex.nf', 'codex_filter.nf', 'collapse.nf', 'exome_depth.nf', 'exomedepth_filter.nf', 'fastp.nf', 'fastqc.nf', 'gridss.nf', 'gridss_filter.nf', 'gunzip.nf', 'manta.nf', 'manta_filter.nf', 'merge_all.nf', 'picard_markduplicates.nf', 'samtools_faidx.nf', 'samtools_index.nf', 'samtools_merge.nf', 'samtools_sort.nf', 'samtools_view.nf', 'samtools_view_sam2bam.nf', 'structural_variants.nf', 'svtools.nf', 'nextflow.config', 'bam_filtering.nf', 'bwa_index.nf', 'bwa_mem.nf', 'cnv_codex.nf', 'cnv_exomedepth.nf', 'cnv_gridss.nf', 'cnv_manta.nf', 'final_filtering.nf', 'picard_markduplicates.nf', 'samtools_sort.nf', 'samtools_view_sam2bam.nf', 'trimmed_fastq.nf', 'batch_parser.R', 'codex.R', 'codex_filter.sh', 'collapse.sh', 'exomeDepth.R', 'exomedepth_filter.sh', 'gridss_filter.sh', 'manta_filter.sh', 'merge_all.sh', 'structural_variants.R', 'workflow.pdf']",
    "raw_text_content": "",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/278?version=11 deleted cnvChr channel minor changes in main.nf minor change in main of CWL workflow add support for input BED to exomeDepth (CWL) add gunzip in bwa-index subworkflow update r-base container added new steps to control optionality for reference fasta input read group param as default update algoType parameter on bwa index process (CWL), updating abstract too rename json and html reports of fastp CWL tool Merge branch 'master' into 'master' Updated abstracts See merge request lrodrig1/structuralvariants_poc!3 Daniel López-López Views:6289Downloads:1359 Created: 14th Mar 2022 at 12:07 Last updated: 30th Jun 2022 at 13:00 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TransBioNet is the Translational Bioinformatics Network impulsed and coordinated by the Spanish National Bioinformatics Institute (INB) as a reference network of 35+ bioinformatics support units working at health care settings including Health Research Institutes (IIS) certified by the Carlos III Health Institute (ISCIII), and bioinformatics core facilities from biomedical research institutions. TransBioNet is an Excellence Thematic Network (Red de Excelencia Temática) recognized by the Spanish\n... Space:Independent Teams Public web page:https://inb-elixir.es/transbionet Organisms:Not specified"
  },
  {
    "": 23,
    "discussion_links": "[{'id': '291', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '292', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb-dev/biobb/public/workflows/tutorials/md_setup'}, {'id': '293', 'label': 'Documentation', 'url': 'https://biobb-wf-md-setup.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# Protein MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Lysozyme** protein (PDB code 1AKI).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/279?version=1', 'commit': 'd3361b30078399fc01abf17e67b8037fc1a46295', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/279/git/1/tree', 'doi': '10.48546/workflowhub.workflow.279.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/279?version=2', 'commit': '60d6af282b0fcf406b926b668cc89137a8ed2fb8', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/279/git/2/tree', 'doi': '10.48546/workflowhub.workflow.279.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T10:04:37.000Z",
    "updated_at": "2023-06-07T10:16:23.000Z",
    "doi": "10.48546/workflowhub.workflow.279.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_reduce_remove_hydrogens_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step00_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_fix_side_chain_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_reduce_remove_hydrogens_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb_out1', 'name': 'output_structure_path', 'description': 'Output protein file path', 'type': [{'type': 'File'}], 'source_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path', 'type': [{'type': 'File'}], 'source_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'step4_pdb2gmx_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step4_pdb2gmx/output_gro_path']}, {'id': 'step4_pdb2gmx_out2', 'name': 'output_top_zip_path', 'description': 'Path the output TOP topology in zip format', 'type': [{'type': 'File'}], 'source_ids': ['step4_pdb2gmx/output_top_zip_path']}, {'id': 'step5_editconf_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step5_editconf/output_gro_path']}, {'id': 'step6_solvate_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step6_solvate/output_gro_path']}, {'id': 'step6_solvate_out2', 'name': 'output_top_zip_path', 'description': 'Path the output topology in zip format', 'type': [{'type': 'File'}], 'source_ids': ['step6_solvate/output_top_zip_path']}, {'id': 'step7_grompp_genion_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step7_grompp_genion/output_tpr_path']}, {'id': 'step8_genion_out1', 'name': 'output_gro_path', 'description': 'Path to the input structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step8_genion/output_gro_path']}, {'id': 'step8_genion_out2', 'name': 'output_top_zip_path', 'description': 'Path the output topology TOP and ITP files zipball', 'type': [{'type': 'File'}], 'source_ids': ['step8_genion/output_top_zip_path']}, {'id': 'step9_grompp_min_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step9_grompp_min/output_tpr_path']}, {'id': 'step10_mdrun_min_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_trr_path']}, {'id': 'step10_mdrun_min_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_gro_path']}, {'id': 'step10_mdrun_min_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_edr_path']}, {'id': 'step10_mdrun_min_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_log_path']}, {'id': 'step100_make_ndx_out1', 'name': 'output_ndx_path', 'description': 'Path to the output index NDX file', 'type': [{'type': 'File'}], 'source_ids': ['step100_make_ndx/output_ndx_path']}, {'id': 'step11_grompp_nvt_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step11_grompp_nvt/output_tpr_path']}, {'id': 'step12_mdrun_nvt_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_trr_path']}, {'id': 'step12_mdrun_nvt_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_gro_path']}, {'id': 'step12_mdrun_nvt_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_edr_path']}, {'id': 'step12_mdrun_nvt_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_log_path']}, {'id': 'step12_mdrun_nvt_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_cpt_path']}, {'id': 'step13_grompp_npt_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step13_grompp_npt/output_tpr_path']}, {'id': 'step14_mdrun_npt_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_trr_path']}, {'id': 'step14_mdrun_npt_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_gro_path']}, {'id': 'step14_mdrun_npt_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_edr_path']}, {'id': 'step14_mdrun_npt_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_log_path']}, {'id': 'step14_mdrun_npt_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_cpt_path']}, {'id': 'step15_grompp_md_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step15_grompp_md/output_tpr_path']}, {'id': 'step16_mdrun_md_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_trr_path']}, {'id': 'step16_mdrun_md_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_gro_path']}, {'id': 'step16_mdrun_md_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_edr_path']}, {'id': 'step16_mdrun_md_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_log_path']}, {'id': 'step16_mdrun_md_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_cpt_path']}, {'id': 'step17_gmx_image1_out1', 'name': 'output_traj_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step17_gmx_image1/output_traj_path']}, {'id': 'step18_gmx_image2_out1', 'name': 'output_traj_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step18_gmx_image2/output_traj_path']}, {'id': 'step19_gmx_trjconv_str_out1', 'name': 'output_str_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step19_gmx_trjconv_str/output_str_path']}, {'id': 'step20_gmx_energy_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step20_gmx_energy/output_xvg_path']}, {'id': 'step21_gmx_rgyr_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step21_gmx_rgyr/output_xvg_path']}, {'id': 'step22_rmsd_first_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step22_rmsd_first/output_xvg_path']}, {'id': 'step23_rmsd_exp_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step23_rmsd_exp/output_xvg_path']}, {'id': 'step24_grompp_md_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step24_grompp_md/output_tpr_path']}], 'steps': [{'id': 'step0_reduce_remove_hydrogens', 'name': 'ReduceRemoveHydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain', 'name': 'FixSideChain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'step4_pdb2gmx', 'name': 'Pdb2gmx', 'description': 'Creates a compressed (ZIP) GROMACS topology (TOP and ITP files) from a given PDB file.', 'sink_ids': ['step4_pdb2gmx/output_gro_path', 'step4_pdb2gmx/output_top_zip_path']}, {'id': 'step5_editconf', 'name': 'Editconf', 'description': 'Creates a GROMACS structure file (GRO) adding the information of the solvent box to the input structure file.', 'sink_ids': ['step5_editconf/output_gro_path']}, {'id': 'step6_solvate', 'name': 'Solvate', 'description': 'Creates a new compressed GROMACS topology file adding solvent molecules to a given input compressed GROMACS topology file.', 'sink_ids': ['step6_solvate/output_gro_path', 'step6_solvate/output_top_zip_path']}, {'id': 'step7_grompp_genion', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step7_grompp_genion/output_tpr_path']}, {'id': 'step8_genion', 'name': 'Genion', 'description': 'Creates a new compressed GROMACS topology adding ions until reaching the desired concentration to the input compressed GROMACS topology. ', 'sink_ids': ['step8_genion/output_gro_path', 'step8_genion/output_top_zip_path']}, {'id': 'step9_grompp_min', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step9_grompp_min/output_tpr_path']}, {'id': 'step10_mdrun_min', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step10_mdrun_min/output_trr_path', 'step10_mdrun_min/output_gro_path', 'step10_mdrun_min/output_edr_path', 'step10_mdrun_min/output_log_path']}, {'id': 'step100_make_ndx', 'name': 'MakeNdx', 'description': 'Creates a GROMACS index file (NDX) from an input selection and an input GROMACS structure file.', 'sink_ids': ['step100_make_ndx/output_ndx_path']}, {'id': 'step11_grompp_nvt', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step11_grompp_nvt/output_tpr_path']}, {'id': 'step12_mdrun_nvt', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step12_mdrun_nvt/output_trr_path', 'step12_mdrun_nvt/output_gro_path', 'step12_mdrun_nvt/output_edr_path', 'step12_mdrun_nvt/output_log_path', 'step12_mdrun_nvt/output_cpt_path']}, {'id': 'step13_grompp_npt', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step13_grompp_npt/output_tpr_path']}, {'id': 'step14_mdrun_npt', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step14_mdrun_npt/output_trr_path', 'step14_mdrun_npt/output_gro_path', 'step14_mdrun_npt/output_edr_path', 'step14_mdrun_npt/output_log_path', 'step14_mdrun_npt/output_cpt_path']}, {'id': 'step15_grompp_md', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step15_grompp_md/output_tpr_path']}, {'id': 'step16_mdrun_md', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step16_mdrun_md/output_trr_path', 'step16_mdrun_md/output_gro_path', 'step16_mdrun_md/output_edr_path', 'step16_mdrun_md/output_log_path', 'step16_mdrun_md/output_cpt_path']}, {'id': 'step17_gmx_image1', 'name': 'GMXImage', 'description': 'Wrapper of the GROMACS trjconv module for correcting periodicity (image) from a given GROMACS compatible trajectory file.', 'sink_ids': ['step17_gmx_image1/output_traj_path']}, {'id': 'step18_gmx_image2', 'name': 'GMXImage', 'description': 'Wrapper of the GROMACS trjconv module for correcting periodicity (image) from a given GROMACS compatible trajectory file.', 'sink_ids': ['step18_gmx_image2/output_traj_path']}, {'id': 'step19_gmx_trjconv_str', 'name': 'GMXTrjconvStr', 'description': 'Wrapper of the GROMACS trjconv module for converting between GROMACS compatible structure file formats and/or extracting a selection of atoms.', 'sink_ids': ['step19_gmx_trjconv_str/output_str_path']}, {'id': 'step20_gmx_energy', 'name': 'GMXEnergy', 'description': 'Wrapper of the GROMACS energy module for extracting energy components from a given GROMACS energy file.', 'sink_ids': ['step20_gmx_energy/output_xvg_path']}, {'id': 'step21_gmx_rgyr', 'name': 'GMXRgyr', 'description': 'Wrapper of the GROMACS gyrate module for computing the radius of gyration (Rgyr) of a molecule about the x-, y- and z-axes, as a function of time, from a given GROMACS compatible trajectory.', 'sink_ids': ['step21_gmx_rgyr/output_xvg_path']}, {'id': 'step22_rmsd_first', 'name': 'GMXRms', 'description': 'Wrapper of the GROMACS module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step22_rmsd_first/output_xvg_path']}, {'id': 'step23_rmsd_exp', 'name': 'GMXRms', 'description': 'Wrapper of the GROMACS module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step23_rmsd_exp/output_xvg_path']}, {'id': 'step24_grompp_md', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step24_grompp_md/output_tpr_path']}], 'links': [{'id': 'input_path', 'source_id': 'step0_reduce_remove_hydrogens_input_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step0_reduce_remove_hydrogens_output_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_reduce_remove_hydrogens/output_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step1_extract_molecule_output_molecule_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step1_extract_molecule/output_molecule_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step00_cat_pdb_input_structure2', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step00_cat_pdb_output_structure_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step00_cat_pdb/output_structure_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_fix_side_chain_output_pdb_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_pdb2gmx_config', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_fix_side_chain/output_pdb_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step4_pdb2gmx_output_gro_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step4_pdb2gmx_output_top_zip_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_editconf_config', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step4_pdb2gmx/output_gro_path', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step5_editconf_output_gro_path', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step5_editconf/output_gro_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step6_solvate_output_gro_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step4_pdb2gmx/output_top_zip_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step6_solvate_output_top_zip_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_grompp_genion_config', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step6_solvate/output_gro_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step6_solvate/output_top_zip_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step7_grompp_genion_output_tpr_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_genion_config', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step7_grompp_genion/output_tpr_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step8_genion_output_gro_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step6_solvate/output_top_zip_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step8_genion_output_top_zip_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_min_config', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step8_genion/output_gro_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step9_grompp_min_output_tpr_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_min/output_tpr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step10_mdrun_min_output_trr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step10_mdrun_min_output_gro_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step10_mdrun_min_output_edr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step10_mdrun_min_output_log_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step100_make_ndx_config', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step10_mdrun_min/output_gro_path', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'output_ndx_path', 'source_id': 'step100_make_ndx_output_ndx_path', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_nvt_config', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_min/output_gro_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step100_make_ndx/output_ndx_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step11_grompp_nvt_output_tpr_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_nvt/output_tpr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step12_mdrun_nvt_output_trr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step12_mdrun_nvt_output_gro_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step12_mdrun_nvt_output_edr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step12_mdrun_nvt_output_log_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_cpt_path', 'source_id': 'step12_mdrun_nvt_output_cpt_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_npt_config', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_nvt/output_gro_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step100_make_ndx/output_ndx_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step13_grompp_npt_output_tpr_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_nvt/output_cpt_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_npt/output_tpr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step14_mdrun_npt_output_trr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step14_mdrun_npt_output_gro_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step14_mdrun_npt_output_edr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step14_mdrun_npt_output_log_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_cpt_path', 'source_id': 'step14_mdrun_npt_output_cpt_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'de",
    "tools": [],
    "id": 279,
    "text_field": "['biobb_adapters', 'README.md', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theLysozymeprotein (PDB code 1AKI). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/279?version=2 DOI:10.48546/workflowhub.workflow.279.2 Updated workflow descriptors Initial commit Views:2236Downloads:501 Created: 17th Mar 2022 at 09:18 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 32,
    "discussion_links": "[{'id': '334', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}]",
    "title": "CWL Protein MD Setup tutorial with mutations",
    "license": "Apache-2.0",
    "description": "# Mutations Protein MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Lysozyme** protein (PDB code 1AKI).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/289?version=1', 'commit': '70fda2af9a458dd693bce5aba2f0dd8e1a4ffd7c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/289/git/1/tree', 'doi': '10.48546/workflowhub.workflow.289.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/289?version=2', 'commit': 'ecea2aa4272161babf375516aa463ca01ea616b5', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/289/git/2/tree', 'doi': '10.48546/workflowhub.workflow.289.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T12:22:06.000Z",
    "updated_at": "2023-06-07T12:30:54.000Z",
    "doi": "10.48546/workflowhub.workflow.289.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'mutations_list', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'string'}]}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step00_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_fix_side_chain_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_mutate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'top_dir', 'name': 'Collected Simulation Data', 'description': 'Assorted data files output by the workflow\\n', 'type': [{'type': 'array', 'items': [{'type': 'Directory'}]}], 'source_ids': ['subworkflow_mutate/outdir']}], 'steps': [{'id': 'step0_reduce_remove_hydrogens', 'name': 'ReduceRemoveHydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain', 'name': 'FixSideChain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'subworkflow_mutate', 'name': None, 'description': None, 'sink_ids': ['subworkflow_mutate/outdir']}], 'links': [{'id': 'input_path', 'source_id': 'step0_reduce_remove_hydrogens_input_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step0_reduce_remove_hydrogens_output_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_reduce_remove_hydrogens/output_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step1_extract_molecule_output_molecule_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step1_extract_molecule/output_molecule_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step00_cat_pdb_input_structure2', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step00_cat_pdb_output_structure_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step00_cat_pdb/output_structure_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_fix_side_chain_output_pdb_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'step2_output_pdb_path', 'source_id': 'step2_fix_side_chain/output_pdb_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'mutation', 'source_id': 'mutations_list', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step3_mutate_output_pdb_path', 'source_id': 'step3_mutate_output_pdb_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'source_id': 'step4_pdb2gmx_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'source_id': 'step4_pdb2gmx_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'source_id': 'step4_pdb2gmx_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step5_editconf_config', 'source_id': 'step5_editconf_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'source_id': 'step5_editconf_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'source_id': 'step6_solvate_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'source_id': 'step6_solvate_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step7_grompp_genion_config', 'source_id': 'step7_grompp_genion_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'source_id': 'step7_grompp_genion_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_config', 'source_id': 'step8_genion_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'source_id': 'step8_genion_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'source_id': 'step8_genion_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step9_grompp_min_config', 'source_id': 'step9_grompp_min_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'source_id': 'step9_grompp_min_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'source_id': 'step10_mdrun_min_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'source_id': 'step10_mdrun_min_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'source_id': 'step10_mdrun_min_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'source_id': 'step10_mdrun_min_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step100_make_ndx_config', 'source_id': 'step100_make_ndx_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'source_id': 'step100_make_ndx_output_ndx_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'source_id': 'step11_grompp_nvt_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'source_id': 'step11_grompp_nvt_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'source_id': 'step12_mdrun_nvt_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'source_id': 'step12_mdrun_nvt_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'source_id': 'step12_mdrun_nvt_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'source_id': 'step12_mdrun_nvt_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'source_id': 'step12_mdrun_nvt_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step13_grompp_npt_config', 'source_id': 'step13_grompp_npt_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'source_id': 'step13_grompp_npt_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'source_id': 'step14_mdrun_npt_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'source_id': 'step14_mdrun_npt_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'source_id': 'step14_mdrun_npt_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'source_id': 'step14_mdrun_npt_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'source_id': 'step14_mdrun_npt_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step15_grompp_md_config', 'source_id': 'step15_grompp_md_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'source_id': 'step15_grompp_md_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'source_id': 'step16_mdrun_md_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'source_id': 'step16_mdrun_md_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'source_id': 'step16_mdrun_md_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'source_id': 'step16_mdrun_md_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'source_id': 'step16_mdrun_md_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step17_gmx_image1_config', 'source_id': 'step17_gmx_image1_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'source_id': 'step17_gmx_image1_output_traj_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step18_gmx_image2_config', 'source_id': 'step18_gmx_image2_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'source_id': 'step18_gmx_image2_output_traj_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'source_id': 'step19_gmx_trjconv_str_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'source_id': 'step19_gmx_trjconv_str_output_str_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step20_gmx_energy_config', 'source_id': 'step20_gmx_energy_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'source_id': 'step20_gmx_energy_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'source_id': 'step21_gmx_rgyr_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'source_id': 'step21_gmx_rgyr_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step22_rmsd_first_config', 'source_id': 'step22_rmsd_first_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'source_id': 'step22_rmsd_first_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'source_id': 'step23_rmsd_exp_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'source_id': 'step23_rmsd_exp_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step24_grompp_md_config', 'source_id': 'step24_grompp_md_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'source_id': 'step24_grompp_md_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 289,
    "text_field": "['biobb_adapters', 'README.md', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'mutate.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_gather.cwl', 'workflow_input_descriptions.yml', 'workflow_list.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theLysozymeprotein (PDB code 1AKI). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/289?version=2 DOI:10.48546/workflowhub.workflow.289.2 Updated workflow descriptors Initial commit Views:1736Downloads:394 Created: 17th Mar 2022 at 13:22 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 45,
    "discussion_links": [],
    "title": "seurat scRNA-seq",
    "license": "Apache-2.0",
    "description": "",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/303?version=1', 'commit': '476cc3235f4bea31276f7446e9b1e597b27fe327', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/303/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': '\"test\"\\r\\n', 'url': 'https://workflowhub.eu/workflows/303?version=2', 'remote': 'https://github.com/DimitraPanou/scRNAseq-cwl.git', 'commit': 'f44e9e11a65a7a04400f963467f249054c95a92d', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/303/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "test",
    "created_at": "2022-04-14T13:28:34.000Z",
    "updated_at": "2023-01-16T13:59:13.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'running_step', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'loadDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'barcodes', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'features', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'matrix', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'minCells', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minFeatures', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'projectName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'filterDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'nFeatureRNAmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nFeatureRNAmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nCountRNAmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nCountRNAmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'percentMTmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'percentMTmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'normalizeDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'normalization_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'scale_factor', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'margin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'block_size', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'verbose', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'featureSelectionDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'selection_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'loess_span', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clip_max', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'num_bin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'binning_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'num_features', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'scaleDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runPCAR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'findNeighborsR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'neighbors_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'k', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clusterDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runUmapR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runTSNER', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'find_markersR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'loadDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['loadData/loaded_data']}, {'id': 'loadDataPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['loadData/data_plot']}, {'id': 'filterDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['filterData/filtered_data']}, {'id': 'filterDataPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['filterData/filtered_data_plot']}, {'id': 'normalizeDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['normalizeData/normalized_data']}, {'id': 'findFeaturesOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findFeatures/find_features_data']}, {'id': 'findFeaturesPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findFeatures/features_data_plot']}, {'id': 'scaleDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['scaleData/scaling_data']}, {'id': 'runPCAOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_data']}, {'id': 'runPCAPlot1', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_1_plot']}, {'id': 'runPCAPlot2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_2_plot']}, {'id': 'runPCAPlot3', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_3_plot']}, {'id': 'findNeighborsOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findNeighbors/find_neighbors']}, {'id': 'clusterDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['clusterData/cluster_data']}, {'id': 'runUMAPOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runUMAP/run_umap_data']}, {'id': 'runUMAPOutputPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runUMAP/run_umap_data_plot']}, {'id': 'runTSNEOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runTSNE/run_tsne_data']}, {'id': 'findMarkersOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findAllMarkers/find_markers']}], 'steps': [{'id': 'loadData', 'name': None, 'description': None, 'sink_ids': ['loadData/loaded_data', 'loadData/data_plot']}, {'id': 'filterData', 'name': None, 'description': None, 'sink_ids': ['filterData/filtered_data', 'filterData/filtered_data_plot']}, {'id': 'normalizeData', 'name': None, 'description': None, 'sink_ids': ['normalizeData/normalized_data']}, {'id': 'findFeatures', 'name': None, 'description': None, 'sink_ids': ['findFeatures/find_features_data', 'findFeatures/features_data_plot']}, {'id': 'scaleData', 'name': None, 'description': None, 'sink_ids': ['scaleData/scaling_data']}, {'id': 'runPCA', 'name': None, 'description': None, 'sink_ids': ['runPCA/pca_data', 'runPCA/pca_1_plot', 'runPCA/pca_2_plot', 'runPCA/pca_3_plot']}, {'id': 'findNeighbors', 'name': None, 'description': None, 'sink_ids': ['findNeighbors/find_neighbors']}, {'id': 'clusterData', 'name': None, 'description': None, 'sink_ids': ['clusterData/cluster_data']}, {'id': 'runUMAP', 'name': None, 'description': None, 'sink_ids': ['runUMAP/run_umap_data', 'runUMAP/run_umap_data_plot']}, {'id': 'runTSNE', 'name': None, 'description': None, 'sink_ids': ['runTSNE/run_tsne_data']}, {'id': 'findAllMarkers', 'name': None, 'description': None, 'sink_ids': ['findAllMarkers/find_markers']}], 'links': [{'id': 'script', 'source_id': 'loadDataR', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'barcodes', 'source_id': 'barcodes', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'features', 'source_id': 'features', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'matrix', 'source_id': 'matrix', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'minCells', 'source_id': 'minCells', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'minFeatures', 'source_id': 'minFeatures', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'projectName', 'source_id': 'projectName', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'pattern', 'source_id': 'pattern', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'filterDataR', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'loadData/loaded_data', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nFeatureRNAmin', 'source_id': 'nFeatureRNAmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nFeatureRNAmax', 'source_id': 'nFeatureRNAmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nCountRNAmin', 'source_id': 'nCountRNAmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nCountRNAmax', 'source_id': 'nCountRNAmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'percentMTmin', 'source_id': 'percentMTmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'percentMTmax', 'source_id': 'percentMTmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'normalizeDataR', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'filterData/filtered_data', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'normalization_method', 'source_id': 'normalization_method', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'scale_factor', 'source_id': 'scale_factor', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'margin', 'source_id': 'margin', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'block_size', 'source_id': 'block_size', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'verbose', 'source_id': 'verbose', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'featureSelectionDataR', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'normalizeData/normalized_data', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'selection_method', 'source_id': 'selection_method', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'loess_span', 'source_id': 'loess_span', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'clip_max', 'source_id': 'clip_max', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'num_bin', 'source_id': 'num_bin', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'binning_method', 'source_id': 'binning_method', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'nfeatures', 'source_id': 'num_features', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'scaleDataR', 'sink_id': 'scaleData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findFeatures/find_features_data', 'sink_id': 'scaleData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runPCAR', 'sink_id': 'runPCA', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'scaleData/scaling_data', 'sink_id': 'runPCA', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'findNeighborsR', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runPCA/pca_data', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'neighbors_method', 'source_id': 'neighbors_method', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'k', 'source_id': 'k', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'clusterDataR', 'sink_id': 'clusterData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findNeighbors/find_neighbors', 'sink_id': 'clusterData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runUmapR', 'sink_id': 'runUMAP', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findNeighbors/find_neighbors', 'sink_id': 'runUMAP', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runTSNER', 'sink_id': 'runTSNE', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runUMAP/run_umap_data', 'sink_id': 'runTSNE', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'find_markersR', 'sink_id': 'findAllMarkers', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runTSNE/run_tsne_data', 'sink_id': 'findAllMarkers', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 303,
    "text_field": "['subworkflows', 'tools', 'Dockerfile', 'Rseurat.R', 'barcodes.tsv.gz', 'features.tsv.gz', 'libs.R', 'matrix.mtx.gz', 'steps.cwl', 'steps.cwl', 'yml.yml', '10_runTSNE.R', '10_runTSNE.cwl', '11_findMarkers.R', '11_findMarkers.cwl', '1_loadData.R', '1_loadData.cwl', '2_filter.R', '2_filter.cwl', '2yml.yml', '3_normalization.R', '3_normalization.cwl', '4_featureSelection.R', '4_featureSelection.cwl', '5_Scaling.R', '5_Scaling.cwl', '6_PCA.R', '6_PCA.cwl', '7_findNeighbors.R', '7_findNeighbors.cwl', '8_clusterData.R', '8_clusterData.cwl', '9_runUMAP.R', '9_runUMAP.cwl', 'yml.yml']",
    "raw_text_content": "",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/303?version=2 \"test\" Initial commit Views:2055Downloads:291 Created: 4th Apr 2022 at 05:43 Last updated: 14th Apr 2022 at 14:28 This item has not yet been tagged. None Teams:Single Cell Unit Organizations:BSRC Alexander Fleming A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified Creator:panou@fleming.gr Panou Submitter:panou@fleming.gr Panou"
  },
  {
    "": 57,
    "discussion_links": [],
    "title": "Assemblosis",
    "license": "BSD-3-Clause",
    "description": "## CWL based workflow to assemble haploid/diploid eukaryote genomes of non-model organisms\nThe workflow is designed to use both PacBio long-reads and Illumina short-reads. The workflow first extracts, corrects, trims and decontaminates the long reads. Decontaminated trimmed reads are then used to assemble the genome and raw reads are used to polish it. Next, Illumina reads are cleaned and used to further polish the resultant assembly. Finally, the polished assembly is masked using inferred repeats and haplotypes are eliminated. The workflow uses BioConda and DockerHub to install required software and is therefore fully automated. In addition to final assembly, the workflow produces intermediate assemblies before and after polishing steps. The workflow follows the syntax for CWL v1.0.\n\n### Dependencies\n# Programs\nThe pipeline can be run either using [Cromwell](https://cromwell.readthedocs.io/en/stable) or [cwltool reference](https://github.com/common-workflow-language/cwltool) implementation and docker containers can be run either using [Singularity](https://singularity.lbl.gov) or [udocker](https://singularity.lbl.gov).\n\nCromwell implementation\n* [cromwell v44](https://github.com/broadinstitute/cromwell/releases/tag/44)\n* [java-jdk v8.0.112](https://www.java.com/en)\n\nReference implementation\n* [cwltool v1.0.20181012180214](https://github.com/common-workflow-language/cwltool)\n* [nodejs v10.4.1 required by cwltool](https://nodejs.org/en)\n* [Python library galaxy-lib v18.5.7](https://pypi.org/project/galaxy-lib)\n\nSingularity software packages have to be installed server-wide by administrator\n* [Singularity v3.2.1](https://singularity.lbl.gov)\n* [squashfs-tools v4.3.0](https://github.com/plougher/squashfs-tools)\n\nUdocker software package can be installed locally\n* [udocker v1.1.2](https://github.com/indigo-dc/udocker)\n\n# Data\n* [Illumina adapters converted to FASTA format](http://sapac.support.illumina.com/downloads/illumina-adapter-sequences-document-1000000002694.html)\n* [NCBI nucleotide non-redundant sequences for decontamination with Centrifuge](http://www.ccb.jhu.edu/software/centrifuge)\n* [RepBase v17.02 file RMRBSeqs.embl](https://www.girinst.org/repbase)\n\n### Installation\nInstall miniconda using installation script ```installConda.sh```.\nTo install CWL, use either installation script ```installCromwell.sh``` or ```installCwltool.sh```.\nTo install udocker, use installation script ```installUdocker.sh```.\nTo install singularity, ask your system administrator.\n\n```\n# First confirm that you have the program 'git' installed in your system\n> cd\n> git clone -b 'v0.1.3-beta' --single-branch --depth 1 https://github.com/vetscience/Assemblosis\n> cd Assemblosis\n> bash installConda.sh\n> bash installCromwell.sh # or bash installCwltool.sh\n> bash installUdocker.sh # if singularity cannot be installed or does not run\n\n```\nFor data dependencies: download and extract [RepBase database](https://www.girinst.org/repbase), download Centrifuge version of [NCBI nt database](http://www.ccb.jhu.edu/software/centrifuge) and create [Illumina adapter FASTA file](http://sapac.support.illumina.com/downloads/illumina-adapter-sequences-document-1000000002694.html) to your preferred locations. If your reads are clean from adapters, the adapter FASTA file can be empty.\nGive the location of these data in the configuration (.yml) file (see **Usage**).\n\n### Usage\nYou have to create a YAML (.yml) file for each assembly. This file defines the required parameters and the location for both PacBio and Illumina raw-reads.\n```\n> cd\n> export PATH=~/miniconda3/bin:$PATH\n> cd Assemblosis/Run\n> cp ../Examples/assemblyCele.yml .\n\n\"Edit assemblyCele.yml to fit your computing environment and to define the location for the read files, databases and Illumina adapters\"\n\n\"Running docker images using Cromwell and singularity:\"\n> java -Dconfig.file=cromwell.udocker.conf -jar cromwell-44.jar run -t CWL -v v1.0 assembly.cwl -i assemblyCele.yml\n\n\"Running docker images using Cromwell and udocker:\"\n> java -Dconfig.file=cromwell.singularity.conf -jar cromwell-44.jar run -t CWL -v v1.0 assembly.cwl -i assemblyCele.yml\n\n\"Running docker images using Cwltool and singularity:\"\n> cwltool --tmpdir-prefix /home/<username>/Tmp --beta-conda-dependencies --cachedir /home/<username>/Cache --singularity --leave-tmpdir assembly.cwl assemblyCele.yml\n\n\"Running docker images using Cwltool and udocker:\"\n> cwltool --tmpdir-prefix /home/<username>/Tmp --beta-conda-dependencies --cachedir /home/<username>/Cache --user-space-docker-cmd udocker --leave-tmpdir assembly.cwl assemblyCele.yml\n```\n\nAn annotated example of the YAML file for Caenorhabditis elegans assembly.\n```\n## Directory, which contains the PacBio raw data\n# NOTE! The software looks for all .h5 file (or bam files if bacBioInBam below is defined true) in given directory\npacBioDataDir:\n  class: Directory\n  location: /home/<username>/Dna\n\n## PacBio files are in bam format as returned from Sequel platform\npacBioInBam: true\n\n## Prefix for the resultant assembly files\nprefix: cele\n\n## Maximum number of threads used in the pipeline\nthreads: 24\n\n## Minimum number of threads per job used in canu assembler\nminThreads: 4\n\n## Number of concurrent jobs in canu assembler (recommended to use threads / minThreads)\ncanuConcurrency: 6\n\n### Parameters for the program Canu are described in https://canu.readthedocs.io/en/latest/parameter-reference.html\n## Expected genome size. This parameter is forwarded to Canu assembler.\ngenomeSize: 100m\n\n## Minimum length for the PacBio reads used for the assembly. This parameter is forwarded to Canu assembler.\n# The maximum resolvable repeat regions becomes 2 x minReadLength\nminReadLen: 6000\n\n## Parameter for Canu assembler to adjust to GC-content. Should be 0.15 for high or low GC content.\ncorMaxEvidenceErate: 0.20\n\n### Parameters for the program Trimmomatic are described in http://www.usadellab.org/cms/?page=trimmomatic\n## Paired-end (PE) reads of Illumina raw data. These files are given to the program Trimmomatic.\n# NOTE! Data for two paired libraries is given below.\nreadsPe1:\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598966_1.fastq.gz\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598967_1.fastq.gz\nreadsPe2:\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598966_2.fastq.gz\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598967_2.fastq.gz\n\n## Phred coding of Illumina data. This parameter is forwarded to Trimmomatic.\n# NOTE! Each read-pair needs one phred value.\nphredsPe: ['33','33']\n\n## Sliding window and illuminaClip parameters for Trimmomatic\nslidingWindow:\n    windowSize: 4\n    requiredQuality: 25\nilluminaClip:\n    adapters:\n        class: File\n        path: <path to Illumina adapter file>\n    seedMismatches: 2\n    palindromeClipThreshold: 30\n    simpleClipThreshold: 10\n    minAdapterLength: 20\n    keepBothReads: true\n## Further parameters for Trimmomatic\n# Required phred-quality for leading 5 nucleotides\nleading: 25\n# Required phred-quality for trailing 5 nucleotides\ntrailing: 25\n# Minimum accepted read-length to keep the read after trimming\nminlen: 40\n\n### Parameters for the program bowtie2 are described in http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml\n## Illumina PE fragment length. Program bowtie2 parameter -X.\n# NOTE! Each read-pair needs one phred value.\nmaxFragmentLens: [500, 600]\n# Orientation of pair-end reads e.g. 'fr', 'rf', 'ff': Program bowtie2 parameters --fr, --rf or --ff\norientation: 'fr'\n\n### Parameters for the program Pilon are described in https://github.com/broadinstitute/pilon/wiki/Requirements-&-Usage\n# Prefix for the resultant pilon polished assembly. Pilon parameter --output\npolishedAssembly: celePilon\n# This is set 'true' for an organism with diploid genome: Pilon parameter --diploid\ndiploidOrganism: true\n# Value 'bases' fixes snps and indels: Pilon parameter --fix\nfix: bases\n\n### Parameters for the program centrifuge are described in http://www.ccb.jhu.edu/software/centrifuge/manual.shtml\n# Path to the directory, that contains NCBI nt database in nt.?.cf files. Centrifuge parameter -x\ndatabase:\n  class: Directory\n  path:  /home/<username>/ntDatabase\n# Lenght of the identical match in nucleotides required to infer a read as contaminant. Centrifuge parameter --min-hitlen\npartialMatch: 100\n# NCBI taxon root identifers for the species considered contaminants: e.g. bacteria (=2), viruses (=10239), fungi (=4751), mammals (=40674), artificial seqs (=81077). Pipeline specific parameter.\ntaxons: [2,10239,4751,40674,81077]\n\n## Parameters for the RepeatModeler and RepeatMasker are described in http://www.repeatmasker.org\nrepBaseLibrary:\n  class: File\n  # This is the RepBase file from https://www.girinst.org/repbase. RepeatMasker parameter -lib\n  path: /home/<username>/RepBaseLibrary/RMRBSeqs.embl\n# Constant true and false values for repeat masker\ntrueValue: true\nfalseValue: false\n\n```\n### Runtimes and hardware requirements\nThe workflow was tested in Linux environment (CentOS Linux release 7.2.1511) in a server with 24 physical CPUs (48 hyperthreaded CPUs) and 512 GB RAM.\n\n| Assembly | Runtime in CPU hours | RAM usage (GB) |\n| --- | --- | --- |\n| *Caenorhabditis elegans* | 1537 | 134.1 |\n| *Drosophila melanogaster* | 6501 | 134.1 |\n| *Plasmodium falciparum* | 424 | 134.1 |\n\nMaximum memory usage of 134.1 GB was claimed by the program Centrifuge for each assembly.\n\n### Software tools used in this pipeline\n* [Dextractor v1.0](https://github.com/thegenemyers/DEXTRACTOR)\n* [Trimmomatic v0.36](http://www.usadellab.org/cms/?page=trimmomatic)\n* [Centrifuge v1.0.3](http://www.ccb.jhu.edu/software/centrifuge)\n* [Canu v1.8](http://canu.readthedocs.io/en/latest/index.html)\n* [Arrow in SmrtLink v7.0.1](https://www.pacb.com/support/software-downloads)\n* [Bowtie 2 v2.2.8](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)\n* [SAMtools v1.6](http://samtools.sourceforge.net)\n* [Pilon v1.22](https://github.com/broadinstitute/pilon)\n* [RepeatMasker v4.0.6](http://www.repeatmasker.org)\n* [RepeatModeler v1.0.11](http://www.repeatmasker.org)\n* [RepBase v17.02](https://www.girinst.org/repbase)\n* [HaploMerger2 build_20160512](https://github.com/mapleforest/HaploMerger2)\n\n### Cite\nIf you use the pipeline, please cite:\nKorhonen, Pasi K., Ross S. Hall, Neil D. Young, and Robin B. Gasser. \"Common Workflow Language (CWL)-based software pipeline for de novo genome assembly from long-and short-read data.\" GigaScience 8, no. 4 (2019): giz014.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Preparing support for Cromwell\\r\\n', 'url': 'https://workflowhub.eu/workflows/334?version=1', 'remote': 'https://github.com/vetscience/Assemblosis.git', 'commit': 'c498607f21124d2f3787a21c0d554375799170a7', 'ref': 'refs/tags/v0.1.3-beta', 'tree': '/workflows/334/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Preparing support for Cromwell",
    "created_at": "2022-04-20T23:10:26.000Z",
    "updated_at": "2023-01-16T13:59:43.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/261', 'family_name': 'Korhonen', 'given_name': 'Pasi', 'affiliation': 'The University of Melbourne', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'pacBioDataDir', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'pacBioTmpDir', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pacBioInBam', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'prefix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'genomeSize', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'minReadLen', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'corMaxEvidenceErate', 'name': None, 'description': None, 'type': [{'type': 'float'}], 'default_value': None}, {'id': 'readsPe1', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'readsPe2', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'phredsPe', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'slidingWindow', 'name': None, 'description': None, 'type': [{'type': 'assembly-typedef.yml#slidingWindow'}], 'default_value': None}, {'id': 'illuminaClip', 'name': None, 'description': None, 'type': [{'type': 'assembly-typedef.yml#illuminaClipping?'}], 'default_value': None}, {'id': 'leading', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'trailing', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minlen', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'threads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minThreads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'canuConcurrency', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'orientation', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'maxFragmentLens', 'name': None, 'description': None, 'type': [{'type': 'int[]'}], 'default_value': None}, {'id': 'polishedAssembly', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diploidOrganism', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'fix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'database', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'taxons', 'name': None, 'description': None, 'type': [{'type': 'int[]'}], 'default_value': None}, {'id': 'partialMatch', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'repBaseLibrary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'trueValue', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'falseValue', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}], 'outputs': [{'id': 'correctedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['correct/correctedReads']}, {'id': 'trimmedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['assemble/trimmedReads']}, {'id': 'canuAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['assemble/assembly']}, {'id': 'arrowAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['arrow/arrowPolishedAssembly']}, {'id': 'pilonAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pilon/pilonPolishedAssembly']}, {'id': 'trimmedReadFiles1', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['cleanIlluminaReads/trimmedPe1']}, {'id': 'trimmedReadFiles2', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['cleanIlluminaReads/trimmedPe2']}, {'id': 'sortedBamIndexFileOut', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['expressionToolBam/hybridFile']}, {'id': 'deconReport', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['classifyReads/report']}, {'id': 'deconClassification', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['classifyReads/classification']}, {'id': 'decontaminatedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['decontaminate/deconReads']}, {'id': 'contaminatedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['decontaminate/conReads']}, {'id': 'assemblyMasked', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['combineCatFiles/maskedAssembly']}, {'id': 'assemblyMerged', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['haploMerge/mergedAssembly']}], 'steps': [{'id': 'cleanIlluminaReads', 'name': None, 'description': None, 'sink_ids': ['cleanIlluminaReads/trimmedPe1', 'cleanIlluminaReads/trimmedPe2', 'cleanIlluminaReads/trimmedUnpe1', 'cleanIlluminaReads/trimmedUnpe2', 'cleanIlluminaReads/trimLogFile']}, {'id': 'hdf5check', 'name': None, 'description': None, 'sink_ids': ['hdf5check/pbFastqReads']}, {'id': 'correct', 'name': None, 'description': None, 'sink_ids': ['correct/correctedReads']}, {'id': 'renameReads', 'name': None, 'description': None, 'sink_ids': ['renameReads/renamedReads', 'renameReads/mappedIds']}, {'id': 'classifyReads', 'name': None, 'description': None, 'sink_ids': ['classifyReads/report', 'classifyReads/classification']}, {'id': 'decontaminate', 'name': None, 'description': None, 'sink_ids': ['decontaminate/deconReads', 'decontaminate/conReads']}, {'id': 'assemble', 'name': None, 'description': None, 'sink_ids': ['assemble/trimmedReads', 'assemble/assembly']}, {'id': 'arrow', 'name': None, 'description': None, 'sink_ids': ['arrow/arrowPolishedAssembly']}, {'id': 'indexReference', 'name': None, 'description': None, 'sink_ids': ['indexReference/referenceAssembly', 'indexReference/bt2_1', 'indexReference/bt2_2', 'indexReference/bt2_3', 'indexReference/bt2_4', 'indexReference/bt2rev1', 'indexReference/bt2rev2']}, {'id': 'expressionToolBowtie', 'name': None, 'description': None, 'sink_ids': ['expressionToolBowtie/hybridFile']}, {'id': 'mapIlluminaReads', 'name': None, 'description': None, 'sink_ids': ['mapIlluminaReads/samFile']}, {'id': 'sortMappedReads', 'name': None, 'description': None, 'sink_ids': ['sortMappedReads/sortedBamFile']}, {'id': 'indexBamFile', 'name': None, 'description': None, 'sink_ids': ['indexBamFile/sortedBamFile', 'indexBamFile/bamIndexFile']}, {'id': 'expressionToolBam', 'name': None, 'description': None, 'sink_ids': ['expressionToolBam/hybridFile']}, {'id': 'pilon', 'name': None, 'description': None, 'sink_ids': ['pilon/pilonPolishedAssembly', 'pilon/pilonPolishedAssemblyChanges']}, {'id': 'indexAssembly', 'name': None, 'description': None, 'sink_ids': ['indexAssembly/pilonPolishedAssembly', 'indexAssembly/translation', 'indexAssembly/nsq', 'indexAssembly/nin', 'indexAssembly/nhr', 'indexAssembly/nog', 'indexAssembly/nni', 'indexAssembly/nnd']}, {'id': 'expressionToolRepeatModeler', 'name': None, 'description': None, 'sink_ids': ['expressionToolRepeatModeler/hybridFile']}, {'id': 'inferRepeats', 'name': None, 'description': None, 'sink_ids': ['inferRepeats/repeatFastaFile', 'inferRepeats/repeatLibrary']}, {'id': 'maskCustomRepeats', 'name': None, 'description': None, 'sink_ids': ['maskCustomRepeats/categoryFile']}, {'id': 'maskTranspRepeats', 'name': None, 'description': None, 'sink_ids': ['maskTranspRepeats/categoryFile']}, {'id': 'maskSimpleRepeats', 'name': None, 'description': None, 'sink_ids': ['maskSimpleRepeats/categoryFile']}, {'id': 'combineCatFiles', 'name': None, 'description': None, 'sink_ids': ['combineCatFiles/maskedAssembly']}, {'id': 'haploMerge', 'name': None, 'description': None, 'sink_ids': ['haploMerge/mergedAssembly', 'haploMerge/scoreMatrix']}], 'links': [{'id': 'phred', 'source_id': 'phredsPe', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads1', 'source_id': 'readsPe1', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads2', 'source_id': 'readsPe2', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'slidingWindow', 'source_id': 'slidingWindow', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'illuminaClip', 'source_id': 'illuminaClip', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'leading', 'source_id': 'leading', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'trailing', 'source_id': 'trailing', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'minlen', 'source_id': 'minlen', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'directory', 'source_id': 'pacBioDataDir', 'sink_id': 'hdf5check', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'pacBioInBam', 'sink_id': 'hdf5check', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'genomeSize', 'source_id': 'genomeSize', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'pacbio-raw', 'source_id': 'hdf5check/pbFastqReads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'corMaxEvidenceErate', 'source_id': 'corMaxEvidenceErate', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'minThreads', 'source_id': 'minThreads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'maxThreads', 'source_id': 'threads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'corConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'correct/correctedReads', 'sink_id': 'renameReads', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'database', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'renameReads/renamedReads', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'partialMatch', 'source_id': 'partialMatch', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'renameReads/renamedReads', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'taxons', 'source_id': 'taxons', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'classificationFile', 'source_id': 'classifyReads/classification', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'mappedIds', 'source_id': 'renameReads/mappedIds', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'partialMatch', 'source_id': 'partialMatch', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'genomeSize', 'source_id': 'genomeSize', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'minReadLen', 'source_id': 'minReadLen', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'pacbio-corrected', 'source_id': 'decontaminate/deconReads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'corMaxEvidenceErate', 'source_id': 'corMaxEvidenceErate', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'minThreads', 'source_id': 'minThreads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'maxThreads', 'source_id': 'threads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtmhapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgmhapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtmmapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgmmapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtovlConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgovlConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'dataDir', 'source_id': 'pacBioDataDir', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'tmpDir', 'source_id': 'pacBioTmpDir', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assemble/assembly', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'pacBioInBam', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'arrow/arrowPolishedAssembly', 'sink_id': 'indexReference', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexReference/referenceAssembly', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_1', 'source_id': 'indexReference/bt2_1', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_2', 'source_id': 'indexReference/bt2_2', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_3', 'source_id': 'indexReference/bt2_3', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_4', 'source_id': 'indexReference/bt2_4', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2rev1', 'source_id': 'indexReference/bt2rev1', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2rev2', 'source_id': 'indexReference/bt2rev2', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'phred', 'source_id': 'phredsPe', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'orientation', 'source_id': 'orientation', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'maxFragmentLen', 'source_id': 'maxFragmentLens', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'expressionToolBowtie/hybridFile', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads1', 'source_id': 'cleanIlluminaReads/trimmedPe1', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads2', 'source_id': 'cleanIlluminaReads/trimmedPe2', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sortMappedReads', 'name': None, 'default_value': None}, {'id': 'inputSamFile', 'source_id': 'mapIlluminaReads/samFile', 'sink_id': 'sortMappedReads', 'name': None, 'default_value': None}, {'id': 'inputBamFile', 'source_id': 'sortMappedReads/sortedBamFile', 'sink_id': 'indexBamFile', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexBamFile/sortedBamFile', 'sink_id': 'expressionToolBam', 'name': None, 'default_value': None}, {'id': 'bai', 'source_id': 'indexBamFile/bamIndexFile', 'sink_id': 'expressionToolBam', 'name': None, 'default_value': None}, {'id': 'bamPe', 'source_id': 'expressionToolBam/hybridFile', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'arrow/arrowPolishedAssembly', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'output', 'source_id': 'polishedAssembly', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'diploidOrganism', 'source_id': 'diploidOrganism', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'fix', 'source_id': 'fix', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'scaffolds', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'indexAssembly', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexAssembly/pilonPolishedAssembly', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'translation', 'source_id': 'indexAssembly/translation', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nsq', 'source_id': 'indexAssembly/nsq', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nin', 'source_id': 'indexAssembly/nin', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nhr', 'source_id': 'indexAssembly/nhr', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nog', 'source_id': 'indexAssembly/nog', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nni', 'source_id': 'indexAssembly/nni', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nnd', 'source_id': 'indexAssembly/nnd', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'repBaseLibrary', 'source_id': 'repBaseLibrary', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'expressionToolRepeatModeler/hybridFile', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'falseValue', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'trueValue', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatFastaFile', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'falseValue', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'trueValue', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatLibrary', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'trueValue', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'falseValue', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatLibrary', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskCustomRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskTranspRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskSimpleRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'maskedAssembly', 'source_id': 'combineCatFiles/maskedAssembly', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'decontaminate/deconReads', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 334,
    "text_field": "['Examples', 'Metrics', 'collect', 'Run', 'arrow', 'combinecats', 'decon', 'haplomerger', 'hdf5check', 'renamereads', 'repeatmodeler', 'RepeatMaskerConf', 'util', 'RepeatModelerConf', 'util', 'assemblyCele.yml', 'assemblyDmel.yml', 'assemblyPfal.yml', 'metricsCele.yml', 'metricsDmel.yml', 'metricsPfal.yml', 'LICENSE', 'busco.cwl', 'collect.cwl', 'Dockerfile', 'base.py', 'compileIndelsToRef.py', 'compileSnpsToRef.py', 'countDiffs.py', 'createTables.py', 'fasta.py', 'fastaToUpper.py', 'genomeInfo.py', 'gff.py', 'rmSpliceVars.py', 'snpCoding.py', 'tree.py', 'wbtree.py', 'window.py', 'colocations.sh', 'metrics.cwl', 'quast.cwl', 'README.md', 'arrow.cwl', 'Dockerfile', 'createFofn.py', 'preset.xml', 'referenceset.xml', 'smrtpipe.sh', 'assembly-typedef.yml', 'assembly.cwl', 'bowtie2-build.cwl', 'bowtie2.cwl', 'canuAssemble.cwl', 'canuCorrect.cwl', 'centrifuge.cwl', 'combinecats.cwl', 'Dockerfile', 'combine.sh', 'cromwell.singularity.conf', 'cromwell.udocker.conf', 'decon.cwl', 'Dockerfile', 'base.py', 'convertFasta.py', 'decon.sh', 'fasta.py', 'mapFasta.py', 'taxtreelabel.pl', 'expressiontoolbam.cwl', 'expressiontoolbowtie.cwl', 'expressiontoolrepeats.cwl', 'haplomerger.cwl', 'Dockerfile', 'base.py', 'fasta.py', 'haploMerger.py', 'haploMerger.sh', 'hdf5check.cwl', 'Dockerfile', 'base.py', 'hdf5Check.py', 'indexassembly.cwl', 'pilon.cwl', 'renameReads.cwl', 'Dockerfile', 'base.py', 'renameFasta.py', 'renamereads.sh', 'repeatmasker.cwl', 'repeatmodeler.cwl', 'Dockerfile', 'Dockerfile.docker', 'Dockerfile.udocker', 'DateRepeats', 'DupMasker', 'ProcessRepeats', 'RepeatMasker', 'RepeatMaskerConfig.pm', 'RepeatProteinMask', 'buildRMLibFromEMBL.pl', 'buildSummary.pl', 'calcDivergenceFromAlign.pl', 'createRepeatLandscape.pl', 'dupliconToSVG.pl', 'getRepeatMaskerBatch.pl', 'queryRepeatDatabase.pl', 'queryTaxonomyDatabase.pl', 'rmOut2Fasta.pl', 'rmOutToGFF3.pl', 'rmToUCSCTables.pl', 'trfMask', 'wublastToCrossmatch.pl', 'BuildDatabase', 'Refiner', 'RepModelConfig.pm', 'RepeatClassifier', 'RepeatModeler', 'TRFMask', 'Linup', 'dfamConsensusTool.pl', 'renameIds.pl', 'viewMSA.pl', 'initReps.sh', 'initReps.sh.docker', 'initReps.sh.udocker', 'inputJson', 'inputRepeatMasker', 'inputRepeatModeler', 'repeatModeler.sh', 'samindex.cwl', 'samsort.cwl', 'trimmomaticpe.cwl', 'install.sh', 'installConda.sh', 'installCromwell.sh', 'installCwltool.sh', 'installUdocker.sh']",
    "raw_text_content": "",
    "p_tag_content": "The workflow is designed to use both PacBio long-reads and Illumina short-reads. The workflow first extracts, corrects, trims and decontaminates the long reads. Decontaminated trimmed reads are then used to assemble the genome and raw reads are used to polish it. Next, Illumina reads are cleaned and used to further polish the resultant assembly. Finally, the polished assembly is masked using inferred repeats and haplotypes are eliminated. The workflow uses BioConda and DockerHub to install required software and is therefore fully automated. In addition to final assembly, the workflow produces intermediate assemblies before and after polishing steps. The workflow follows the syntax for CWL v1.0. The pipeline can be run either usingCromwellorcwltool referenceimplementation and docker containers can be run either usingSingularityorudocker. Cromwell implementation Reference implementation Singularity software packages have to be installed server-wide by administrator Udocker software package can be installed locally Install miniconda using installation scriptinstallConda.sh.\nTo install CWL, use either installation scriptinstallCromwell.shorinstallCwltool.sh.\nTo install udocker, use installation scriptinstallUdocker.sh.\nTo install singularity, ask your system administrator. For data dependencies: download and extractRepBase database, download Centrifuge version ofNCBI nt databaseand createIllumina adapter FASTA fileto your preferred locations. If your reads are clean from adapters, the adapter FASTA file can be empty.\nGive the location of these data in the configuration (.yml) file (seeUsage). You have to create a YAML (.yml) file for each assembly. This file defines the required parameters and the location for both PacBio and Illumina raw-reads. An annotated example of the YAML file for Caenorhabditis elegans assembly. The workflow was tested in Linux environment (CentOS Linux release 7.2.1511) in a server with 24 physical CPUs (48 hyperthreaded CPUs) and 512 GB RAM. Maximum memory usage of 134.1 GB was claimed by the program Centrifuge for each assembly. If you use the pipeline, please cite:\nKorhonen, Pasi K., Ross S. Hall, Neil D. Young, and Robin B. Gasser. \"Common Workflow Language (CWL)-based software pipeline for de novo genome assembly from long-and short-read data.\" GigaScience 8, no. 4 (2019): giz014. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/334?version=1 Preparing support for Cromwell Views:1679Downloads:172 Created: 20th Apr 2022 at 00:10 Last updated: 20th Apr 2022 at 00:23 This item has not yet been tagged. None Teams:Workflows Australia Organizations:The University of Melbourne A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 59,
    "discussion_links": "[{'id': '422', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Workflow for Illumina Quality Control and Filtering",
    "license": "Apache-2.0",
    "description": "### Workflow for Illumina Quality Control and Filtering\n_Multiple paired datasets will be merged into single paired dataset._\n\n**Summary:**\n- FastQC on raw data files<br />\n- fastp for read quality trimming<br />\n- BBduk for phiX and (optional) rRNA filtering<br />\n- Kraken2 for taxonomic classification of reads (optional)<br />\n- BBmap for (contamination) filtering using given references (optional)<br />\n- FastQC on filtered (merged) data<br />\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Classification', 'Genomics', 'Transcriptomics', 'filtering', 'illumina', 'quality']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/336?version=1', 'commit': '5c2e0e56ef8c080385dc359c5e94231eda0ea385', 'ref': 'refs/heads/master', 'tree': '/workflows/336/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-04-21T13:00:34.000Z",
    "updated_at": "2023-04-07T14:04:28.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence contamination filtering', 'identifier': 'http://edamontology.org/operation_3187'}, {'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}, {'label': 'Taxonomic classification', 'identifier': 'http://edamontology.org/operation_3460'}]",
    "topic_annotations": "[{'label': 'Data quality management', 'identifier': 'http://edamontology.org/topic_3572'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in MegaBytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': 'filter rRNA', 'description': 'Optionally remove rRNA sequences from the reads.', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence fastq file(s) locally', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence fastq file(s) locally', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Filter reference file(s)', 'description': 'References fasta file(s) for filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Kraken2 database location, multiple databases is possible', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'keep_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Keep with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'step', 'name': 'Output Step number', 'description': 'Step number for output folder numbering', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'reports_folder', 'name': 'Filtering reports folder', 'description': 'Folder containing all reports of filtering and quality control', 'type': [{'type': 'Directory'}], 'source_ids': ['reports_files_to_folder/results']}, {'id': 'QC_forward_reads', 'name': 'Filtered forward read', 'description': 'Filtered forward read', 'type': [{'type': 'File'}], 'source_ids': ['phix_filter/out_forward_reads']}, {'id': 'QC_reverse_reads', 'name': 'Filtered reverse read', 'description': 'Filtered reverse read', 'type': [{'type': 'File'}], 'source_ids': ['phix_filter/out_reverse_reads']}], 'steps': [{'id': 'fastqc_illumina_before', 'name': 'FastQC before', 'description': 'Quality assessment and report of reads', 'sink_ids': ['fastqc_illumina_before/html_files', 'fastqc_illumina_before/zip_files']}, {'id': 'fastq_merge_fwd', 'name': 'Merge forward reads', 'description': 'Merge multiple forward fastq reads to a single file', 'sink_ids': ['fastq_merge_fwd/output']}, {'id': 'fastq_merge_rev', 'name': 'Merge reverse reads', 'description': 'Merge multiple reverse fastq reads to a single file', 'sink_ids': ['fastq_merge_rev/output']}, {'id': 'fastp', 'name': 'fastp', 'description': 'Read quality filtering and (barcode) trimming.', 'sink_ids': ['fastp/out_forward_reads', 'fastp/out_reverse_reads', 'fastp/html_report', 'fastp/json_report']}, {'id': 'rrna_filter', 'name': 'rRNA filter (bbduk)', 'description': 'Filters rRNA sequences from reads using bbduk', 'sink_ids': ['rrna_filter/out_forward_reads', 'rrna_filter/out_reverse_reads', 'rrna_filter/summary', 'rrna_filter/stats_file']}, {'id': 'phix_filter', 'name': 'PhiX filter (bbduk)', 'description': 'Filters illumina spike-in PhiX sequences from reads using bbduk', 'sink_ids': ['phix_filter/out_forward_reads', 'phix_filter/out_reverse_reads', 'phix_filter/summary', 'phix_filter/stats_file']}, {'id': 'illumina_quality_kraken2', 'name': 'Kraken2', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['illumina_quality_kraken2/sample_report']}, {'id': 'illumina_quality_kraken2_krona', 'name': 'Krona', 'description': 'Visualization of Kraken2 classification with Krona', 'sink_ids': ['illumina_quality_kraken2_krona/krona_html']}, {'id': 'prepare_bbmap_db', 'name': 'Prepare references', 'description': 'Prepare references to a single fasta file and unique headers', 'sink_ids': ['prepare_bbmap_db/fasta_db']}, {'id': 'reference_filter_illumina', 'name': 'Reference read mapping', 'description': 'Map reads against references using BBMap', 'sink_ids': ['reference_filter_illumina/out_forward_reads', 'reference_filter_illumina/out_reverse_reads', 'reference_filter_illumina/log', 'reference_filter_illumina/stats', 'reference_filter_illumina/covstats']}, {'id': 'fastqc_illumina_after', 'name': 'FastQC after', 'description': 'Quality assessment and report of reads', 'sink_ids': ['fastqc_illumina_after/html_files', 'fastqc_illumina_after/zip_files']}, {'id': 'reports_files_to_folder', 'name': 'Reports to folder', 'description': 'Preparation of fastp output files to a specific output folder', 'sink_ids': ['reports_files_to_folder/results']}], 'links': [{'id': 'fastq', 'source_id': 'forward_reads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'reverse_reads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'forward_reads', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'reverse_reads', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastq_merge_fwd/output', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastq_merge_rev/output', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': None, 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'rrna_filter/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'reference_filter_illumina/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'rrna_filter/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reference_filter_illumina/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': None, 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'phix_filter/out_forward_reads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'phix_filter/out_reverse_reads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': True}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_quality_kraken2/sample_report', 'sink_id': 'illumina_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'output_file_name', 'source_id': None, 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'prepare_bbmap_db/fasta_db', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'output_mapped', 'source_id': 'keep_reference_mapped_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'phix_filter/out_forward_reads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'phix_filter/out_reverse_reads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_before/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_before/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_after/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_after/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastp/html_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastp/json_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/stats', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/covstats', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/log', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_quality_kraken2/sample_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_quality_kraken2_krona/krona_html', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'phix_filter/summary', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'phix_filter/stats_file', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'rrna_filter/summary', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'rrna_filter/stats_file', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': 'step', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 336,
    "text_field": "['workflow_illumina_quality.cwl', 'workflow_illumina_quality_packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Multiple paired datasets will be merged into single paired dataset. Summary: Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/336?version=1 Initial commit Views:2472Downloads:238 Created: 21st Apr 2022 at 14:00 Last updated: 7th Apr 2023 at 15:02 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified Creator:Jasper Koehorst Submitter:Jasper Koehorst"
  },
  {
    "": 60,
    "discussion_links": "[{'id': '425', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "LongRead Quality Control and Filtering",
    "license": "Apache-2.0",
    "description": "### Workflow for LongRead Quality Control and Filtering\n\n- NanoPlot  (read quality control) before and after filtering\n- Filtlong  (read trimming)\n- Kraken2 taxonomic read classification before and after filtering\n- Minimap2 read filtering based on given references<br><br>\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Assembly', 'CWL', 'Genomics', 'nanopore']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/337?version=1', 'commit': 'ae127fa2dd74e696bd179f52025a845a173a3ed2', 'ref': 'refs/heads/master', 'tree': '/workflows/337/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-04-21T16:19:59.000Z",
    "updated_at": "2023-04-07T14:07:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}]",
    "topic_annotations": "[{'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence analysis', 'identifier': 'http://edamontology.org/topic_0080'}, {'label': 'Sequencing', 'identifier': 'http://edamontology.org/topic_3168'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nanopore_reads', 'name': 'Nanopore reads', 'description': 'Nanopore sequence file locally fastq format', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Contamination reference file', 'description': 'Contamination references fasta file for contamination filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Keep with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Kraken2 database location, multiple databases is possible', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'step', 'name': 'CWL base step number', 'description': 'Step number for order of steps', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'reports_folder', 'name': 'Filtering reports folder', 'description': 'Folder containing all reports of filtering and quality control', 'type': [{'type': 'Directory'}], 'source_ids': ['reports_files_to_folder/results']}, {'id': 'filtered_reads', 'name': 'Filtered nanopore reads', 'description': 'Filtered nanopore reads', 'type': [{'type': 'File'}], 'source_ids': ['reference_filter_nanopore/fastq', 'merge_nanopore_fastq/output', 'nanopore_array_to_file/file']}], 'steps': [{'id': 'merge_nanopore_fastq', 'name': 'Merge fastq files', 'description': None, 'sink_ids': ['merge_nanopore_fastq/output']}, {'id': 'fastqc_nanopore_before', 'name': 'FastQC before', 'description': 'Quality assessment and report of reads before filter', 'sink_ids': ['fastqc_nanopore_before/html_files', 'fastqc_nanopore_before/zip_files']}, {'id': 'prepare_bbmap_db', 'name': 'Prepare references', 'description': 'Prepare BBMap references to a single fasta file and unique headers', 'sink_ids': ['prepare_bbmap_db/fasta_db']}, {'id': 'nanopore_array_to_file', 'name': 'array to file', 'description': 'Converts the file array to a single file object', 'sink_ids': ['nanopore_array_to_file/file']}, {'id': 'nanopore_quality_kraken2', 'name': 'Kraken2', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['nanopore_quality_kraken2/sample_report']}, {'id': 'nanopore_quality_kraken2_krona', 'name': 'Krona', 'description': 'Visualization of Kraken2 classification with Krona', 'sink_ids': ['nanopore_quality_kraken2_krona/krona_html']}, {'id': 'reference_filter_nanopore', 'name': 'Reference mapping', 'description': 'Removal of contaminated reads using minimap2 mapping', 'sink_ids': ['reference_filter_nanopore/fastq', 'reference_filter_nanopore/log']}, {'id': 'fastqc_nanopore_after', 'name': 'FastQC after', 'description': 'Quality assessment and report of reads before filter', 'sink_ids': ['fastqc_nanopore_after/html_files', 'fastqc_nanopore_after/zip_files']}, {'id': 'reports_files_to_folder', 'name': 'Reports to folder', 'description': 'Preparation of fastp output files to a specific output folder', 'sink_ids': ['reports_files_to_folder/results']}], 'links': [{'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'nanopore_reads', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'output_file_name', 'source_id': None, 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'nanopore_array_to_file', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_reads', 'sink_id': 'nanopore_array_to_file', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_quality_kraken2/sample_report', 'sink_id': 'nanopore_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'prepare_bbmap_db/fasta_db', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'output_mapped', 'source_id': 'keep_reference_mapped_reads', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'preset', 'source_id': None, 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': 'map-ont'}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'reference_filter_nanopore/fastq', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_before/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_before/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_after/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_after/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_quality_kraken2/sample_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_quality_kraken2_krona/krona_html', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_nanopore/log', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': 'step', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 337,
    "text_field": "['workflow_longread_quality.cwl', 'workflow_longread_quality_packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/337?version=1 Initial commit Views:2066Downloads:218 Created: 21st Apr 2022 at 17:19 Last updated: 7th Apr 2023 at 15:07 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 65,
    "discussion_links": "[{'id': '412', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Kallisto RNAseq Workflow",
    "license": "Apache-2.0",
    "description": "### Workflow Kallisto RNAseq \n**(pseudoalignment on transcripts)**\n  - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n  - kallisto\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/344?version=1', 'commit': 'c7adcded3921cc80cd2f24a8810e9cc00a0258ed', 'ref': 'refs/heads/master', 'tree': '/workflows/344/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-05-20T10:10:26.000Z",
    "updated_at": "2023-01-16T13:59:53.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 40000}, {'id': 'filter_rrna', 'name': 'Filter rRNA', 'description': 'Optionally remove rRNA sequences from the reads.', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence file locally', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence file locally', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'kallisto_index', 'name': 'kallisto index file', 'description': 'kallisto index file location', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'contamination_references', 'name': 'Reference filters files', 'description': 'Reference fasta file(s) for filtering (optional)', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'illumina_quality_stats', 'name': 'Filtered statistics', 'description': 'Statistics on quality and preprocessing of the reads', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality/reports_folder']}, {'id': 'kallisto_output', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['workflow_quality/QC_reverse_reads', 'workflow_quality/QC_forward_reads', 'workflow_quality/reports_folder']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'kallisto_files_to_folder', 'name': 'kallisto output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'contamination_references', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality', 'name': None, 'default_value': 1}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'index', 'source_id': 'kallisto_index', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 344,
    "text_field": "['workflow_RNAseq_kallisto.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Kallisto RNAseq Workflow\ndoc: | \n  Workflow Kallisto RNAseq (pseudoalignment on transcripts)\n    - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n    - kallisto\n\n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n    Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>\n\n  The dependencies are either accessible from https://unlock-icat.irods.surfsara.nl (anonymous,anonymous)<br>\n  and/or<br>\n  By using the conda / pip environments as shown in https://git.wur.nl/unlock/docker/-/blob/master/kubernetes/scripts/setup.sh<br>\n\noutputs:\n  illumina_quality_stats:\n    label: Filtered statistics\n    doc: Statistics on quality and preprocessing of the reads\n    type: Directory\n    outputSource: workflow_quality/reports_folder\n  kallisto_output:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: Identifier\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes\n    label: Threads\n    default: 2\n  memory:\n    type: int?\n    doc: Maximum memory usage in megabytes\n    label: Maximum memory in MB\n    default: 40000\n  filter_rrna:\n    type: boolean    \n    doc: Optionally remove rRNA sequences from the reads.\n    label: Filter rRNA\n  forward_reads:\n    type: string[]\n    doc: Forward sequence file locally\n    label: Forward reads\n  reverse_reads:\n    type: string[]\n    doc: Reverse sequence file locally\n    label: Reverse reads\n  kallisto_index:\n    type: string\n    doc: kallisto index file location\n    label: kallisto index file\n  contamination_references:\n    type: string[]?\n    doc: Reference fasta file(s) for filtering (optional)\n    label: Reference filters files\n\n  destination:\n    type: string?\n    label: Output Destination\n    doc: Optional Output destination used for cwl-prov reporting.\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering of raw reads\n  workflow_quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    run: workflow_illumina_quality.cwl\n    in:\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      filter_references: contamination_references\n      memory: memory\n      threads: threads\n      identifier: identifier\n      filter_rrna: filter_rrna\n      step:\n        default: 1\n    out: [QC_reverse_reads, QC_forward_reads, reports_folder]\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    in:\n      identifier: identifier\n      forward_reads: workflow_quality/QC_forward_reads\n      reverse_reads: workflow_quality/QC_reverse_reads\n      index: kallisto_index\n      threads: threads\n    out:\n      [abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  kallisto_files_to_folder:\n    label: kallisto output\n    doc: Preparation of kallisto output files to a specific output folder\n    in:\n      identifier: identifier\n      files:\n        source: [kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(inputs.identifier+\"_kallisto\")\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2022-05-00\"\ns:dateModified: \"2022-06-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/",
    "p_tag_content": "(pseudoalignment on transcripts) All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/344?version=1 Initial commit Views:1880Downloads:184 Created: 20th May 2022 at 11:10 Last updated: 2nd Nov 2022 at 15:26 This item has not yet been tagged. None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 79,
    "discussion_links": "[{'id': '435', 'label': 'Gitter', 'url': 'https://gitter.im/microbiome-informatics/community?utm_source=share-link&utm_medium=link&utm_campaign=share-link'}]",
    "title": "MGnify - assembly analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#assembly-analysis-pipeline",
    "latest_version": 2,
    "tags": "['Annotation', 'CWL', 'Metagenomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/360?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/360/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/360?version=2', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/360/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:03:35.000Z",
    "updated_at": "2023-04-28T10:09:02.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'contigs', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'contig_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'other_ncrna_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_postfixes', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'cgc_chunk_size', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_eggnog', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'func_ann_names_ips', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'func_ann_names_hmmer', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_omit_alignment', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_name_database', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hmmsearch_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_db', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_diamond_db', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_data_dir', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_databases', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_applications', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'InterProScan_outputFormat', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ips_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ko_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'Uniref90_db_txt', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diamond_maxTargetSeqs', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'diamond_databaseFile', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diamond_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'go_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'graphs', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pathways_names', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pathways_classes', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gp_flatfiles_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clusters_glossary', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'hashsum_input', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/hashsum_input']}, {'id': 'qc-statistics_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics_folder']}, {'id': 'compressed_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/compressed_files']}, {'id': 'index_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/index_fasta_file']}, {'id': 'bgzip_index', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/bgzip_index']}, {'id': 'bgzip_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/bgzip_fasta_file']}, {'id': 'chunking_nucleotides', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_nucleotides']}, {'id': 'chunking_proteins', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_proteins']}, {'id': 'functional_annotation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/functional_annotation_folder']}, {'id': 'stats', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/stats']}, {'id': 'pathways_systems_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder']}, {'id': 'pathways_systems_folder_antismash', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder_antismash']}, {'id': 'pathways_systems_folder_antismash_summary', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder_antismash_summary']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence-categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_cds_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_no_cds_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/qc-status', 'before-qc/qc_summary', 'before-qc/qc-statistics_folder', 'before-qc/filtered_fasta', 'before-qc/hashsum_input']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/compressed_files', 'after-qc/index_fasta_file', 'after-qc/bgzip_fasta_file', 'after-qc/bgzip_index', 'after-qc/chunking_nucleotides', 'after-qc/chunking_proteins', 'after-qc/functional_annotation_folder', 'after-qc/stats', 'after-qc/pathways_systems_folder', 'after-qc/pathways_systems_folder_antismash', 'after-qc/pathways_systems_folder_antismash_summary', 'after-qc/sequence-categorisation_folder', 'after-qc/rna-count', 'after-qc/taxonomy-summary_folder', 'after-qc/count_CDS', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}, {'id': 'touch_no_cds_flag', 'name': None, 'description': None, 'sink_ids': ['touch_no_cds_flag/created_file']}], 'links': [{'id': 'contigs', 'source_id': 'contigs', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'contig_min_length', 'source_id': 'contig_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'other_ncrna_models', 'source_id': 'other_ncrna_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_config', 'source_id': 'CGC_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_postfixes', 'source_id': 'CGC_postfixes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'cgc_chunk_size', 'source_id': 'cgc_chunk_size', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_eggnog', 'source_id': 'protein_chunk_size_eggnog', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'source_id': 'protein_chunk_size_hmm', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'source_id': 'protein_chunk_size_IPS', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_ips', 'source_id': 'func_ann_names_ips', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_hmmer', 'source_id': 'func_ann_names_hmmer', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'source_id': 'HMM_gathering_bit_score', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_omit_alignment', 'source_id': 'HMM_omit_alignment', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_name_database', 'source_id': 'HMM_name_database', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'hmmsearch_header', 'source_id': 'hmmsearch_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_db', 'source_id': 'EggNOG_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_diamond_db', 'source_id': 'EggNOG_diamond_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_data_dir', 'source_id': 'EggNOG_data_dir', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_databases', 'source_id': 'InterProScan_databases', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_applications', 'source_id': 'InterProScan_applications', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_outputFormat', 'source_id': 'InterProScan_outputFormat', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ips_header', 'source_id': 'ips_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'Uniref90_db_txt', 'source_id': 'Uniref90_db_txt', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_maxTargetSeqs', 'source_id': 'diamond_maxTargetSeqs', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_databaseFile', 'source_id': 'diamond_databaseFile', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_header', 'source_id': 'diamond_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'go_config', 'source_id': 'go_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'graphs', 'source_id': 'graphs', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'pathways_names', 'source_id': 'pathways_names', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'pathways_classes', 'source_id': 'pathways_classes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'gp_flatfiles_path', 'source_id': 'gp_flatfiles_path', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'clusters_glossary', 'source_id': 'clusters_glossary', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ko_file', 'source_id': 'ko_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}, {'id': 'value', 'source_id': 'after-qc/count_CDS', 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': 'no-cds'}]}",
    "tools": [],
    "id": 360,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#assembly-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/360?version=2 Fix collect_scripts.py Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:3230Downloads:404 Created: 7th Jun 2022 at 08:41 Last updated: 7th Jun 2022 at 09:04 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI HoloFood is a 'hologenomic' approach that will improve the efficiency of food production systems by understanding the biomolecular and physiological processes affected by incorporating feed additives and novel sustainable feeds in farmed animals. The HoloFood consortium will showcase the potential of an innovative solution that holds enormous potential for optimising modern food production. Specifically, HoloFood is a framework that integrates a suite of recent analytical and technological\n... Teams:HoloFood at MGnify Web page:https://www.holofood.eu MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified MGnify is EMBL-EBI's metagenomics resource. EMBL-EBI are one of the 11 HoloFood partners, and are responsible for the analysis of metagenomic and microbial datasets from the project. Space:HoloFood Public web page:https://www.ebi.ac.uk/metagenomics Start date: 1st Jan 2020 End date: 30th Apr 2023 Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 81,
    "discussion_links": [],
    "title": "CroMaSt: A workflow for assessing protein domain classification by cross-mapping of structural instances between domain databases and structural alignment",
    "license": "MIT",
    "description": "# CroMaSt: A workflow for assessing protein domain classification by cross-mapping of structural instances between domain databases and structural alignment\n\nCroMaSt (<span style=\"color:red\">**Cro**</span>ss <span style=\"color:red\">**Ma**</span>pper of domain <span style=\"color:red\">**St**</span>ructural instances) is an automated iterative workflow to clarify  the assignment of protein domains to a given domain type of interest, based on their 3D structure and by cross-mapping of domain structural instances between domain databases. CroMaSt (for Cross-Mapper of domain Structural instances) will classify all structural instances of a given domain type into 4 different categories (**Core**, **True**, **Domain-like**, and **Failed**). \n\n\n## Requirements\n1. [Conda](https://docs.conda.io/projects/conda/en/latest/) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html)\n2. [Kpax](http://kpax.loria.fr/download.php)  \nDownload and install conda (or Miniconda) and Kpax by following the instructions from their official site.\n\n\n## Get it running \n(Considering the requirements are already met)\n\n1. Clone the repository and change the directory\n\n```\ngit clone https://gitlab.inria.fr/capsid.public_codes/CroMaSt.git\ncd CroMaSt\n```\n\n2. Create the conda environment for the workflow\n```\nconda env create --file yml/environment.yml\nconda activate CroMaSt\n```\n\n3. Change the path of variables in paramter file\n```\nsed -i 's/\\/home\\/hdhondge\\/CroMaSt\\//\\/YOUR\\/PATH\\/TO_CroMaSt\\//g' yml/CroMaSt_input.yml \n```\n\n4. Create the directory to store files from PDB and SIFTS (if not already)\n```\nmkdir PDB_files SIFTS\n```\n\n5. Download the source input data\n```\ncwl-runner Tools/download_data.cwl yml/download_data.yml\n```\n\n## Basic example\n\n### 1. First, we will run the workflow for the KH domain with family identifiers `RRM_1` and `RRM` in Pfam and CATH, respectively.\nRun the workflow -\n\n```\ncwl-runner --parallel  --outdir=Results/  CroMaSt.cwl yml/CroMaSt_input.yml\n```\n\n### 2.  Once the iteration is complete, check the `new_param.yml` file from the `outputdir` (Results), if there is any family identifier in either `pfam` or `cath`; run the next iteration using following command (Until there is no new families explored by workflow) -\n\n```\ncwl-runner --parallel  --outdir=Results/  CroMaSt.cwl Results/new_param.yml\n```\n  \n### **Extra:** Start the workflow with multiple families from one or both databases  \nIf you would like to start the workflow with multiple families from one or both databases, then simply add a comma in between two family identifiers. \n```\npfam: ['PF00076', 'PF08777']\ncath: ['3.30.70.330']\n```\n\n- **Pro Tip**: Don't forget to give different path to `--outdir` option while running the workflow multiple times or at least move the results to some other location after first run.\n\n## Run the workflow for protein domain of your choice  \n### 1. You can run the workflow for the domain of your choice by simply changing the family identifers in `yml/CroMaSt_input.yml` file.\n\nSimply replace the following values of family identifiers (for pfam and cath) with the family identifiers of your choice in `yml/CroMaSt_input.yml` file. \n```\npfam: ['PF00076']\ncath: ['3.30.70.330']\n```\n\n\n\n## Data files used in current version are as follows:\n**Files in Data directory can be downloaded as follows**:\n\n1. File used from Pfam database: [pdbmap.gz](http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam35.0/pdbmap.gz)\n\n2. File used from CATH database: [cath-domain-description-file.txt](ftp://orengoftp.biochem.ucl.ac.uk:21/cath/releases/latest-release/cath-classification-data/cath-domain-description-file.txt)  \n\n3. Obsolete entries from RCSB PDB\n[obsolete_PDB_entry_ids.txt](https://data.rcsb.org/rest/v1/holdings/removed/entry_ids)  \n\n\nCATH Version - 4.3.0 (Ver_Date - 11-Sep-2019) [FTP site](ftp://orengoftp.biochem.ucl.ac.uk/cath/releases/latest-release/cath-classification-data/)\nPfam Version - 35.0 (Ver_Date - November-2021) [FTP site](http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam35.0/)\n\n## Reference\n```\nPoster - \n1. Hrishikesh Dhondge, Isaure Chauvot de Beauchêne, Marie-Dominique Devignes. CroMaSt: A workflow for domain family curation through cross-mapping of structural instances between protein domain databases. 21st European Conference on Computational Biology, Sep 2022, Sitges, Spain. ⟨hal-03789541⟩\n\n```\n\n## Acknowledgements\nThis  project  has  received  funding  from  the  Marie  Skłodowska-Curie Innovative Training Network (MSCA-ITN) RNAct supported by European Union’s Horizon 2020 research and innovation programme under granta greement No 813239.",
    "latest_version": 2,
    "tags": "['CATH', 'Pfam', 'Protein domains', 'data integration']",
    "versions": "[{'version': 1, 'revision_comments': 'Updated input parameter file\\r\\n', 'url': 'https://workflowhub.eu/workflows/390?version=1', 'remote': 'https://github.com/HrishiDhondge/CroMaSt.git', 'commit': '9f3832867eab6c7a6363f8ca594a4bcf2ff7e96f', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/390/git/1/tree', 'doi': '10.48546/workflowhub.workflow.390.1'}, {'version': 2, 'revision_comments': 'Pfam v35.0 and Results_archive for publication\\r\\n', 'url': 'https://workflowhub.eu/workflows/390?version=2', 'remote': 'https://github.com/HrishiDhondge/CroMaSt.git', 'commit': 'b5a9d4b025ec8e065bae97eeb96f10db2dd8e1e6', 'ref': 'refs/tags/v1.1', 'tree': '/workflows/390/git/2/tree', 'doi': '10.48546/workflowhub.workflow.390.2'}]",
    "version": 2,
    "revision_comments": "Pfam v35.0 and Results_archive for publication",
    "created_at": "2023-06-20T12:06:49.000Z",
    "updated_at": "2023-06-20T12:08:47.000Z",
    "doi": "10.48546/workflowhub.workflow.390.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/256', 'family_name': 'Dhondge', 'given_name': 'Hrishikesh', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-7025-2241'}, {'profile': None, 'family_name': 'Chauvot de Beauchêne', 'given_name': 'Isaure', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-7035-3042'}, {'profile': '/people/321', 'family_name': 'Devignes', 'given_name': 'Marie-Dominique', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-0399-8713'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'ID mapping', 'identifier': 'http://edamontology.org/operation_3282'}]",
    "topic_annotations": "[{'label': 'Biological databases', 'identifier': 'http://edamontology.org/topic_3071'}, {'label': 'Data integration and warehousing', 'identifier': 'http://edamontology.org/topic_3366'}, {'label': 'Protein folds and structural domains', 'identifier': 'http://edamontology.org/topic_0736'}]",
    "internals": "{'inputs': [{'id': 'pfam', 'name': 'Pfam family ids', 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'cath', 'name': 'CATH family ids', 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'iteration', 'name': 'Iteration number starting from 0', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'filename', 'name': 'Filename to store family ids per iteration', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'true_domain_file', 'name': 'To store all the true domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'siftsDir', 'name': 'Directory for storing all SIFTS files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'paramfile', 'name': 'Parameter file for current iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'db_for_core', 'name': 'Database to select to compute core average structure', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'core_domain_struct', 'name': 'Core domain structure (.pdb)', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'prev_crossMapped_pfam', 'name': 'Pfam cross-mapped domain StIs from previous iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'prev_crossMapped_cath', 'name': 'CATH cross-mapped domain StIs from previous iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unmapped_analysis_file', 'name': 'Filename with alignment scores for unmapped instances', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pdbDir', 'name': 'The directory for storing all PDB files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'cath_resmap', 'name': 'Filename for residue-mapped CATH domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'cath_lost', 'name': 'Obsolete and inconsistent CATH domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pfam_resmap', 'name': 'Filename for residue-mapped Pfam domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pfam_lost', 'name': 'Obsolete and inconsistent Pfam domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'domain_like', 'name': 'To store all the domain-like StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'failed_domain', 'name': 'To store all failed domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'min_domain_length', 'name': 'Threshold for minimum domain length', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'alignment_score', 'name': 'Alignment score from Kpax to analyse structures', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'score_threshold', 'name': 'Score threshold for given alignment score from Kpax', 'description': None, 'type': [{'type': 'float'}], 'default_value': None}, {'id': 'unmap_pfam_pass', 'name': 'Filename to store unmapped but structurally well aligned instances from Pfam', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_pfam_fail', 'name': 'Filename to store unmapped and not properly aligned instances from Pfam', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_cath_pass', 'name': 'Filename to store unmapped but structurally well aligned instances from CATH', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_cath_fail', 'name': 'Filename to store unmapped and not properly aligned instances from CATH', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'family_ids_x', 'name': 'Family ids per iteration', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['get_family_ids/family_ids']}, {'id': 'resmapped_pfam', 'name': 'All Pfam residue-mapped domain StIs with domain labels', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pfam_domain_instances/pfam_domain_posi_file']}, {'id': 'reslost_pfam', 'name': 'Obsolete and inconsistent domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pfam_domain_instances/pfam_total_lost_structures']}, {'id': 'resmapped_cath', 'name': 'All CATH residue-mapped domain StIs with domain labels', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['cath_domain_instances/cath_domain_posi_file']}, {'id': 'reslost_cath', 'name': 'Obsolete and inconsistent domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['cath_domain_instances/cath_total_lost_structures']}, {'id': 'true_domains', 'name': 'True domain StIs per iteration', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['compare_instances_CATH_Pfam/common_domains']}, {'id': 'core_domains_list', 'name': 'Core domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'null'}], 'source_ids': ['format_core_list/coredomains_list']}, {'id': 'core_structure', 'name': 'Core domain structure (.pdb)', 'description': None, 'type': [{'type': 'File'}, {'type': 'null'}], 'source_ids': ['chop_and_avg_for_core/averaged_structs']}, {'id': 'all_domain_like', 'name': 'Domain-like StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['gather_domain_like/unmapped_list']}, {'id': 'all_failed_domains', 'name': 'Failed domain StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['gather_failed_domains/unmapped_list']}, {'id': 'crossmapped_pfam_passed', 'name': 'Cross-mapped families with Pfam domain StIs passing the threshold', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['check_alignment_scores/pfam_crossmap_passed']}, {'id': 'crossmapped_cath_passed', 'name': 'Cross-mapped families with CATH domain StIs passing the threshold', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['check_alignment_scores/cath_crossmap_passed']}, {'id': 'crossres_mappedpfam', 'name': 'Merged cross-mapped and residue-mapped domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['add_crossmapped_to_resmapped/pfam_structs']}, {'id': 'crossres_mappedcath', 'name': 'Merged cross-mapped and residue-mapped domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['add_crossmapped_to_resmapped/cath_structs']}, {'id': 'unmap_pfam', 'name': 'All Pfam un-mapped domin StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_Pfam2CATH/pfam_unmapped']}, {'id': 'allmap_pfam', 'name': 'All Pfam domain StIs cross-mapped to CATH family-wise', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_Pfam2CATH/allcrossmap_pfam']}, {'id': 'unmap_cath', 'name': 'All un-mapped domin StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_CATH2Pfam/cath_unmapped']}, {'id': 'allmap_cath', 'name': 'All CATH cross-mapped domin StIs family-wise together', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_CATH2Pfam/allcrossmap_cath']}, {'id': 'pfam_crossmap_cath_avg', 'name': 'Average structures per cross-mapped CATH family for Pfam StIs at family level', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['chop_and_avg_for_Pfam2CATH/averaged_structs']}, {'id': 'cath_crossmap_pfam_avg', 'name': 'Average structures per cross-mapped Pfam family for CATH StIs at family level', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['chop_and_avg_for_CATH2Pfam/averaged_structs']}, {'id': 'avg_alignment_result', 'name': 'Alignment results from Kpax for all cross-mapped families', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['align_avg_structs_pairwise/alignment_out']}, {'id': 'next_parmfile', 'name': 'Parameter file for next iteration of the workflow', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['create_new_parameters/next_parmfile']}, {'id': 'align_unmap_pfam', 'name': 'Alignment results for Pfam unmapped instances', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/unmapped_aligned_results']}, {'id': 'unmap_pfam_passed', 'name': 'Domain-like StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/domain_like_list']}, {'id': 'unmap_pfam_failed', 'name': 'Failed domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/failed_domains_list']}, {'id': 'align_unmap_cath', 'name': 'Alignment results for CATH unmapped instances', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/unmapped_aligned_results']}, {'id': 'unmap_cath_passed', 'name': 'Domain-like StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/domain_like_list']}, {'id': 'unmap_cath_failed', 'name': 'Failed domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/failed_domains_list']}, {'id': 'crossmap_pfam', 'name': 'Pfam domin StIs cross-mapped to CATH family-wise', 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['crossmapping_Pfam2CATH/pfam_crossmapped']}, {'id': 'crossmap_cath', 'name': 'CATH domain StIs cross-mapped to Pfam family-wise', 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['crossmapping_CATH2Pfam/cath_crossmapped']}], 'steps': [{'id': 'get_family_ids', 'name': 'Get domain family ids', 'description': 'Get domain family ids from CATH and Pfam databases from parameter file provided by user\\n', 'sink_ids': ['get_family_ids/family_ids']}, {'id': 'pfam_domain_instances', 'name': 'Produce a list of residue-mapped domain StIs from Pfam ids', 'description': 'Retrieve and process the PDB structures corresponding to the Pfam family ids resulting in a list of residue-mapped\\nstructural domain instances along with lost structural instances\\n(requires Data/pdbmap downloaded from Pfam and uses SIFTS resource for UniProt to PDB residue Mapping) \\n', 'sink_ids': ['pfam_domain_instances/pfam_domain_posi_file', 'pfam_domain_instances/pfam_total_lost_structures']}, {'id': 'cath_domain_instances', 'name': 'Produce a list of residue-mapped domain StIs from CATH ids', 'description': 'Retrieve and process the PDB structures corresponding to the CATH superfamily ids resulting in a list of residue-mapped\\nstructural domain instances along with lost structural instances\\n(requires Data/cath_domain_description_file.txt downloaded from CATH and uses SIFTS resource for PDB to UniProt residue Mapping) \\n', 'sink_ids': ['cath_domain_instances/cath_domain_posi_file', 'cath_domain_instances/cath_total_lost_structures']}, {'id': 'add_crossmapped_to_resmapped', 'name': 'Add cross-mapped to residue-mapped domain StIs', 'description': 'Add crossmapped domain instances from last iteration to current list of residue mapped domain instances.\\n', 'sink_ids': ['add_crossmapped_to_resmapped/pfam_structs', 'add_crossmapped_to_resmapped/cath_structs']}, {'id': 'compare_instances_CATH_Pfam', 'name': 'Compare residue-mapped domain StIs', 'description': 'Find the intersection between residue-mapped domain StIs of Pfam and CATH lists. \\nAllows variable domain boundaries in a certain range +/- 30aa. Produces three files: common domain instances, \\nand unique domain instances to each Pfam and CATH.\\n', 'sink_ids': ['compare_instances_CATH_Pfam/common_domains', 'compare_instances_CATH_Pfam/pfam_unique', 'compare_instances_CATH_Pfam/cath_unique']}, {'id': 'crossmapping_Pfam2CATH', 'name': 'Map unique Pfam domain StIs to CATH db', 'description': 'Maps the unique domain StIs from Pfam to the whole CATH database \\n(using residue numbering from PDB allowing variable domain boundaries +/-30aa)\\n', 'sink_ids': ['crossmapping_Pfam2CATH/pfam_crossmapped', 'crossmapping_Pfam2CATH/allcrossmap_pfam', 'crossmapping_Pfam2CATH/pfam_unmapped']}, {'id': 'crossmapping_CATH2Pfam', 'name': 'Map unique CATH domain StIs to Pfam db', 'description': 'Maps the unique domain StIs from CATH to the whole Pfam database \\n(using residue numbering from UniProt allowing variable domain boundaries +/-30aa)\\n', 'sink_ids': ['crossmapping_CATH2Pfam/cath_crossmapped', 'crossmapping_CATH2Pfam/allcrossmap_cath', 'crossmapping_CATH2Pfam/cath_unmapped']}, {'id': 'format_core_list', 'name': 'Format core domain StIs list', 'description': 'Fornat core domain instances list from the common instances list identified at first iteration; \\nPreparing input for average structure computation\\n', 'sink_ids': ['format_core_list/coredomains_list']}, {'id': 'chop_and_avg_for_core', 'name': 'Compute average of average for core domain instances', 'description': 'Compute average structure for all averaged structures corresponding to core UniProt domain instances.\\nFirst computes average per UniProt domain instance and then average all averaged structures.\\n', 'sink_ids': ['chop_and_avg_for_core/averaged_structs']}, {'id': 'chop_and_avg_for_CATH2Pfam', 'name': 'Compute average of average per cross-mapped Pfam', 'description': 'Compute average structure for all averaged structures corresponding to UniProt domain instances cross-mapped \\nfrom CATH to a Pfam family.\\nFirst computes average per UniProt domain instance and then average all averaged structures per Pfam family. \\n', 'sink_ids': ['chop_and_avg_for_CATH2Pfam/averaged_structs']}, {'id': 'chop_and_avg_for_Pfam2CATH', 'name': 'Compute average of average per cross-mapped CATH', 'description': 'Compute average structure for all averaged structures corresponding to UniProt domain instances cross-mapped \\nfrom Pfam to a CATH superfamily.\\nFirst computes average per UniProt domain instance and then average all averaged structures per CATH superfamily. \\n', 'sink_ids': ['chop_and_avg_for_Pfam2CATH/averaged_structs']}, {'id': 'align_avg_structs_pairwise', 'name': 'Pairwise alignemnt with core average structure', 'description': 'Align crossmapped averaged structures against core average domain structure pairwise using Kpax\\nOutputs a csv file with all the scores from pairwise alignments\\n', 'sink_ids': ['align_avg_structs_pairwise/alignment_out']}, {'id': 'check_alignment_scores', 'name': 'Checks the alignment score for given threshold', 'description': 'Checks the alignment score for each aligned structure based on the given threshold\\nOutputs the structural instances passing and failing the threshold in separate files \\n', 'sink_ids': ['check_alignment_scores/pfam_crossmap_passed', 'check_alignment_scores/pfam_crossmap_failed', 'check_alignment_scores/cath_crossmap_passed', 'check_alignment_scores/cath_crossmap_failed']}, {'id': 'unmapped_from_pfam', 'name': 'Averages and aligns the unampped instances from Pfam', 'description': 'First computes average per UniProt domain instance and then aligns all the average structures against core average structure.\\nOutputs the alignment results along with the structures passing and failing the threshold for given Kpax score.      \\n', 'sink_ids': ['unmapped_from_pfam/unmapped_aligned_results', 'unmapped_from_pfam/domain_like_list', 'unmapped_from_pfam/failed_domains_list']}, {'id': 'unmapped_from_cath', 'name': 'Averages and aligns the unampped instances from CATH', 'description': 'First computes average per UniProt domain instance and then aligns all the average structures against core average structure.\\nOutputs the alignment results along with the structures passing and failing the threshold for given Kpax score.      \\n', 'sink_ids': ['unmapped_from_cath/unmapped_aligned_results', 'unmapped_from_cath/domain_like_list', 'unmapped_from_cath/failed_domains_list']}, {'id': 'gather_domain_like', 'name': 'Collects all domain-like structural instances', 'description': 'Collects all domain-like structural instances from Pfam and CATH\\nOutputs the list with all domain-like structural instances together.\\n', 'sink_ids': ['gather_domain_like/unmapped_list']}, {'id': 'gather_failed_domains', 'name': 'Collects all failed domain instances', 'description': 'Collects all domain instances failed to pass the criteria from both Pfam and CATH\\nOutputs the list with all failed domain instances together.\\n', 'sink_ids': ['gather_failed_domains/unmapped_list']}, {'id': 'create_new_parameters', 'name': 'Create parameter file for next iteration', 'description': 'Create parameter file for next iteration from previous parameter file\\nFilter the pairwise alignments to retrieve family ids passing the threshold for a given Kpax score type       \\n', 'sink_ids': ['create_new_parameters/next_parmfile']}], 'links': [{'id': 'pfam_ids', 'source_id': 'pfam', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'cath_ids', 'source_id': 'cath', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'iteration_no', 'source_id': 'iteration', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'filename', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'family_idsfile', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'siftsdir', 'source_id': 'siftsDir', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'resmapped_file', 'source_id': 'pfam_resmap', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'lost_merged', 'source_id': 'pfam_lost', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'min_dom_size', 'source_id': 'min_domain_length', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'family_idsfile', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'siftsdir', 'source_id': 'siftsDir', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'resmapped_file', 'source_id': 'cath_resmap', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'lost_merged', 'source_id': 'cath_lost', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'min_dom_size', 'source_id': 'min_domain_length', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'pfam_resmapped', 'source_id': 'pfam_domain_instances/pfam_domain_posi_file', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'cath_resmapped', 'source_id': 'cath_domain_instances/cath_domain_posi_file', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'pfam_crossmapped', 'source_id': 'prev_crossMapped_pfam', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'cath_crossmapped', 'source_id': 'prev_crossMapped_cath', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_cath', 'source_id': 'cath_domain_instances/cath_domain_posi_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_cath', 'source_id': 'add_crossmapped_to_resmapped/cath_structs', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_pfam', 'source_id': 'pfam_domain_instances/pfam_domain_posi_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_pfam', 'source_id': 'add_crossmapped_to_resmapped/pfam_structs', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'truedomains_file', 'source_id': 'true_domain_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'pfam_unq', 'source_id': 'compare_instances_CATH_Pfam/pfam_unique', 'sink_id': 'crossmapping_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'crossmapping_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'cath_unq', 'source_id': 'compare_instances_CATH_Pfam/cath_unique', 'sink_id': 'crossmapping_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'crossmapping_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'infile', 'source_id': 'compare_instances_CATH_Pfam/common_domains', 'sink_id': 'format_core_list', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'db_for_core', 'sink_id': 'format_core_list', 'name': None, 'default_value': None}, {'id': 'core_list', 'source_id': 'format_core_list/coredomains_list', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'crossmap_file', 'source_id': 'crossmapping_CATH2Pfam/cath_crossmapped', 'sink_id': 'chop_and_avg_for_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'crossmap_file', 'source_id': 'crossmapping_Pfam2CATH/pfam_crossmapped', 'sink_id': 'chop_and_avg_for_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'cath_fam_avg', 'source_id': 'chop_and_avg_for_CATH2Pfam/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'pfam_fam_avg', 'source_id': 'chop_and_avg_for_Pfam2CATH/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'core_avg', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'core_avg', 'source_id': 'core_domain_struct', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'aln_res_file', 'source_id': 'align_avg_structs_pairwise/alignment_out', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'pfam_crossmap', 'source_id': 'crossmapping_Pfam2CATH/allcrossmap_pfam', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'cath_crossmap', 'source_id': 'crossmapping_CATH2Pfam/allcrossmap_cath', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'aln_score', 'source_id': 'alignment_score', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'threshold_val', 'source_id': 'score_threshold', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'unmapped_list', 'source_id': 'crossmapping_Pfam2CATH/pfam_unmapped', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'core_domain_struct', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'alignment_score', 'source_id': 'alignment_score', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'score_threshold', 'source_id': 'score_threshold', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'passed_name', 'source_id': 'unmap_pfam_pass', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'failed_name', 'source_id': 'unmap_pfam_fail', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'unmapped_list', 'source_id': 'crossmapping_CATH2Pfam/cath_unmapped', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'core_domain_struct', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'alignment_score', 'source_id': 'alignment_score', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'score_threshold', 'source_id': 'score_threshold', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'passed_name', 'source_id': 'unmap_cath_pass', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'failed_name', 'source_id': 'unmap_cath_fail', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'pfam_unmapped', 'source_id': 'unmapped_from_pfam/domain_like_list', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'cath_unmapped', 'source_id': 'unmapped_from_cath/domain_like_list', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'unmapped_out', 'source_id': 'domain_like', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'pfam_unmapped', 'source_id': 'unmapped_from_pfam/failed_domains_list', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'cath_unmapped', 'source_id': 'unmapped_from_cath/failed_domains_list', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'pfam_crossmapped', 'source_id': 'check_alignment_scores/pfam_crossmap_failed', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'cath_crossmapped', 'source_id': 'check_alignment_scores/cath_crossmap_failed', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'unmapped_out', 'source_id': 'failed_domain', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'in_paramfile', 'source_id': 'paramfile', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'true_domains', 'source_id': 'compare_instances_CATH_Pfam/common_domains', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'core_domain_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'core_domain_struct', 'source_id': 'core_domain_struct', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'crossmap_pfam', 'source_id': 'check_alignment_scores/pfam_crossmap_passed', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'crossmap_cath', 'source_id': 'check_alignment_scores/cath_crossmap_passed', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'domain_like', 'source_id': 'gather_domain_like/unmapped_list', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'failed_domains', 'source_id': 'gather_failed_domains/unmapped_list', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 390,
    "text_field": "['Tools', 'Python', 'yml', 'CONTRIBUTING.md', 'CroMaSt.cwl', 'CroMaSt_Results_archive.zip', 'LICENSE', 'README.md', 'add_crossmapped2resmapped.py', 'add_domain_num.py', 'align_compute_avg.py', 'check_threshold.py', 'chop_struct2domains.py', 'compare_cath_pfam.py', 'create_param.py', 'crossmapped_per_unp_dom.py', 'filter_align_scores.py', 'get_family_ids.py', 'map_unique_struct_cath2pfam.py', 'map_unique_struct_pfam2cath.py', 'merge_df2json.py', 'pairwise_aligner.py', 'residue_mapping.py', 'resmapping_cath2up.py', 'resmapping_pfam2pdb.py', 'separate_cath.py', 'separate_pfam.py', 'add_crossmapped2resmapped.cwl', 'add_domain_num.cwl', 'align_compute_avg.cwl', 'check_threshold.cwl', 'chop_struct2domains.cwl', 'compare_cath_pfam.cwl', 'core_avg_subwf.cwl', 'create_param.cwl', 'crossmapped_per_unp_dom.cwl', 'download_data.cwl', 'filter_align_scores.cwl', 'gather_lost_resmap.cwl', 'get_family_ids.cwl', 'list_true_domains.cwl', 'map_unique_struct_cath2pfam.cwl', 'map_unique_struct_pfam2cath.cwl', 'merge_df2json.cwl', 'move_files.cwl', 'other_avg_subwf.cwl', 'pairwise_aligner.cwl', 'resmapping_cath2up.cwl', 'resmapping_cath_instances_subwf.cwl', 'resmapping_pfam2pdb.cwl', 'resmapping_pfam_instances_subwf.cwl', 'separate_cath.cwl', 'separate_pfam.cwl', 'unmapped_unp_avg_align.cwl', 'CroMaSt_input.yml', 'download_data.yml', 'environment.yml']",
    "raw_text_content": "",
    "p_tag_content": "CroMaSt (CrossMapper of domainStructural instances) is an automated iterative workflow to clarify  the assignment of protein domains to a given domain type of interest, based on their 3D structure and by cross-mapping of domain structural instances between domain databases. CroMaSt (for Cross-Mapper of domain Structural instances) will classify all structural instances of a given domain type into 4 different categories (Core,True,Domain-like, andFailed). (Considering the requirements are already met) Run the workflow - If you would like to start the workflow with multiple families from one or both databases, then simply add a comma in between two family identifiers. Simply replace the following values of family identifiers (for pfam and cath) with the family identifiers of your choice inyml/CroMaSt_input.ymlfile. Files in Data directory can be downloaded as follows: File used from Pfam database:pdbmap.gz File used from CATH database:cath-domain-description-file.txt Obsolete entries from RCSB PDBobsolete_PDB_entry_ids.txt CATH Version - 4.3.0 (Ver_Date - 11-Sep-2019)FTP sitePfam Version - 35.0 (Ver_Date - November-2021)FTP site This  project  has  received  funding  from  the  Marie  Skłodowska-Curie Innovative Training Network (MSCA-ITN) RNAct supported by European Union’s Horizon 2020 research and innovation programme under granta greement No 813239. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/390?version=2 DOI:10.48546/workflowhub.workflow.390.2 Pfam v35.0 and Results_archive for publication Updated input parameter file Views:2966Downloads:294 Created: 28th Sep 2022 at 12:34 Last updated: 20th Jun 2023 at 13:06 None Teams:CAPSID Organizations:CNRS - Centre Est Teams:CAPSID Organizations:CNRS - Centre Est Expertise:Bioinformatics,Molecular Modelling,Biomolecular Dynamics Simulations,Database Development,Protein Structural Alignment A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Computational Algorithms for Protein Structures and Interactions - Inria, CNRS, University of Lorraine The CAPSID team develops algorithms and software to help study biological systems and phenomena from a structural point of view. In particular, the team aims to develop algorithms to facilitate and improve the 3D modeling of large multi-component bio-molecular machines. Space:Independent Teams Public web page:https://capsid.loria.fr/ Organisms:Not specified Protein domains can be viewed as building blocks, essential for understanding structure-function relationships in proteins. However, each domain database classifies protein domains using its own methodology. Thus, in many cases, boundaries between different domains or families differ from one domain database to the other, raising the question of domain definition and enumeration. The answer to this question cannot be found in a single database. Rather, expert integration and curation of various\n... Creators:Hrishikesh Dhondge,Isaure Chauvot de Beauchêne,Marie-Dominique Devignes Submitter:Hrishikesh Dhondge"
  },
  {
    "": 101,
    "discussion_links": [],
    "title": "Gravitational Wave source Cone Search",
    "license": "CC-BY-4.0",
    "description": "",
    "latest_version": 1,
    "tags": "['FAIR workflows', 'Gravitational Waves', 'astronomy']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/415?version=1', 'commit': '43d629f622c65165f7515f676d8c476a1a27a394', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/415/git/1/tree', 'doi': '10.48546/workflowhub.workflow.415.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-01-11T12:22:37.000Z",
    "updated_at": "2023-01-16T14:05:00.000Z",
    "doi": "10.48546/workflowhub.workflow.415.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Savchenko', 'given_name': 'Denys', 'affiliation': 'UPC', 'orcid': 'https://orcid.org/0000-0002-7664-8490'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 't1', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': '2017-08-16T12:00:00'}, {'id': 't2', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': '2017-08-18T12:00:00'}, {'id': 'do_cone_search', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'ra', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 250}, {'id': 'dec', 'name': None, 'description': None, 'type': [{'type': 'float'}], 'default_value': -30.0}, {'id': 'radius', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 10}, {'id': 'level_threshold', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 10}, {'id': 'contour_levels', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': 5090}], 'outputs': [{'id': 'asciicat', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'skymap_files', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'image', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'contours', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}], 'steps': [], 'links': []}",
    "tools": [],
    "id": 415,
    "text_field": "['conesearch.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\narguments:\n- -m\n- nb2workflow.nbadapter\n- https://renkulab.io/gitlab/dsavchenko/gw-backend/-/raw/master/notebooks/conesearch.ipynb\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\nid: conesearch\ninputs:\n- default: '2017-08-16T12:00:00'\n  id: t1\n  inputBinding:\n    prefix: --inp-t1=\n    separate: false\n  type: string\n- default: '2017-08-18T12:00:00'\n  id: t2\n  inputBinding:\n    prefix: --inp-t2=\n    separate: false\n  type: string\n- default: false\n  id: do_cone_search\n  inputBinding:\n    prefix: --inp-do_cone_search=\n    separate: false\n  type: boolean\n- default: 250\n  id: ra\n  inputBinding:\n    prefix: --inp-ra=\n    separate: false\n  type: int\n- default: -30.0\n  id: dec\n  inputBinding:\n    prefix: --inp-dec=\n    separate: false\n  type: float\n- default: 10\n  id: radius\n  inputBinding:\n    prefix: --inp-radius=\n    separate: false\n  type: int\n- default: 10\n  id: level_threshold\n  inputBinding:\n    prefix: --inp-level_threshold=\n    separate: false\n  type: int\n- default: 50,90\n  id: contour_levels\n  inputBinding:\n    prefix: --inp-contour_levels=\n    separate: false\n  type: string\noutputs:\n- doc: lines found with the pattern\n  id: asciicat\n  type: string\n- doc: lines found with the pattern\n  id: skymap_files\n  type: string\n- doc: lines found with the pattern\n  id: image\n  type: string\n- doc: lines found with the pattern\n  id: contours\n  type: string",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/415?version=1 DOI:10.48546/workflowhub.workflow.415.1 Initial commit Views:1261Downloads:199 Created: 11th Jan 2023 at 12:22 None Teams:ODA,EuroScienceGateway Organizations:MMODA,EPFL Expertise:astronomy,Data Management,high-performance computing,image analysis,Scientific workflow developement,Software Engineering Tools:CWL,Machine Learning,Workflows,Python,Snakemake,Databases A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://github.com/oda-hub Organisms:Not specified Collection of workflows used or developed by the EuroScienceGateway project. Maintainers:Stian Soiland-Reyes,Paul De Geest Number of items: 10 Tags:Not specified"
  },
  {
    "": 126,
    "discussion_links": [],
    "title": "WRF / EMEP Linear Workflow",
    "license": "MIT",
    "description": "# WRF/EMEP Linear Workflow\n\nExample Common Workflow Language (CWL) workflow and tool descriptors for running the \nWeather Research and Forecase (WRF) and EMEP models.\n\nThis workflow is designed for a single model domain. Example datasets for testing this \nworkflow can be downloaded from Zenodo.\n\n\n## Requirements:\n\n* docker or singularity\n* conda\n* cwltool\n* Toil - optional, useful for running on HPC or distributed computing systems\n\n### CWL / Toil Installation:\n\nThe workflow runner (either cwltool, or Toil) can be installed using either conda or pip.\nEnvironment files for conda are included, and can be used as shown below:\n* cwltool only:\n  * `conda env create --file install/env_cwlrunner.yml --name cwl`\n* Toil & cwltool:\n  * `conda env create --file install/env_toil.yml --name toil`\n\n### Setup for Example Workflow\n\n* Download the example dataset from Zenodo: https://doi.org/10.5281/zenodo.7817216\n* Extract into the `input_files` directory:\n  * `tar -zxvf wrf_emep_UK_example_inputs.tar.gz -C input_files --strip-components=1`\n\n## Running the Workflow\n\nThe full workflow is broken into several logical steps:\n1. ERA5 download\n2. WPS 1st step: Geogrid geography file creation\n3. WPS process: ungribbing of ERA5 data, and running of metgrid to produce meteorology files.\n4. WRF process: generation of WRF input files by REAL, and running of WRF model\n5. EMEP model: running of EMEP chemistry and transport model\n\nSteps 1 and 3 require you to register with the CDS service, in order to download ERA5 data\nbefore using in the WPS process.\nSteps 2 and 5 require you to download extra input data - the instructions on how to do this\nare included in the README.txt files in the relevant input data directories.\n\nA full workflow for all steps is provided here. But each separate step can by run on it's \nown too, following the instructions given below. We recommend running step 4 first, to \nexplore how the REAL & WRF workflow works, before trying the other steps.\n\n### 1. ERA5 download.\n\nBefore running the ERA5 download tool, ensure that you have reqistered for the CDS service, \nsigned the ERA5 licensing agreement, and saved the CDS API key (`.cdsapirc`) in your \nworking directory.\n\nTo run the ERA5 download tool use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/era5_workflow.cwl example_workflow_configurations/era5_download_settings.yaml\n```\nNote that the `--cachedir CACHE` option sets the working directory cache, which enables the\nreuse of any steps previously run (and the restarting of the workflow from this point).\nThe `--singularity` option is needed if you are using singularity instead of docker.\n\n### 2. WPS: Geogrid geography file creation\n\nBefore running the geogrid tool you will need to download the geography data from the\n[UCAR website](https://www2.mmm.ucar.edu/wrf/users/download/get_sources_wps_geog.html).\nThese should be extracted into the `input_files/geogrid_geog_input` directory.\n\nTo run the geogrid program use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/geogrid_workflow.cwl example_workflow_configurations/wps_geogrid_cwl_settings.yaml\n```\n\n### 3. WPS: Creation of meteorology input files\n\nBefore running the WPS process you will have to download the ERA5 datafiles (which will be\ncalled `preslev_[YYYYMMDD].grib` and `surface_[YYYYMMDD].grib`) and copy these to the directory\n`input_files/wps_era5_input`. If you have also run geogrid in step 2 you can replace the \n`geo_em.d01.nc` file in the `input_files/wps_geogrid_input` directory with the file that \ngeogrid created.\n\nTo run the wps metgrid process use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/wps_workflow.cwl example_workflow_configurations/wps_metgrid_cwl_settings.yaml\n```\n\n### 4. WRF: Creation of WRF input files, and running WRF model\n\nThe WRF model can be run without any prepreparation, except for the downloading of the \ninput data from Zenodo. However, if you have created new meteorology files (`met_em*`) using\nWPS you can replace the files in the `input_files/wrf_met_input` directory with these.\n\nTo run the WRF process (including REAL) use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/wrf_workflow.cwl example_workflow_configurations/wrf_real_cwl_settings.yaml\n``` \n\n### 5. EMEP: Running EMEP chemistry and transport model\n\nBefore running the EMEP model you will need to download the EMEP input dataset. This can be\ndone using the `catalog.py` tool, following the instructions in the `input_files/emep_input/README.txt`\nfile. If you have run WRF you can also replace the `wrfout*` data files in the \n`input_Files/emep_wrf_input` directory with those you have created.\n\nTo run the EMEP model use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/emep_workflow.cwl example_workflow_configurations/emep_cwl_settings.yaml\n```\n\n### Full Workflow\n\nBefore running the full workflow make sure you have carried out the setup tasks described\nabove.\n\nTo run the full workflow use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] wrf_emep_full_workflow.cwl example_workflow_configurations/wrf_emep_full_workflow_cwl_settings.yaml\n```\n\n## Notes\n\n### WRF filenames\n\nIn order to work with singularity, all filenames need to exclude special characters.\nTo ensure that all WRF filenames comply with this requirement, you will need to add the \n`nocolons = .true.` option to your WPS, REAL and WRF namelists to ensure this.\n\n### MPI parallel processing\n\nThe WPS processes all run in single thread mode. REAL, WRF and EMEP have been compiled with\nMPI support. The default cores for each of these is 2, 9 and 9, respectively. The \nsettings file can be edited to modify these requirements.\n\n### Caching intermediate workflow steps\n\nTo cache the data from individual steps you can use the `--cachedir <cache-dir>` optional flag.\n\n\n## License and Copyright \n\nThese workflow scripts have been developed by the [Research IT](https://research-it.manchester.ac.uk/) \nat the [University of Manchester](https://www.manchester.ac.uk/).\n\nCopyright 2023 [University of Manchester, UK](https://www.manchester.ac.uk/).\n\nLicensed under the MIT license, see the LICENSE file for details.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'add full workflow to readme\\r\\n', 'url': 'https://workflowhub.eu/workflows/455?version=1', 'remote': 'https://github.com/UoMResearchIT/wrf_emep_cwl_linear_workflow.git', 'commit': '70c6a6016eeb4434a3ad82af7908b83d4ea37ce7', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/455/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "add full workflow to readme",
    "created_at": "2023-04-12T12:04:44.000Z",
    "updated_at": "2023-04-12T12:45:16.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/37', 'family_name': 'Lowe', 'given_name': 'Douglas', 'affiliation': 'The University of Manchester, university of manchester', 'orcid': 'https://orcid.org/0000-0002-1248-3594'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'start_year', 'name': 'Year for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'start_month', 'name': 'Month for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'start_day', 'name': 'Day for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_year', 'name': 'Year for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_month', 'name': 'Month for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_day', 'name': 'Day for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'north_latitude', 'name': 'Latitude for top of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'south_latitude', 'name': 'Latitude for bottom of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'west_longitude', 'name': 'Longitude for left-edge of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'east_longitude', 'name': 'Longitude for right-edge of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'cdskey', 'name': 'API key for CDS service', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'https_proxy', 'name': 'HTTPS proxy information, if needed', 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'geodir', 'name': 'Geographic inputs for geogrid', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'namelist_geogrid', 'name': 'Geogrid namelist', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'geotable', 'name': 'Geogrid data table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'namelist_ungrib_atm', 'name': 'Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'vtable_atm', 'name': 'grib variable table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'outname_atm', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'namelist_ungrib_sfc', 'name': 'Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'vtable_sfc', 'name': 'grib variable table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'outname_sfc', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'namelist_metgrid', 'name': 'metgrid configuration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'generate_metdir', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'namelist_real', 'name': 'Real preprocessor Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'namelist_wrf', 'name': 'WRF Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'realcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'wrfcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'generate_rundir', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'namelist_emep', 'name': 'EMEP configuration file', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'inputdir_emep', 'name': 'EMEP Input Files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'runlabel_emep', 'name': \"EMEP run label, for output files, should match 'runlabel1' in namelist\", 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'metdir_name', 'name': \"Directory name for WRF input Files, should match 'meteo' base-directory in namelist\", 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'emepcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}], 'outputs': [{'id': 'wrfout', 'name': 'output files', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['step4_wrf_workflow/wrfout']}, {'id': 'emepout', 'name': 'output files', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['step5_emep_workflow/emepout']}], 'steps': [{'id': 'step1_era5_workflow', 'name': None, 'description': None, 'sink_ids': ['step1_era5_workflow/gribfiles_atm', 'step1_era5_workflow/gribfiles_sfc']}, {'id': 'step2_geogrid_workflow', 'name': None, 'description': None, 'sink_ids': ['step2_geogrid_workflow/geofiles']}, {'id': 'step3_wps_workflow', 'name': None, 'description': None, 'sink_ids': ['step3_wps_workflow/metfiles']}, {'id': 'step4_wrf_workflow', 'name': None, 'description': None, 'sink_ids': ['step4_wrf_workflow/wrfout']}, {'id': 'step5_emep_workflow', 'name': None, 'description': None, 'sink_ids': ['step5_emep_workflow/emepout']}], 'links': [{'id': 'start_year', 'source_id': 'start_year', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'start_month', 'source_id': 'start_month', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'start_day', 'source_id': 'start_day', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_year', 'source_id': 'end_year', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_month', 'source_id': 'end_month', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_day', 'source_id': 'end_day', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'north_latitude', 'source_id': 'north_latitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'south_latitude', 'source_id': 'south_latitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'west_longitude', 'source_id': 'west_longitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'east_longitude', 'source_id': 'east_longitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'cdskey', 'source_id': 'cdskey', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'https_proxy', 'source_id': 'https_proxy', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'geodir', 'source_id': 'geodir', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'namelist', 'source_id': 'namelist_geogrid', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'geotable', 'source_id': 'geotable', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_ungrib_atm', 'source_id': 'namelist_ungrib_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'vtable_atm', 'source_id': 'vtable_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'grib_files_atm', 'source_id': 'step1_era5_workflow/gribfiles_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'outname_atm', 'source_id': 'outname_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_ungrib_sfc', 'source_id': 'namelist_ungrib_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'vtable_sfc', 'source_id': 'vtable_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'grib_files_sfc', 'source_id': 'step1_era5_workflow/gribfiles_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'outname_sfc', 'source_id': 'outname_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_metgrid', 'source_id': 'namelist_metgrid', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'geo_files', 'source_id': 'step2_geogrid_workflow/geofiles', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'generate_metdir', 'source_id': 'generate_metdir', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_real', 'source_id': 'namelist_real', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_wrf', 'source_id': 'namelist_wrf', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'metfiles', 'source_id': 'step3_wps_workflow/metfiles', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'realcores', 'source_id': 'realcores', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'wrfcores', 'source_id': 'wrfcores', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'generate_rundir', 'source_id': 'generate_rundir', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_emep', 'source_id': 'namelist_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'metfiles_emep', 'source_id': 'step4_wrf_workflow/wrfout', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'metdir_name', 'source_id': 'metdir_name', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'inputdir_emep', 'source_id': 'inputdir_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'runlabel_emep', 'source_id': 'runlabel_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'emepcores', 'source_id': 'emepcores', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 455,
    "text_field": "['example_workflow_configurations', 'input_files', 'install', 'workflows', '.gitignore', 'LICENSE', 'README.md', 'emep_cwl_settings.yaml', 'era5_download_settings.yaml', 'wps_geogrid_cwl_settings.yaml', 'wps_metgrid_cwl_settings.yaml', 'wrf_emep_full_workflow_cwl_settings.yaml', 'wrf_real_cwl_settings.yaml', 'README.txt', 'env_cwlrunner.yml', 'env_toil.yml', 'emep_workflow.cwl', 'era5_workflow.cwl', 'geogrid_workflow.cwl', 'wps_workflow.cwl', 'wrf_workflow.cwl', 'wrf_emep_full_workflow.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Example Common Workflow Language (CWL) workflow and tool descriptors for running the\nWeather Research and Forecase (WRF) and EMEP models. This workflow is designed for a single model domain. Example datasets for testing this\nworkflow can be downloaded from Zenodo. The workflow runner (either cwltool, or Toil) can be installed using either conda or pip.\nEnvironment files for conda are included, and can be used as shown below: The full workflow is broken into several logical steps: Steps 1 and 3 require you to register with the CDS service, in order to download ERA5 data\nbefore using in the WPS process.\nSteps 2 and 5 require you to download extra input data - the instructions on how to do this\nare included in the README.txt files in the relevant input data directories. A full workflow for all steps is provided here. But each separate step can by run on it's\nown too, following the instructions given below. We recommend running step 4 first, to\nexplore how the REAL & WRF workflow works, before trying the other steps. Before running the ERA5 download tool, ensure that you have reqistered for the CDS service,\nsigned the ERA5 licensing agreement, and saved the CDS API key (.cdsapirc) in your\nworking directory. To run the ERA5 download tool use the following command: Note that the--cachedir CACHEoption sets the working directory cache, which enables the\nreuse of any steps previously run (and the restarting of the workflow from this point).\nThe--singularityoption is needed if you are using singularity instead of docker. Before running the geogrid tool you will need to download the geography data from theUCAR website.\nThese should be extracted into theinput_files/geogrid_geog_inputdirectory. To run the geogrid program use the following command: Before running the WPS process you will have to download the ERA5 datafiles (which will be\ncalledpreslev_[YYYYMMDD].gribandsurface_[YYYYMMDD].grib) and copy these to the directoryinput_files/wps_era5_input. If you have also run geogrid in step 2 you can replace thegeo_em.d01.ncfile in theinput_files/wps_geogrid_inputdirectory with the file that\ngeogrid created. To run the wps metgrid process use the following command: The WRF model can be run without any prepreparation, except for the downloading of the\ninput data from Zenodo. However, if you have created new meteorology files (met_em*) using\nWPS you can replace the files in theinput_files/wrf_met_inputdirectory with these. To run the WRF process (including REAL) use the following command: Before running the EMEP model you will need to download the EMEP input dataset. This can be\ndone using thecatalog.pytool, following the instructions in theinput_files/emep_input/README.txtfile. If you have run WRF you can also replace thewrfout*data files in theinput_Files/emep_wrf_inputdirectory with those you have created. To run the EMEP model use the following command: Before running the full workflow make sure you have carried out the setup tasks described\nabove. To run the full workflow use the following command: In order to work with singularity, all filenames need to exclude special characters.\nTo ensure that all WRF filenames comply with this requirement, you will need to add thenocolons = .true.option to your WPS, REAL and WRF namelists to ensure this. The WPS processes all run in single thread mode. REAL, WRF and EMEP have been compiled with\nMPI support. The default cores for each of these is 2, 9 and 9, respectively. The\nsettings file can be edited to modify these requirements. To cache the data from individual steps you can use the--cachediroptional flag. These workflow scripts have been developed by theResearch ITat theUniversity of Manchester. Copyright 2023University of Manchester, UK. Licensed under the MIT license, see the LICENSE file for details. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/455?version=1 add full workflow to readme Views:987Downloads:162 Created: 12th Apr 2023 at 13:04 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A collection of workflows related to air quality predictions, with a focus on the UK. The principle models used are WRF and EMEP. Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 138,
    "discussion_links": [],
    "title": "rquest-omop-worker-workflow",
    "license": "MIT",
    "description": "# rquest-omop-worker-workflows\n\nSource for workflow definitions for the open source RQuest OMOP Worker tool developed for Hutch/TRE-FX\n\nNote: ARM workflows are currently broken. x86 ones work.\n\n## Inputs\n\n### Body\nSample input payload:\n\n```json\n{\n  \"task_id\": \"job-2023-01-13-14: 20: 38-<project>\",\n  \"project\": \"<project>\",\n  \"owner\": \"<owner>\",\n  \"cohort\": {\n    \"groups\": [\n      {\n        \"rules\": [\n          {\n            \"varname\": \"OMOP\",\n            \"varcat\": \"Person\",\n            \"type\": \"TEXT\",\n            \"oper\": \"=\",\n            \"value\": \"8507\"\n          }\n        ],\n        \"rules_oper\": \"AND\"\n      }\n    ],\n    \"groups_oper\": \"OR\"\n  },\n  \"collection\": \"<collection>\",\n  \"protocol_version\": \"<version>\",\n  \"char_salt\": \"<char_salt>\",\n  \"uuid\": \"<uuid>\"\n}\n```\n\n### Database access\n\nCurrently this workflow requires inputs for connecting to the database it will run queries against.\n\nIn future this may be moved to environment variables.",
    "latest_version": 3,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'AB105814: Create scope in HostedService for WfexsJobService (#194)\\r\\n\\r\\n', 'url': 'https://workflowhub.eu/workflows/471?version=1', 'remote': 'https://github.com/HDRUK/hutch.git', 'commit': 'b916ecf79b686c06d3d6336807b7435ff0653ceb', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/1/tree', 'doi': '10.48546/workflowhub.workflow.471.1'}, {'version': 2, 'revision_comments': 'adding cwl files\\r\\n', 'url': 'https://workflowhub.eu/workflows/471?version=2', 'remote': 'https://github.com/HDRUK/rquest-omop-worker-workflows', 'commit': '8a4c8c16bd77c772155fecce68c4c64ee3aacfea', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/2/tree', 'doi': '10.48546/workflowhub.workflow.471.2'}, {'version': 3, 'revision_comments': 'Merge pull request #1 from HDRUK/env_variables\\r\\n\\r\\nRemove db parameters from workflows', 'url': 'https://workflowhub.eu/workflows/471?version=3', 'remote': 'https://github.com/HDRUK/rquest-omop-worker-workflows', 'commit': '724775ab48bff4ae6da6c39da4ad1619abcf8518', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/3/tree', 'doi': None}]",
    "version": 3,
    "revision_comments": "Merge pull request #1 from HDRUK/env_variables\n\nRemove db parameters from workflows",
    "created_at": "2023-10-23T13:58:11.000Z",
    "updated_at": "2023-10-23T13:58:11.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/476', 'family_name': 'Panagi', 'given_name': 'Vasiliki', 'affiliation': '', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'body', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'result_modifiers', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'is_availability', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'results', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'output_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['run_query/output_file']}], 'steps': [{'id': 'run_query', 'name': None, 'description': None, 'sink_ids': ['run_query/output_file']}], 'links': [{'id': 'body', 'source_id': 'body', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'result_modifiers', 'source_id': 'result_modifiers', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'is_availability', 'source_id': 'is_availability', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'results', 'source_id': 'results', 'sink_id': 'run_query', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 471,
    "text_field": "['arm', 'x86', 'LICENSE', 'README.md', 'rquest-omop-worker.cwl', 'workflow-entrypoint.cwl', 'rquest-omop-worker.cwl', 'workflow-entrypoint.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Source for workflow definitions for the open source RQuest OMOP Worker tool developed for Hutch/TRE-FX Note: ARM workflows are currently broken. x86 ones work. ### Body\nSample input payload: Currently this workflow requires inputs for connecting to the database it will run queries against. In future this may be moved to environment variables. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/471?version=3 Merge pull request #1 from HDRUK/env_variables Remove db parameters from workflows adding cwl files AB105814: Create scope in HostedService for WfexsJobService (#194) Views:2286Downloads:963 Created: 15th May 2023 at 17:15 Last updated: 23rd Oct 2023 at 14:58 This item has not yet been tagged. None Teams:TRE-FX Organizations:University of Nottingham Teams:TRE-FX Organizations:University of Nottingham Teams:IBISBA Workflows,GalaxyProject SARS-CoV-2,BioBB Building Blocks,Common Workflow Language (CWL) community,BioExcel Best Practice Guides,Specimen Data Refinery,FAIR Computational Workflows,Vertebrate Genomes Pipelines in Galaxy,TRE-FX,EuroScienceGateway,Biodiversity Genomics Europe (general),BY-COVID Baseline Use Case: SARS-CoV-2 Vaccine(s) effectiveness in preventing SARS-CoV-2 infection,BY-COVID (general),BioDT additional pipelines,BioDT Use Case 4.1.1.1 Biodiversity dynamics,BioDT Use Case 4.1.2.2 DNA detected biodiversity, poorly known habitats,BioDT Use Case 4.1.2.1 Crop wild relatives and genetic resources for food security,BioDT Use Case 4.1.3.1 Invasive species,BioDT Use Case 4.1.3.2 Endangered species,BioDT Use Case 4.1.4.1 Disease outbreaks,BioDT Use Case 4.1.4.2 Pollinators,BioDT Use Case 4.1.1.2 Ecosystem services,ELIXIR Training,ELIXIR Tools platform Organizations:The University of Manchester,ELIXIR-UK A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TRE-FX is assembling leading technology providers from ELIXIR-UK and HDR UK, with three TRE providers and two leading analysis platforms to show through a real reference implementation how we can use secure Research Objects to move between TREs while still supporting the Five Safes principles that govern and protect patient data; all overseen by patient representatives. Space:Independent Teams Public web page:https://trefx.uk/ Start date: 1st Mar 2023 End date: 31st Oct 2023 Organisms:Not specified"
  },
  {
    "": 141,
    "discussion_links": [],
    "title": "Metagenome and metatranscriptome assembly in CWL",
    "license": "CC-BY-4.0",
    "description": "# CWL-assembly\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/684724bbc0134960ab41748f4a4b732f)](https://www.codacy.com/app/mb1069/CWL-assembly?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=EBI-Metagenomics/CWL-assembly&amp;utm_campaign=Badge_Grade)\n[![Build Status](https://travis-ci.org/EBI-Metagenomics/CWL-assembly.svg?branch=develop)](https://travis-ci.org/EBI-Metagenomics/CWL-assembly)\n\n## Description\n\nThis repository contains two workflows for metagenome and metatranscriptome assembly of short read data. MetaSPAdes is used as default for paired-end data, and MEGAHIT for single-end data and co-assemblies. MEGAHIT can be specified as the default assembler in the yaml file if preferred. Steps include:\n\n  * _QC_: removal of short reads, low quality regions, adapters and host decontamination\n  * _Assembly_: with metaSPADES or MEGAHIT\n  * _Post-assembly_: Host and PhiX decontamination, contig length filter (500bp), stats generation\n\n## Requirements - How to install\n\nThis pipeline requires a conda environment with cwltool, blastn, and metaspades. If created with `requirements.yml`, the environment will be called `cwl_assembly`. \n\n```\nconda env create -f requirements.yml\nconda activate cwl_assembly\npip install cwltool==3.1.20230601100705\n```\n\n## Databases\n\nYou will need to pre-download fasta files for host decontamination and generate the following databases accordingly:\n  * bwa index\n  * blast index\n    \nSpecify the locations in the yaml file when running the pipeline.\n\n## Main pipeline executables\n\n  * `src/workflows/metagenome_pipeline.cwl`\n  * `src/workflows/metatranscriptome_pipeline.cwl`\n\n## Example command\n\n```cwltool --singularity --outdir ${OUTDIR} ${CWL} ${YML}```\n\n`$CWL` is going to be one of the executables mentioned above\n`$YML` should be a config yaml file including entries among what follows. \nYou can find a yml template in the `examples` folder.\n\n## Example output directory structure\n```\nRoot directory\n    ├── megahit\n    │   └── 001 -------------------------------- Assembly root directory\n    │       ├── assembly_stats.json ------------ Human-readable assembly stats file\n    │       ├── coverage.tab ------------------- Coverage file\n    │       ├── log ---------------------------- CwlToil+megahit output log\n    |       ├── options.json ------------------- Megahit input options\n    │       ├── SRR6257420.fasta.gz ------------ Archived and trimmed assembly\n    │       └── SRR6257420.fasta.gz.md5 -------- MD5 hash of above archive\n    ├── metaspades\n    │   └── 001 -------------------------------- Assembly root directory\n    │       ├── assembly_graph.fastg ----------- Assembly graph\n    │       ├── assembly_stats.json ------------ Human-readable assembly stats file\n    │       ├── coverage.tab ------------------- Coverage file\n    |       ├── params.txt --------------------- Metaspades input options\n    │       ├── spades.log --------------------- Metaspades output log\n    │       ├── SRR6257420.fasta.gz ------------ Archived and trimmed assembly\n    │       └── SRR6257420.fasta.gz.md5 -------- MD5 hash of above archive\n    │ \n    └── raw ------------------------------------ Raw data directory\n        ├── SRR6257420.fastq.qc_stats.tsv ------ Stats for cleaned fastq\n        ├── SRR6257420_fastp_clean_1.fastq.gz -- Cleaned paired-end file_1\n        └── SRR6257420_fastp_clean_2.fastq.gz -- Cleaned paired-end file_2\n```",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/474?version=1', 'remote': 'https://github.com/EBI-Metagenomics/CWL-assembly.git', 'commit': 'b269a55c0b45f86f3b5373972688ee1d78bec660', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/474/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #8 from EBI-Metagenomics/readme_requirements\\r\\n\\r\\nUpdate of README, examples, and installation requirements', 'url': 'https://workflowhub.eu/workflows/474?version=2', 'remote': 'https://github.com/EBI-Metagenomics/CWL-assembly.git', 'commit': '39efebc161b7022163094e5a73a51a08a968e9c7', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/474/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Merge pull request #8 from EBI-Metagenomics/readme_requirements\n\nUpdate of README, examples, and installation requirements",
    "created_at": "2023-06-21T10:41:38.000Z",
    "updated_at": "2023-06-21T10:41:38.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 474,
    "text_field": "['.github', 'workflows', 'examples', 'src', 'tools', 'assembly-qc', 'bwa', 'fastp', 'megahit', 'metaspades', 'stats', 'upload', 'utils', 'workflows', 'tests', 'in', 'blastdb', 'bwa_index', 'metaspades_out', 'metaspades', '001', 'raw', 'tools', 'assembly-qc', 'bwa', 'fastp', 'megahit', 'metaspades', 'stats', 'workflows', 'workflows', 'test.yml', '.gitignore', '.pre-commit-config.yaml', '.travis.yml', 'LICENSE', 'MANIFEST.in', 'README.md', 'template.yml', 'requirements.yml', '__init__.py', 'blast.cwl', 'fasta-trimming.cwl', 'trim_fasta.py', 'bwa.cwl', 'map_host.sh', 'fastp.cwl', 'megahit_paired.cwl', 'megahit_single.cwl', 'metaspades.cwl', 'base_count.cwl', 'bwa-index.cwl', 'bwa-mem.cwl', 'gen_stats_report.py', 'metabat-jgi-summarise.cwl', 'samtools-sort.cwl', 'samtools-view.cwl', 'stats-report.cwl', 'create_manifest.py', 'get_coverage.py', 'cat.cwl', 'cat.yml', 'count_fastq.cwl', 'count_fastq.sh', 'count_fastq.yml', 'detect_assembler.cwl', 'fill_reads2.cwl', 'restore_reads2.cwl', 'return_directory.cwl', 'return_directory.yml', 'assembly.cwl', 'assembly_stats.json', 'coassembly.cwl', 'metagenome_multiplereads_qc.cwl', 'metagenome_pipeline.cwl', 'metagenome_qc.cwl', 'metatranscriptome_pipeline.cwl', 'metatranscriptome_qc.cwl', 'post_assembly.cwl', 'post_assembly.yml', 'post_assembly_qc.cwl', 'post_assembly_qc.yml', 'rna-prediction.cwl', 'stats.cwl', 'stats.yml', 'cwl-validation.sh', 'cwltest.sh', 'aln-se.sam', 'assembly_stats.json', 'base_counts', 'phiX.nhr', 'phiX.nin', 'phiX.nsq', 'GRCh38_chr10.fasta', 'GRCh38_chr10.fasta.0123', 'GRCh38_chr10.fasta.amb', 'GRCh38_chr10.fasta.ann', 'GRCh38_chr10.fasta.bwt.2bit.64', 'GRCh38_chr10.fasta.pac', 'contigs_phixcont.fasta', 'coverage.tab', 'filtered_contigs.fasta', 'filtered_contigs.fasta.0123', 'filtered_contigs.fasta.amb', 'filtered_contigs.fasta.ann', 'filtered_contigs.fasta.bwt.2bit.64', 'filtered_contigs.fasta.pac', 'mgtest_1.fastq.gz', 'mgtest_2.fastq.gz', 'mgtest_fastp_1.fastq.gz', 'mgtest_fastp_2.fastq.gz', 'mgtest_fastp_clean_1.fastq.gz', 'mgtest_fastp_clean_2.fastq.gz', 'sorted.bam', 'unsorted.bam', 'assembly_graph.fastg', 'assembly_stats.json', 'coverage.tab', 'mgtest.fasta.gz', 'mgtest.fasta.gz.md5', 'params.txt', 'mgtest_fastp_clean_1.fastq.gz', 'mgtest_fastp_clean_2.fastq.gz', 'qc_stats.tsv', 'tests.yml', 'blast.yml', 'fasta-trimming.yml', 'bwa.yml', 'fastp.yml', 'megahit_paired.yml', 'megahit_single.yml', 'metaspades.yml', 'base_count.yml', 'bwa-index.yml', 'bwa-mem.yml', 'metabat-jgi-summarise.yml', 'samtools-sort.yml', 'samtools-view.yml', 'stats-report.yml', 'metagenome_pipeline.yml', 'metagenome_pipeline_megahit.yml', 'metagenome_pipeline_single.yml', 'test.yml']",
    "raw_text_content": "",
    "p_tag_content": "This repository contains two workflows for metagenome and metatranscriptome assembly of short read data. MetaSPAdes is used as default for paired-end data, and MEGAHIT for single-end data and co-assemblies. MEGAHIT can be specified as the default assembler in the yaml file if preferred. Steps include: This pipeline requires a conda environment with cwltool, blastn, and metaspades. If created withrequirements.yml, the environment will be calledcwl_assembly. You will need to pre-download fasta files for host decontamination and generate the following databases accordingly: Specify the locations in the yaml file when running the pipeline. cwltool --singularity --outdir ${OUTDIR} ${CWL} ${YML} $CWLis going to be one of the executables mentioned above$YMLshould be a config yaml file including entries among what follows.\nYou can find a yml template in theexamplesfolder. SEEK ID:https://workflowhub.eu/workflows/474?version=2 Merge pull request #8 from EBI-Metagenomics/readme_requirements Update of README, examples, and installation requirements Update README.md Views:2378Downloads:281 Created: 19th May 2023 at 14:59 Last updated: 21st Jun 2023 at 11:41 This item has not yet been tagged. None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI HoloFood is a 'hologenomic' approach that will improve the efficiency of food production systems by understanding the biomolecular and physiological processes affected by incorporating feed additives and novel sustainable feeds in farmed animals. The HoloFood consortium will showcase the potential of an innovative solution that holds enormous potential for optimising modern food production. Specifically, HoloFood is a framework that integrates a suite of recent analytical and technological\n... Teams:HoloFood at MGnify Web page:https://www.holofood.eu MGnify is EMBL-EBI's metagenomics resource. EMBL-EBI are one of the 11 HoloFood partners, and are responsible for the analysis of metagenomic and microbial datasets from the project. Space:HoloFood Public web page:https://www.ebi.ac.uk/metagenomics Start date: 1st Jan 2020 End date: 30th Apr 2023 Organisms:Not specified"
  },
  {
    "": 155,
    "discussion_links": "[{'id': '568', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '569', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb-dev/biobb/public/workflows/tutorials/flexdyn'}, {'id': '570', 'label': 'Documentation', 'url': 'https://biobb-wf-flexdyn.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein conformational ensembles generation",
    "license": "other-open",
    "description": "# Protein Conformational ensembles generation\n\n## Workflow included in the [ELIXIR 3D-Bioinfo](https://elixir-europe.org/communities/3d-bioinfo) Implementation Study:\n\n### Building on PDBe-KB to chart and characterize the conformation landscape of native proteins\n\nThis tutorial aims to illustrate the process of generating **protein conformational ensembles** from** 3D structures **and analysing its **molecular flexibility**, step by step, using the **BioExcel Building Blocks library (biobb)**.\n\n## Conformational landscape of native proteins\n**Proteins** are **dynamic** systems that adopt multiple **conformational states**, a property essential for many **biological processes** (e.g. binding other proteins, nucleic acids, small molecule ligands, or switching between functionaly active and inactive states). Characterizing the different **conformational states** of proteins and the transitions between them is therefore critical for gaining insight into their **biological function** and can help explain the effects of genetic variants in **health** and **disease** and the action of drugs.\n\n**Structural biology** has become increasingly efficient in sampling the different **conformational states** of proteins. The **PDB** has currently archived more than **170,000 individual structures**, but over two thirds of these structures represent **multiple conformations** of the same or related protein, observed in different crystal forms, when interacting with other proteins or other macromolecules, or upon binding small molecule ligands. Charting this conformational diversity across the PDB can therefore be employed to build a useful approximation of the **conformational landscape** of native proteins.\n\nA number of resources and **tools** describing and characterizing various often complementary aspects of protein **conformational diversity** in known structures have been developed, notably by groups in Europe. These tools include algorithms with varying degree of sophistication, for aligning the 3D structures of individual protein chains or domains, of protein assemblies, and evaluating their degree of **structural similarity**. Using such tools one can **align structures pairwise**, compute the corresponding **similarity matrix**, and identify ensembles of **structures/conformations** with a defined **similarity level** that tend to recur in different PDB entries, an operation typically performed using **clustering** methods. Such workflows are at the basis of resources such as **CATH, Contemplate, or PDBflex** that offer access to **conformational ensembles** comprised of similar **conformations** clustered according to various criteria. Other types of tools focus on differences between **protein conformations**, identifying regions of proteins that undergo large **collective displacements** in different PDB entries, those that act as **hinges or linkers**, or regions that are inherently **flexible**.\n\nTo build a meaningful approximation of the **conformational landscape** of native proteins, the **conformational ensembles** (and the differences between them), identified on the basis of **structural similarity/dissimilarity** measures alone, need to be **biophysically characterized**. This may be approached at **two different levels**. \n- At the **biological level**, it is important to link observed **conformational ensembles**, to their **functional roles** by evaluating the correspondence with **protein family classifications** based on sequence information and **functional annotations** in public databases e.g. Uniprot, PDKe-Knowledge Base (KB). These links should provide valuable mechanistic insights into how the **conformational and dynamic properties** of proteins are exploited by evolution to regulate their **biological function**. <br><br>\n\n- At the **physical level** one needs to introduce **energetic consideration** to evaluate the likelihood that the identified **conformational ensembles** represent **conformational states** that the protein (or domain under study) samples in isolation. Such evaluation is notoriously **challenging** and can only be roughly approximated by using **computational methods** to evaluate the extent to which the observed **conformational ensembles** can be reproduced by algorithms that simulate the **dynamic behavior** of protein systems. These algorithms include the computationally expensive **classical molecular dynamics (MD) simulations** to sample local thermal fluctuations but also faster more approximate methods such as **Elastic Network Models** and **Normal Node Analysis** (NMA) to model low energy **collective motions**. Alternatively, **enhanced sampling molecular dynamics** can be used to model complex types of **conformational changes** but at a very high computational cost. \n\nThe **ELIXIR 3D-Bioinfo Implementation Study** *Building on PDBe-KB to chart and characterize the conformation landscape of native proteins* focuses on:\n\n1. Mapping the **conformational diversity** of proteins and their homologs across the PDB. \n2. Characterize the different **flexibility properties** of protein regions, and link this information to sequence and functional annotation.\n3. Benchmark **computational methods** that can predict a biophysical description of protein motions.\n\nThis notebook is part of the third objective, where a list of **computational resources** that are able to predict **protein flexibility** and **conformational ensembles** have been collected, evaluated, and integrated in reproducible and interoperable workflows using the **BioExcel Building Blocks library**. Note that the list is not meant to be exhaustive, it is built following the expertise of the implementation study partners.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/488?version=1', 'commit': 'ab62bfd0ece2e3afcf76b45a6fc08fc9d423c792', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/488/git/1/tree', 'doi': '10.48546/workflowhub.workflow.488.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/488?version=2', 'commit': '70eb3d2d531277c64dc8aeebdaee3295286267b9', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/488/git/2/tree', 'doi': '10.48546/workflowhub.workflow.488.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T10:10:37.000Z",
    "updated_at": "2024-04-22T10:41:26.000Z",
    "doi": "10.48546/workflowhub.workflow.488.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 488,
    "text_field": "['biobb_adapters', 'README.md', 'bd_run.cwl', 'concoord_disco.cwl', 'concoord_dist.cwl', 'cpptraj_convert.cwl', 'cpptraj_mask.cwl', 'cpptraj_rms.cwl', 'dmd_run.cwl', 'extract_chain.cwl', 'extract_model.cwl', 'gmx_cluster.cwl', 'imod_imc.cwl', 'imod_imode.cwl', 'make_ndx.cwl', 'nma_run.cwl', 'nolb_nma.cwl', 'pcz_animate.cwl', 'pcz_bfactor.cwl', 'pcz_collectivity.cwl', 'pcz_evecs.cwl', 'pcz_hinges.cwl', 'pcz_info.cwl', 'pcz_stiffness.cwl', 'pcz_zip.cwl', 'prody_anm.cwl', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of generatingprotein conformational ensemblesfrom** 3D structures **and analysing itsmolecular flexibility, step by step, using theBioExcel Building Blocks library (biobb). Proteinsaredynamicsystems that adopt multipleconformational states, a property essential for manybiological processes(e.g. binding other proteins, nucleic acids, small molecule ligands, or switching between functionaly active and inactive states). Characterizing the differentconformational statesof proteins and the transitions between them is therefore critical for gaining insight into theirbiological functionand can help explain the effects of genetic variants inhealthanddiseaseand the action of drugs. Structural biologyhas become increasingly efficient in sampling the differentconformational statesof proteins. ThePDBhas currently archived more than170,000 individual structures, but over two thirds of these structures representmultiple conformationsof the same or related protein, observed in different crystal forms, when interacting with other proteins or other macromolecules, or upon binding small molecule ligands. Charting this conformational diversity across the PDB can therefore be employed to build a useful approximation of theconformational landscapeof native proteins. A number of resources andtoolsdescribing and characterizing various often complementary aspects of proteinconformational diversityin known structures have been developed, notably by groups in Europe. These tools include algorithms with varying degree of sophistication, for aligning the 3D structures of individual protein chains or domains, of protein assemblies, and evaluating their degree ofstructural similarity. Using such tools one canalign structures pairwise, compute the correspondingsimilarity matrix, and identify ensembles ofstructures/conformationswith a definedsimilarity levelthat tend to recur in different PDB entries, an operation typically performed usingclusteringmethods. Such workflows are at the basis of resources such asCATH, Contemplate, or PDBflexthat offer access toconformational ensemblescomprised of similarconformationsclustered according to various criteria. Other types of tools focus on differences betweenprotein conformations, identifying regions of proteins that undergo largecollective displacementsin different PDB entries, those that act ashinges or linkers, or regions that are inherentlyflexible. To build a meaningful approximation of theconformational landscapeof native proteins, theconformational ensembles(and the differences between them), identified on the basis ofstructural similarity/dissimilaritymeasures alone, need to bebiophysically characterized. This may be approached attwo different levels. At thebiological level, it is important to link observedconformational ensembles, to theirfunctional rolesby evaluating the correspondence withprotein family classificationsbased on sequence information andfunctional annotationsin public databases e.g. Uniprot, PDKe-Knowledge Base (KB). These links should provide valuable mechanistic insights into how theconformational and dynamic propertiesof proteins are exploited by evolution to regulate theirbiological function. At thephysical levelone needs to introduceenergetic considerationto evaluate the likelihood that the identifiedconformational ensemblesrepresentconformational statesthat the protein (or domain under study) samples in isolation. Such evaluation is notoriouslychallengingand can only be roughly approximated by usingcomputational methodsto evaluate the extent to which the observedconformational ensemblescan be reproduced by algorithms that simulate thedynamic behaviorof protein systems. These algorithms include the computationally expensiveclassical molecular dynamics (MD) simulationsto sample local thermal fluctuations but also faster more approximate methods such asElastic Network ModelsandNormal Node Analysis(NMA) to model low energycollective motions. Alternatively,enhanced sampling molecular dynamicscan be used to model complex types ofconformational changesbut at a very high computational cost. TheELIXIR 3D-Bioinfo Implementation StudyBuilding on PDBe-KB to chart and characterize the conformation landscape of native proteinsfocuses on: This notebook is part of the third objective, where a list ofcomputational resourcesthat are able to predictprotein flexibilityandconformational ensembleshave been collected, evaluated, and integrated in reproducible and interoperable workflows using theBioExcel Building Blocks library. Note that the list is not meant to be exhaustive, it is built following the expertise of the implementation study partners. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/488?version=2 DOI:10.48546/workflowhub.workflow.488.2 Updated workflow descriptors Initial commit Views:2521Downloads:463 Created: 31st May 2023 at 14:51 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 165,
    "discussion_links": [],
    "title": "Metabolome Annotation Workflow (MAW)",
    "license": "MIT",
    "description": "This repository hosts Metabolome Annotation Workflow (MAW). The workflow takes MS2 .mzML format data files as an input in R. It performs spectral database dereplication using R Package Spectra and compound database dereplication using SIRIUS OR MetFrag . Final candidate selection is done in Python using RDKit and PubChemPy.",
    "latest_version": 2,
    "tags": "['Annotation', 'Bioinformatics', 'Cheminformatics', 'FAIR workflows', 'Metabolomics', 'gnps', 'hmdb', 'identification', 'mass-spectrometry', 'massbank', 'rdkit', 'spectra', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'use docker to run MAW\\r\\n', 'url': 'https://workflowhub.eu/workflows/510?version=1', 'remote': 'https://github.com/zmahnoor14/MAW.git', 'commit': '1be2bd37215a2437f0e6f1bb5bc75aa9199193b6', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/510/git/1/tree', 'doi': '10.48546/workflowhub.workflow.510.1'}, {'version': 2, 'revision_comments': 'updated with all versions information\\r\\n', 'url': 'https://workflowhub.eu/workflows/510?version=2', 'remote': 'https://github.com/zmahnoor14/MAW.git', 'commit': '2da7fbaab0e2e4ebbff3f36d631336690fb318b0', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/510/git/2/tree', 'doi': '10.48546/workflowhub.workflow.510.2'}]",
    "version": 2,
    "revision_comments": "updated with all versions information",
    "created_at": "2023-08-01T14:21:50.000Z",
    "updated_at": "2023-08-01T14:22:09.000Z",
    "doi": "10.48546/workflowhub.workflow.510.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/423', 'family_name': 'Zulfiqar', 'given_name': 'Mahnoor', 'affiliation': 'Friedrich Schiller University', 'orcid': 'https://orcid.org/0000-0002-8330-4071'}, {'profile': '/people/70', 'family_name': 'Crusoe', 'given_name': 'Michael R.', 'affiliation': 'VU Amsterdam, ELIXIR', 'orcid': 'https://orcid.org/0000-0002-2961-9670'}, {'profile': '/people/469', 'family_name': 'Gadelha', 'given_name': 'Luiz', 'affiliation': 'German Cancer Research Center (DKFZ)', 'orcid': 'https://orcid.org/0000-0002-8122-9522'}, {'profile': None, 'family_name': 'Steinbeck', 'given_name': 'Christoph ', 'affiliation': 'Friedrich Schiller University Jena', 'orcid': 'https://orcid.org/0000-0001-6966-0814'}, {'profile': None, 'family_name': 'Sorokina', 'given_name': 'Maria', 'affiliation': 'Data Science and Artificial Intelligence, Research and Development, Bayer Pharmaceuticals, 13353, Berlin, Germany', 'orcid': 'https://orcid.org/0000-0001-9359-7149'}, {'profile': None, 'family_name': 'Peters', 'given_name': 'Kristian', 'affiliation': 'Leibniz Institute of Plant Biochemistry, 06120 Halle, Germany', 'orcid': 'https://orcid.org/0000-0002-4321-0257'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'python_script', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': {'class': 'File', 'path': 'Workflow_Python_Script_all.py'}}, {'id': 'r_script', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': {'class': 'File', 'path': 'Workflow_R_Script_all.r'}}, {'id': 'mzml_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'gnps_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'hmdb_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'mbank_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ppmx', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'collision_info', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'db_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'db_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'candidate_files', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'array', 'items': [{'type': 'File'}]}]}], 'source_ids': ['analysis/candidate_files']}, {'id': 'result', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['analysis/result']}], 'steps': [{'id': 'analysis', 'name': None, 'description': None, 'sink_ids': ['analysis/candidate_files', 'analysis/result']}], 'links': [{'id': 'python_script', 'source_id': 'python_script', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'r_script', 'source_id': 'r_script', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'mzml_file', 'source_id': 'mzml_files', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'gnps_file', 'source_id': 'gnps_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'hmdb_file', 'source_id': 'hmdb_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'mbank_file', 'source_id': 'mbank_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'ppmx', 'source_id': 'ppmx', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'collision_info', 'source_id': 'collision_info', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'db_name', 'source_id': 'db_name', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'db_path', 'source_id': 'db_path', 'sink_id': 'analysis', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 510,
    "text_field": "['Docker', 'MetFrag', 'SIRIUS5', 'Notebooks', 'Python_notebook', 'R_notebook', 'Python', 'Modules_Python', 'docs', '_static', 'R', 'Modules_R', 'cwl', 'provenance', 'maw-run-1-crate-trunc', '2ee9c8bd964a97bbbdfbc57aef497099d1ec2fef', '22a868547e58910de90da963c68f306292a7aac5', '0dbab83bd089e8f41337052cf3e7fcc538021eb7', '26052de672fdad2bd7c86015405eb721e6958ded', '317f7451c1ea9352659d49ebb4757a11c43ad09a', '6428564c3cc58b7a7f057aa9ce42b4093dee8d8d', '3a7247b565022eeba30738686800e0ddaac06d1f', 'f6da6c22f5c2b774ed499bf7c74d41a132a1be34', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '74d5450707676b379d911aeec24bc197811c77ac', '5db9c60f33e14ef5a65bc8733901075ec6219a2f', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '74d5450707676b379d911aeec24bc197811c77ac', 'a7da6c55b37c9f6c534373381d01fb90c95ef1bc', 'f6da6c22f5c2b774ed499bf7c74d41a132a1be34', 'f711b31215d02862c30dbd17b8c728044fa71228', 'b1b64b86d8823ac45ca249d5902e409a11527434', '843fa858eabfbc56c5957dd4ac76bb8467275033', 'c055ec61f0a96c4ffec7044103ed24716f11bd77', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '89e1b1edf3073d927fa409ba432725b70364b153', 'bf3b41b500db42a4cdd9f2ee25b276a79e4c78d3', '2a4579893026330d112f5351b356e27213b0ac94', '4fa4a5b5d07bf5e685d6377d6208a3f1608d32a4', '54df04a75ba6f5f7650f9edf4fae3246f24924e2', 'b433b663fecc0e8a8dd10e1e9596cdae71af6c3c', 'baf6ab125b7c2a162b5c9851c96c06194bed6b79', 'c367eb63a482ecf6eea1b45c588e5064cda9ad90', 'da321835c55943b391091e99d7ab024e92bb4d5e', '.gitignore', 'CITATION.cff', 'Dockerfile', 'Workflow_Python_Script_all_MetFrag.py', 'Workflow_R_Script_all_MetFrag.r', 'Run_Sirius.r', 'Workflow_Python_Script_all_SIRIUS.py', 'Workflow_R_Script_all_SIRIUS.r', 'Workflow_Python_Script_all_docker.py', 'Workflow_R_Script_all_MetFrag.r', 'MAW_functions.md', 'Workflow_Python_Functions.ipynb', 'Workflow_Python_Script.ipynb', 'Workflow_R_Functions.ipynb', 'Workflow_R_Script.ipynb', 'Dockerfile', 'MAW-PY_SList.ipynb', 'MN.ipynb', 'SMILESscreening.py', 'checkSMILES_validity.py', 'classification.py', 'combineSM.py', 'combine_CuratedR.py', 'combine_allspec.py', 'combine_insilico.py', 'combine_specdb.py', 'metfrag_curation.py', 'metfrag_postproc.py', 'scoring_spec.py', 'sirius_curation.py', 'sirius_postProc2.py', 'slist_metfrag.py', 'slist_sirius.py', 'specDB_Curation.py', 'spec_postproc.py', 'suspectListScreening.py', 'SMILES_Postprocess.ipynb', 'Workflow_Python_Functions.py', 'Workflow_Python_Script.py', 'Makefile', 'SMILESscreening.rst', 'MAW.png', 'checkSMILES_validity.rst', 'classification.rst', 'combineSM.rst', 'combine_CuratedR.rst', 'combine_allspec.rst', 'combine_insilico.rst', 'combine_specdb.rst', 'conf.py', 'demo_cache_pybatch.sqlite', 'index.rst', 'make.bat', 'metfrag_curation.rst', 'metfrag_postproc.rst', 'modules.rst', 'scoring_spec.rst', 'sirius_curation.rst', 'sirius_postProc2.rst', 'slist_metfrag.rst', 'slist_sirius.rst', 'specDB_Curation.rst', 'spec_postproc.rst', 'suspectListScreening.rst', 'requirements.txt', 'sirius_sl.ipynb', 'Dockerfile', 'Example_Tyrosine.mzML', 'cam_func.r', 'cam_funcMode.r', 'download_specDB.r', 'exampleCWL.ipynb', 'exampleCWL.r', 'merge_qc.r', 'metfrag_param.r', 'ms1_peaks.r', 'ms2_peaks.r', 'ms2_rfilename.ipynb', 'ms2_rfilename.r', 'run_metfrag.r', 'run_sirius.r', 'sirius_param.r', 'sirius_postprocess.r', 'spec_Processing.ipynb', 'spec_Processing.r', 'spec_dereplication.r', 'Workflow_R_Functions.r', 'Workflow_R_Script.r', 'install_packages.R', 'install_packages_devtools.R', 'README.md', 'Example_Tyrosine.mzML', 'README_cwl.md', 'Run_MetFrag.r', 'Run_Sirius.r', 'Workflow_Python_Script_all.py', 'Workflow_Python_Script_all_SIRIUS.py', 'Workflow_R_Script_all.r', 'example_output.json', 'maw-inputs-mutiple_ara.yaml', 'maw-metfrag-param.cwl', 'maw-metfrag.cwl', 'maw-py.cwl', 'maw-r.cwl', 'maw-sirius.cwl', 'maw.cwl', 'maw_inputs.yaml', 'maw_r_old.cwl', 'maw_single.cwl', 'mawr_slurm.sh', 'provenance_config.yaml', 'sirius-new.cwl', 'summary.py', 'template_maw.yaml', 'README.md', '173275ea0ffb1261ea721992334fcc28f3658dbd', '20b40ff2624a56b681d03737e2cfea7ed545726b', '6755bf86903f41988995893b036bb94676f492cb', '4dd46dd5a42269feb7cf82d2dc01606c0f333d8e', 'd711cf7a1a3f548a8a1ca8d62a37900d466073da', '316df4fca6e66be3910790c1b68b27883ec36de2', '0ac77dc45fdfd9d442989b330e6ef2e4ae828c87', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '5e02499f715f3e970c3dc14fe25bb7eebd9e8e7a', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'fb1412b65be97d3a6ae264b2fc616f6513af05d5', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '092f456b600148981938377202cce31c4e7dd734', '896081109a12f20863c06376260ede8803b89055', 'b176cb9720b357d6885c00670760328163a6a965', 'cbfbd133030a0ff1c1a42fc3618bebdff4db39cf', 'd41b00c2073d86c4ef48de33422810b81e272fa8', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '173275ea0ffb1261ea721992334fcc28f3658dbd', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', 'b176cb9720b357d6885c00670760328163a6a965', '20b40ff2624a56b681d03737e2cfea7ed545726b', 'd711cf7a1a3f548a8a1ca8d62a37900d466073da', 'f345f093209f54c0bee0e4dc7bb8514920960863', '6e2086f2b5b889ee7d27f7d5b65b4619c24e87b6', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '1ab41355bfe5dfe64ea86444cbe704379dcf6eeb', '24bafa390af1f63e2409aee3629a0961dcda21b3', '4696f3a6f30bdce9475997f35fb1ae5b126d9765', '528c66f445917f7945f116924b91af0a5aeff814', '7970f54175730829f64233638b9dd09d69df2636', 'afc5794875d9d40525ef2589f1c60b8ad5fb82c9', '19828e64dd913dda0f6cf4e84ad50124939a513d', '1aa2c73c686d318d1464f5fcf1e36896c6fd0618', '50ae172a6da553e1c724e5159ae39fc3ad437321', '68adca59aa95cd781b2f88c62dbabf601fd3c851', '7134df14f5dd3b9bea9a8d94cbeba91008e12d35', '722685d2c8b17e080ed9318bc349c9ce336c3e8c', '80ddd3d2dea1a79e41413af70a7416ddde933953', '959b71b1b3391522c75deecb9061457465856790', 'a65b40000151f78f37f6bc71afb824307b788cdb', 'ae14416d359fe88b6cb12d2a2549bb22a05a7f16', 'cf94802d858a81cac066b4a3b5871c32c94904f8', '3c04b3942086354710ec77df9226969699dc3ae6', '0744d3def51a7d04d9e110280612da380725c960', '10987fa25c3c59386b32e6fbbe24a3d8c1a1a752', 'a2693cdffb32ca2c8b5ca0b61165c41eb22e4ca3', '7bf6b1b2bc1faa4aefd10fae00db4a4fe5e53ab0', 'b7a1342433f51a7b8952d819e2d6912a743329f8', '00441472f4fc6d8b7261a71e370fe55cce509a56', '0e1a20ec563a0286823a71570d46893f8186bb3d', '4efe618bb35b21cc8e4aeb99f24ccc5a1a85b855', '6cf21f132f6a00f9240606b964b69c02065b76fc', 'ad0e019e5592773b4eea27cacaf05db7ee8256b1', 'd2e1f9e14bc69e867cff0a2d6b7d0cd2497c874a', 'd77f45a0658bafb413efe4490805ed4baac99db4', 'dbc75c9e2e449c05038a5bacb3acff95f37f65a4', 'de2592e9625981ee1bf3d7e33be9685aa574f27f', 'e09e533495e416f0735b19761655edede64eec4c', 'f63c33970d3576890cae2f41e8077e85b930de9d', '65631abc7dfb2a2f4cf2cafdf5b1bcf855ed6810', '7f210f6500d84aa5b00c18564570fd2069927473', '068d29d4e2f20f1a0ba351897d92e869c653c98e', '12a1c1b1672499bea2393e7ab14beb2e0fd53c98', '38097f8a0df2fd6097b7c77bfee5c5f43da0a4db', '4e0e02031026e486d9d0e3681fe93faf7a5b0a54', '51c02e50604994697a4f208e115072227b0b3e09', '52ea11f50008899ebe3057a1c701a8c2be94d0a7', '92aa9257ab13164838677f8065b094cc92d83181', '9d374657c62a3d0c0094907a12caf8e963b2384e', 'db75a8a8541cfbacf3a29f93071701de791585df', 'dc37f6698ef815d517eee1e5c3d7039cb41e1686', 'ea50134a7e3da56f911a06dfd00c76e53f7b8aad', 'e4031fb93576780177808c215e7bc7bb8403cc4c', 'fd7234709f7066c39992a9e987edd0966d54ba6f', 'da9e6944845c4d273f37464e2a2c021c95ce0b91', 'dc2090fb573210c53d263aae26b934a88ea142d7', 'ed75361928b2a04aac7162e2ae0ee5ca4eb12825', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', 'd3e8f203e88cc6750fb3bb04d772934de404f930', 'd406d999f4b0b07581ea028d3ae8c21167ca0724', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'packed.cwl', 'ro-crate-metadata.json']",
    "raw_text_content": "",
    "p_tag_content": "This repository hosts Metabolome Annotation Workflow (MAW). The workflow takes MS2 .mzML format data files as an input in R. It performs spectral database dereplication using R Package Spectra and compound database dereplication using SIRIUS OR MetFrag . Final candidate selection is done in Python using RDKit and PubChemPy. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/510?version=2 DOI:10.48546/workflowhub.workflow.510.2 updated with all versions information use docker to run MAW Views:2428Downloads:312 Created: 19th Jun 2023 at 21:09 Last updated: 1st Aug 2023 at 15:21 None Teams:COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,Common Workflow Language (CWL) community,MGnify,Metabolomics-Reproducibility Organizations:VU Amsterdam,ELIXIR Teams:Metabolomics-Reproducibility Organizations:German Cancer Research Center (DKFZ) Teams:Metabolomics-Reproducibility Organizations:Friedrich Schiller University A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified In the age of high-throughput data, computational workflows have made data processing tasks flexible, manageable, and automated. To administer different computational activities in a workflow, different workflow management systems (WMS) are used that necessitate a sophisticated level of standardisation. Standardisation and reproducibility can be achieved by using standard formats for specifying workflows, such as Common Workflow Language (CWL), and provenance gathering with the standard W3C PROV\n... Creator:Mahnoor Zulfiqar Submitter:Mahnoor Zulfiqar"
  },
  {
    "": 177,
    "discussion_links": [],
    "title": "CWL-based RNA-Seq workflow",
    "license": "MIT",
    "description": "A CWL-based pipeline for processing RNA-Seq data (FASTQ format) and performing differential gene/transcript expression analysis. \n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n- A table of metadata (``mrna_cll_subsets_phenotypes.csv``), based on the same validation analysis, to serve as an input example for the design of comparisons during differential expression analysis\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. (Optional)  custom processing of the reads using FASTA/Q Trimmer (part of the FASTX-toolkit) \n4. Mapping to reference genome (HISAT2)\n5. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n6. Sorting mapped reads based on chromosomal coordinates (samtools)\n\nSubsequently, two independent workflows are implemented for differential expression analysis at the transcript and gene level. \n\n**First**, following the [reference protocol](https://doi.org/10.1038/nprot.2016.095) for HISAT, StringTie and Ballgown transcript expression analysis, StringTie along with a reference transcript annotation GTF (Gene Transfer Format) file (if one is available) is used to:\n\n- Assemble transcripts for each RNA-Seq sample using the previous read alignments (BAM files)\n- Generate a global, non-redundant set of transcripts observed in any of the RNA-Seq samples\n- Estimate transcript abundances and generate read coverage tables for each RNA-Seq sample, based on the global, merged set of transcripts (rather than the reference) which is observed across all samples\n\nBallgown program is then used to load the coverage tables generated in the previous step and perform statistical analyses for differential expression at the transcript level. Notably, the StringTie - Ballgown protocol applied here was selected to include potentially novel transcripts in the analysis. \n\n**Second**, featureCounts is used to count reads that are mapped to selected genomic features, in this case genes by default, and generate a table of read counts per gene and sample. This table is passed as input to DESeq2 to perform differential expression analysis at the gene level. Both Ballgown and DESeq2 R scripts, along with their respective CWL wrappers, were designed to receive as input various parameters, such as experimental design, contrasts of interest, numeric thresholds, and hidden batch effects.",
    "latest_version": 1,
    "tags": "['CWL', 'RNASEQ', 'Transcriptomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/524?version=1', 'commit': 'a80a6c7a268fd71886a255fc45afa882d80bda0c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/524/git/1/tree', 'doi': '10.48546/workflowhub.workflow.524.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T08:44:44.000Z",
    "updated_at": "2023-07-05T09:16:36.000Z",
    "doi": "10.48546/workflowhub.workflow.524.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'RNA-Seq analysis', 'identifier': 'http://edamontology.org/operation_3680'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "{'inputs': [{'id': 'raw_files_directory', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'input_file_split', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': '_R'}, {'id': 'input_file_split_fwd_single', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': 'R1'}, {'id': 'input_file_split_rev', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': 'R2'}, {'id': 'input_qc_check', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'input_trimming_check', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'premapping_input_check', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'tg_quality', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'tg_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'tg_compression', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'tg_do_not_compress', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'tg_trim_suffix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'tg_strigency', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'fastx_first_base_to_keep', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'fastx_last_base_to_keep', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'hisat2_num_of_threads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'hisat2_alignments_tailored_trans_assemb', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'hisat2_idx_directory', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'hisat2_idx_basename', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hisat2_known_splicesite_infile', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'samtools_view_isbam', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'samtools_view_collapsecigar', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_uncompressed', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_fastcompression', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_samheader', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_count', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_readswithoutbits', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_readsingroup', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_view_readtagtostrip', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'samtools_view_readsquality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_readswithbits', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_cigar', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_iscram', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_randomseed', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'samtools_view_region', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_view_readsinlibrary', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_sort_compression_level', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_sort_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_sort_memory', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_sort_sort_by_name', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'stringtie_guide_gff', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'stringtie_transcript_merge_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_out_gtf', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'stringtie_expression_estimation_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_ballgown_table_files', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_cpus', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'stringtie_verbose', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'stringtie_min_isoform_abundance', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_junction_coverage', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_min_read_coverage', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_conservative_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'bg_phenotype_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bg_phenotype', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bg_samples', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bg_timecourse', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bg_feature', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_measure', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_confounders', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_custom_model', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bg_mod', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_mod0', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'featureCounts_number_of_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': 16}, {'id': 'featureCounts_annotation_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'featureCounts_output_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'featureCounts_read_meta_feature_overlap', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_metadata', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'deseq2_design', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'deseq2_samples', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'deseq2_min_sum_of_reads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_reference_level', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_phenotype', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_contrast', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_numerator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_denominator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_lfcThreshold', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'deseq2_pAdjustMethod', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_alpha', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'deseq2_parallelization', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_cores', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_transformation', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_blind', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_hypothesis', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_reduced', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_effects', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_row_means', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_method', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_variables', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'o_trim_galore_single_fq', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_single/trim_galore']}, {'id': 'o_trim_galore_single_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_single/trim_galore_report']}, {'id': 'o_trim_galore_paired_fq', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_paired/trim_galore']}, {'id': 'o_trim_galore_paired_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_paired/trim_galore_report']}, {'id': 'o_fastqc_raw_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_raw_html/renamed_file']}, {'id': 'o_fastqc_single_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_single_html/renamed_file']}, {'id': 'o_fastqc_paired_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_paired_html/renamed_file']}, {'id': 'o_fastqc_raw_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_raw_zip/output_dir']}, {'id': 'o_fastqc_single_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_single_zip/output_dir']}, {'id': 'o_fastqc_paired_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_paired_zip/output_dir']}, {'id': 'o_fastx_trimmer_single', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fastx_trimmer_single/output']}, {'id': 'o_fastx_trimmer_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fastx_trimmer_paired/output']}, {'id': 'o_hisat2_for_single_reads_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['hisat2_for_single_reads/output_stderr']}, {'id': 'o_hisat2_for_paired_reads_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['hisat2_for_paired_reads/output_stderr']}, {'id': 'o_collect_hisat2_sam_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['collect_hisat2_sam_files/total_sam_files']}, {'id': 'o_samtools_view', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_view/output']}, {'id': 'o_samtools_sort', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_sort/sorted']}, {'id': 'o_stringtie_transcript_assembly_gtf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['stringtie_transcript_assembly/output_gtf']}, {'id': 'o_stringtie_merge', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['stringtie_merge/output_gtf']}, {'id': 'o_stringtie_expression_gtf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['stringtie_expression/output_gtf']}, {'id': 'o_stringtie_expression_outdir', 'name': None, 'description': None, 'type': [{'type': 'Directory[]'}], 'source_ids': ['stringtie_expression/outdir']}, {'id': 'o_ballgown_de_results', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['ballgown_de/ballgown_de_results']}, {'id': 'o_ballgown_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['ballgown_de/ballgown_object']}, {'id': 'o_ballgown_de_custom_model', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['ballgown_de/ballgown_de_custom_model']}, {'id': 'o_featureCounts', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['featureCounts/output']}, {'id': 'o_deseq2_de_results', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_de_results']}, {'id': 'o_deseq2_dds_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_dds_object']}, {'id': 'o_deseq2_res_lfcShrink_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_res_lfcShrink_object']}, {'id': 'o_deseq2_transformed_object', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['DESeq2_analysis/deseq2_transformed_object']}], 'steps': [{'id': 'get_raw_files', 'name': None, 'description': None, 'sink_ids': ['get_raw_files/raw_files']}, {'id': 'split_single_paired', 'name': None, 'description': None, 'sink_ids': ['split_single_paired/single_files', 'split_single_paired/paired_files', 'split_single_paired/trim_galore_for_single', 'split_single_paired/trim_galore_for_paired', 'split_single_paired/fastqc_for_raw', 'split_single_paired/fastqc_for_single', 'split_single_paired/fastqc_for_paired', 'split_single_paired/cp_command_raw', 'split_single_paired/cp_command_single', 'split_single_paired/cp_command_paired', 'split_single_paired/fastx_command_single', 'split_single_paired/fastx_command_paired']}, {'id': 'trim_galore_single', 'name': None, 'description': None, 'sink_ids': ['trim_galore_single/trim_galore', 'trim_galore_single/trim_galore_report']}, {'id': 'trim_galore_paired', 'name': None, 'description': None, 'sink_ids': ['trim_galore_paired/trim_galore', 'trim_galore_paired/trim_galore_report']}, {'id': 'fastqc_raw', 'name': None, 'description': None, 'sink_ids': ['fastqc_raw/html_file', 'fastqc_raw/zipped_file']}, {'id': 'fastqc_single_trimmed', 'name': None, 'description': None, 'sink_ids': ['fastqc_single_trimmed/html_file', 'fastqc_single_trimmed/zipped_file']}, {'id': 'fastqc_paired_trimmed', 'name': None, 'description': None, 'sink_ids': ['fastqc_paired_trimmed/html_file', 'fastqc_paired_trimmed/zipped_file']}, {'id': 'cp_fastqc_raw_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_raw_zip/output_dir']}, {'id': 'cp_fastqc_single_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_single_zip/output_dir']}, {'id': 'cp_fastqc_paired_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_paired_zip/output_dir']}, {'id': 'rename_fastqc_raw_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_raw_html/renamed_file']}, {'id': 'rename_fastqc_single_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_single_html/renamed_file']}, {'id': 'rename_fastqc_paired_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_paired_html/renamed_file']}, {'id': 'fastx_trimmer_single', 'name': None, 'description': None, 'sink_ids': ['fastx_trimmer_single/output']}, {'id': 'fastx_trimmer_paired', 'name': None, 'description': None, 'sink_ids': ['fastx_trimmer_paired/output']}, {'id': 'check_for_fastx_and_produce_names', 'name': None, 'description': None, 'sink_ids': ['check_for_fastx_and_produce_names/single_trim', 'check_for_fastx_and_produce_names/single_hisat2_sam', 'check_for_fastx_and_produce_names/paired_trim_1', 'check_for_fastx_and_produce_names/paired_trim_2', 'check_for_fastx_and_produce_names/paired_hisat2_sam']}, {'id': 'hisat2_for_single_reads', 'name': None, 'description': None, 'sink_ids': ['hisat2_for_single_reads/output', 'hisat2_for_single_reads/output_stderr']}, {'id': 'hisat2_for_paired_reads', 'name': None, 'description': None, 'sink_ids': ['hisat2_for_paired_reads/output', 'hisat2_for_paired_reads/output_stderr']}, {'id': 'collect_hisat2_sam_files', 'name': None, 'description': None, 'sink_ids': ['collect_hisat2_sam_files/total_sam_files']}, {'id': 'samtools_view', 'name': None, 'description': None, 'sink_ids': ['samtools_view/output']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/sorted']}, {'id': 'stringtie_transcript_assembly', 'name': None, 'description': None, 'sink_ids': ['stringtie_transcript_assembly/output_gtf']}, {'id': 'stringtie_merge', 'name': None, 'description': None, 'sink_ids': ['stringtie_merge/output_gtf']}, {'id': 'stringtie_expression', 'name': None, 'description': None, 'sink_ids': ['stringtie_expression/output_gtf', 'stringtie_expression/outdir']}, {'id': 'ballgown_de', 'name': None, 'description': None, 'sink_ids': ['ballgown_de/ballgown_de_results', 'ballgown_de/ballgown_object', 'ballgown_de/ballgown_de_custom_model']}, {'id': 'featureCounts', 'name': None, 'description': None, 'sink_ids': ['featureCounts/output']}, {'id': 'DESeq2_analysis', 'name': None, 'description': None, 'sink_ids': ['DESeq2_analysis/deseq2_de_results', 'DESeq2_analysis/deseq2_dds_object', 'DESeq2_analysis/deseq2_res_lfcShrink_object', 'DESeq2_analysis/deseq2_transformed_object']}], 'links': [{'id': 'DIRECTORY', 'source_id': 'raw_files_directory', 'sink_id': 'get_raw_files', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'get_raw_files/raw_files', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split', 'source_id': 'input_file_split', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split_fwd_single', 'source_id': 'input_file_split_fwd_single', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split_rev', 'source_id': 'input_file_split_rev', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'qc_check', 'source_id': 'input_qc_check', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'trimming_check', 'source_id': 'input_trimming_check', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/trim_galore_for_single', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'fq_files', 'source_id': 'split_single_paired/single_files', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': 'tg_length', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'quality', 'source_id': 'tg_quality', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'compression', 'source_id': 'tg_compression', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'do_not_compress', 'source_id': 'tg_do_not_compress', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'trim_suffix', 'source_id': 'tg_trim_suffix', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'strigency', 'source_id': 'tg_strigency', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': None, 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/trim_galore_for_paired', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'fq_files', 'source_id': 'split_single_paired/paired_files', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': 'tg_length', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'quality', 'source_id': 'tg_quality', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'compression', 'source_id': 'tg_compression', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'do_not_compress', 'source_id': 'tg_do_not_compress', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'trim_suffix', 'source_id': 'tg_trim_suffix', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'strigency', 'source_id': 'tg_strigency', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': None, 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_raw', 'sink_id': 'fastqc_raw', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'get_raw_files/raw_files', 'sink_id': 'fastqc_raw', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_single', 'sink_id': 'fastqc_single_trimmed', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'fastqc_single_trimmed', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_paired', 'sink_id': 'fastqc_paired_trimmed', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'fastqc_paired_trimmed', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_raw', 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_raw/zipped_file', 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_single', 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_single_trimmed/zipped_file', 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_paired', 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_paired_trimmed/zipped_file', 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_raw/html_file', 'sink_id': 'rename_fastqc_raw_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_raw_html', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_single_trimmed/html_file', 'sink_id': 'rename_fastqc_single_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_single_html', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_paired_trimmed/html_file', 'sink_id': 'rename_fastqc_paired_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_paired_html', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastx_command_single', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'first_base_to_keep', 'source_id': 'fastx_first_base_to_keep', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'last_base_to_keep', 'source_id': 'fastx_last_base_to_keep', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastx_command_paired', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'first_base_to_keep', 'source_id': 'fastx_first_base_to_keep', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'last_base_to_keep', 'source_id': 'fastx_last_base_to_keep', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'input_check', 'source_id': 'premapping_input_check', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'single_files', 'source_id': 'split_single_paired/single_files', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'paired_files', 'source_id': 'split_single_paired/paired_files', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'trim_galore_single', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'trim_galore_paired', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'fastx_trimmer_single', 'source_id': 'fastx_trimmer_single/output', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'fastx_trimmer_paired', 'source_id': 'fastx_trimmer_paired/output', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split', 'source_id': 'input_file_split', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split_fwd_single', 'source_id': 'input_file_split_fwd_single', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split_rev', 'source_id': 'input_file_split_rev', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'num_of_threads', 'source_id': 'hisat2_num_of_threads', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'alignments_tailored_trans_assemb', 'source_id': 'hisat2_alignments_tailored_trans_assemb', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'idx_directory', 'source_id': 'hisat2_idx_directory', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'idx_basename', 'source_id': 'hisat2_idx_basename', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'files_with_unpaired_reads', 'source_id': 'check_for_fastx_and_produce_names/single_trim', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'SAM_output', 'source_id': 'check_for_fastx_and_produce_names/single_hisat2_sam', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'num_of_threads', 'source_id': 'hisat2_num_of_threads', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'known_splicesite_infile', 'source_id': 'hisat2_known_splicesite_infile', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'alignments_tailored_trans_assemb', 'source_id': 'hisat2_alignments_tailored_trans_assemb', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'idx_directory', 'source_id': 'hisat2_idx_directory', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'idx_basename', 'source_id': 'hisat2_idx_basename', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'files_with_first_mates', 'source_id': 'check_for_fastx_and_produce_names/paired_trim_1', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'files_with_second_mates', 'source_id': 'check_for_fastx_and_produce_names/paired_trim_2', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'SAM_output', 'source_id': 'check_for_fastx_and_produce_names/paired_hisat2_sam', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'single_files', 'source_id': 'hisat2_for_single_reads/output', 'sink_id': 'collect_hisat2_sam_files', 'name': None, 'default_value': None}, {'id': 'paired_files', 'source_id': 'hisat2_for_paired_reads/output', 'sink_id': 'collect_hisat2_sam_files', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'collect_hisat2_sam_files/total_sam_files', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'output_name', 'source_id': None, 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'samtools_view_threads', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'isbam', 'source_id': 'samtools_view_isbam', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'collapsecigar', 'source_id': 'samtools_view_collapsecigar', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'uncompressed', 'source_id': 'samtools_view_uncompressed', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'fastcompression', 'source_id': 'samtools_view_fastcompression', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'samheader', 'source_id': 'samtools_view_samheader', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'samtools_view_count', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readswithoutbits', 'source_id': 'samtools_view_readswithoutbits', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readsingroup', 'source_id': 'samtools_view_readsingroup', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readtagtostrip', 'source_id': 'samtools_view_readtagtostrip', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readsquality', 'source_id': 'samtools_view_readsquality', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readswithbits', 'source_id': 'samtools_view_readswithbits', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'cigar', 'source_id': 'samtools_view_cigar', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'iscram', 'source_id': 'samtools_view_iscram', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'randomseed', 'source_id': 'samtools_view_randomseed', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'region', 'source_id': 'samtools_view_region', 'sink_id': 'samtools_view', 'name': None, 'default_va",
    "tools": [],
    "id": 524,
    "text_field": "['RNA-Seq_workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\ninputs:\n    ### Directory with fastq(.gz) input files ###\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: false\n    input_trimming_check:\n        type: boolean?\n        default: false\n    premapping_input_check: \n        type: string\n    ### Trim galore ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_trim_suffix: string\n    tg_strigency: int\n    ### FASTA/Q Trimmer ###\n    fastx_first_base_to_keep:\n        type: int?\n    fastx_last_base_to_keep:\n        type: int?\n    ### HISAT2 - mapping ###\n    hisat2_num_of_threads:\n        type: int\n    hisat2_alignments_tailored_trans_assemb:\n        type: boolean\n    hisat2_idx_directory:\n        type: Directory\n    hisat2_idx_basename:\n        type: string\n    hisat2_known_splicesite_infile:\n        type: File?\n    ### samtools view ###\n    samtools_view_isbam:\n        type: boolean\n        default: true\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readswithoutbits: \n        type: int?\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?\n    ### samtools sort ###\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n    samtools_sort_memory:\n        type: string?\n    samtools_sort_sort_by_name:\n        type: boolean?\n        default: false\n    ### Stringtie assembly of RNA-Seq alignments to transcripts ###\n    stringtie_guide_gff:\n        type: File\n    stringtie_transcript_merge_mode:\n        type: boolean\n    stringtie_out_gtf:\n        type: string\n    stringtie_expression_estimation_mode:\n        type: boolean\n    stringtie_ballgown_table_files:\n        type: boolean\n    stringtie_cpus:\n        type: int?\n    stringtie_verbose:\n        type: boolean?\n        default: true\n    stringtie_min_isoform_abundance:\n        type: float?\n    stringtie_junction_coverage:\n        type: float?\n    stringtie_min_read_coverage:\n        type: float?\n    stringtie_conservative_mode:\n        default: false\n        type: boolean?\n    ### Ballgown - differential transcript expression analysis ###\n    bg_phenotype_file:\n        type: File\n    bg_phenotype: \n        type: string\n    bg_samples:\n        type: string\n    bg_timecourse:\n        type: boolean?\n    bg_feature:\n        type: string?\n    bg_measure:\n        type: string?\n    bg_confounders:\n        type: string?\n    bg_custom_model:\n        type: boolean?\n    bg_mod: \n        type: string?\n    bg_mod0:\n        type: string?\n    ### featureCounts - counting reads ###\n    featureCounts_number_of_threads:\n        type: int?\n        default: 16\n    featureCounts_annotation_file:\n        type: File\n    featureCounts_output_file:\n        type: string\n    featureCounts_read_meta_feature_overlap:\n        type: boolean?\n    ### DESeq2 - differential gene expression analysis ###\n    deseq2_metadata: \n        type: File\n    deseq2_design:\n        type: string\n    deseq2_samples:\n        type: string\n    deseq2_min_sum_of_reads:\n        type: int?\n    deseq2_reference_level:\n        type: string?\n    deseq2_phenotype:\n        type: string?\n    deseq2_contrast: \n        type: boolean?\n    deseq2_numerator: \n        type: string?\n    deseq2_denominator:\n        type: string?\n    deseq2_lfcThreshold:\n        type: float?\n    deseq2_pAdjustMethod:\n        type: string?\n    deseq2_alpha:\n        type: float?\n    deseq2_parallelization:\n        type: boolean?\n    deseq2_cores:\n        type: int?\n    deseq2_transformation:\n        type: string?\n    deseq2_blind:\n        type: boolean?\n    deseq2_hypothesis:\n        type: string?\n    deseq2_reduced:\n        type: string?\n    deseq2_hidden_batch_effects:\n        type: boolean?\n    deseq2_hidden_batch_row_means:\n        type: int?\n    deseq2_hidden_batch_method:\n        type: string?\n    deseq2_variables:\n        type: int?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir \n    ### FASTA/Q Trimmer outputs ###\n    o_fastx_trimmer_single:\n        type: File[]\n        outputSource: fastx_trimmer_single/output\n    o_fastx_trimmer_paired:\n        type: File[]\n        outputSource: fastx_trimmer_paired/output\n    ### HISAT2 outputs ###\n    o_hisat2_for_single_reads_reports:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output_stderr\n    o_hisat2_for_paired_reads_reports:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output_stderr\n    o_collect_hisat2_sam_files:\n        type: File[]\n        outputSource: collect_hisat2_sam_files/total_sam_files\n    ### Samtools outputs ###\n    o_samtools_view:\n        type: File[]\n        outputSource: samtools_view/output  \n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    ### Stringtie outputs ###\n    o_stringtie_transcript_assembly_gtf:\n        type: File[]\n        outputSource: stringtie_transcript_assembly/output_gtf\n    o_stringtie_merge:\n        type: File\n        outputSource: stringtie_merge/output_gtf\n    o_stringtie_expression_gtf:\n        type: File[]\n        outputSource: stringtie_expression/output_gtf\n    o_stringtie_expression_outdir:\n        type: Directory[]\n        outputSource: stringtie_expression/outdir\n    ### Ballgown outputs ###\n    o_ballgown_de_results:\n        type: File\n        outputSource: ballgown_de/ballgown_de_results\n    o_ballgown_object:\n        type: File\n        outputSource: ballgown_de/ballgown_object\n    o_ballgown_de_custom_model:\n        type: File?\n        outputSource: ballgown_de/ballgown_de_custom_model\n    ### featureCounts outputs ###\n    o_featureCounts:\n        type: File\n        outputSource: featureCounts/output\n    ### DESeq2 outputs ###\n    o_deseq2_de_results:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_de_results\n    o_deseq2_dds_object:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_dds_object\n    o_deseq2_res_lfcShrink_object:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_res_lfcShrink_object\n    o_deseq2_transformed_object:\n        type: File?\n        outputSource: DESeq2_analysis/deseq2_transformed_object\n\nsteps:\n    ### Retrieve FASTQ files from target directory (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired.cwl\n        in:\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n            - fastx_command_single\n            - fastx_command_paired\n    ### Trim_galore - FASTQ file trimming ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC - FASTQ file quality control ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    ### FASTA/Q Trimmer - optional read processing ###\n    fastx_trimmer_single:\n        run: ../wrappers/fastx-trimmer.cwl\n        scatter:\n        - input_file\n        in: \n            command: split_single_paired/fastx_command_single\n            first_base_to_keep: fastx_first_base_to_keep\n            last_base_to_keep: fastx_last_base_to_keep\n            input_file: trim_galore_single/trim_galore \n        out: \n            - output\n    fastx_trimmer_paired:\n        run: ../wrappers/fastx-trimmer.cwl\n        scatter:\n        - input_file\n        in: \n            command: split_single_paired/fastx_command_paired\n            first_base_to_keep: fastx_first_base_to_keep\n            last_base_to_keep: fastx_last_base_to_keep\n            input_file: trim_galore_paired/trim_galore\n        out: \n            - output\n    ### Check inputs from selected steps and output file names for the next steps (ExpressionTool) ###\n    check_for_fastx_and_produce_names:\n        run: ../wrappers/check-selected-steps.cwl\n        in: \n            input_check: premapping_input_check\n            single_files: split_single_paired/single_files\n            paired_files: split_single_paired/paired_files\n            trim_galore_single: trim_galore_single/trim_galore\n            trim_galore_paired: trim_galore_paired/trim_galore\n            fastx_trimmer_single: fastx_trimmer_single/output\n            fastx_trimmer_paired: fastx_trimmer_paired/output\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_trim\n            - single_hisat2_sam\n            - paired_trim_1\n            - paired_trim_2 \n            - paired_hisat2_sam\n    ### HISAT2 - Mapping to reference genome ###\n    hisat2_for_single_reads:\n        run: ../wrappers/hisat2.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - files_with_unpaired_reads\n        - SAM_output\n        in:\n            num_of_threads: hisat2_num_of_threads\n            alignments_tailored_trans_assemb: hisat2_alignments_tailored_trans_assemb\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_unpaired_reads: check_for_fastx_and_produce_names/single_trim\n            SAM_output: check_for_fastx_and_produce_names/single_hisat2_sam\n        out: [output, output_stderr]\n    hisat2_for_paired_reads:\n        run: ../wrappers/hisat2.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - files_with_first_mates\n        - files_with_second_mates\n        - SAM_output\n        in:\n            num_of_threads: hisat2_num_of_threads\n            known_splicesite_infile: hisat2_known_splicesite_infile\n            alignments_tailored_trans_assemb: hisat2_alignments_tailored_trans_assemb\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_first_mates: check_for_fastx_and_produce_names/paired_trim_1\n            files_with_second_mates: check_for_fastx_and_produce_names/paired_trim_2\n            SAM_output: check_for_fastx_and_produce_names/paired_hisat2_sam\n        out: [output, output_stderr]\n    ### Collect HISAT2 SAM files & create output file names for the remaining workflow steps (ExpressionTool) ###\n    collect_hisat2_sam_files:\n        run: ../wrappers/collect-hisat2-sam-files.cwl\n        in:\n            single_files: hisat2_for_single_reads/output\n            paired_files: hisat2_for_paired_reads/output\n        out: [total_sam_files]\n    ### SAMtools ### \n    # SAM-to-BAM convertion\n    samtools_view:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            input: collect_hisat2_sam_files/total_sam_files\n            output_name:\n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\"_unsorted.bam\") )\n            threads: samtools_view_threads\n            isbam: samtools_view_isbam\n            collapsecigar: samtools_view_collapsecigar\n            uncompressed: samtools_view_uncompressed\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            readswithoutbits: samtools_view_readswithoutbits\n            readsingroup: samtools_view_readsingroup\n            readtagtostrip: samtools_view_readtagtostrip\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n        out: [output]\n    # Sorting based on chromosomal coordinates\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            input: samtools_view/output\n            compression_level: samtools_sort_compression_level\n            threads: samtools_sort_threads\n            memory: samtools_sort_memory\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\"_unsorted.bam\")[0].concat(\"_sorted.bam\") )\n            sort_by_name: samtools_sort_sort_by_name\n        out: [sorted]\n    ### Stringtie ### \n    # Transcript assembly\n    stringtie_transcript_assembly:\n        run: ../wrappers/stringtie.cwl\n        scatter:\n        - input_bam\n        in:\n            input_bam: samtools_sort/sorted\n            guide_gff: stringtie_guide_gff\n            sample_label: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            cpus: stringtie_cpus\n            out_gtf: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0].concat(\".gtf\") )\n            verbose: stringtie_verbose\n            min_isoform_abundance: stringtie_min_isoform_abundance\n            junction_coverage: stringtie_junction_coverage\n            min_read_coverage: stringtie_min_read_coverage\n            conservative_mode: stringtie_conservative_mode\n        out: \n            - output_gtf    \n    # Merge assembled transcripts\n    stringtie_merge:\n        run: ../wrappers/stringtie.cwl\n        scatterMethod: dotproduct\n        in:\n            input_gtfs: stringtie_transcript_assembly/output_gtf\n            transcript_merge_mode: stringtie_transcript_merge_mode\n            guide_gff: stringtie_guide_gff\n            cpus: stringtie_cpus\n            verbose: stringtie_verbose\n            out_gtf: stringtie_out_gtf\n        out: \n            - output_gtf \n    # Generate transcript expression values\n    stringtie_expression:\n        run: ../wrappers/stringtie-for-ballgown.cwl\n        scatter:\n        - input_bam\n        in:\n            input_bam: samtools_sort/sorted\n            guide_gff: stringtie_merge/output_gtf\n            sample_label: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            cpus: stringtie_cpus\n            out_gtf: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0].concat(\"_exprs.gtf\") )\n            verbose: stringtie_verbose\n            min_isoform_abundance: stringtie_min_isoform_abundance\n            junction_coverage: stringtie_junction_coverage\n            min_read_coverage: stringtie_min_read_coverage\n            conservative_mode: stringtie_conservative_mode\n            outputdir: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            expression_estimation_mode: stringtie_expression_estimation_mode\n            ballgown_table_files: stringtie_ballgown_table_files\n        out: \n            - output_gtf\n            - outdir\n    ### Ballgown - Differential transcript expression ###\n    ballgown_de:\n        run: ../wrappers/ballgown.cwl\n        in: \n            stringtie_dirs: stringtie_expression/outdir\n            phenotype_file: bg_phenotype_file\n            phenotype: bg_phenotype\n            samples: bg_samples\n            timecourse: bg_timecourse\n            feature: bg_feature\n            measure: bg_measure\n            confounders: bg_confounders\n            custom_model: bg_custom_model\n            mod: bg_mod\n            mod0: bg_mod0\n        out:\n            - ballgown_de_results\n            - ballgown_object\n            - ballgown_de_custom_model\n    ### featureCounts - Generation of read counts table ###\n    featureCounts:\n        run: ../wrappers/featureCounts.cwl\n        in: \n            number_of_threads: featureCounts_number_of_threads\n            annotation_file: featureCounts_annotation_file\n            output_file: featureCounts_output_file\n            inputFiles: samtools_sort/sorted\n            read_meta_feature_overlap: featureCounts_read_meta_feature_overlap\n        out: [output]\n    ### DESeq2 - Differential gene expression ###\n    DESeq2_analysis:\n        run: ../wrappers/DESeq2.cwl\n        in: \n            count_matrix: featureCounts/output\n            metadata: deseq2_metadata\n            samples: deseq2_samples\n            design: deseq2_design\n            min_sum_of_reads: deseq2_min_sum_of_reads\n            reference_level: deseq2_reference_level\n            phenotype: deseq2_phenotype\n            contrast: deseq2_contrast\n            numerator: deseq2_numerator\n            denominator: deseq2_denominator\n            lfcThreshold: deseq2_lfcThreshold\n            pAdjustMethod: deseq2_pAdjustMethod\n            alpha: deseq2_alpha\n            parallelization: deseq2_parallelization\n            cores: deseq2_cores\n            transformation: deseq2_transformation\n            blind: deseq2_blind\n            hypothesis: deseq2_hypothesis\n            reduced: deseq2_reduced\n            hidden_batch_effects: deseq2_hidden_batch_effects\n            hidden_batch_row_means: deseq2_hidden_batch_row_means\n            hidden_batch_method: deseq2_hidden_batch_method\n            variables: deseq2_variables\n        out:\n            - deseq2_de_results\n            - deseq2_dds_object\n            - deseq2_res_lfcShrink_object\n            - deseq2_transformed_object",
    "p_tag_content": "A CWL-based pipeline for processing RNA-Seq data (FASTQ format) and performing differential gene/transcript expression analysis. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: Subsequently, two independent workflows are implemented for differential expression analysis at the transcript and gene level. First, following thereference protocolfor HISAT, StringTie and Ballgown transcript expression analysis, StringTie along with a reference transcript annotation GTF (Gene Transfer Format) file (if one is available) is used to: Ballgown program is then used to load the coverage tables generated in the previous step and perform statistical analyses for differential expression at the transcript level. Notably, the StringTie - Ballgown protocol applied here was selected to include potentially novel transcripts in the analysis. Second, featureCounts is used to count reads that are mapped to selected genomic features, in this case genes by default, and generate a table of read counts per gene and sample. This table is passed as input to DESeq2 to perform differential expression analysis at the gene level. Both Ballgown and DESeq2 R scripts, along with their respective CWL wrappers, were designed to receive as input various parameters, such as experimental design, contrasts of interest, numeric thresholds, and hidden batch effects. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/524?version=1 DOI:10.48546/workflowhub.workflow.524.1 Initial commit Views:1562Downloads:214 Created: 5th Jul 2023 at 09:44 Last updated: 5th Jul 2023 at 10:15 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 178,
    "discussion_links": [],
    "title": "CWL-based ChIP-Seq workflow",
    "license": "MIT",
    "description": "A CWL-based pipeline for processing ChIP-Seq data (FASTQ format) and performing: \n\n- Peak calling\n- Consensus peak count table generation\n- Detection of super-enhancer regions\n- Differential binding analysis\n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n- Tables of metadata (``EZH2_metadata_CLL.csv`` and ``H3K27me3_metadata_CLL.csv``), based on the same validation analysis, to serve as input examples for the design of comparisons during differential binding analysis\n- A list of ChIP-Seq blacklisted regions (human genome version 38; hg38) from the ENCODE project, which is can be used as input for the workflow, is provided in BED format (``hg38-blacklist.v2.bed``)\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of short reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trimmomatic)\n3. Mapping to reference genome (HISAT2)\n5. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n6. Sorting mapped reads based on chromosomal coordinates (samtools)\n7. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n8. Re-sorting based on chromosomal coordinates (samtools)\n9. Removal of duplicate reads (samtools)\n10. Index creation for coordinate-sorted BAM files to enable fast random access (samtools)\n11. Production of quality metrics and files for the inspection of the mapped ChIP-Seq reads, taking into consideration the experimental design (deeptools2):\n - Read coverages for genomic regions of two or more BAM files are computed (multiBamSummary). The results are produced in compressed numpy array (NPZ) format and are used to calculate and visualize pairwise correlation values between the read coverages (plotCorrelation). \n - Estimation of sequencing depth, through genomic position (base pair) sampling, and visualization is performed for multiple BAM files (plotCoverage).\n - Cumulative read coverages for each indexed BAM file are plotted by counting and sorting all reads overlapping a “window” of specified length (plotFingerprint).\n - Production of coverage track files (bigWig), with the coverage calculated as the number of reads per consecutive windows of predefined size (bamCoverage), and normalized through various available methods (e.g., Reads Per Kilobase per Million mapped reads; RPKM). The coverage track files are used to calculate scores per selected genomic regions (computeMatrix), typically genes, and a heatmap, based on the scores associated with these genomic regions, is produced (plotHeatmap).\n12. Calling potential binding positions (peaks) to the genome (peak calling) (MACS2)\n13. Generation of consensus peak count table for the application of custom analyses on MACS2 peak calling results (bedtools)\n14. Detection of super-enhancer regions (Rank Ordering of Super-Enhancers; ROSE)\n15. Differential binding analyses (DiffBind) for:\n - MACS2 peak calling results\n - ROSE-detected super-enhancer regions",
    "latest_version": 1,
    "tags": "['CWL', 'ChIP-seq', 'Epigenomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/525?version=1', 'commit': 'c05e17555013f6fcf302c55d83caca378e391b11', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/525/git/1/tree', 'doi': '10.48546/workflowhub.workflow.525.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:39:05.000Z",
    "updated_at": "2023-07-05T09:39:32.000Z",
    "doi": "10.48546/workflowhub.workflow.525.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 525,
    "text_field": "['ChIP-Seq_workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\ninputs:\n    # Directory with fastq(.gz) input files\n    raw_files_directory: \n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Treatment & Control sample options ###\n    input_treatment_samples:\n        type: string[]\n    input_control_samples:\n        type: string[]?\n    ### Trimmomatic ###\n    # SE\n    trimmomatic_se_threads: \n        type: int?\n    trimmomatic_se_illuminaClip:\n        type: string?\n    trimmomatic_se_slidingWindow:\n        type: string?\n    trimmomatic_se_leading:\n        type: int?\n    trimmomatic_se_trailing:\n        type: int?\n    trimmomatic_se_minlen:\n        type: int?\n    # PE\n    trimmomatic_pe_threads: \n        type: int?\n    trimmomatic_pe_illuminaClip:\n        type: string?\n    trimmomatic_pe_slidingWindow:\n        type: string?\n    trimmomatic_pe_leading:\n        type: int?\n    trimmomatic_pe_trailing:\n        type: int?\n    trimmomatic_pe_minlen:\n        type: int?\n    ### HISAT2 - mapping ###\n    hisat2_num_of_threads: \n        type: int?\n    hisat2_idx_directory:\n        type: Directory\n    hisat2_idx_basename:\n        type: string\n    ### Samtools ###\n    samtools_readswithoutbits: \n        type: int\n        default: 4\n    samtools_view_threads: \n        type: int?\n    samtools_fixmate_threads:\n        type: int?\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int\n    samtools_sort_memory:\n        type: string?\n    samtools_markdup_threads: \n        type: int?    \n    ### Deeptools ###\n    # blacklist file\n    blackListFile: \n        type: File?\n    # multiBamSummary\n    multiBamSummary_threads:\n        type: int?\n    # plotCorrelation\n    plotCorrelation_numbers:\n        type: boolean?\n        default: true\n    plotCorrelation_method:\n        type: string?\n    plotCorrelation_color:\n        type: string?\n    plotCorrelation_title:\n        type: string?\n    plotCorrelation_plotType:\n        type: string?\n    plotCorrelation_outFileName:\n        type: string?\n    # plotCoverage\n    plotCoverage_threads:\n        type: int?\n    plotCoverage_plotFileFormat: \n        type: string?\n    plotCoverage_outFileName: \n        type: string?\n    # plotFingerprint\n    plotFingerprint_plotFileFormat: \n        type: string?\n    plotFingerprint_threads:\n        type: int?\n    plotFingerprint_outFileName: \n        type: string?\n    # bamCoverage\n    bamCoverage_normalizeUsing:\n        type: string?\n    bamCoverage_effective_genome_size: \n        type: long?\n    bamCoverage_extendReads: \n        type: int?\n    bamCoverage_threads:\n        type: int?  \n    # computeMatrix  \n    computeMatrix_regions:\n        type: File\n    computeMatrix_threads: \n        type: int?\n    computeMatrix_upstream:\n        type: int?\n    computeMatrix_downstream:\n        type: int?\n    computeMatrix_outputFile:\n        type: string?\n    computeMatrix_outFileSortedRegions:\n        type: string?\n    # plotHeatmap\n    plotHeatmap_plotFileFormat: \n        type: string?\n    plotHeatmap_outputFile: \n        type: string?\n    ### MACS2 ###\n    macs2_callpeak_bdg: \n        type: boolean?\n    macs2_callpeak_gsize:\n        type: string?\n    macs2_callpeak_format:\n        type: string?\n    macs2_callpeak_broad:\n        type: boolean?\n    # --nomodel, --shift, --extsize\n    macs2_callpeak_nomodel:\n        type: boolean?\n    macs2_shift: \n        type: int?\n    macs2_extsize:  \n        type: int?\n    # p-/q-values\n    macs2_pvalue: \n        type: float? \n    macs2_qvalue: \n        type: float?\n    ### Differential binding ###\n    ### ChIPQC & DiffBind ###\n    metadata_table: \n        type: File\n    ### ChIPQC ###\n    ChIPQC_blacklist: \n        type: File?\n    ChIPQC_annotation:\n        type: string?\n    ChIPQC_consensus:\n        type: boolean?\n    ChIPQC_bCount: \n        type: boolean? \n    ChIPQC_facetBy:\n        type: string[]?\n    ### DiffBind ###\n    DiffBind_consensus: \n        type: string[]?\n    DiffBind_minOverlap:\n        type: \n        - int\n        - float\n        default: 2\n    DiffBind_blacklist: \n        type: \n        - string\n        - boolean\n        - File\n        default: true\n    DiffBind_greylist: \n        type: \n        - string\n        - boolean\n        - File\n        default: false\n    DiffBind_cores:\n        type: int?\n    DiffBind_bParallel:\n        type: boolean?\n    DiffBind_normalization:\n        type: string?\n    DiffBind_library:\n        type: string?\n    DiffBind_background:\n        type: boolean?\n    DiffBind_design:\n        type: string\n        default: \"~Condition\"\n    DiffBind_reorderMeta_factor:\n        type: string[]?\n    DiffBind_reorderMeta_value:\n        type: string[]?\n    DiffBind_retrieve_consensus: \n        type: boolean?\n        default: true\n    DiffBind_low_read_count_filter:\n        type: int?\n    DiffBind_filterFun:\n        type: string?    \n    ### ROSE ###\n    rose_genome_build: \n        type: string\n    rose_stitch_distance:\n        type: int?\n    rose_tss_distance:\n        type: int?\n\noutputs:\n    ### Trimmomatic outputs ###\n    o_trimmomatic_single_end_stderr:\n        type: File[]\n        outputSource: trimmomatic_single_end/stderr_log\n    o_trimmomatic_single_end_fastq:\n        type: File[]\n        outputSource: trimmomatic_single_end/outFastq\n    o_trimmomatic_paired_end_stderr:\n        type: File[]\n        outputSource: trimmomatic_paired_end/stderr_log\n    o_trimmomatic_paired_end_fwd_paired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_fwd_paired\n    o_trimmomatic_paired_end_fwd_unpaired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_fwd_unpaired\n    o_trimmomatic_paired_end_rev_paired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_rev_paired\n    o_trimmomatic_paired_end_rev_unpaired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_rev_unpaired\n   ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html_fwd:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html_fwd/renamed_file\n    o_fastqc_paired_html_rev:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html_rev/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### HISAT2 outputs ###\n    o_hisat2_for_single_reads_sam:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output\n    o_hisat2_for_single_reads_stderr:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output_stderr\n    o_hisat2_for_paired_reads_sam:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output\n    o_hisat2_for_paired_reads_stderr:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output_stderr\n    ### samtools outputs ###\n    o_samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    # Add ms (mate score) tags\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    # Sort by coordinates\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    # Remove duplicates (samtools markdup)\n    o_samtools_markdup:\n        type: File[]\n        outputSource: samtools_markdup/output\n    # Index bam\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    ### Deeptools outputs ###\n    # Multibam file\n    o_multiBamSummary_file:\n        type: File\n        outputSource: multiBamSummary_file/outNpz\n    # plotCorrelation image file\n    o_plotCorrelation_file:\n        type: File\n        outputSource: plotCorrelation_file/outImage\n    # plotCoverage image files\n    o_plotCoverage_file:\n        type: File\n        outputSource: plotCoverage_file/outImage\n    # plotFingerprint image files\n    o_plotFingerprint_file:\n        type: File\n        outputSource: plotFingerprint_file/outImage\n    # bamCoverage normalization\n    o_bamCoverage_norm:\n        type: File[]\n        outputSource: bamCoverage_norm/bigwig\n    o_computeMatrix_matrix:\n        type: File\n        outputSource: computeMatrix/outMatrix\n    o_computeMatrix_regions:\n        type: File\n        outputSource: computeMatrix/outRegions\n    o_plotHeatmap:\n        type: File\n        outputSource: plotHeatmap/outHeatmap\n    ### MACS2 outputs ### \n    o_macs2_call_peaks_narrowPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/narrowPeak\n    o_macs2_call_peaks_xls:\n        type: File[]?\n        outputSource: macs2_call_peaks/xls\n    o_macs2_call_peaks_bed:\n        type: File[]?\n        outputSource: macs2_call_peaks/bed\n    o_macs2_call_peaks_lambda:\n        type: File[]?\n        outputSource: macs2_call_peaks/lambda\n    o_macs2_call_peaks_pileup:\n        type: File[]?\n        outputSource: macs2_call_peaks/pileup\n    o_macs2_call_peaks_broadPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/broadPeak\n    o_macs2_call_peaks_gappedPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/gappedPeak\n    o_macs2_call_peaks_model_r:\n        type: File[]?\n        outputSource: macs2_call_peaks/model_r\n    o_macs2_call_peaks_cutoff:\n        type: File[]?\n        outputSource: macs2_call_peaks/cutoff\n    ### Consensus peaks and table with counts ###\n    o_total_peaks_table:\n        type: File\n        outputSource: total_peaks_table/output\n    o_sort_peaks_table:\n        type: File\n        outputSource: sort_peaks_table/output\n    o_bedtools_merge:\n        type: File\n        outputSource: bedtools_merge/output\n    o_bedtools_intersect:\n        type: File\n        outputSource: bedtools_merge/output\n    o_exclude_black_list_regions:\n        type: File\n        outputSource: exclude_black_list_regions/output\n    o_bedtools_coverage:\n        type: File[]\n        outputSource: bedtools_coverage/output\n    o_printf_header_samples:\n        type: File\n        outputSource: printf_header_samples/output\n    o_paste_content_1:\n        type: File\n        outputSource: paste_content_1/output\n    o_paste_content_2:\n        type: File\n        outputSource: paste_content_2/output\n    o_append_files:\n        type: File\n        outputSource: append_files/output\n    ### ChIPQC MACS output ###\n    o_ChIPQC_macs_ChIPQCexperiment:\n        type: File\n        outputSource: ChIPQC_macs/ChIPQCexperiment\n    o_ChIPQC_macs_outdir:\n        type: Directory\n        outputSource: ChIPQC_macs/outdir\n    o_ChIPQC_macs_ChIPQCreport:\n        type: File?\n        outputSource: ChIPQC_macs/ChIPQCreport\n    ### DiffBind MACS output ###\n    o_DiffBind_macs_diffbind_results:\n        type: File\n        outputSource: DiffBind_macs/diffbind_results\n    o_DiffBind_macs_correlation_heatmap:\n        type: File\n        outputSource: DiffBind_macs/correlation_heatmap\n    o_DiffBind_macs_diffbind_consensus:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_consensus\n    o_DiffBind_macs_diffbind_normalized_counts:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_normalized_counts\n    o_DiffBind_macs_diffbind_dba_object:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_dba_object\n    ### ROSE-related outputs ###\n    # exclude_black_list_regions_narrowPeak\n    o_exclude_black_list_regions_narrowPeak:\n        type: File[]\n        outputSource: exclude_black_list_regions_narrowPeak/output\n    # bed to rose-compatible gff\n    o_bed_to_rose_gff_conversion:\n        type: File[]\n        outputSource: bed_to_rose_gff_conversion/output \n    # ROSE Super-Enhancers output  \n    o_rose_main_gff_dir_outputs:\n        type: {\n            \"type\": \"array\",\n            \"items\": {\"type\" : \"array\", \"items\" : \"File\"}\n        }\n        outputSource: rose_main/gff_dir_outputs\n    o_rose_main_mappedGFF_dir_outputs:\n        type: {\n            \"type\": \"array\",\n            \"items\": {\"type\" : \"array\", \"items\" : \"File\"}\n        }\n        outputSource: rose_main/mappedGFF_dir_outputs\n    o_rose_main_STITCHED_ENHANCER_REGION_MAP:\n        type: File[]?\n        outputSource: rose_main/STITCHED_ENHANCER_REGION_MAP\n    o_rose_main_AllEnhancers_table:\n        type: File[]?\n        outputSource: rose_main/AllEnhancers_table\n    o_rose_main_SuperEnhancers_table:\n        type: File[]?\n        outputSource: rose_main/SuperEnhancers_table\n    o_rose_main_Plot_points:\n        type: File[]?\n        outputSource: rose_main/Plot_points\n    o_rose_main_Enhancers_withSuper:\n        type: File[]?\n        outputSource: rose_main/Enhancers_withSuper\n    # enhancer_bed_processing\n    o_enhancer_bed_processing:\n        type: File[]?\n        outputSource: enhancer_bed_processing/output\n    # ChIPQC ROSE output\n    o_ChIPQC_rose_ChIPQCexperiment:\n        type: File\n        outputSource: ChIPQC_rose/ChIPQCexperiment\n    o_ChIPQC_rose_outdir:\n        type: Directory?\n        outputSource: ChIPQC_rose/outdir\n    o_ChIPQC_rose_ChIPQCreport:\n        type: File\n        outputSource: ChIPQC_rose/ChIPQCreport\n    # DiffBind ROSE output\n    o_DiffBind_rose_diffbind_results:\n        type: File\n        outputSource: DiffBind_rose/diffbind_results\n    o_DiffBind_rose_correlation_heatmap:\n        type: File\n        outputSource: DiffBind_rose/correlation_heatmap\n    o_DiffBind_rose_diffbind_consensus:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_consensus\n    o_DiffBind_rose_diffbind_normalized_counts:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_normalized_counts\n    o_DiffBind_rose_diffbind_dba_object:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_dba_object\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files_fwd\n            - paired_files_rev\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - single_files_basenames\n            - paired_files_basenames\n            - single_files_sam\n            - paired_files_sam\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n            - trimmomatic_command_single\n            - trimmomatic_command_paired\n    ### Trimmomatic - trimming ###\n    trimmomatic_single_end:\n        run: ../wrappers/Trimmomatic_SE.cwl\n        # scatterMethod: dotproduct\n        scatter:\n            - input_fastq\n        in: \n            input_fastq: split_single_paired/single_files\n            trimm_se_threads: trimmomatic_se_threads\n            command: split_single_paired/trimmomatic_command_single\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            illuminaClip: trimmomatic_se_illuminaClip\n            slidingWindow: trimmomatic_se_slidingWindow\n            leading: trimmomatic_se_leading\n            trailing: trimmomatic_se_trailing\n            minlen: trimmomatic_se_minlen\n        out:\n            - stderr_log\n            - outFastq\n    trimmomatic_paired_end:\n        run: ../wrappers/Trimmomatic_PE.cwl\n        scatter:\n            - input_fastq_fwd\n            - input_fastq_rev\n        scatterMethod: dotproduct\n        in: \n            input_fastq_fwd: split_single_paired/paired_files_fwd\n            input_fastq_rev: split_single_paired/paired_files_rev\n            trimm_pe_threads: trimmomatic_pe_threads\n            command: split_single_paired/trimmomatic_command_paired\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            illuminaClip: trimmomatic_pe_illuminaClip\n            slidingWindow: trimmomatic_pe_slidingWindow\n            leading: trimmomatic_pe_leading\n            trailing: trimmomatic_pe_trailing\n            minlen: trimmomatic_pe_minlen\n        out:\n            - stderr_log\n            - outFastq_fwd_paired\n            - outFastq_fwd_unpaired\n            - outFastq_rev_paired\n            - outFastq_rev_unpaired\n    ### FASTQC - Quality control ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trimmomatic_single_end/outFastq\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed_fwd:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trimmomatic_paired_end/outFastq_fwd_paired\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed_rev:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trimmomatic_paired_end/outFastq_rev_paired\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files to directory - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp_paired.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files_fwd: fastqc_paired_trimmed_fwd/zipped_file\n            input_files_rev: fastqc_paired_trimmed_rev/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html_fwd:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed_fwd/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file   \n    rename_fastqc_paired_html_rev:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed_rev/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file   \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired_fwd: split_single_paired/paired_files_fwd\n            input_paired_rev: split_single_paired/paired_files_rev\n            trimming_single: trimmomatic_single_end/outFastq\n            trimming_paired_fwd: trimmomatic_paired_end/outFastq_fwd_paired\n            trimming_paired_rev: trimmomatic_paired_end/outFastq_rev_paired\n        out:\n        - single_files\n        - paired_files_fwd\n        - paired_files_rev\n    ### HISAT2 ###\n    hisat2_for_single_reads:\n        run: ../wrappers/hisat2_v2.cwl \n        scatterMethod: dotproduct\n        scatter:\n            - files_with_unpaired_reads\n            - SAM_output\n            - stderr_report\n        in:\n            num_of_threads: hisat2_num_of_threads\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_unpaired_reads: check_trimming/single_files\n            SAM_output: split_single_paired/single_files_sam\n            stderr_report: split_single_paired/single_files_basenames\n        out: \n            - output\n            - output_stderr\n    hisat2_for_paired_reads:\n        run: ../wrappers/hisat2_v2.cwl\n        scatterMethod: dotproduct\n        scatter:\n            - files_with_first_mates\n            - files_with_second_mates\n            - SAM_output\n            - stderr_report\n        in:\n            num_of_threads: hisat2_num_of_threads\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_first_mates: check_trimming/paired_files_fwd\n            files_with_second_mates: check_trimming/paired_files_rev\n            SAM_output: split_single_paired/paired_files_sam\n            stderr_report: split_single_paired/paired_files_basenames\n        out: \n            - output\n            - output_stderr\n    ### Collect HISAT2 SAM files ###\n    collect_hisat2_sam_files:\n        run: ../wrappers/collect-hisat2-sam-files.cwl\n        in:\n            single_files: hisat2_for_single_reads/output\n            paired_files: hisat2_for_paired_reads/output           \n        out:\n            - total_sam_files\n    ### Samtools view ###\n    samtools_view:\n        run: ../wrappers/samtools-view.cwl\n        scatter: \n        - input\n        in: \n            input: collect_hisat2_sam_files/total_sam_files \n            output_name:\n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\".bam.tmp\") )\n            readswithoutbits: samtools_readswithoutbits\n            samheader:  \n                valueFrom: $( true )\n            threads: samtools_view_threads\n        out: [output]\n    ### Samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam.tmp\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n                valueFrom: $( true )\n        out: [sorted]\n    ### Samtools fixmate ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted\n            output_file_name: \n                valueFrom: $( inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\"_unsorted.bam\") )\n        out: [output]\n    ### sort BAM by CHR coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n            - input\n        in:\n            compression_level: samtools_sort_compression_level\n            threads: samtools_sort_threads\n            memory: samtools_sort_memory\n            input: samtools_fixmate/output\n            output_name:\n                valueFrom: $( inputs.input.basename.split(\"_unsorted.bam\")[0].concat(\"_sorted.bam\") )\n        out: [sorted]\n    ### Remove duplicates ###\n    samtools_markdup:\n        run: ../wrappers/samtools-markdup.cwl\n        scatter: \n            - input\n        in: \n            threads: samtools_markdup_threads\n            remove_duplicates: \n                valueFrom: $( true )\n            input: samtools_sort/sorted\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\"_sorted.bam\")[0].concat(\"_markdup.bam\") )\n        out: [output]\n    ### Index BAM files ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n            - alignments\n        in: \n            alignments: samtools_markdup/output\n        out: [alignments_with_index]\n    \n    ### Deeptools analyses ###\n    ### Create multibam file ###\n    multiBamSummary_file:\n        run: ../wrappers/multiBamSummary.cwl\n        in: \n            bam: samtools_index/alignments_with_index\n            threads: multiBamSummary_threads\n            blackListFileName: blackListFile\n        out: [outNpz]\n    ### Plot heatmap ###\n    plotCorrelation_file:\n        run: ../wrappers/plotCorrelation.cwl\n        in: \n            input: multiBamSummary_file/outNpz\n            numbers: plotCorrelation_numbers\n            method: plotCorrelation_method\n            color: plotCorrelation_color\n            title: plotCorrelation_title\n            plotType: plotCorrelation_plotType\n            outFileName: plotCorrelation_outFileName\n        out: [outImage]\n    ## Plot read coverage ###\n    plotCoverage_file:\n        run: ../wrappers/plotCoverage.cwl\n        in:\n            bam: samtools_index/alignments_with_index\n            threads: plotCoverage_threads\n            skipZeros: \n                valueFrom: $( true )\n            plotFileFormat: plotCoverage_plotFileFormat\n            outFileName: plotCoverage_outFileName\n            blackListFileName: blackListFile\n        out: [outImage]\n    ### Plot fingerprint ###\n    plotFingerprint_file:\n        run: ../wrappers/plotFingerprint.cwl\n        in:\n            bam: samtools_index/alignments_with_index\n            threads: plotFingerprint_threads\n            plotFileFormat: plotFingerprint_plotFileFormat\n            outFileName: plotFingerprint_outFileName\n            blackListFileName: blackListFile\n        out: [outImage]\n    ### Convert bam to bigwig and normalize ###\n    # Normalize using BPM (bins per million mapped reads) OR\n    # Normalize using RPGC (reads per genome coverage, effective genome size MM10) OR\n    # Normalize using RPKM (reads Per Kilobase per Million mapped reads)\n    bamCoverage_norm:\n        run: ../wrappers/bamCoverage.cwl\n        scatter: \n            - bam\n        in: \n            bam: samtools_index/alignments_with_index\n            effective_genome_size: bamCoverage_effective_genome_size\n            normalizeUsing: bamCoverage_normalizeUsing\n            extendReads: bamCoverage_extendReads\n            threads: bamCoverage_threads\n            blackListFileName: blackListFile\n        out: [bigwig]\n    ### Computematrix ###\n    computeMatrix:\n        run: ../wrappers/computeMatrix.cwl\n        in: \n            bw: bamCoverage_norm/bigwig\n            regions: computeMatrix_regions\n            threads: computeMatrix_threads\n            upstream: computeMatrix_upstream\n            downstream: computeMatrix_downstream\n            outputFile: computeMatrix_outputFile\n            outFileSortedRegions: computeMatrix_outFileSortedRegions\n            blackListFileName: blackListFile\n        out: [outMatrix, outRegions]\n    ### Plot heatmap ###\n    plotHeatmap:\n        run: ../wrappers/plotHeatmap.cwl\n        in:\n            matrix: computeMatrix/outMatrix\n            plotFileFormat: plotHeatmap_plotFileFormat\n            outputFile: plotHeatmap_outputFile\n        out: [outHeatmap]\n    \n    ### PEAK CALLING ###\n    ### Separate control and treatment samples for MACS2 ###\n    separate_control_treatment_files:\n        run: ../wrappers/separate_control_treatment_files.cwl\n        in: \n            treatment_samples: input_treatment_samples\n            control_samples: input_control_samples\n            aligned_files: samtools_index/alignments_with_index\n        out:\n        - treatment_files\n        - control_files\n    ### Call peaks ###\n    macs2_call_peaks:\n        run: ../wrappers/macs2-callpeak.cwl\n        in:\n            bdg: macs2_callpeak_bdg\n            treatment: separate_control_treatment_files/treatment_files\n            control: separate_control_treatment_files/control_files\n            f: macs2_callpeak_format\n            gsize: macs2_callpeak_gsize\n            broad: macs2_callpeak_broad\n            # --nomodel, --shift, --extsize\n            nomodel: macs2_callpeak_nomodel\n            shift: macs2_shift\n            extsize: macs2_extsize\n            # p-/q-values\n            p: macs2_pvalue\n            q: macs2_qvalue\n        scatter:\n        - treatment\n        - control\n        scatterMethod: dotproduct\n        out:\n        - narrowPeak\n        - xls\n        - bed\n        - lambda\n        - pileup\n        - broadPeak\n        - gappedPeak\n        - model_r\n        - cutoff\n    \n    ### Create consensus peaks and table with counts for custom analyses ###\n    ### Create table with total peaks ###\n    total_peaks_table:\n        run: ../wrappers/table_total_peaks.cwl\n        in: \n            input: macs2_call_peaks/narrowPeak\n            consensus_bed:\n                valueFrom: $( \"narrowPeaks_consensus.bed\" )\n        out: [output]\n    ### Sort peaks ###\n    sort_peaks_table:\n        run: ../wrappers/sort.cwl\n        in: \n            input: total_peaks_table/output\n            key1: \n                valueFrom: $(\"1,1\")\n            key2: \n                valueFrom: $(\"2,2n\")\n            output_name:\n                valueFrom: $( \"narrowPeaks_consensus_sorted.bed\" )\n        out: [output]\n    ### Intersect peaks to consensus ###\n    bedtools_merge:\n        run: ../wrappers/bedtools-merge.cwl\n        in: \n            input: sort_peaks_table/output\n            output_name:\n                valueFrom: $( \"narrowPeaks_consensus_merged.bed\" )\n        out: [output]\n    ### Exclude blacklisted regions ###\n    exclude_black_list_regions:\n        run: ../wrappers/bedtools-intersect.cwl\n        in:\n            feature_a: bedtools_merge/output\n            feature_b: blackListFile\n            no_overlap: \n                valueFrom: $( true )\n            outputFile:\n                valueFrom: $( \"narrowPeaks_consensus_filtered.bed\" )\n        out: [output]\n    ### Calculate read coverage for every peak on the consensus ###\n    bedtools_coverage:\n        run: ../wrappers/bedtools-coverage.cwl\n        scatter: \n        - input_file\n        in: \n            reference_file: exclude_black_list_regions/output\n            input_file: separate_control_treatment_files/treatment_files\n            count_of_overlaps: \n                valueFrom: $( true )\n        out: [output]\n    extract_counts: \n        run: ../wrappers/awk.cwl\n        scatter: \n         - input_file\n        in: \n            print: \n                valueFrom: '{print $4}'\n            input_file: bedtools_coverage/output\n            split_string: \n                valueFrom: $(\"_markdup_counts.bed\")\n            output_suffix: \n                valueFrom: $(\".count\")\n        out: [output]\n    extract_peaks:\n        run: ../wrappers/awk.cwl\n        in:",
    "p_tag_content": "A CWL-based pipeline for processing ChIP-Seq data (FASTQ format) and performing: On the respective GitHub folder are available: Briefly, the workflow performs the following steps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/525?version=1 DOI:10.48546/workflowhub.workflow.525.1 Initial commit Views:1462Downloads:219 Created: 5th Jul 2023 at 10:39 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 179,
    "discussion_links": [],
    "title": "CWL-based (multi-sample) workflow for germline variant calling",
    "license": "MIT",
    "description": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. \n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers and subworkflows for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. Mapping to reference genome (BWA-MEM)\n4. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n5. Sorting mapped reads based on read names (samtools)\n6. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n7. Re-sorting mapped reads based on chromosomal coordinates (samtools)\n8. Adding basic Read-Group information regarding sample name, platform unit, platform (e.g., ILLUMINA), library and identifier (picard AddOrReplaceReadGroups)\n9. Marking PCR and/or optical duplicate reads (picard MarkDuplicates)\n10. Collection of summary statistics (samtools) \n11. Creation of indexes for coordinate-sorted BAM files to enable fast random access (samtools)\n12. Splitting the reference genome into a predefined number of intervals for parallel processing (GATK SplitIntervals)\n\nAt this point the application of multi-sample workflow follows, during which multiple samples are concatenated into a single, unified VCF (Variant Calling Format) file, which contains the variant information for all samples:\n\n13. Application of Base Quality Score Recalibration (BQSR) (GATK BaseRecalibrator and ApplyBQSR tools)\n14. Variant calling in gVCF (genomic VCF) mode (-ERC GVCF) (GATK HaplotypeCaller)  \n15. Merging of all genomic interval-split gVCF files for each sample (GATK MergeVCFs)\n16. Generation of the unified VCF file (GATK CombineGVCFs and GenotypeGVCFs tools)\n17. Separate annotation for SNP and INDEL variants, using the Variant Quality Score Recalibration (VQSR) method (GATK VariantRecalibrator and ApplyVQSR tools)\n18. Variant filtering based on the information added during VQSR and/or custom filters (bcftools)\n19. Normalization of INDELs (split multiallelic sites) (bcftools)\n20. Annotation of the final dataset of filtered variants with genomic, population-related and/or clinical information (ANNOVAR)",
    "latest_version": 1,
    "tags": "['CWL', 'Genomics', 'Germline', 'variant calling', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/526?version=1', 'commit': 'aceb8de8d16de7b17acdd51a11c61939b4216068', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/526/git/1/tree', 'doi': '10.48546/workflowhub.workflow.526.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:44:42.000Z",
    "updated_at": "2023-07-05T09:45:12.000Z",
    "doi": "10.48546/workflowhub.workflow.526.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Variant calling', 'identifier': 'http://edamontology.org/operation_3227'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 526,
    "text_field": "['gatk_multi-sample_bqsr_vqsr.cwl']",
    "raw_text_content": "class: Workflow\n\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n  - class: SubworkflowFeatureRequirement\n\ninputs:\n    ### Directory with fastq(.gz) input files ###\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Trim galore inputs ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_strigency: int\n    tg_trim_suffix: string\n    ### Reference genome inputs ###\n    reference_genome:\n        type: File\n        secondaryFiles:\n            - .amb\n            - .ann\n            - .bwt\n            - .pac\n            - .sa\n            - .fai\n            - ^.dict\n    ### BWA MEM inputs ###\n    bwa_mem_sec_shorter_split_hits:\n        type: boolean\n        default: true\n    bwa_mem_num_threads:\n        type: int\n        default: 16\n    ### SAMtools inputs ###\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_readswithoutbits:\n        type: int\n        default: 0 # 2308\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?\n    samtools_view_target_bed_file: \n        type: File?\n    samtools_fixmate_threads:\n        type: int\n        default: 16\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n        default: 16\n    samtools_sort_memory:\n        type: string?\n    samtools_flagstat_threads:\n        type: int?\n        default: 16\n    ### Picard AddOrReplaceReadGroups inputs ###\n    # picard_addorreplacereadgroups_rglb:\n    #     type: string?\n    picard_addorreplacereadgroups_rgpl:\n        type: string?\n    ### GATK - SplitIntervals inputs ###\n    gatk_splitintervals_include_intervalList:\n        type: File?\n    gatk_splitintervals_exclude_intervalList: \n        type: File?\n    gatk_splitintervals_scatter_count:\n        type: int\n    ### GATK - BQSR inputs ###\n    # files associated to known variations\n    sub_bqsr_known_sites_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_interval_padding:\n        type: int?\n    sub_bqsr_hc_native_pairHMM_threads:\n        type: int?\n    sub_bqsr_hc_java_options: \n        type: string?\n    ### GATK - VariantRecalibrator inputs ###\n    VariantRecalibrator_use_annotation: \n        type: string[]\n    VariantRecalibrator_trust_all_polymorphic:\n        type: boolean?\n    # INDELs\n    VariantRecalibrator_truth_sensitivity_trance_indels:\n        type: float[]?\n    vqsr_arguments_indels_1:\n        type: string\n    vqsr_known_sites_indels_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_indels_2:\n        type: string?\n    vqsr_known_sites_indels_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_indels_3:\n        type: string?\n    vqsr_known_sites_indels_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    # SNPs\n    VariantRecalibrator_truth_sensitivity_trance_snps:\n        type: float[]?\n    vqsr_arguments_snps_1:\n        type: string\n    vqsr_known_sites_snps_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_2:\n        type: string?\n    vqsr_known_sites_snps_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_3:\n        type: string?\n    vqsr_known_sites_snps_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_4:\n        type: string?\n    vqsr_known_sites_snps_4:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    ### GATK - ApplyVQSR inputs ###\n    ApplyVQSR_ts_filter_level:\n        type: float?\n    ### bcftools view inputs ###\n    bcftools_view_include_VQSR_filters:\n        type: string\n    bcftools_view_threads:\n        type: int?\n    ### bcftools norm inputs ###\n    bcftools_norm_threads:\n        type: int?\n    bcftools_norm_multiallelics: \n        type: string\n        default: \"-both\"\n    ### ANNOVAR - table_annovar.pl inputs ###\n    table_annovar_database_location:\n        type: Directory\n    table_annovar_build_over:\n        type: string\n    table_annovar_remove:\n        type: boolean?\n    table_annovar_protocol:\n        type: string\n    table_annovar_operation:\n        type: string\n    table_annovar_na_string:\n        type: string?\n    table_annovar_vcfinput:\n        type: boolean\n    table_annovar_otherinfo:\n        type: boolean?\n    table_annovar_convert_arg:\n        type: string?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### BWA MEM outputs ###\n    o_bwa_mem_single:\n        type: File[]\n        outputSource: bwa_mem_single/output\n    o_bwa_mem_paired:\n        type: File[]\n        outputSource: bwa_mem_paired/output\n    o_gather_bwa_sam_files:\n        type: File[]\n        outputSource: gather_bwa_sam_files/total_sam_files\n    ### SAMtools outputs ###\n    o_samtools_view_conversion:\n        type: File[]\n        outputSource: samtools_view_conversion/output\n    samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    ### Picard tool outputs ###\n    o_picard_addorreplacereadgroups:\n        type: File[]\n        outputSource: picard_addorreplacereadgroups/output\n    o_picard_markduplicates:\n        type: File[]\n        outputSource: picard_markduplicates/output\n    o_picard_markduplicates_metrics:\n        type: File[]\n        outputSource: picard_markduplicates/output_report\n    ### SAMtools outputs ###\n    o_samtools_flagstat:\n        type: File[]\n        outputSource: samtools_flagstat/output\n    o_samtools_view_count_total:\n        type: File[]\n        outputSource: samtools_view_count_total/output\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    ### GATK SplitIntervals outputs ###\n    o_gatk_splitintervals:\n        type: File[]\n        outputSource: gatk_splitintervals/intervalfiles\n    ### GATK - BQSR outputs ###\n    o_gatk_bqsr_subworkflowbqsr_tables:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_baserecalibrator_table\n    o_gatk_bqsr_subworkflowbqsr_bqsr_bam:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_applybqsr\n    o_gatk_bqsr_subworkflowbqsr_hc:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_HaplotypeCaller\n    o_gatk_bqsr_subworkflowbqsr_mergevcfs:\n        type: File[]\n        outputSource: gatk_bqsr_subworkflow/o_gatk_MergeVCFs\n    ### GATK - CombineGVCFs outputs ###\n    o_gatk_CombineGVCFs:\n        type: File\n        outputSource: gatk_CombineGVCFs/output\n    ### GATK - GenotypeGVCFs outputs ###\n    o_gatk_GenotypeGVCFs:\n        type: File\n        outputSource: gatk_GenotypeGVCFs/output\n    ### GATK - MakeSitesOnlyVcf ###\n    o_gatk_MakeSitesOnlyVcf:\n        type: File\n        outputSource: gatk_MakeSitesOnlyVcf/output\n    ### GATK - VariantRecalibrator ###\n    o_gatk_VariantRecalibrator_indel_recal:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_indel/recal_table\n    o_gatk_VariantRecalibrator_indel_tranches:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_indel/tranches_file\n    o_gatk_VariantRecalibrator_snp_recal:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_snp/recal_table\n    o_gatk_VariantRecalibrator_snp_tranches:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_snp/tranches_file\n    ### GATK - ApplyVQSR ###\n    o_gatk_ApplyVQSR_indel:\n        type: File[]\n        outputSource: gatk_ApplyVQSR_indel/output\n    o_gatk_ApplyVQSR_snp:\n        type: File[]\n        outputSource: gatk_ApplyVQSR_snp/output\n    \n    ### MergeVCFs ###\n    o_gatk_VQSR_MergeVCFs:\n        type: File\n        outputSource: gatk_VQSR_MergeVCFs/output\n    # ### VQSR filtered VCF files - PASS only ###\n    o_bcftools_view_filter_vqsr:\n        type: File\n        outputSource: bcftools_view_filter_vqsr/output\n    ### bcftools norm for INDELs ###\n    o_bcftools_norm_vqsr:\n        type: File\n        outputSource: bcftools_norm_vqsr/output   \n    ### ANNOVAR outputs ###\n    o_table_annovar_filtered_multianno_vcf:\n        type: File\n        outputSource: table_annovar_filtered/multianno_vcf\n    o_table_annovar_filtered_multianno_txt:\n        type: File\n        outputSource: table_annovar_filtered/multianno_txt\n    o_table_annovar_filtered_avinput:\n        type: File\n        outputSource: table_annovar_filtered/avinput\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n    ### Trim_galore ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files to directory - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file    \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired: split_single_paired/paired_files\n            trimming_single: trim_galore_single/trim_galore\n            trimming_paired: trim_galore_paired/trim_galore\n        out:\n        - single_files\n        - paired_files\n    ### Collect flowcell ID and lane information - Single end ###\n    rg_extraction_single:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: check_trimming/single_files\n        out: [rg_information]\n    ### bwa mem - Single end ###\n    bwa_mem_single:\n        run: ../wrappers/bwa-mem.cwl\n        scatter:\n        - trimmed_fq_read1\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            trimmed_fq_read1: check_trimming/single_files\n        out: [output]\n    ### Split forward and reverse read files ###\n    split_paired_read1_read2:\n        run: ../wrappers/split-paired-read1-read2.cwl\n        in:\n            paired_files: check_trimming/paired_files\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: [reads_1, reads_2]\n    ### Collect flowcell ID and lane information - Paired end ###\n    rg_extraction_paired:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: split_paired_read1_read2/reads_1\n        out: [rg_information]\n    ### bwa mem - Paired end ###\n    bwa_mem_paired:\n        run: ../wrappers/bwa-mem.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        - trimmed_fq_read2\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            trimmed_fq_read1: split_paired_read1_read2/reads_1\n            trimmed_fq_read2: split_paired_read1_read2/reads_2\n        out: [output]\n    ### Collect and output all SAM files & generate filenames for next steps ###\n    gather_bwa_sam_files:\n        run: ../wrappers/gather-bwa-sam-files.cwl\n        in: \n            single_files: bwa_mem_single/output\n            paired_files: bwa_mem_paired/output\n            single_files_rg_info: rg_extraction_single/rg_information\n            paired_files_rg_info: rg_extraction_paired/rg_information\n        out: [total_sam_files,\n              names_rgids,\n              names_rgpus,\n              names_rgplbs]\n    ### samtools view - SAM to BAM conversion ###\n    # options for filtering out based on SAM FLAG fields:\n    # read unmapped (0x4)\n    # not primary alignment (0x100)\n    # supplementary alignment (0x800)\n    samtools_view_conversion:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            input: gather_bwa_sam_files/total_sam_files\n            isbam:\n                valueFrom: $( true )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            readsquality: samtools_view_readsquality\n            ### \n            # keep or remove reads based on SAM FLAG values:\n            readswithbits: samtools_view_readswithbits\n            readswithoutbits: samtools_view_readswithoutbits\n            ###\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\".bam\") )\n            # (optional) filter also with genomics coordinates:\n            target_bed_file: samtools_view_target_bed_file\n        out: [output]\n    ### samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view_conversion/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n             valueFrom: $( true )\n        out: [sorted]\n    ### samtools fixmate – fills in mate coordinates and insert size fields ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted\n            output_file_name: \n                valueFrom: $( inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\".fixed.bam\") )\n        out: [output]\n    ### samtools sort by chromosomal coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_fixmate/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.bam\")[0].concat(\".fixed.sorted.bam\") )\n        out: [sorted]\n    ### Picard AddOrReplaceReadGroups ###\n    picard_addorreplacereadgroups:\n        run: ../wrappers/picard-AddOrReplaceReadGroups.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - INPUT\n        - rgid\n        - rgpu\n        - rglb\n        in: \n            INPUT: samtools_sort/sorted \n            OUTPUT: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0].concat(\".fixed.sorted.uniq.rg.bam\") )\n            rgid: gather_bwa_sam_files/names_rgids\n            rglb: gather_bwa_sam_files/names_rgplbs\n            rgpl: picard_addorreplacereadgroups_rgpl \n            rgpu: gather_bwa_sam_files/names_rgpus\n            rgsm: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0] )\n        out: [output]\n    ### Picard MarkDuplicates ###\n    picard_markduplicates:\n        run: ../wrappers/picard-MarkDuplicates.cwl\n        scatter: \n        - INPUT\n        in:\n            INPUT: picard_addorreplacereadgroups/output\n            OUTPUT: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".fixed.sorted.uniq.rg.md.bam\") )\n            METRICS_FILE: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".md_metrics.txt\") )\n        out: [output, output_report]\n    ### samtools flagstat – counts the number of alignments for each FLAG type ###\n    samtools_flagstat:\n        run: ../wrappers/samtools-flagstat.cwl\n        scatter:\n        - input\n        in:\n            threads: samtools_flagstat_threads\n            input: picard_markduplicates/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".align.stats.txt\") )\n        out: [output]\n    ### samtools view - print only alignment counts ###\n    samtools_view_count_total:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam: \n                valueFrom: $( false )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: picard_markduplicates/output\n            readsquality: samtools_view_readsquality\n            # readswithbits: samtools_view_readswithbits\n            # readswithoutbits: samtools_view_readswithoutbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: \n                default: true\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".count.total.txt\") )\n            # target_bed_file: samtools_view_target_bed_file\n        out: [output]\n    ### GATK SplitIntervals ###\n    gatk_splitintervals:\n        run: ../wrappers/gatk-SplitIntervals.cwl\n        in:\n            reference: reference_genome\n            include_intervalList: gatk_splitintervals_include_intervalList\n            exclude_intervalList: gatk_splitintervals_exclude_intervalList\n            scatter_count: gatk_splitintervals_scatter_count\n        out: [intervalfiles]\n    ### samtools index ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: picard_markduplicates/output\n        out: [alignments_with_index]\n    ### GATK BaseRecalibrator - subworkflow ###\n    gatk_bqsr_subworkflow:\n        run: ../workflows/gatk-bqsr-subworkflow_multiple.cwl\n        # scatterMethod: dotproduct\n        scatter: \n        - bqsr_INPUT\n        # - bqsr_OUTPUT\n        in: \n            bqsr_hc_java_options: sub_bqsr_hc_java_options \n            bqsr_INPUT: samtools_index/alignments_with_index \n            bqsr_OUTPUT: \n                valueFrom: $( inputs.bqsr_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0] )\n            bqsr_reference: reference_genome\n            bqsr_known_sites_1: sub_bqsr_known_sites_1\n            bqsr_known_sites_2: sub_bqsr_known_sites_2\n            bqsr_known_sites_3: sub_bqsr_known_sites_3\n            bqsr_intervals: gatk_splitintervals/intervalfiles\n            bqsr_interval_padding: sub_bqsr_interval_padding\n            bqsr_hc_native_pairHMM_threads: sub_bqsr_hc_native_pairHMM_threads\n        out: \n        - o_gatk_baserecalibrator_table\n        - o_gatk_applybqsr\n        - o_gatk_HaplotypeCaller\n        - o_gatk_MergeVCFs\n    ### GATK - CombineGVCFs ###\n    gatk_CombineGVCFs:\n        run: ../wrappers/gatk-CombineGVCFs.cwl\n        in: \n            reference: reference_genome\n            gvcf_files: gatk_bqsr_subworkflow/o_gatk_MergeVCFs\n            output_name:\n                valueFrom: $( \"cohort.g.vcf.gz\" )\n        out: [output]\n    ### GATK - GenotypeGVCFs ###\n    gatk_GenotypeGVCFs:\n        run: ../wrappers/gatk-GenotypeGVCFs.cwl \n        in:\n            reference: reference_genome\n            gvcf_input: gatk_CombineGVCFs/output\n            vcf_output: \n                valueFrom: $( \"cohort.genotyped.vcf.gz\" )\n        out: [output]\n    # GATK - VQSR\n    ### GATK - MakeSitesOnlyVcf ###\n    gatk_MakeSitesOnlyVcf:\n        run: ../wrappers/gatk-MakeSitesOnlyVcf.cwl \n        in: \n            INPUT: gatk_GenotypeGVCFs/output\n            OUTPUT: \n                valueFrom: $( \"cohort.genotyped.sitesonly.vcf.gz\" )\n        out: [output]\n    ### GATK - VariantRecalibrator - INDELs ###\n    gatk_VariantRecalibrator_indel:\n        run: ../wrappers/gatk-VariantRecalibrator.cwl\n        scatter: \n        - intervals\n        in: \n            truth_sensitivity_trance: VariantRecalibrator_truth_sensitivity_trance_indels\n            use_annotation: VariantRecalibrator_use_annotation\n            reference: reference_genome\n            variant: gatk_MakeSitesOnlyVcf/output\n            mode: \n                valueFrom: $( \"INDEL\" )\n            arguments_1: vqsr_arguments_indels_1\n            resource_1: vqsr_known_sites_indels_1\n            arguments_2: vqsr_arguments_indels_2\n            resource_2: vqsr_known_sites_indels_2\n            arguments_3: vqsr_arguments_indels_3\n            resource_3: vqsr_known_sites_indels_3\n            intervals: gatk_splitintervals/intervalfiles\n            trust_all_polymorphic: VariantRecalibrator_trust_all_polymorphic\n            output_name: \n                valueFrom: $( \"cohort.genotyped.indel\" )\n        out:\n        - recal_table\n        - tranches_file\n    ### GATK - VariantRecalibrator - SNPs ###\n    gatk_VariantRecalibrator_snp:\n        run: ../wrappers/gatk-VariantRecalibrator.cwl\n        scatter: \n        - intervals\n        in: \n            truth_sensitivity_trance: VariantRecalibrator_truth_sensitivity_trance_snps\n            use_annotation: VariantRecalibrator_use_annotation\n            reference: reference_genome\n            variant: gatk_MakeSitesOnlyVcf/output\n            mode: \n                valueFrom: $( \"SNP\" )\n            arguments_1: vqsr_arguments_snps_1\n            resource_1: vqsr_known_sites_snps_1\n            arguments_2: vqsr_arguments_snps_2\n            resource_2: vqsr_known_sites_snps_2\n            arguments_3: vqsr_arguments_snps_3\n            resource_3: vqsr_known_sites_snps_3\n            arguments_4: vqsr_arguments_snps_4\n            resource_4: vqsr_known_sites_snps_4\n            intervals: gatk_splitintervals/intervalfiles\n            trust_all_polymorphic: VariantRecalibrator_trust_all_polymorphic\n            output_name: \n                valueFrom: $( \"cohort.genotyped.snp\" )\n        out:\n        - recal_table\n        - tranches_file\n    ### GATK - ApplyVQSR - INDELs ###\n    gatk_ApplyVQSR_indel: \n        run: ../wrappers/gatk-ApplyVQSR.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - recal_file\n        - tranches_file\n        - intervals\n        in:\n            reference: reference_genome\n            variant: gatk_GenotypeGVCFs/output\n            ts_filter_level: ApplyVQSR_ts_filter_level\n            recal_file: gatk_VariantRecalibrator_indel/recal_table\n            tranches_file: gatk_VariantRecalibrator_indel/tranches_file\n            intervals: gatk_splitintervals/intervalfiles\n            mode:\n                valueFrom: $( \"INDEL\" )\n            output_name: \n                valueFrom: $( \"indel.recalibrated\" )\n        out: [output]\n    ### GATK - ApplyVQSR - SNPs ###\n    gatk_ApplyVQSR_snp: \n        run: ../wrappers/gatk-ApplyVQSR.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - variant\n        - recal_file\n        - tranches_file\n        - intervals\n        in:\n            reference: reference_genome\n            variant: gatk_ApplyVQSR_indel/output\n            ts_filter_level: ApplyVQSR_ts_filter_level\n            recal_file: gatk_VariantRecalibrator_snp/recal_table\n            tranches_file: gatk_VariantRecalibrator_snp/tranches_file\n            intervals: gatk_splitintervals/intervalfiles\n            mode:\n                valueFrom: $( \"SNP\" )\n            output_name: \n                valueFrom: $( \"snp.recalibrated\" )\n        out: [output]\n    gatk_VQSR_MergeVCFs:\n        run: ../wrappers/gatk-MergeVCFs_vqsr.cwl\n        in:\n            INPUT: gatk_ApplyVQSR_snp/output\n            OUTPUT: \n                valueFrom: $( \"cohort.snp.indel.vqsr.recalibrated\" )\n        out: [output]\n    ### bcftools view - filter variants ###\n    bcftools_view_filter_vqsr:\n        run: ../wrappers/bcftools-view.cwl\n        in: \n            input: gatk_VQSR_MergeVCFs/output\n            threads: bcftools_view_threads\n            include: bcftools_view_include_VQSR_filters\n            output_type: \n                valueFrom: $( \"z\" )\n            output_name:\n                valueFrom: $(\"cohort.snp.indel.vqsr.recalibrated.filtered.vcf.gz\")\n        out: [output]\n    ### bcftools norm ###\n    bcftools_norm_vqsr:\n        run: ../wrappers/bcftools-norm.cwl\n        in: \n            input: gatk_VQSR_MergeVCFs/output\n            threads: bcftools_norm_threads\n            reference: reference_genome\n            multiallelics: bcftools_norm_m",
    "p_tag_content": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: At this point the application of multi-sample workflow follows, during which multiple samples are concatenated into a single, unified VCF (Variant Calling Format) file, which contains the variant information for all samples: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/526?version=1 DOI:10.48546/workflowhub.workflow.526.1 Initial commit Views:1525Downloads:178 Created: 5th Jul 2023 at 10:44 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 180,
    "discussion_links": [],
    "title": "CWL-based (single-sample) workflow for germline variant calling",
    "license": "MIT",
    "description": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments.\n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers and subworkflows for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. Mapping to reference genome (BWA-MEM)\n4. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n5. Sorting mapped reads based on read names (samtools)\n6. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n7. Re-sorting mapped reads based on chromosomal coordinates (samtools)\n8. Adding basic Read-Group information regarding sample name, platform unit, platform (e.g., ILLUMINA), library and identifier (picard AddOrReplaceReadGroups)\n9. Marking PCR and/or optical duplicate reads (picard MarkDuplicates)\n10. Collection of summary statistics (samtools) \n11. Creation of indexes for coordinate-sorted BAM files to enable fast random access (samtools)\n12. Splitting the reference genome into a predefined number of intervals for parallel processing (GATK SplitIntervals)\n\nAt this point the application of single-sample workflow follows, during which multiple samples are accepted as input and they are not merged into a unified VCF file but are rather processed separately in each step of the workflow, leading to the production of a VCF file for each sample:\n\n13. Application of Base Quality Score Recalibration (BQSR) (GATK BaseRecalibrator, GatherBQSRReports and ApplyBQSR tools)\n14. Variant calling (GATK HaplotypeCaller)  \n15. Merging of all genomic interval-split gVCF files for each sample (GATK MergeVCFs)\n16. Separate annotation of SNPs and INDELs based on pretrained Convolutional Neural Network (CNN) models (GATK SelectVariants, CNNScoreVariants and FilterVariantTranches tools)\n17. (Optional) Independent step of hard-filtering (GATK VariantFiltration)\n18. Variant filtering based on the information added during VQSR and/or custom filters (bcftools)\n19. Normalization of INDELs (split multiallelic sites) (bcftools)\n20. Annotation of the final dataset of filtered variants with genomic, population-related and/or clinical information (ANNOVAR)",
    "latest_version": 1,
    "tags": "['CWL', 'Genomics', 'Germline', 'variant calling', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/527?version=1', 'commit': 'be8c585e8676f30e2626c6b3ad92fc6f93648cf3', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/527/git/1/tree', 'doi': '10.48546/workflowhub.workflow.527.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:48:09.000Z",
    "updated_at": "2023-07-05T09:49:33.000Z",
    "doi": "10.48546/workflowhub.workflow.527.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Variant calling', 'identifier': 'http://edamontology.org/operation_3227'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 527,
    "text_field": "['gatk_single-sample_bqsr_cnn_hard-filtering.cwl']",
    "raw_text_content": "class: Workflow\n\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n  - class: SubworkflowFeatureRequirement\n\ninputs:\n    # Directory with fastq(.gz) input files\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Trim galore inputs ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_strigency: int\n    tg_trim_suffix: string\n    ### Reference genome inputs ###\n    reference_genome:\n        type: File\n        secondaryFiles:\n            - .amb\n            - .ann\n            - .bwt\n            - .pac\n            - .sa\n            - .fai\n            - ^.dict\n    ### BWA MEM inputs ###\n    bwa_mem_sec_shorter_split_hits:\n        type: boolean\n        default: true\n    bwa_mem_num_threads:\n        type: int\n        default: 16\n    ### SAMtools inputs ###\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_readswithoutbits:\n        type: int\n        default: 0x904\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?  \n    samtools_fixmate_threads:\n        type: int\n        default: 16\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n        default: 16\n    samtools_sort_memory:\n        type: string?\n    samtools_flagstat_threads:\n        type: int?\n        default: 16\n    ### Picard AddOrReplaceReadGroups inputs ###\n    # picard_addorreplacereadgroups_rglb:\n    #     type: string?\n    picard_addorreplacereadgroups_rgpl:\n        type: string?\n    ### GATK - SplitIntervals ###\n    gatk_splitintervals_include_intervalList:\n        type: File?\n    gatk_splitintervals_exclude_intervalList: \n        type: File?\n    gatk_splitintervals_scatter_count:\n        type: int\n    ### GATK - BQSR inputs ###\n    sub_bqsr_known_sites_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_2:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_3:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_interval_padding:\n        type: int?\n    ### GATK - Apply-BQSR inputs ###\n    ### GATK HaplotypeCaller inputs ###\n    sub_hc_native_pairHMM_threads:\n        type: int?  \n    sub_hc_java_options:\n        type: string?\n    ### GATK SelectVariants inputs ###\n    ### GATK VariantFiltration inputs ###\n    VariantFiltration_window:\n        type: int\n        default: 0\n    VariantFiltration_cluster:\n        type: int\n        default: 3\n    # SNPs\n    VariantFiltration_filter_name_snp:\n        type:\n            type: array\n            items: string\n    VariantFiltration_filter_snp:\n        type:\n            type: array\n            items: string\n    # INDELs\n    VariantFiltration_filter_name_indel:\n        type:\n            type: array\n            items: string\n    VariantFiltration_filter_indel:\n        type:\n            type: array\n            items: string\n    ### GATK CNNScoreVariants inputs ###\n    ### GATK FilterVariantTranches inputs ###\n    FilterVariantTranches_resource_1:\n        type: File\n        secondaryFiles: \n        - .tbi\n    FilterVariantTranches_resource_2:\n        type: File?\n        secondaryFiles: \n        - .tbi\n    FilterVariantTranches_resource_3:\n        type: File?\n        secondaryFiles: \n        - .tbi\n    ### bcftools view inputs ###\n    bcftools_view_include_hard_filters:\n        type: string\n    bcftools_view_include_CNN_filters:\n        type: string\n    bcftools_view_threads:\n        type: int\n    ### bcftools norm inputs ###\n    bcftools_norm_threads:\n        type: int?\n    bcftoomls_norm_multiallelics: \n        type: string\n        default: \"-both\"\n    ### ANNOVAR table_annovar.pl inputs ###\n    table_annovar_database_location:\n        type: Directory\n    table_annovar_build_over:\n        type: string\n    table_annovar_remove:\n        type: boolean?\n    table_annovar_protocol:\n        type: string\n    table_annovar_operation:\n        type: string\n    table_annovar_na_string:\n        type: string?\n    table_annovar_vcfinput:\n        type: boolean\n    table_annovar_otherinfo:\n        type: boolean?\n    table_annovar_convert_arg:\n        type: string?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### SAMtools outputs ###\n    o_gather_bwa_sam_files:\n        type: File[]\n        outputSource: gather_bwa_sam_files/total_sam_files\n    o_samtools_view_conversion:\n        type: File[]\n        outputSource: samtools_view_conversion/output\n    o_samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    o_picard_addorreplacereadgroups:\n        type: File[]\n        outputSource: picard_addorreplacereadgroups/output\n    o_picard_markduplicates:\n        type: File[]\n        outputSource: picard_markduplicates/output\n    o_picard_markduplicates_metrics:\n        type: File[]\n        outputSource: picard_markduplicates/output_report\n    o_samtools_flagstat:\n        type: File[]\n        outputSource: samtools_flagstat/output\n    o_samtools_view_count_total:\n        type: File[]\n        outputSource: samtools_view_count_total/output\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    o_gatk_bqsr_subworkflow:\n        type: File[]\n        outputSource: gatk_bqsr_subworkflow/o_gatk_gatherbqsrreports\n    o_gatk_ApplyBQSR:\n        type: File[]\n        outputSource: gatk_applybqsr/output\n    o_samtools_index_2:\n        type: File[]\n        outputSource: samtools_index_2/alignments_with_index\n    # GATK SplitIntervals outputs\n    o_gatk_splitintervals:\n        type: File[]\n        outputSource: gatk_splitintervals/intervalfiles\n    ### VCF output files ###\n    # Raw VCF files\n    o_gatk_HaplotypeCaller:\n        type: File[]\n        outputSource: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n    # Hard-filtered SNP & INDEL VCF files\n    o_tabix_snps:\n        type: File[]\n        outputSource: tabix_snps/output\n    o_tabix_indels:\n        type: File[]\n        outputSource: tabix_indels/output\n    # Concatenated, hard-filtered VCF files with FILTER tags\n    o_bcftools_concat:\n        type: File[]\n        outputSource: bcftools_concat/output\n    # Concatenated, hard-filtered VCF files - PASS only\n    o_bcftools_view_hard_filter:\n        type: File[]\n        outputSource: bcftools_view_hard_filter/output\n    o_bcftools_norm_hard_filter:\n        type: File[]\n        outputSource: bcftools_norm_hard_filter/output\n    # CNNScoreVariants VCF files with scores\n    o_gatk_CNNScoreVariants:\n        type: File[]\n        outputSource: gatk_CNNScoreVariants/output\n    # FilterVariantTranches VCF files with FILTER tags\n    o_gatk_FilterVariantTranches:\n        type: File[]\n        outputSource: gatk_FilterVariantTranches/output\n    # CNN filtered VCF files - PASS only\n    o_bcftools_view_filter_cnn:\n        type: File[]\n        outputSource: bcftools_view_filter_cnn/output\n    o_bcftools_norm_cnn:\n        type: File[]\n        outputSource: bcftools_norm_cnn/output\n    ### ANNOVAR outputs ###\n    # CNN\n    o_table_annovar_cnn_filtered_multianno_vcf:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/multianno_vcf\n    o_table_annovar_cnn_filtered_multianno_txt:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/multianno_txt\n    o_table_annovar_cnn_filtered_avinput:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/avinput\n    # Hard filtering\n    o_table_annovar_hard_filtered_multianno_vcf:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/multianno_vcf\n    o_table_annovar_hard_filtered_multianno_txt:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/multianno_txt\n    o_table_annovar_hard_filtered_avinput:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/avinput\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n    ### Trim_galore ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file    \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired: split_single_paired/paired_files\n            trimming_single: trim_galore_single/trim_galore\n            trimming_paired: trim_galore_paired/trim_galore\n        out:\n        - single_files\n        - paired_files\n    ### Collect flowcell ID and lane information - Single end ###\n    rg_extraction_single:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: check_trimming/single_files\n        out: [rg_information]\n    ### BWA MEM - Single end ###\n    bwa_mem_single:\n        run: ../wrappers/bwa-mem.cwl\n        # scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            # R: \n            trimmed_fq_read1: check_trimming/single_files\n        out: [output]\n    ### Split forward and reverse read files ###\n    split_paired_read1_read2:\n        run: ../wrappers/split-paired-read1-read2.cwl\n        in:\n            paired_files: check_trimming/paired_files\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: [reads_1, reads_2]\n    ### Collect flowcell ID and lane information - Paired end ###\n    rg_extraction_paired:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: split_paired_read1_read2/reads_1\n        out: [rg_information]\n    ### BWA MEM - Paired end ###\n    bwa_mem_paired:\n        run: ../wrappers/bwa-mem.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        - trimmed_fq_read2\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            # R: \n            trimmed_fq_read1: split_paired_read1_read2/reads_1\n            trimmed_fq_read2: split_paired_read1_read2/reads_2\n        out: [output]\n    ### Collect and output all SAM files & generate filenames for next steps ###\n    gather_bwa_sam_files:\n        run: ../wrappers/gather-bwa-sam-files_single_v2.cwl\n        in: \n            single_files: bwa_mem_single/output\n            paired_files: bwa_mem_paired/output\n            single_files_rg_info: rg_extraction_single/rg_information\n            paired_files_rg_info: rg_extraction_paired/rg_information\n        out: [total_sam_files,\n              names_rgids,\n              names_rgpus,\n              names_rgplbs]\n    ### samtools view - SAM to BAM conversion ###\n    # options for filtering out based on SAM FLAG fields:\n    # read unmapped (0x4)\n    # not primary alignment (0x100)\n    # supplementary alignment (0x800)\n    samtools_view_conversion:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam:\n                valueFrom: $( true )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: gather_bwa_sam_files/total_sam_files\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            # filter out using SAM FLAG values:\n            readswithoutbits: samtools_view_readswithoutbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: # gather_bwa_sam_files/names_bam_raw\n                valueFrom: $(inputs.input.basename.split(\".sam\")[0].concat(\".bam\"))\n        out: [output]\n    ### samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view_conversion/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n                valueFrom: $( true )\n        out: [sorted]\n    ### samtools fixmate – fills in mate coordinates and insert size fields ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted \n            output_file_name: \n                valueFrom: $(inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\".fixed.bam\"))\n        out: [output]\n    ### samtools sort by chromosomal coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_fixmate/output\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.bam\")[0].concat(\".fixed.sorted.bam\"))\n        out: [sorted]\n    ### Picard AddOrReplaceReadGroups - Assigns all the reads in a file to a single new read-group ###\n    picard_addorreplacereadgroups:\n        run: ../wrappers/picard-AddOrReplaceReadGroups.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - INPUT\n        - rgid\n        - rgpu\n        - rglb\n        in: \n            INPUT: samtools_sort/sorted \n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0].concat(\".fixed.sorted.uniq.rg.bam\"))\n            rgid: gather_bwa_sam_files/names_rgids\n            rglb: gather_bwa_sam_files/names_rgplbs \n            rgpl: picard_addorreplacereadgroups_rgpl \n            rgpu: gather_bwa_sam_files/names_rgpus\n            rgsm: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0])\n        out: [output]\n    ### Picard MarkDuplicates ###\n    picard_markduplicates:\n        run: ../wrappers/picard-MarkDuplicates.cwl\n        scatter: \n        - INPUT\n        in:\n            INPUT: picard_addorreplacereadgroups/output\n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".fixed.sorted.uniq.rg.md.bam\"))\n            METRICS_FILE: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".md_metrics.txt\"))\n        out: [output, output_report]\n    ### samtools flagstat – counts the number of alignments for each FLAG type ###\n    samtools_flagstat:\n        run: ../wrappers/samtools-flagstat.cwl\n        scatter:\n        - input\n        in:\n            threads: samtools_flagstat_threads\n            input: picard_markduplicates/output\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".align.stats.txt\"))\n        out: [output]\n    ### samtools view - print only alignment counts ###\n    samtools_view_count_total:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam: \n                valueFrom: $( false )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: picard_markduplicates/output\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: \n                default: true \n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".count.total.txt\"))\n        out: [output]\n    ### GATK SplitIntervals ###\n    gatk_splitintervals:\n        run: ../wrappers/gatk-SplitIntervals.cwl\n        in:\n            reference: reference_genome\n            include_intervalList: gatk_splitintervals_include_intervalList\n            exclude_intervalList: gatk_splitintervals_exclude_intervalList\n            scatter_count: gatk_splitintervals_scatter_count\n        out: [intervalfiles]\n    # GATK BQSR\n    ### samtools index ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: picard_markduplicates/output\n        out: [alignments_with_index]\n    ### GATK BaseRecalibrator - GatherBQSRReports subworkflow ###\n    gatk_bqsr_subworkflow:\n        run: ../workflows/gatk-bqsr-subworkflow.cwl\n        scatter: \n        - bqsr_INPUT\n        in: \n            bqsr_INPUT: samtools_index/alignments_with_index\n            bqsr_OUTPUT: \n                valueFrom: $(inputs.bqsr_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0])\n            bqsr_reference: reference_genome\n            bqsr_known_sites_1: sub_bqsr_known_sites_1\n            bqsr_known_sites_2: sub_bqsr_known_sites_2\n            bqsr_known_sites_3: sub_bqsr_known_sites_3\n            bqsr_intervals: gatk_splitintervals/intervalfiles\n            bqsr_interval_padding: sub_bqsr_interval_padding\n        out: \n        - o_gatk_gatherbqsrreports\n    ### GATK ApplyBQSR ###\n    gatk_applybqsr:\n        run: ../wrappers/gatk-ApplyBQSR.cwl\n        scatterMethod: dotproduct\n        scatter: \n        - INPUT\n        - bqsr_recal_file\n        in: \n            INPUT: samtools_index/alignments_with_index \n            bqsr_recal_file: gatk_bqsr_subworkflow/o_gatk_gatherbqsrreports \n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".bqsr.bam\"))\n            reference: reference_genome\n        out: [output]\n    ### samtools index ###\n    samtools_index_2:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: gatk_applybqsr/output\n        out: [alignments_with_index]\n    ### GATK HaplotypeCaller - Single-sample mode - without BQSR subworkflow ###\n    gatk_haplotypecaller_subworkflow:\n        run: ../workflows/gatk-haplotypecaller-subworkflow.cwl\n        scatter: \n        - hf_INPUT\n        in: \n            hf_INPUT: samtools_index/alignments_with_index\n            hf_OUTPUT: \n                valueFrom: $(inputs.hf_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0])\n            hf_reference: reference_genome\n            hf_intervals: gatk_splitintervals/intervalfiles\n            hf_hc_native_pairHMM_threads: sub_hc_native_pairHMM_threads\n            hf_hc_java_options: sub_hc_java_options\n        out: \n        - o_gatk_MergeVCFs\n    # GATK Hard-filtering\n    ### GATK SelectVariants ###\n    # SNPs\n    gatk_SelectVariants_snps:\n        run: ../wrappers/gatk-SelectVariants.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            OUTPUT: \n              valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".snp.vcf\"))\n            variant_type: \n              valueFrom: $( \"SNP\" )\n        out: [output]\n    # INDELs\n    gatk_SelectVariants_indels:\n        run: ../wrappers/gatk-SelectVariants.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            OUTPUT: \n              valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".indel.vcf\"))\n            variant_type: \n              valueFrom: $( \"INDEL\" )\n        out: [output]\n    ### GATK VariantFiltration ###\n    # SNPs\n    gatk_VariantFiltration_snps:\n        run: ../wrappers/gatk-VariantFiltration.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_SelectVariants_snps/output\n            window: VariantFiltration_window\n            cluster: VariantFiltration_cluster\n            filter_name: VariantFiltration_filter_name_snp\n            filter: VariantFiltration_filter_snp\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".snp.vcf\")[0].concat(\".filtered.snp.vcf\"))\n        out: [output]\n    # INDELs\n    gatk_VariantFiltration_indels:\n        run: ../wrappers/gatk-VariantFiltration.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_SelectVariants_indels/output\n            window: VariantFiltration_window\n            cluster: VariantFiltration_cluster\n            filter_name: VariantFiltration_filter_name_indel\n            filter: VariantFiltration_filter_indel\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".indel.vcf\")[0].concat(\".filtered.indel.vcf\"))\n        out: [output]\n    ### bgzip - tabix ###\n    # SNPs\n    bgzip_snps:\n        run: ../wrappers/bgzip.cwl\n        scatter: \n        - input\n        in: \n            input: gatk_VariantFiltration_snps/output\n        out: [output]\n    tabix_snps:\n        run: ../wrappers/tabix.cwl\n        scatter: \n        - input\n        in: \n            input: bgzip_snps/output\n        out: [output]\n    # INDELs\n    bgzip_indels:\n        run: ../wrappers/bgzip.cwl\n        scatter: \n        - input\n        in: \n            input: gatk_VariantFiltration_snps/output\n        out: [output]\n    tabix_indels:\n        run: ../wrappers/tabix.cwl\n        scatter: \n        - input\n        in: \n            input: bgzip_indels/output\n        out: [output]\n    ### bcftools concat - concatenate SNP and INDEL VCF files ###\n    bcftools_concat:\n        run: ../wrappers/bcftools-concat.cwl\n        scatterMethod: dotproduct\n        scatter: \n        - input1\n        - input2\n        in: \n            input1: tabix_snps/output\n            input2: tabix_indels/output\n            threads: bcftools_view_threads\n            output_name: \n                valueFrom: $(inputs.input1.basename.split(\".filtered.snp.vcf\")[0].concat(\".concat.vcf\"))\n        out: [output]\n    ### bcftools view - filter variants ###\n    bcftools_view_hard_filter:\n        run: ../wrappers/bcftools-view.cwl\n        scatter: \n        - input\n        in: \n            input: bcftools_concat/output\n            threads: bcftools_view_threads\n            include: bcftools_view_include_hard_filters\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".concat.vcf\")[0].concat(\".bcftools.hard.filtered.vcf\"))\n        out: [output]\n    ### bcftools norm ###\n    bcftools_norm_hard_filter:\n        run: ../wrappers/bcftools-norm.cwl\n        scatter: \n        - input\n        in: \n            input: bcftools_view_hard_filter/output\n            threads: bcftools_norm_threads\n            reference: reference_genome\n            multiallelics: bcftoomls_norm_multiallelics\n            output_type: \n                valueFrom: $( \"v\" )\n        out: [output]\n    ### ANNOVAR - variant annotation - Hard filtering ###\n    table_annovar_hard_filtered:\n        run: ../wrappers/table-annovar.cwl\n        scatter: \n        - query_file\n        in:\n            query_file: bcftools_norm_hard_filter/output\n            database_location: table_annovar_database_location\n            build_over: table_annovar_build_over\n            remove: table_annovar_remove\n            protocol: table_annovar_protocol\n            operation: table_annovar_operation\n            na_string: table_annovar_na_string\n            vcfinput: table_annovar_vcfinput\n            otherinfo: table_annovar_otherinfo\n            convert_arg: table_annovar_convert_arg\n        out: [multianno_vcf, multianno_txt, avinput]\n\n    # GATK CNN-filtering\n    ### GATK CNNScoreVariants ###\n    gatk_CNNScoreVariants:\n        run: ../wrappers/gatk-CNNScoreVariants.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - variant\n        - aligned_reads\n        in: \n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            aligned_reads: samtools_index_2/alignments_with_index\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".cnn.vcf\"))",
    "p_tag_content": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: At this point the application of single-sample workflow follows, during which multiple samples are accepted as input and they are not merged into a unified VCF file but are rather processed separately in each step of the workflow, leading to the production of a VCF file for each sample: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/527?version=1 DOI:10.48546/workflowhub.workflow.527.1 Initial commit Views:1504Downloads:173 Created: 5th Jul 2023 at 10:48 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 186,
    "discussion_links": "[{'id': '614', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '615', 'label': 'Tutorial', 'url': 'https://github.com/bioexcel/biobb_wf_godmd/'}, {'id': '616', 'label': 'Documentation', 'url': 'https://biobb-wf-godmd.readthedocs.io/en/latest/index.html'}]",
    "title": "CWL Protein Conformational Transitions calculations tutorial",
    "license": "Apache-2.0",
    "description": "# Protein Conformational Transitions calculations tutorial using BioExcel Building Blocks (biobb) and GOdMD\n\nThis tutorial aims to illustrate the process of computing a conformational transition between two known structural conformations of a protein, step by step, using the BioExcel Building Blocks library (biobb).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/549?version=1', 'commit': '36c8c93dccfe31decfbcfad930c72d9601f79a42', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/549/git/1/tree', 'doi': '10.48546/workflowhub.workflow.549.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-08-02T09:54:17.000Z",
    "updated_at": "2023-08-02T10:03:39.000Z",
    "doi": "10.48546/workflowhub.workflow.549.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_chain_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_chain_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_remove_molecules_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_remove_molecules_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_output_aln_orig_path', 'name': 'Output file', 'description': 'Output GOdMD alignment file corresponding to the origin structure of the conformational transition.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_output_aln_target_path', 'name': 'Output file', 'description': 'Output GOdMD alignment file corresponding to the target structure of the conformational transition.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_config', 'name': 'Config file', 'description': 'Configuration file for biobb_godmd.godmd_prep tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_ene_path', 'name': 'Output file', 'description': 'Output energy file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_trj_path', 'name': 'Output file', 'description': 'Output trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_pdb_path', 'name': 'Output file', 'description': 'Output structure file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_godmd.godmd_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_convert_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_convert_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_convert tool.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_chain/output_structure_path']}, {'id': 'step1_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_chain/output_structure_path']}, {'id': 'step2_remove_molecules_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step2_remove_molecules/output_molecules_path']}, {'id': 'step4_godmd_prep_out1', 'name': 'output_aln_orig_path', 'description': 'Output GOdMD alignment file corresponding to the origin structure of the conformational transition.', 'type': [{'type': 'File'}], 'source_ids': ['step4_godmd_prep/output_aln_orig_path']}, {'id': 'step4_godmd_prep_out2', 'name': 'output_aln_target_path', 'description': 'Output GOdMD alignment file corresponding to the target structure of the conformational transition.', 'type': [{'type': 'File'}], 'source_ids': ['step4_godmd_prep/output_aln_target_path']}, {'id': 'step5_godmd_run_out1', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_log_path']}, {'id': 'step5_godmd_run_out2', 'name': 'output_ene_path', 'description': 'Output energy file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_ene_path']}, {'id': 'step5_godmd_run_out3', 'name': 'output_trj_path', 'description': 'Output trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_trj_path']}, {'id': 'step5_godmd_run_out4', 'name': 'output_pdb_path', 'description': 'Output structure file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_pdb_path']}, {'id': 'step6_cpptraj_convert_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_convert/output_cpptraj_path']}], 'steps': [{'id': 'step0_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step0_extract_chain/output_structure_path']}, {'id': 'step1_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step1_extract_chain/output_structure_path']}, {'id': 'step2_remove_molecules', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step2_remove_molecules/output_molecules_path']}, {'id': 'step4_godmd_prep', 'name': 'godmd_prep', 'description': 'Helper BioBB to prepare inputs for the GOdMD tool (protein conformational transitions).', 'sink_ids': ['step4_godmd_prep/output_aln_orig_path', 'step4_godmd_prep/output_aln_target_path']}, {'id': 'step5_godmd_run', 'name': 'godmd_run', 'description': 'Wrapper of the GOdMD tool to compute protein conformational transitions.', 'sink_ids': ['step5_godmd_run/output_log_path', 'step5_godmd_run/output_ene_path', 'step5_godmd_run/output_trj_path', 'step5_godmd_run/output_pdb_path']}, {'id': 'step6_cpptraj_convert', 'name': 'cpptraj_convert', 'description': 'Wrapper of the Ambertools Cpptraj module for converting between cpptraj compatible trajectory file formats and/or extracting a selection of atoms or frames.', 'sink_ids': ['step6_cpptraj_convert/output_cpptraj_path']}], 'links': [{'id': 'config', 'source_id': 'step0_extract_chain_config', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_chain_input_structure_path', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_extract_chain_output_structure_path', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_extract_chain_config', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_chain_input_structure_path', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step1_extract_chain_output_structure_path', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_remove_molecules_config', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_chain/output_structure_path', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step2_remove_molecules_output_molecules_path', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_godmd_prep_config', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'input_pdb_orig_path', 'source_id': 'step2_remove_molecules/output_molecules_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'input_pdb_target_path', 'source_id': 'step1_extract_chain/output_structure_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'output_aln_orig_path', 'source_id': 'step4_godmd_prep_output_aln_orig_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'output_aln_target_path', 'source_id': 'step4_godmd_prep_output_aln_target_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_godmd_run_config', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_orig_path', 'source_id': 'step2_remove_molecules/output_molecules_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_target_path', 'source_id': 'step1_extract_chain/output_structure_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_aln_orig_path', 'source_id': 'step4_godmd_prep/output_aln_orig_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_aln_target_path', 'source_id': 'step4_godmd_prep/output_aln_target_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_godmd_run_output_log_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_ene_path', 'source_id': 'step5_godmd_run_output_ene_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_trj_path', 'source_id': 'step5_godmd_run_output_trj_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step5_godmd_run_output_pdb_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_cpptraj_convert_config', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step5_godmd_run/output_pdb_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step5_godmd_run/output_pdb_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step6_cpptraj_convert_output_cpptraj_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 549,
    "text_field": "['biobb_adapters', 'README.md', 'cpptraj_convert.cwl', 'extract_chain.cwl', 'godmd_prep.cwl', 'godmd_run.cwl', 'remove_molecules.cwl', 'origin.pdb', 'target.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of computing a conformational transition between two known structural conformations of a protein, step by step, using the BioExcel Building Blocks library (biobb). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/549?version=1 DOI:10.48546/workflowhub.workflow.549.1 Initial commit Views:1601Downloads:355 Created: 2nd Aug 2023 at 10:54 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 189,
    "discussion_links": "[{'id': '627', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '628', 'label': 'Tutorial', 'url': 'https://github.com/bioexcel/biobb_wf_flexserv/'}, {'id': '629', 'label': 'Documentation', 'url': 'https://biobb-wf-flexserv.readthedocs.io/en/latest/index.html'}]",
    "title": "CWL Macromolecular Coarse-Grained Flexibility tutorial",
    "license": "Apache-2.0",
    "description": "# Macromolecular Coarse-Grained Flexibility (FlexServ) tutorial using BioExcel Building Blocks (biobb)\n\nThis tutorial aims to illustrate the process of generating protein conformational ensembles from 3D structures and analysing its molecular flexibility, step by step, using the BioExcel Building Blocks library (biobb).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/552?version=1', 'commit': '961878144503167de2e9fe7abeb4576d87d2b7b5', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/552/git/1/tree', 'doi': '10.48546/workflowhub.workflow.552.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-08-02T10:50:45.000Z",
    "updated_at": "2023-08-02T11:21:11.000Z",
    "doi": "10.48546/workflowhub.workflow.552.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_atoms_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_atoms_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_extract_atoms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_atoms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.bd_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_dmd_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_dmd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.nma_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_pcz_info_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA info such as number of components, variance and dimensionality.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_pcz_evecs_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Eigen Vectors.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_pcz_evecs_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_evecs tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_pcz_animate_output_crd_path', 'name': 'Output file', 'description': 'Output PCA animated trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_pcz_animate_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_animate tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_cpptraj_convert_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_cpptraj_convert_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_convert tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_output_dat_path', 'name': 'Output file', 'description': 'Output Bfactor x residue x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB with Bfactor x residue x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_bfactor tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_pcz_stiffness_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Stiffness.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_pcz_stiffness_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_stiffness tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step25_pcz_collectivity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Collectivity indexes per mode.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step25_pcz_collectivity_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_collectivity tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step26_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step26_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step27_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step27_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step28_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step28_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_atoms_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_atoms/output_structure_path']}, {'id': 'step1_bd_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step1_bd_run/output_crd_path']}, {'id': 'step1_bd_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step1_bd_run/output_log_path']}, {'id': 'step2_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step2_cpptraj_rms/output_cpptraj_path']}, {'id': 'step2_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step2_cpptraj_rms/output_traj_path']}, {'id': 'step3_dmd_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step3_dmd_run/output_crd_path']}, {'id': 'step3_dmd_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step3_dmd_run/output_log_path']}, {'id': 'step4_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step4_cpptraj_rms/output_cpptraj_path']}, {'id': 'step4_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step4_cpptraj_rms/output_traj_path']}, {'id': 'step5_nma_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step5_nma_run/output_crd_path']}, {'id': 'step5_nma_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_nma_run/output_log_path']}, {'id': 'step6_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_rms/output_cpptraj_path']}, {'id': 'step6_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_rms/output_traj_path']}, {'id': 'step7_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step7_pcz_zip/output_pcz_path']}, {'id': 'step8_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step8_pcz_zip/output_pcz_path']}, {'id': 'step9_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step9_pcz_zip/output_pcz_path']}, {'id': 'step10_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step10_pcz_unzip/output_crd_path']}, {'id': 'step11_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step11_pcz_unzip/output_crd_path']}, {'id': 'step12_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step12_pcz_unzip/output_crd_path']}, {'id': 'step13_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step13_cpptraj_rms/output_cpptraj_path']}, {'id': 'step13_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step13_cpptraj_rms/output_traj_path']}, {'id': 'step14_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step14_cpptraj_rms/output_cpptraj_path']}, {'id': 'step14_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step14_cpptraj_rms/output_traj_path']}, {'id': 'step15_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step15_cpptraj_rms/output_cpptraj_path']}, {'id': 'step15_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step15_cpptraj_rms/output_traj_path']}, {'id': 'step16_pcz_info_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA info such as number of components, variance and dimensionality.', 'type': [{'type': 'File'}], 'source_ids': ['step16_pcz_info/output_json_path']}, {'id': 'step17_pcz_evecs_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Eigen Vectors.', 'type': [{'type': 'File'}], 'source_ids': ['step17_pcz_evecs/output_json_path']}, {'id': 'step18_pcz_animate_out1', 'name': 'output_crd_path', 'description': 'Output PCA animated trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step18_pcz_animate/output_crd_path']}, {'id': 'step19_cpptraj_convert_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step19_cpptraj_convert/output_cpptraj_path']}, {'id': 'step20_pcz_bfactor_out1', 'name': 'output_dat_path', 'description': 'Output Bfactor x residue x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step20_pcz_bfactor/output_dat_path']}, {'id': 'step20_pcz_bfactor_out2', 'name': 'output_pdb_path', 'description': 'Output PDB with Bfactor x residue x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step20_pcz_bfactor/output_pdb_path']}, {'id': 'step21_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step21_pcz_hinges/output_json_path']}, {'id': 'step22_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step22_pcz_hinges/output_json_path']}, {'id': 'step23_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step23_pcz_hinges/output_json_path']}, {'id': 'step24_pcz_stiffness_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Stiffness.', 'type': [{'type': 'File'}], 'source_ids': ['step24_pcz_stiffness/output_json_path']}, {'id': 'step25_pcz_collectivity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Collectivity indexes per mode.', 'type': [{'type': 'File'}], 'source_ids': ['step25_pcz_collectivity/output_json_path']}, {'id': 'step26_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step26_pcz_similarity/output_json_path']}, {'id': 'step27_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step27_pcz_similarity/output_json_path']}, {'id': 'step28_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step28_pcz_similarity/output_json_path']}], 'steps': [{'id': 'step0_extract_atoms', 'name': 'extract_atoms', 'description': 'Class to extract atoms from a 3D structure.', 'sink_ids': ['step0_extract_atoms/output_structure_path']}, {'id': 'step1_bd_run', 'name': 'bd_run', 'description': 'Run Brownian Dynamics from FlexServ', 'sink_ids': ['step1_bd_run/output_crd_path', 'step1_bd_run/output_log_path']}, {'id': 'step2_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step2_cpptraj_rms/output_cpptraj_path', 'step2_cpptraj_rms/output_traj_path']}, {'id': 'step3_dmd_run', 'name': 'dmd_run', 'description': 'Run Discrete Molecular Dynamics from FlexServ', 'sink_ids': ['step3_dmd_run/output_crd_path', 'step3_dmd_run/output_log_path']}, {'id': 'step4_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step4_cpptraj_rms/output_cpptraj_path', 'step4_cpptraj_rms/output_traj_path']}, {'id': 'step5_nma_run', 'name': 'nma_run', 'description': 'Run Normal Mode Analysis from FlexServ', 'sink_ids': ['step5_nma_run/output_crd_path', 'step5_nma_run/output_log_path']}, {'id': 'step6_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step6_cpptraj_rms/output_cpptraj_path', 'step6_cpptraj_rms/output_traj_path']}, {'id': 'step7_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step7_pcz_zip/output_pcz_path']}, {'id': 'step8_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step8_pcz_zip/output_pcz_path']}, {'id': 'step9_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step9_pcz_zip/output_pcz_path']}, {'id': 'step10_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step10_pcz_unzip/output_crd_path']}, {'id': 'step11_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step11_pcz_unzip/output_crd_path']}, {'id': 'step12_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step12_pcz_unzip/output_crd_path']}, {'id': 'step13_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step13_cpptraj_rms/output_cpptraj_path', 'step13_cpptraj_rms/output_traj_path']}, {'id': 'step14_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step14_cpptraj_rms/output_cpptraj_path', 'step14_cpptraj_rms/output_traj_path']}, {'id': 'step15_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step15_cpptraj_rms/output_cpptraj_path', 'step15_cpptraj_rms/output_traj_path']}, {'id': 'step16_pcz_info', 'name': 'pcz_info', 'description': 'Extract PCA info (variance, Dimensionality) from a compressed PCZ file', 'sink_ids': ['step16_pcz_info/output_json_path']}, {'id': 'step17_pcz_evecs', 'name': 'pcz_evecs', 'description': 'Extract PCA Eigen Vectors from a compressed PCZ file', 'sink_ids': ['step17_pcz_evecs/output_json_path']}, {'id': 'step18_pcz_animate', 'name': 'pcz_animate', 'description': 'Extract PCA animations from a compressed PCZ file', 'sink_ids': ['step18_pcz_animate/output_crd_path']}, {'id': 'step19_cpptraj_convert', 'name': 'cpptraj_convert', 'description': 'Wrapper of the Ambertools Cpptraj module for converting between cpptraj compatible trajectory file formats and/or extracting a selection of atoms or frames.', 'sink_ids': ['step19_cpptraj_convert/output_cpptraj_path']}, {'id': 'step20_pcz_bfactor', 'name': 'pcz_bfactor', 'description': 'Extract residue bfactors x PCA mode from a compressed PCZ file', 'sink_ids': ['step20_pcz_bfactor/output_dat_path', 'step20_pcz_bfactor/output_pdb_path']}, {'id': 'step21_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step21_pcz_hinges/output_json_path']}, {'id': 'step22_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step22_pcz_hinges/output_json_path']}, {'id': 'step23_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step23_pcz_hinges/output_json_path']}, {'id': 'step24_pcz_stiffness', 'name': 'pcz_stiffness', 'description': 'Extract PCA stiffness from a compressed PCZ file', 'sink_ids': ['step24_pcz_stiffness/output_json_path']}, {'id': 'step25_pcz_collectivity', 'name': 'pcz_collectivity', 'description': 'Extract PCA collectivity (numerical measure of how many atoms are affected by a given mode) from a compressed PCZ file', 'sink_ids': ['step25_pcz_collectivity/output_json_path']}, {'id': 'step26_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step26_pcz_similarity/output_json_path']}, {'id': 'step27_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step27_pcz_similarity/output_json_path']}, {'id': 'step28_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step28_pcz_similarity/output_json_path']}], 'links': [{'id': 'config', 'source_id': 'step0_extract_atoms_config', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_atoms_input_structure_path', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_extract_atoms_output_structure_path', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_bd_run_config', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step1_bd_run_output_crd_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step1_bd_run_output_log_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_cpptraj_rms_config', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step1_bd_run/output_crd_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step2_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step2_cpptraj_rms_output_traj_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step3_dmd_run_output_crd_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_dmd_run_output_log_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_cpptraj_rms_config', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step3_dmd_run/output_crd_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step4_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step4_cpptraj_rms_output_traj_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_nma_run_config', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step5_nma_run_output_crd_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_nma_run_output_log_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_cpptraj_rms_config', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step5_nma_run/output_crd_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step6_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step6_cpptraj_rms_output_traj_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_pcz_zip_config', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step1_bd_run/output_crd_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step7_pcz_zip_output_pcz_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_pcz_zip_config', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_dmd_run/output_crd_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step8_pcz_zip_output_pcz_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_pcz_zip_config', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step5_nma_run/output_crd_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step9_pcz_zip_output_pcz_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step7_pcz_zip/output_pcz_path', 'sink_id': 'step10_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step10_pcz_unzip_output_crd_path', 'sink_id': 'step10_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step8_pcz_zip/output_pcz_path', 'sink_id': 'step11_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step11_pcz_unzip_output_crd_path', 'sink_id': 'step11_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step9_pcz_zip/output_pcz_path', 'sink_id': 'step12_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step12_pcz_unzip_output_crd_path', 'sink_id': 'step12_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'con",
    "tools": [],
    "id": 552,
    "text_field": "['biobb_adapters', '1a32.MoDEL.pcz', 'README.md', 'bd_run.cwl', 'cpptraj_convert.cwl', 'cpptraj_rms.cwl', 'dmd_run.cwl', 'extract_atoms.cwl', 'nma_run.cwl', 'pcz_animate.cwl', 'pcz_bfactor.cwl', 'pcz_collectivity.cwl', 'pcz_evecs.cwl', 'pcz_hinges.cwl', 'pcz_info.cwl', 'pcz_similarity.cwl', 'pcz_stiffness.cwl', 'pcz_unzip.cwl', 'pcz_zip.cwl', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of generating protein conformational ensembles from 3D structures and analysing its molecular flexibility, step by step, using the BioExcel Building Blocks library (biobb). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/552?version=1 DOI:10.48546/workflowhub.workflow.552.1 Initial commit Views:1720Downloads:397 Created: 2nd Aug 2023 at 11:50 Last updated: 2nd Aug 2023 at 12:13 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 203,
    "discussion_links": [],
    "title": "VIRify",
    "license": "Apache-2.0",
    "description": "<p class=\"has-line-data\" data-line-start=\"0\" data-line-end=\"1\"><img src=\"https://img.shields.io/badge/CWL-1.2.0--dev2-green\" alt=\"\"> <img src=\"https://img.shields.io/badge/nextflow-20.01.0-brightgreen\" alt=\"\"> <img src=\"https://img.shields.io/badge/uses-docker-blue.svg\" alt=\"\"> <img src=\"https://img.shields.io/badge/uses-conda-yellow.svg\" alt=\"\"> <img src=\"https://api.travis-ci.org/EBI-Metagenomics/emg-viral-pipeline.svg\" alt=\"\"></p>\n<h1 class=\"code-line\" data-line-start=2 data-line-end=3 ><a id=\"VIRify_2\"></a>VIRify</h1>\n<p class=\"has-line-data\" data-line-start=\"4\" data-line-end=\"5\"><img width=\"500px\" src=\"https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/nextflow/figures/sankey.png\" alt=\"Sankey plot\"></p>\n<p class=\"has-line-data\" data-line-start=\"6\" data-line-end=\"7\">VIRify is a recently developed pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies. The pipeline is part of the repertoire of analysis services offered by <a href=\"https://www.ebi.ac.uk/metagenomics/\">MGnify</a>. VIRify’s taxonomic classification relies on the detection of taxon-specific profile hidden Markov models (HMMs), built upon a set of 22,014 orthologous protein domains and referred to as ViPhOGs.</p>\n<p class=\"has-line-data\" data-line-start=\"8\" data-line-end=\"9\">VIRify was implemented in CWL.</p>\n<h2 class=\"code-line\" data-line-start=10 data-line-end=11 ><a id=\"What_do_I_need_10\"></a>What do I need?</h2>\n<p class=\"has-line-data\" data-line-start=\"12\" data-line-end=\"13\">The current implementation uses CWL version 1.2 dev+2. It was tested using Toil version 4.10 as the workflow engine and conda to manage the software dependencies.</p>\n<h3 class=\"code-line\" data-line-start=14 data-line-end=15 ><a id=\"Docker__Singularity_support_14\"></a>Docker - Singularity support</h3>\n<p class=\"has-line-data\" data-line-start=\"16\" data-line-end=\"17\">Soon…</p>\n<h2 class=\"code-line\" data-line-start=18 data-line-end=19 ><a id=\"Setup_environment_18\"></a>Setup environment</h2>\n<pre><code class=\"has-line-data\" data-line-start=\"21\" data-line-end=\"24\" class=\"language-bash\">conda env create <span class=\"hljs-operator\">-f</span> cwl/requirements/conda_env.yml\nconda activate viral_pipeline\n</code></pre>\n<h2 class=\"code-line\" data-line-start=25 data-line-end=26 ><a id=\"Basic_execution_25\"></a>Basic execution</h2>\n<pre><code class=\"has-line-data\" data-line-start=\"28\" data-line-end=\"31\" class=\"language-bash\"><span class=\"hljs-built_in\">cd</span> cwl/\nvirify.sh -h\n</code></pre>\n<h1 class=\"code-line\" data-line-start=32 data-line-end=33 ><a id=\"A_note_about_metatranscriptomes_32\"></a>A note about metatranscriptomes</h1>\n<p class=\"has-line-data\" data-line-start=\"34\" data-line-end=\"36\">Although VIRify has been benchmarked and validated with metagenomic data in mind, it is also possible to use this tool to detect RNA viruses in metatranscriptome assemblies (e.g. SARS-CoV-2). However, some additional considerations for this purpose are outlined below:<br>\n<strong>1. Quality control:</strong> As for metagenomic data, a thorough quality control of the FASTQ sequence reads to remove low-quality bases, adapters and host contamination (if appropriate) is required prior to assembly. This is especially important for metatranscriptomes as small errors can further decrease the quality and contiguity of the assembly obtained. We have used <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/\">TrimGalore</a> for this purpose.</p>\n<p class=\"has-line-data\" data-line-start=\"37\" data-line-end=\"38\"><strong>2. Assembly:</strong> There are many assemblers available that are appropriate for either metagenomic or single-species transcriptomic data. However, to our knowledge, there is no assembler currently available specifically for metatranscriptomic data. From our preliminary investigations, we have found that transcriptome-specific assemblers (e.g. <a href=\"http://cab.spbu.ru/software/spades/\">rnaSPAdes</a>) generate more contiguous and complete metatranscriptome assemblies compared to metagenomic alternatives (e.g. <a href=\"https://github.com/voutcn/megahit/releases\">MEGAHIT</a> and <a href=\"http://cab.spbu.ru/software/spades/\">metaSPAdes</a>).</p>\n<p class=\"has-line-data\" data-line-start=\"39\" data-line-end=\"40\"><strong>3. Post-processing:</strong> Metatranscriptomes generate highly fragmented assemblies. Therefore, filtering contigs based on a set minimum length has a substantial impact in the number of contigs processed in VIRify. It has also been observed that the number of false-positive detections of <a href=\"https://github.com/jessieren/VirFinder/releases\">VirFinder</a> (one of the tools included in VIRify) is lower among larger contigs. The choice of a length threshold will depend on the complexity of the sample and the sequencing technology used, but in our experience any contigs &lt;2 kb should be analysed with caution.</p>\n<p class=\"has-line-data\" data-line-start=\"41\" data-line-end=\"42\"><strong>4. Classification:</strong> The classification module of VIRify depends on the presence of a minimum number and proportion of phylogenetically-informative genes within each contig in order to confidently assign a taxonomic lineage. Therefore, short contigs typically obtained from metatranscriptome assemblies remain generally unclassified. For targeted classification of RNA viruses (for instance, to search for Coronavirus-related sequences), alternative DNA- or protein-based classification methods can be used. Two of the possible options are: (i) using <a href=\"https://github.com/marbl/MashMap/releases\">MashMap</a> to screen the VIRify contigs against a database of RNA viruses (e.g. Coronaviridae) or (ii) using <a href=\"http://hmmer.org/download.html\">hmmsearch</a> to screen the proteins obtained in the VIRify contigs against marker genes of the taxon of interest.</p>\n<h2>Contact us</h2>\n<a href=\"https://www.ebi.ac.uk/support/metagenomics\">MGnify helpdesk</a>",
    "latest_version": 1,
    "tags": "['covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/26?version=1', 'commit': 'c714c538d5afa5eb81e4d696c202efcfca4acbdb', 'ref': 'refs/tags/v0.4.0', 'tree': '/workflows/26/git/1/tree', 'doi': '10.48546/workflowhub.workflow.26.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-08T10:21:08.000Z",
    "updated_at": "2023-01-16T13:41:53.000Z",
    "doi": "10.48546/workflowhub.workflow.26.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "Martin Hölzer, Alexandre Almeida, Guillermo Rangel-Pineros and Ekaterina Sakharova",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'input_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'virsorter_virome', 'name': None, 'description': 'Set this parameter if the input fasta is mostly viral.\\nSee: https://github.com/simroux/VirSorter/issues/50\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'virsorter_data_dir', 'name': None, 'description': 'VirSorter supporting database files.\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'add_hmms_tsv', 'name': None, 'description': 'Additonal metadata tsv\\n', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'hmmscan_database_dir', 'name': None, 'description': 'HMMScan Viral HMM (databases/vpHMM/vpHMM_database).\\nNOTE: it needs to be a full path.\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'ncbi_tax_db_file', 'name': None, 'description': 'ete3 NCBITaxa db https://github.com/etetoolkit/ete/blob/master/ete3/ncbi_taxonomy/ncbiquery.py\\nhttp://etetoolkit.org/docs/latest/tutorial/tutorial_ncbitaxonomy.html\\nThis file was manually built and placed in the corresponding path (on databases)\\n', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'img_blast_database_dir', 'name': None, 'description': 'Downloaded from:\\nhttps://genome.jgi.doe.gov/portal/IMG_VR/IMG_VR.home.html\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'mashmap_reference_file', 'name': None, 'description': 'MashMap Reference file. Use MashMap to \\n', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'pprmeta_simg', 'name': None, 'description': 'PPR-Meta singularity simg file\\n', 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'filtered_contigs', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['length_filter/filtered_contigs_fasta']}, {'id': 'virfinder_output', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['virfinder/virfinder_output']}, {'id': 'virsorter_output_fastas', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['virsorter/virsorter_fastas']}, {'id': 'high_confidence_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_hc/restored_fasta']}, {'id': 'low_confidence_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_lc/restored_fasta']}, {'id': 'parse_prophages_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_pp/restored_fasta']}, {'id': 'high_confidence_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/high_confidence_contigs_genes']}, {'id': 'low_confidence_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/low_confidence_contigs_genes']}, {'id': 'prophages_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/prophages_contigs_genes']}, {'id': 'taxonomy_assignations', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['assign/assign_tables']}, {'id': 'krona_plots', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['krona/krona_htmls']}, {'id': 'krona_plot_all', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['krona/krona_all_html']}, {'id': 'blast_results', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/blast_results']}, {'id': 'blast_result_filtereds', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/blast_result_filtereds']}, {'id': 'blast_merged_tsvs', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/merged_tsvs']}, {'id': 'mashmap_hits', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['mashmap/output_table']}], 'steps': [{'id': 'fasta_rename', 'name': 'Filter contigs', 'description': None, 'sink_ids': ['fasta_rename/renamed_fasta', 'fasta_rename/name_map']}, {'id': 'length_filter', 'name': 'Filter contigs', 'description': 'Default lenght 1kb https://github.com/EBI-Metagenomics/emg-virify-scripts/issues/6', 'sink_ids': ['length_filter/filtered_contigs_fasta']}, {'id': 'virfinder', 'name': 'VirFinder', 'description': None, 'sink_ids': ['virfinder/virfinder_output']}, {'id': 'virsorter', 'name': 'VirSorter', 'description': None, 'sink_ids': ['virsorter/virsorter_fastas']}, {'id': 'pprmeta', 'name': 'PPR-Meta', 'description': None, 'sink_ids': ['pprmeta/pprmeta_output']}, {'id': 'parse_pred_contigs', 'name': 'Combine', 'description': None, 'sink_ids': ['parse_pred_contigs/high_confidence_contigs', 'parse_pred_contigs/low_confidence_contigs', 'parse_pred_contigs/prophages_contigs']}, {'id': 'prodigal', 'name': 'Prodigal', 'description': None, 'sink_ids': ['prodigal/high_confidence_contigs_genes', 'prodigal/low_confidence_contigs_genes', 'prodigal/prophages_contigs_genes']}, {'id': 'hmmscan', 'name': 'hmmscan', 'description': None, 'sink_ids': ['hmmscan/output_table']}, {'id': 'ratio_evalue', 'name': 'ratio evalue ViPhOG', 'description': None, 'sink_ids': ['ratio_evalue/informative_table']}, {'id': 'annotation', 'name': 'ViPhOG annotations', 'description': None, 'sink_ids': ['annotation/annotation_tables']}, {'id': 'assign', 'name': 'Taxonomic assign', 'description': None, 'sink_ids': ['assign/assign_tables']}, {'id': 'krona', 'name': 'krona plots', 'description': None, 'sink_ids': ['krona/krona_htmls', 'krona/krona_all_html']}, {'id': 'fasta_restore_name_hc', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_hc/restored_fasta']}, {'id': 'fasta_restore_name_lc', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_lc/restored_fasta']}, {'id': 'fasta_restore_name_pp', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_pp/restored_fasta']}, {'id': 'imgvr_blast', 'name': 'Blast in a database of viral sequences including metagenomes', 'description': None, 'sink_ids': ['imgvr_blast/blast_results', 'imgvr_blast/blast_result_filtereds', 'imgvr_blast/merged_tsvs']}, {'id': 'mashmap', 'name': 'MashMap', 'description': None, 'sink_ids': ['mashmap/output_table']}], 'links': [{'id': 'input', 'source_id': 'input_fasta_file', 'sink_id': 'fasta_rename', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'fasta_rename/renamed_fasta', 'sink_id': 'length_filter', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': None, 'sink_id': 'length_filter', 'name': None, 'default_value': 1.0}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'virfinder', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'data_dir', 'source_id': 'virsorter_data_dir', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'virome_decontamination_mode', 'source_id': 'virsorter_virome', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'singularity_image', 'source_id': 'pprmeta_simg', 'sink_id': 'pprmeta', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'pprmeta', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'virfinder_tsv', 'source_id': 'virfinder/virfinder_output', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'virsorter_fastas', 'source_id': 'virsorter/virsorter_fastas', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'pprmeta_csv', 'source_id': 'pprmeta/pprmeta_output', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'high_confidence_contigs', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'low_confidence_contigs', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'prophages_contigs', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/high_confidence_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/low_confidence_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/prophages_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'hmmscan_database_dir', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'hmmscan_table', 'source_id': 'hmmscan/output_table', 'sink_id': 'ratio_evalue', 'name': None, 'default_value': None}, {'id': 'hmms_tsv', 'source_id': 'add_hmms_tsv', 'sink_id': 'ratio_evalue', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/high_confidence_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/low_confidence_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/prophages_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'hmmer_table', 'source_id': 'ratio_evalue/informative_table', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_tables', 'source_id': 'annotation/annotation_tables', 'sink_id': 'assign', 'name': None, 'default_value': None}, {'id': 'ncbi_tax_db', 'source_id': 'ncbi_tax_db_file', 'sink_id': 'assign', 'name': None, 'default_value': None}, {'id': 'assign_tables', 'source_id': 'assign/assign_tables', 'sink_id': 'krona', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'fasta_restore_name_hc', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_hc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'fasta_restore_name_lc', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_lc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'fasta_restore_name_pp', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_pp', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'img_blast_database_dir', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'mashmap_reference_file', 'sink_id': 'mashmap', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 26,
    "text_field": "['pipeline.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2.0-dev2\nclass: Workflow\nlabel: virify\n\nrequirements:\n  SubworkflowFeatureRequirement: {}  \n  MultipleInputFeatureRequirement: {}\n  StepInputExpressionRequirement: {}\n  ScatterFeatureRequirement: {}\n  InlineJavascriptRequirement: {}\n\ninputs:\n  input_fasta_file:  # input assembly\n    type: File\n    format: edam:format_1929\n  virsorter_virome:\n    type: boolean\n    default: false\n    doc: |\n      Set this parameter if the input fasta is mostly viral.\n      See: https://github.com/simroux/VirSorter/issues/50\n  # == Databases == #\n  virsorter_data_dir:\n    type: Directory\n    doc: |\n      VirSorter supporting database files.\n  add_hmms_tsv:\n    type: File\n    format: edam:format_3475\n    doc: |\n        Additonal metadata tsv\n  hmmscan_database_dir:\n    type: Directory\n    doc: |\n      HMMScan Viral HMM (databases/vpHMM/vpHMM_database).\n      NOTE: it needs to be a full path.\n  ncbi_tax_db_file:\n    type: File\n    doc: |\n      ete3 NCBITaxa db https://github.com/etetoolkit/ete/blob/master/ete3/ncbi_taxonomy/ncbiquery.py\n      http://etetoolkit.org/docs/latest/tutorial/tutorial_ncbitaxonomy.html\n      This file was manually built and placed in the corresponding path (on databases)\n  img_blast_database_dir:\n    type: Directory\n    doc: |\n      Downloaded from:\n      https://genome.jgi.doe.gov/portal/IMG_VR/IMG_VR.home.html\n  # optional steps\n  mashmap_reference_file:\n    type: File?\n    doc: |\n      MashMap Reference file. Use MashMap to \n  # == singularity containers == #\n  pprmeta_simg:\n    type: File\n    doc: |\n      PPR-Meta singularity simg file\n\nsteps:\n  fasta_rename:\n    label: Filter contigs\n    run: ./Tools/FastaRename/fasta_rename.cwl\n    in:\n      input: input_fasta_file\n    out:\n      - renamed_fasta\n      - name_map\n\n  length_filter:\n    label: Filter contigs\n    run: ./Tools/LengthFiltering/length_filtering.cwl\n    doc: Default lenght 1kb https://github.com/EBI-Metagenomics/emg-virify-scripts/issues/6\n    in:\n      fasta_file: fasta_rename/renamed_fasta\n      length:\n        default: 1.0\n    out:\n      - filtered_contigs_fasta\n\n  virfinder:\n    label: VirFinder\n    run: ./Tools/VirFinder/virfinder.cwl\n    in:\n      fasta_file: length_filter/filtered_contigs_fasta\n    out:\n      - virfinder_output\n\n  virsorter:\n    label: VirSorter\n    run: ./Tools/VirSorter/virsorter.cwl\n    in:\n      fasta_file: length_filter/filtered_contigs_fasta\n      data_dir: virsorter_data_dir\n      virome_decontamination_mode: virsorter_virome\n    out:\n      - virsorter_fastas \n\n  pprmeta:\n    label: PPR-Meta\n    run: ./Tools/PPRMeta/pprmeta.cwl\n    in:\n      singularity_image: pprmeta_simg\n      fasta_file: length_filter/filtered_contigs_fasta\n    out:\n      - pprmeta_output\n\n  parse_pred_contigs:\n    label: Combine\n    run: ./Tools/ParsingPredictions/parse_viral_pred.cwl\n    in:\n      assembly: length_filter/filtered_contigs_fasta\n      virfinder_tsv: virfinder/virfinder_output\n      virsorter_fastas: virsorter/virsorter_fastas\n      pprmeta_csv: pprmeta/pprmeta_output\n    out:\n      - high_confidence_contigs\n      - low_confidence_contigs\n      - prophages_contigs\n\n  prodigal:\n    label: Prodigal\n    run: ./Tools/Prodigal/prodigal_swf.cwl\n    in:\n      high_confidence_contigs: parse_pred_contigs/high_confidence_contigs\n      low_confidence_contigs: parse_pred_contigs/low_confidence_contigs\n      prophages_contigs: parse_pred_contigs/prophages_contigs\n    out:\n      - high_confidence_contigs_genes\n      - low_confidence_contigs_genes\n      - prophages_contigs_genes\n\n  hmmscan:\n    label: hmmscan\n    run: ./Tools/HMMScan/hmmscan_swf.cwl\n    in:\n      aa_fasta_files:\n        source: \n          - prodigal/high_confidence_contigs_genes\n          - prodigal/low_confidence_contigs_genes\n          - prodigal/prophages_contigs_genes\n        linkMerge: merge_flattened\n      database: hmmscan_database_dir\n    out:\n      # single concatenated table\n      - output_table\n\n  ratio_evalue:\n    label: ratio evalue ViPhOG\n    run: ./Tools/RatioEvalue/ratio_evalue.cwl\n    in:\n      hmmscan_table: hmmscan/output_table\n      hmms_tsv: add_hmms_tsv\n    out:\n      - informative_table\n\n  annotation:\n    label: ViPhOG annotations\n    run: ./Tools/Annotation/viral_annotation_swf.cwl\n    in:\n      input_fastas:\n        source:\n          - prodigal/high_confidence_contigs_genes\n          - prodigal/low_confidence_contigs_genes\n          - prodigal/prophages_contigs_genes\n        linkMerge: merge_flattened\n      hmmer_table: ratio_evalue/informative_table\n    out:\n      - annotation_tables\n\n  assign:\n    label: Taxonomic assign\n    run: ./Tools/Assign/assign_swf.cwl\n    in:\n      input_tables: annotation/annotation_tables\n      ncbi_tax_db: ncbi_tax_db_file\n    out:\n      - assign_tables\n\n  krona:\n    label: krona plots\n    run:  ./Tools/Krona/krona_swf.cwl\n    in:\n      assign_tables: assign/assign_tables\n    out:\n      - krona_htmls\n      - krona_all_html\n\n  fasta_restore_name_hc:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/high_confidence_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  fasta_restore_name_lc:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/low_confidence_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  fasta_restore_name_pp:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/prophages_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  imgvr_blast:\n    label: Blast in a database of viral sequences including metagenomes\n    run: ./Tools/IMGvrBlast/imgvr_blast_swf.cwl\n    in:\n      fasta_files:\n        source:\n          - parse_pred_contigs/high_confidence_contigs\n          - parse_pred_contigs/low_confidence_contigs\n          - parse_pred_contigs/prophages_contigs\n        linkMerge: merge_flattened\n      database: img_blast_database_dir\n    out:\n      - blast_results\n      - blast_result_filtereds\n      - merged_tsvs\n  \n  mashmap:\n    label: MashMap\n    run: ./Tools/MashMap/mashmap_swf.cwl\n    when: $(inputs.reference !== undefined)\n    in:\n      input_fastas:\n        source:\n          - parse_pred_contigs/high_confidence_contigs\n          - parse_pred_contigs/low_confidence_contigs\n          - parse_pred_contigs/prophages_contigs\n        linkMerge: merge_flattened\n      reference: mashmap_reference_file\n    out:\n      # each table will have the input as prefix of the name\n      - output_table\n  \noutputs:\n  filtered_contigs:\n    outputSource: length_filter/filtered_contigs_fasta\n    type: File\n  virfinder_output:\n    outputSource: virfinder/virfinder_output\n    type: File\n  virsorter_output_fastas:\n    outputSource: virsorter/virsorter_fastas\n    type: File[]\n  high_confidence_contigs:\n    outputSource: fasta_restore_name_hc/restored_fasta\n    type: File?\n  low_confidence_contigs:\n    outputSource: fasta_restore_name_lc/restored_fasta\n    type: File?\n  parse_prophages_contigs:\n    outputSource: fasta_restore_name_pp/restored_fasta\n    type: File?\n  high_confidence_faa:\n    outputSource: prodigal/high_confidence_contigs_genes\n    type: File?\n  low_confidence_faa:\n    outputSource: prodigal/low_confidence_contigs_genes\n    type: File?\n  prophages_faa:\n    outputSource: prodigal/prophages_contigs_genes\n    type: File?\n  taxonomy_assignations:\n    outputSource: assign/assign_tables\n    type:\n      type: array\n      items: File\n  krona_plots:\n    outputSource: krona/krona_htmls\n    type:\n      type: array\n      items: File\n  krona_plot_all:\n    outputSource: krona/krona_all_html\n    type: File\n  blast_results:\n    outputSource: imgvr_blast/blast_results\n    type: File[]\n  blast_result_filtereds:\n    outputSource: imgvr_blast/blast_result_filtereds\n    type: File[]\n  blast_merged_tsvs:\n    outputSource: imgvr_blast/merged_tsvs\n    type: File[]\n  # optional \n  mashmap_hits:\n    outputSource: mashmap/output_table\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n$namespaces:\n edam: http://edamontology.org/\n s: http://schema.org/\n$schemas:\n - http://edamontology.org/EDAM_1.16.owl\n - https://schema.org/version/latest/schema.rdf\n\ns:license: \"https://www.apache.org/licenses/LICENSE-2.0\"\ns:copyrightHolder:\n    - name: \"EMBL - European Bioinformatics Institute\"\n    - url: \"https://www.ebi.ac.uk/",
    "p_tag_content": "VIRify is a recently developed pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies. The pipeline is part of the repertoire of analysis services offered byMGnify. VIRify’s taxonomic classification relies on the detection of taxon-specific profile hidden Markov models (HMMs), built upon a set of 22,014 orthologous protein domains and referred to as ViPhOGs. VIRify was implemented in CWL. The current implementation uses CWL version 1.2 dev+2. It was tested using Toil version 4.10 as the workflow engine and conda to manage the software dependencies. Soon… Although VIRify has been benchmarked and validated with metagenomic data in mind, it is also possible to use this tool to detect RNA viruses in metatranscriptome assemblies (e.g. SARS-CoV-2). However, some additional considerations for this purpose are outlined below:1. Quality control:As for metagenomic data, a thorough quality control of the FASTQ sequence reads to remove low-quality bases, adapters and host contamination (if appropriate) is required prior to assembly. This is especially important for metatranscriptomes as small errors can further decrease the quality and contiguity of the assembly obtained. We have usedTrimGalorefor this purpose. 2. Assembly:There are many assemblers available that are appropriate for either metagenomic or single-species transcriptomic data. However, to our knowledge, there is no assembler currently available specifically for metatranscriptomic data. From our preliminary investigations, we have found that transcriptome-specific assemblers (e.g.rnaSPAdes) generate more contiguous and complete metatranscriptome assemblies compared to metagenomic alternatives (e.g.MEGAHITandmetaSPAdes). 3. Post-processing:Metatranscriptomes generate highly fragmented assemblies. Therefore, filtering contigs based on a set minimum length has a substantial impact in the number of contigs processed in VIRify. It has also been observed that the number of false-positive detections ofVirFinder(one of the tools included in VIRify) is lower among larger contigs. The choice of a length threshold will depend on the complexity of the sample and the sequencing technology used, but in our experience any contigs <2 kb should be analysed with caution. 4. Classification:The classification module of VIRify depends on the presence of a minimum number and proportion of phylogenetically-informative genes within each contig in order to confidently assign a taxonomic lineage. Therefore, short contigs typically obtained from metatranscriptome assemblies remain generally unclassified. For targeted classification of RNA viruses (for instance, to search for Coronavirus-related sequences), alternative DNA- or protein-based classification methods can be used. Two of the possible options are: (i) usingMashMapto screen the VIRify contigs against a database of RNA viruses (e.g. Coronaviridae) or (ii) usinghmmsearchto screen the proteins obtained in the VIRify contigs against marker genes of the taxon of interest. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/26?version=1 DOI:10.48546/workflowhub.workflow.26.1 Martin Hölzer, Alexandre Almeida, Guillermo Rangel-Pineros and Ekaterina Sakharova Views:5232Downloads:685 Created: 8th Jun 2020 at 11:21 Last updated: 8th Mar 2021 at 21:38 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified"
  },
  {
    "": 205,
    "discussion_links": [],
    "title": "var-PE",
    "license": "Apache-2.0",
    "description": "Analysis of variation within individual COVID-19 samples \nusing bowtie2, bwa, fastp, multiqc , picard ,samtools, snpEff \nWorkflow, tools and data are available on https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/tree/master/Variation\nThis worklow was ported into CWL from a  Galaxy Workflow \n  ( https://github.com/galaxyproject/SARS-CoV-2/tree/master/genomics/4-Variation migrated to CWL).",
    "latest_version": 1,
    "tags": "['CWL', 'covid-19', 'variation']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/28?version=1', 'commit': 'b35522334420dde27958d697fd0a63ed0c94753a', 'ref': 'refs/heads/master', 'tree': '/workflows/28/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-08T14:57:04.000Z",
    "updated_at": "2023-01-16T13:41:56.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/15', 'family_name': 'Juigné', 'given_name': 'Camille', 'affiliation': 'IRISA', 'orcid': 'https://orcid.org/0000-0003-1157-9030'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'reads_reverse', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reads_forward', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_in', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unqualified_phred_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'qualified_phred_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_length_required', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'force_polyg_tail_trimming', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'disable_trim_poly_g', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'base_correction', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'sort_order', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['queryname', 'coordinate', 'duplicate']}], 'default_value': None}, {'id': 'validation_stringency', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['STRICT', 'LENIENT', 'SILENT']}], 'default_value': None}, {'id': 'exclude_unmapped', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'count', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'alignments_are_sorted', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'remove_duplicates', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'validation_stringency_1', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['STRICT', 'LENIENT', 'SILENT']}], 'default_value': None}, {'id': 'comment', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'duplicate_scoring_strategy', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['SUM_OF_BASE_QUALITIES', 'TOTAL_MAPPED_REFERENCE_LENGTH', 'RANDOM']}], 'default_value': None}, {'id': 'optical_duplicate_pixel_distance', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'barcode_tag', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'keepflags', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'defqual', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'bq2_handling', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['keep', 'dynamic', 'fixed']}], 'default_value': None}, {'id': 'bed', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bonferroni', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'call_indels', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'def_alt_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'def_alt_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'del_baq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'enable_source_qual', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'ignore_vcf', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'illumina_1_3', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'max_depth_cov', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'max_mapping_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_cov', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_mq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'use_orphan', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'threads_lf_call', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'replace_non_match', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'region', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'pvalue_cutoff', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'only_indels', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_idaq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_default_filter', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_baq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_mapping_quality', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_ext_base_alignment_quality', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'min_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_alt_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_alt_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'genome_reference', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'udLength', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'transcripts', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'strict', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'spliceSiteSize', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionIntronMin', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionIntronMax', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionExonSize', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'sequenceOntology', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'outputFormat', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['vcf', 'bed', 'gatk', 'bedAnn']}], 'default_value': None}, {'id': 'onlyReg', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'onlyProtein', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'oicr', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noStats', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noShiftHgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noNextProt', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noMotif', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bankfile', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'cancer', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'cancerSamples', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'canon', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'classic', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'csvFile', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'filterInterval', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'hgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'formatEff', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'html_report_1', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'importGenome', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'interval', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'lof', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'motif', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'nextProt', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_downstream', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_EffectType', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_intergenic', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_intron', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_upstream', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_utr', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noGenome', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noHgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noLof', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'geneId', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'separator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'empty_text', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'extractFields', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'IndexName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'multiqc_fastp', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_fastp/multiqc_zip']}, {'id': 'stats_bam', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_stats/stats']}, {'id': 'multiqc_markdups', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_markdups/multiqc_zip']}, {'id': 'multiqc_samtoolsstats', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_stats/multiqc_zip']}, {'id': 'statsFile_snpeff', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['snpeff_build_ann/statsFile']}, {'id': 'out_snpsift', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['snpsift_extract/out']}], 'steps': [{'id': 'fastp', 'name': None, 'description': None, 'sink_ids': ['fastp/html_report', 'fastp/json_report', 'fastp/out_fastq1', 'fastp/out_fastq2']}, {'id': 'multiqc_fastp', 'name': None, 'description': None, 'sink_ids': ['multiqc_fastp/multiqc_zip']}, {'id': 'samtools_view_filter', 'name': None, 'description': None, 'sink_ids': ['samtools_view_filter/bam_filtered']}, {'id': 'picard_sortsam', 'name': None, 'description': None, 'sink_ids': ['picard_sortsam/sorted_alignments']}, {'id': 'picard__mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['picard__mark_duplicates/alignments', 'picard__mark_duplicates/log', 'picard__mark_duplicates/metrics']}, {'id': 'multiqc_markdups', 'name': None, 'description': None, 'sink_ids': ['multiqc_markdups/multiqc_zip']}, {'id': 'lofreq_viterbi', 'name': None, 'description': None, 'sink_ids': ['lofreq_viterbi/realigned']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/bam_sorted']}, {'id': 'samtools_faidx', 'name': None, 'description': None, 'sink_ids': ['samtools_faidx/sequences_index', 'samtools_faidx/sequences_with_index']}, {'id': 'samtool_index', 'name': None, 'description': None, 'sink_ids': ['samtool_index/bam_sorted_indexed']}, {'id': 'bwa_index_cwl', 'name': None, 'description': None, 'sink_ids': ['bwa_index_cwl/index']}, {'id': 'get_secondaryfiles', 'name': None, 'description': None, 'sink_ids': ['get_secondaryfiles/sequences_with_index']}, {'id': 'get_tab', 'name': None, 'description': None, 'sink_ids': ['get_tab/tab']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/reads_stdout']}, {'id': 'samtools_stats', 'name': None, 'description': None, 'sink_ids': ['samtools_stats/stats']}, {'id': 'multiqc_stats', 'name': None, 'description': None, 'sink_ids': ['multiqc_stats/multiqc_zip']}, {'id': 'lofreq_call', 'name': 'LoFreq Call Variants', 'description': None, 'sink_ids': ['lofreq_call/vcf']}, {'id': 'snpeff_build_ann', 'name': None, 'description': None, 'sink_ids': ['snpeff_build_ann/snpeff_output', 'snpeff_build_ann/statsFile', 'snpeff_build_ann/csvFile', 'snpeff_build_ann/genes']}, {'id': 'snpsift_extract', 'name': None, 'description': None, 'sink_ids': ['snpsift_extract/out']}], 'links': [{'id': 'base_correction', 'source_id': 'base_correction', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'disable_trim_poly_g', 'source_id': 'disable_trim_poly_g', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'reads_forward', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'reads_reverse', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'force_polyg_tail_trimming', 'source_id': 'force_polyg_tail_trimming', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'min_length_required', 'source_id': 'min_length_required', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'qualified_phred_quality', 'source_id': 'qualified_phred_quality', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'unqualified_phred_quality', 'source_id': 'unqualified_phred_quality', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_fastp', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'fastp/json_report', 'sink_id': 'multiqc_fastp', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'bwa_mem/reads_stdout', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'count', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'exclude_unmapped', 'source_id': 'exclude_unmapped', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'samtools_view_filter/bam_filtered', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'sort_order', 'source_id': 'sort_order', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'validation_stringency', 'source_id': 'validation_stringency', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'picard_sortsam/sorted_alignments', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'alignments_are_sorted', 'source_id': 'alignments_are_sorted', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'barcode_tag', 'source_id': 'barcode_tag', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'comment', 'source_id': 'comment', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'duplicate_scoring_strategy', 'source_id': 'duplicate_scoring_strategy', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'optical_duplicate_pixel_distance', 'source_id': 'optical_duplicate_pixel_distance', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'remove_duplicates', 'source_id': 'remove_duplicates', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'validation_stringency', 'source_id': 'validation_stringency_1', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_markdups', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'picard__mark_duplicates/metrics', 'sink_id': 'multiqc_markdups', 'name': None, 'default_value': None}, {'id': 'defqual', 'source_id': 'defqual', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'keepflags', 'source_id': 'keepflags', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'picard__mark_duplicates/alignments', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'reference_in', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'lofreq_viterbi/realigned', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'reference_in', 'sink_id': 'samtools_faidx', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'samtools_sort/bam_sorted', 'sink_id': 'samtool_index', 'name': None, 'default_value': None}, {'id': 'InputFile', 'source_id': 'reference_in', 'sink_id': 'bwa_index_cwl', 'name': None, 'default_value': None}, {'id': 'IndexName', 'source_id': 'IndexName', 'sink_id': 'bwa_index_cwl', 'name': None, 'default_value': None}, {'id': 'bwa_index', 'source_id': 'bwa_index_cwl/index', 'sink_id': 'get_secondaryfiles', 'name': None, 'default_value': None}, {'id': 'sequence', 'source_id': 'samtools_faidx/sequences_with_index', 'sink_id': 'get_secondaryfiles', 'name': None, 'default_value': None}, {'id': 'out_fastq1', 'source_id': 'fastp/out_fastq1', 'sink_id': 'get_tab', 'name': None, 'default_value': None}, {'id': 'out_fastq2', 'source_id': 'fastp/out_fastq2', 'sink_id': 'get_tab', 'name': None, 'default_value': None}, {'id': 'Index', 'source_id': 'get_secondaryfiles/sequences_with_index', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'InputFile', 'source_id': 'get_tab/tab', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'samtools_view_filter/bam_filtered', 'sink_id': 'samtools_stats', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_stats', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'samtools_stats/stats', 'sink_id': 'multiqc_stats', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'bonferroni', 'source_id': 'bonferroni', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'call_indels', 'source_id': 'call_indels', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'def_alt_bq', 'source_id': 'def_alt_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'def_alt_jq', 'source_id': 'def_alt_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'del_baq', 'source_id': 'del_baq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'enable_source_qual', 'source_id': 'enable_source_qual', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'ignore_vcf', 'source_id': 'ignore_vcf', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'illumina_1_3', 'source_id': 'illumina_1_3', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'max_depth_cov', 'source_id': 'max_depth_cov', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'max_mapping_quality', 'source_id': 'max_mapping_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_alt_bq', 'source_id': 'min_alt_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_alt_jq', 'source_id': 'min_alt_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_bq', 'source_id': 'min_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_cov', 'source_id': 'min_cov', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_jq', 'source_id': 'min_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_mq', 'source_id': 'min_mq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_baq', 'source_id': 'no_baq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_default_filter', 'source_id': 'no_default_filter', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_ext_base_alignment_quality', 'source_id': 'no_ext_base_alignment_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_idaq', 'source_id': 'no_idaq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_mapping_quality', 'source_id': 'no_mapping_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'only_indels', 'source_id': 'only_indels', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'pvalue_cutoff', 'source_id': 'pvalue_cutoff', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reads_align', 'source_id': 'samtools_sort/bam_sorted', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reads_index', 'source_id': 'samtool_index/bam_sorted_indexed', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'samtools_faidx/sequences_with_index', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reference_index', 'source_id': 'samtools_faidx/sequences_index', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'region', 'source_id': 'region', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'replace_non_match', 'source_id': 'replace_non_match', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_lf_call', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'use_orphan', 'source_id': 'use_orphan', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'importGenome', 'source_id': 'importGenome', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'genome_reference', 'source_id': 'genome_reference', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'bankfile', 'source_id': 'bankfile', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'sequence', 'source_id': 'lofreq_call/vcf', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'outputFormat', 'source_id': 'outputFormat', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'udLength', 'source_id': 'udLength', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'html_report', 'source_id': 'html_report_1', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'csvFile', 'source_id': 'csvFile', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noStats', 'source_id': 'noStats', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'formatEff', 'source_id': 'formatEff', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'classic', 'source_id': 'classic', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'sequenceOntology', 'source_id': 'sequenceOntology', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'hgvs', 'source_id': 'hgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noShiftHgvs', 'source_id': 'noShiftHgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noHgvs', 'source_id': 'noHgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'geneId', 'source_id': 'geneId', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'lof', 'source_id': 'lof', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noLof', 'source_id': 'noLof', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'cancer', 'source_id': 'cancer', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'cancerSamples', 'source_id': 'cancerSamples', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'oicr', 'source_id': 'oicr', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'canon', 'source_id': 'canon', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'motif', 'source_id': 'motif', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noMotif', 'source_id': 'noMotif', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noNextProt', 'source_id': 'noNextProt', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'nextProt', 'source_id': 'nextProt', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noGenome', 'source_id': 'noGenome', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'onlyProtein', 'source_id': 'onlyProtein', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'transcripts', 'source_id': 'transcripts', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'interval', 'source_id': 'interval', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionExonSize', 'source_id': 'spliceRegionExonSize', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionIntronMax', 'source_id': 'spliceRegionIntronMax', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionIntronMin', 'source_id': 'spliceRegionIntronMin', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceSiteSize', 'source_id': 'spliceSiteSize', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'onlyReg', 'source_id': 'onlyReg', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'strict', 'source_id': 'strict', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'filterInterval', 'source_id': 'filterInterval', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_downstream', 'source_id': 'no_downstream', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_intergenic', 'source_id': 'no_intergenic', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_intron', 'source_id': 'no_intron', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_upstream', 'source_id': 'no_upstream', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_utr', 'source_id': 'no_utr', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_EffectType', 'source_id': 'no_EffectType', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'input_vcf', 'source_id': 'snpeff_build_ann/snpeff_output', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'extractFields', 'source_id': 'extractFields', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'separator', 'source_id': 'separator', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'empty_text', 'source_id': 'empty_text', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 28,
    "text_field": "['variation_PE.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: var_pe\nlabel: var-PE\n$namespaces:\n  edam: 'http://edamontology.org/'\ninputs:\n  - id: reads_reverse\n    type: File[]\n    format:\n      - 'edam:format_1930'\n      - 'edam:format_1931'\n\n  - id: reads_forward\n    type: File[]\n    format:\n      - 'edam:format_1930'\n      - 'edam:format_1931'\n  - id: reference_in\n    type: File\n\n   #### 1-  fastp options:\n  - id: unqualified_phred_quality\n    type: int?\n  - id: threads\n    type: int?\n  - id: qualified_phred_quality\n    type: int?\n  - id: min_length_required\n    type: int?\n  - id: force_polyg_tail_trimming\n    type: boolean?\n  - id: disable_trim_poly_g\n    type: boolean?\n  - id: base_correction\n    type: boolean?\n\n   #### picard__sort_sam options:\n  - id: sort_order\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - queryname\n          - coordinate\n          - duplicate\n  - id: validation_stringency\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - STRICT\n          - LENIENT\n          - SILENT\n\n# samtools_view\n  - id: exclude_unmapped\n    type: boolean?\n  - id: count\n    type: boolean\n\n   #### picard__mark_duplicates options:\n  - id: alignments_are_sorted\n    type: boolean\n  - id: remove_duplicates\n    type: boolean\n  - id: validation_stringency_1\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - STRICT\n          - LENIENT\n          - SILENT\n  - id: comment\n    type: 'string[]?'\n  - id: duplicate_scoring_strategy\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - SUM_OF_BASE_QUALITIES\n          - TOTAL_MAPPED_REFERENCE_LENGTH\n          - RANDOM\n  - id: optical_duplicate_pixel_distance\n    type: int?\n  - id: barcode_tag\n    type: string?\n\n   ####lofreq_viterbi options:\n  - id: keepflags\n    type: boolean?\n  - id: defqual\n    type: int?\n  - id: bq2_handling\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - keep\n          - dynamic\n          - fixed\n\n   #### lofreq_cal_variants options:\n  - id: bed\n    type: File?\n  - id: bonferroni\n    type: string?\n  - id: call_indels\n    type: boolean?\n  - id: def_alt_bq\n    type: int?\n  - id: def_alt_jq\n    type: int?\n  - id: del_baq\n    type: boolean?\n  - id: enable_source_qual\n    type: boolean?\n  - id: ignore_vcf\n    type: 'File[]?'\n  - id: illumina_1_3\n    type: boolean?\n  - id: max_depth_cov\n    type: int?\n  - id: max_mapping_quality\n    type: int?\n  - id: min_bq\n    type: int?\n  - id: min_cov\n    type: int?\n  - id: min_mq\n    type: int?\n  - id: use_orphan\n    type: boolean?\n  - id: threads_lf_call\n    type: int?\n  - id: replace_non_match\n    type: int?\n  - id: region\n    type: string?\n  - id: pvalue_cutoff\n    type: float?\n  - id: only_indels\n    type: boolean?\n  - id: no_idaq\n    type: boolean?\n  - id: no_default_filter\n    type: boolean?\n  - id: no_baq\n    type: boolean?\n  - id: no_mapping_quality\n    type: boolean?\n  - id: no_ext_base_alignment_quality\n    type: boolean?\n  - id: min_jq\n    type: int?\n  - id: min_alt_jq\n    type: int?\n  - id: min_alt_bq\n    type: int?\n\n   #### SnpEff build & ann:\n  - id: genome_reference\n    type: string\n  - id: udLength\n    type: int\n  - id: transcripts\n    type: File?\n  - id: strict\n    type: boolean?\n  - id: spliceSiteSize\n    type: int?\n  - id: spliceRegionIntronMin\n    type: int?\n  - id: spliceRegionIntronMax\n    type: int?\n  - id: spliceRegionExonSize\n    type: int?\n  - id: sequenceOntology\n    type: boolean?\n  - id: outputFormat\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - vcf\n          - bed\n          - gatk\n          - bedAnn\n  - id: onlyReg\n    type: boolean?\n  - id: onlyProtein\n    type: boolean?\n  - id: oicr\n    type: boolean?\n  - id: noStats\n    type: boolean?\n  - id: noShiftHgvs\n    type: boolean?\n  - id: noNextProt\n    type: boolean?\n  - id: noMotif\n    type: boolean?\n  - id: bankfile\n    type: File?\n  - id: cancer\n    type: boolean?\n  - id: cancerSamples\n    type: File?\n  - id: canon\n    type: boolean?\n  - id: classic\n    type: boolean?\n  - id: csvFile\n    type: boolean?\n  - id: filterInterval\n    type: 'File[]?'\n  - id: hgvs\n    type: boolean?\n  - id: formatEff\n    type: boolean?\n  - id: html_report_1\n    type: boolean?\n  - id: importGenome\n    type: boolean\n  - id: interval\n    type: 'File[]?'\n  - id: lof\n    type: boolean?\n  - id: motif\n    type: boolean?\n  - id: nextProt\n    type: boolean?\n  - id: no_downstream\n    type: boolean?\n  - id: no_EffectType\n    type: boolean?\n  - id: no_intergenic\n    type: boolean?\n  - id: no_intron\n    type: boolean?\n  - id: no_upstream\n    type: boolean?\n  - id: no_utr\n    type: boolean?\n  - id: noGenome\n    type: boolean?\n  - id: noHgvs\n    type: boolean?\n  - id: noLof\n    type: boolean?\n  - id: geneId\n    type: boolean?\n\n   #### SNPSIFT\n  - id: separator\n    type: string?\n  - id: empty_text\n    type: string?\n  - id: extractFields\n    type: 'string[]?'\n\n  - id: IndexName\n    type: string\n\noutputs:\n  - id: multiqc_fastp\n    type: File\n    outputSource:\n      - multiqc_fastp/multiqc_zip\n  - id: stats_bam\n    type: File[]\n    outputSource:\n      - samtools_stats/stats\n  - id: multiqc_markdups\n    type: File\n    outputSource:\n      - multiqc_markdups/multiqc_zip\n  - id: multiqc_samtoolsstats\n    outputSource:\n       - multiqc_stats/multiqc_zip\n    type: File\n#  - id: log\n#    outputSource:\n#      - picard__mark_duplicates/log\n#    type: File[]\n#  - id: alignments\n#    outputSource:\n#      - picard__mark_duplicates/alignments\n#    type: File[]\n#  - id: genes\n#    outputSource:\n#      - snpeff_build_ann/genes\n#    type: File[]\n  - id: statsFile_snpeff\n    outputSource:\n      - snpeff_build_ann/statsFile\n    type: File[]\n  - id: out_snpsift\n    outputSource:\n      - snpsift_extract/out\n    type: File[]\nsteps:\n  - id: fastp\n    scatter: [fastq1, fastq2]\n    scatterMethod: dotproduct\n    in:\n      - id: base_correction\n        source: base_correction\n      - id: disable_trim_poly_g\n        source: disable_trim_poly_g\n      - id: fastq1\n        source: reads_forward\n      - id: fastq2\n        source: reads_reverse\n      - id: force_polyg_tail_trimming\n        source: force_polyg_tail_trimming\n      - id: min_length_required\n        source: min_length_required\n      - id: qualified_phred_quality\n        source: qualified_phred_quality\n      - id: threads\n        source: threads\n      - id: unqualified_phred_quality\n        source: unqualified_phred_quality\n    out:\n      - id: html_report\n      - id: json_report\n      - id: out_fastq1\n      - id: out_fastq2\n    run: ./tools/fastp.cwl\n\n  - id: multiqc_fastp\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_fast'\n      - id: qc_files_array\n        source: fastp/json_report\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl\n\n  - id: samtools_view_filter\n    scatter: bam\n    in:\n      - id: bam\n        source: bwa_mem/reads_stdout\n      - id: count\n        source: count\n      - id: exclude_unmapped\n        source: exclude_unmapped\n    out:\n      - id: bam_filtered\n    run: ./tools/samtools_view_filter.cwl\n\n  - id: picard_sortsam\n    scatter: alignments\n    in: \n      - id: alignments\n        source: samtools_view_filter/bam_filtered\n      - id: sort_order\n        source: sort_order\n      - id: validation_stringency\n        source: validation_stringency\n    out:\n      - id: sorted_alignments\n    run: ./tools/picard_SortSam.cwl\n\n  - id: picard__mark_duplicates\n    scatter: alignments\n    in:\n      - id: alignments\n        source: picard_sortsam/sorted_alignments\n      - id: alignments_are_sorted\n        source: alignments_are_sorted\n      - id: barcode_tag\n        source: barcode_tag\n      - id: comment\n        source:\n          - comment\n      - id: duplicate_scoring_strategy\n        source: duplicate_scoring_strategy\n      - id: optical_duplicate_pixel_distance\n        source: optical_duplicate_pixel_distance\n      - id: remove_duplicates\n        source: remove_duplicates\n      - id: validation_stringency\n        source: validation_stringency_1\n    out:\n      - id: alignments\n      - id: log\n      - id: metrics\n    run: ./tools/picard_MarkDuplicates.cwl\n\n  - id: multiqc_markdups\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_markdups'\n      - id: qc_files_array\n        source: picard__mark_duplicates/metrics\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl\n\n  - id: lofreq_viterbi\n    scatter: reads\n    in:\n      - id: defqual\n        source: defqual\n      - id: keepflags\n        source: keepflags\n      - id: reads\n        source: picard__mark_duplicates/alignments\n      - id: reference\n        source: reference_in\n    out:\n      - id: realigned\n    run: ./tools/lofreq_viterbi.cwl\n\n  - id: samtools_sort\n    scatter: bam_unsorted\n    in:\n      - id: bam_unsorted\n        source: lofreq_viterbi/realigned\n    out:\n      - id: bam_sorted\n    run: ./tools/samtools_sort.cwl\n\n  - id: samtools_faidx\n    in:\n      - id: sequences\n        source: reference_in\n    out:\n      - id: sequences_index\n      - id: sequences_with_index\n    run: ./tools/samtools_faidx.cwl\n    \n  - id: samtool_index\n    scatter: bam_sorted\n    in:\n      - id: bam_sorted\n        source: samtools_sort/bam_sorted\n    out:\n      - id: bam_sorted_indexed\n    run: ./tools/samtools_index.cwl\n\n  - id: bwa_index_cwl\n    in:\n      - id: InputFile\n        source: reference_in\n      - id: IndexName\n        source: IndexName\n    out:\n      - id: index\n    run: ./tools/bwa-index.cwl\n    \n  - id: get_secondaryfiles\n    in:\n      - id: bwa_index\n        source: bwa_index_cwl/index\n      - id: sequence\n        source: samtools_faidx/sequences_with_index\n    out:\n      - id: sequences_with_index\n    run: ./tools/get_secondaryfiles.cwl\n  - id: get_tab\n    scatter: [out_fastq1, out_fastq2]\n    scatterMethod: dotproduct\n    in: \n      - id: out_fastq1\n        source: fastp/out_fastq1\n      - id: out_fastq2\n        source: fastp/out_fastq2\n    out:\n      - id: tab\n    run: ./tools/mergetab.cwl\n  - id: bwa_mem\n    scatter: InputFile\n    in:\n      Index:\n        source: get_secondaryfiles/sequences_with_index\n      InputFile:\n        source: get_tab/tab\n# [fastp/out_fastq1, fastp/out_fastq2]\n#        linkMerge: merge_nested #flattened\n    out:\n      - id: reads_stdout\n    run: ./tools/bwa-mem.cwl\n  - id: samtools_stats\n    scatter: input_file\n    in:\n      input_file:\n        source: samtools_view_filter/bam_filtered\n    out:\n      - id: stats\n    run: ./tools/samtools_stats.cwl\n  - id: multiqc_stats\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_stats'\n      - id: qc_files_array\n        source: samtools_stats/stats\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl \n\n  - id: lofreq_call\n    scatter: [reads_align, reads_index]\n    scatterMethod: dotproduct\n    in:\n      - id: bed\n        source: bed\n      - id: bonferroni\n        source: bonferroni\n      - id: call_indels\n        source: call_indels\n      - id: def_alt_bq\n        source: def_alt_bq\n      - id: def_alt_jq\n        source: def_alt_jq\n      - id: del_baq\n        source: del_baq\n      - id: enable_source_qual\n        source: enable_source_qual\n      - id: ignore_vcf\n        source:\n          - ignore_vcf\n      - id: illumina_1_3\n        source: illumina_1_3\n      - id: max_depth_cov\n        source: max_depth_cov\n      - id: max_mapping_quality\n        source: max_mapping_quality\n      - id: min_alt_bq\n        source: min_alt_bq\n      - id: min_alt_jq\n        source: min_alt_jq\n      - id: min_bq\n        source: min_bq\n      - id: min_cov\n        source: min_cov\n      - id: min_jq\n        source: min_jq\n      - id: min_mq\n        source: min_mq\n      - id: no_baq\n        source: no_baq\n      - id: no_default_filter\n        source: no_default_filter\n      - id: no_ext_base_alignment_quality\n        source: no_ext_base_alignment_quality\n      - id: no_idaq\n        source: no_idaq\n      - id: no_mapping_quality\n        source: no_mapping_quality\n      - id: only_indels\n        source: only_indels\n      - id: pvalue_cutoff\n        source: pvalue_cutoff\n      - id: reads_align\n        source: samtools_sort/bam_sorted\n      - id: reads_index\n        source: samtool_index/bam_sorted_indexed\n      - id: reference_fasta\n        source: samtools_faidx/sequences_with_index\n      - id: reference_index\n        source: samtools_faidx/sequences_index\n      - id: region\n        source: region\n      - id: replace_non_match\n        source: replace_non_match\n      - id: threads\n        source: threads_lf_call\n      - id: use_orphan\n        source: use_orphan\n    out:\n      - id: vcf\n    run: ./tools/lofreq_call.cwl\n    label: LoFreq Call Variants\n\n  - id: snpeff_build_ann\n    scatter: sequence\n    in:\n      - id: importGenome\n        source: importGenome\n      - id: genome_reference\n        source: genome_reference\n      - id: bankfile\n        source: bankfile\n      - id: sequence\n        source: lofreq_call/vcf\n      - id: outputFormat\n        source: outputFormat\n      - id: udLength\n        source: udLength\n      - id: html_report\n        source: html_report_1\n      - id: csvFile\n        source: csvFile\n      - id: noStats\n        source: noStats\n      - id: formatEff\n        source: formatEff\n      - id: classic\n        source: classic\n      - id: sequenceOntology\n        source: sequenceOntology\n      - id: hgvs\n        source: hgvs\n      - id: noShiftHgvs\n        source: noShiftHgvs\n      - id: noHgvs\n        source: noHgvs\n      - id: geneId\n        source: geneId\n      - id: lof\n        source: lof\n      - id: noLof\n        source: noLof\n      - id: cancer\n        source: cancer\n      - id: cancerSamples\n        source: cancerSamples\n      - id: oicr\n        source: oicr\n      - id: canon\n        source: canon\n      - id: motif\n        source: motif\n      - id: noMotif\n        source: noMotif\n      - id: noNextProt\n        source: noNextProt\n      - id: nextProt\n        source: nextProt\n      - id: noGenome\n        source: noGenome\n      - id: onlyProtein\n        source: onlyProtein\n      - id: transcripts\n        source: transcripts\n      - id: interval\n        source:\n          - interval\n      - id: spliceRegionExonSize\n        source: spliceRegionExonSize\n      - id: spliceRegionIntronMax\n        source: spliceRegionIntronMax\n      - id: spliceRegionIntronMin\n        source: spliceRegionIntronMin\n      - id: spliceSiteSize\n        source: spliceSiteSize\n      - id: onlyReg\n        source: onlyReg\n      - id: strict\n        source: strict\n      - id: filterInterval\n        source:\n          - filterInterval\n      - id: no_downstream\n        source: no_downstream\n      - id: no_intergenic\n        source: no_intergenic\n      - id: no_intron\n        source: no_intron\n      - id: no_upstream\n        source: no_upstream\n      - id: no_utr\n        source: no_utr\n      - id: no_EffectType\n        source: no_EffectType\n    out:\n      - id: snpeff_output\n      - id: statsFile\n      - id: csvFile\n      - id: genes\n    run: ./tools/snpEff_build_ann.cwl\n\n  - id: snpsift_extract\n    scatter: input_vcf\n    in:\n      - id: input_vcf\n        source: snpeff_build_ann/snpeff_output\n      - id: extractFields\n        source:\n          - extractFields\n      - id: separator\n        source: separator\n      - id: empty_text\n        source: empty_text\n    out:\n      - id: out\n    run: ./tools/snpSift_extract.cwl\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: SubworkflowFeatureRequirement\n  - class: MultipleInputFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\n$schemas:\n  - 'http://edamontology.org/EDAM_1.18.owl'",
    "p_tag_content": "Analysis of variation within individual COVID-19 samples\nusing bowtie2, bwa, fastp, multiqc , picard ,samtools, snpEff\nWorkflow, tools and data are available onhttps://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/tree/master/VariationThis worklow was ported into CWL from a  Galaxy Workflow\n(https://github.com/galaxyproject/SARS-CoV-2/tree/master/genomics/4-Variationmigrated to CWL). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/28?version=1 Added/updated 1 files Views:2833Downloads:686 Created: 8th Jun 2020 at 15:57 Last updated: 30th Jun 2020 at 08:58 None Teams:CWL workflow SARS-CoV-2 Organizations:IRISA The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 206,
    "discussion_links": "[{'id': '100', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '101', 'label': 'Tutorial', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows/tutorials/md_setup'}, {'id': '102', 'label': 'Documentation', 'url': 'https://biobb-wf-md-setup.readthedocs.io/en/latest/index.html'}]",
    "title": "Protein MD Setup tutorial using BioExcel Building Blocks (biobb) in CWL",
    "license": "Apache-2.0",
    "description": "Common Workflow Language example that illustrate the process of setting up a simulation system containing a protein, step by step, using the [BioExcel Building Blocks](/projects/11) library (biobb). The particular example used is the Lysozyme protein (PDB code 1AKI). This workflow returns a resulting protein structure and simulated 3D trajectories.",
    "latest_version": 3,
    "tags": "['molecular dynamics', 'protein', 'trajectories']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/29?version=1', 'commit': '954b05ab5f24ebccb80b6ec0bf504b0d55bf6031', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Update to paths for BioBB tools. Taken from Git commit 46f24f0', 'url': 'https://workflowhub.eu/workflows/29?version=2', 'commit': '0af74373ab5790c2fa4b525f213985c381be4dd6', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/2/tree', 'doi': '10.48546/workflowhub.workflow.29.2'}, {'version': 3, 'revision_comments': 'Changing CWL label to test if this corrects the workflow title.', 'url': 'https://workflowhub.eu/workflows/29?version=3', 'commit': '7bb04e4d58d45c7f09116da046f9d07baec7ce3e', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/3/tree', 'doi': '10.48546/workflowhub.workflow.29.3'}]",
    "version": 3,
    "revision_comments": "Changing CWL label to test if this corrects the workflow title.",
    "created_at": "2021-05-10T09:00:56.000Z",
    "updated_at": "2023-01-16T13:42:00.000Z",
    "doi": "10.48546/workflowhub.workflow.29.3",
    "content_blobs": [],
    "creators": "[{'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_gppion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_gppmin_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_energy_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_energy_min_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_gppnvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_energy_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_energy_nvt_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_gppnpt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_energy_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_energy_npt_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gppmd_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsfirst_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsfirst_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsexp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsexp_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_dry_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'trr', 'name': 'Trajectories - Raw trajectory', 'description': 'Raw trajectory from the free simulation step\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_trr_file']}, {'id': 'trr_imaged_dry', 'name': 'Trajectories - Post-processed trajectory', 'description': 'Post-processed trajectory, dehydrated, imaged (rotations and translations\\nremoved) and centered.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step22_image/output_traj_file']}, {'id': 'gro_dry', 'name': 'Resulting protein structure', 'description': 'Resulting protein structure taken from the post-processed trajectory, to\\nbe used as a topology, usually for visualization purposes.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step23_dry/output_str_file']}, {'id': 'gro', 'name': 'Structures - Raw structure', 'description': 'Raw structure from the free simulation step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_gro_file']}, {'id': 'cpt', 'name': 'Checkpoint file', 'description': 'GROMACS portable checkpoint file, allowing to restore (continue) the\\nsimulation from the last step of the setup process.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_cpt_file']}, {'id': 'tpr', 'name': 'Topologies GROMACS portable binary run', 'description': 'GROMACS portable binary run input file, containing the starting structure\\nof the simulation, the molecular topology and all the simulation parameters.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step17_grompp_md/output_tpr_file']}, {'id': 'top', 'name': 'GROMACS topology file', 'description': 'GROMACS topology file, containing the molecular topology in an ASCII\\nreadable format.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step7_genion/output_top_zip_file']}, {'id': 'xvg_min', 'name': 'System Setup Observables - Potential Energy', 'description': 'Potential energy of the system during the minimization step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step10_energy_min/output_xvg_file']}, {'id': 'xvg_nvt', 'name': 'System Setup Observables - Temperature', 'description': 'Temperature of the system during the NVT equilibration step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step13_energy_nvt/output_xvg_file']}, {'id': 'xvg_npt', 'name': 'System Setup Observables - Pressure and density', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['step16_energy_npt/output_xvg_file']}, {'id': 'xvg_rmsfirst', 'name': 'Simulation Analysis', 'description': 'Root Mean Square deviation (RMSd) throughout the whole free simulation\\nstep against the first snapshot of the trajectory (equilibrated system).\\n', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsfirst/output_xvg_file']}, {'id': 'xvg_rmsexp', 'name': 'Simulation Analysis', 'description': 'Root Mean Square deviation (RMSd) throughout the whole free simulation\\nstep against the experimental structure (minimized system).\\n', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsexp/output_xvg_file']}, {'id': 'xvg_rgyr', 'name': 'Simulation Analysis', 'description': 'Radius of Gyration (RGyr) of the molecule throughout the whole free simulation step\\n', 'type': [{'type': 'File'}], 'source_ids': ['step21_rgyr/output_xvg_file']}], 'steps': [{'id': 'step1_pdb', 'name': 'Fetch PDB Structure', 'description': 'Download a protein structure from the PDB database\\n', 'sink_ids': ['step1_pdb/output_pdb_file']}, {'id': 'step2_fixsidechain', 'name': 'Fix Protein structure', 'description': 'Fix the side chains, adding any side chain atoms missing in the\\noriginal structure.\\n', 'sink_ids': ['step2_fixsidechain/output_pdb_file']}, {'id': 'step3_pdb2gmx', 'name': 'Create Protein System Topology', 'description': None, 'sink_ids': ['step3_pdb2gmx/output_gro_file', 'step3_pdb2gmx/output_top_zip_file']}, {'id': 'step4_editconf', 'name': 'Create Solvent Box', 'description': None, 'sink_ids': ['step4_editconf/output_gro_file']}, {'id': 'step5_solvate', 'name': 'Fill the Box with Water Molecules', 'description': None, 'sink_ids': ['step5_solvate/output_gro_file', 'step5_solvate/output_top_zip_file']}, {'id': 'step6_grompp_genion', 'name': 'Add Ions - part 1', 'description': None, 'sink_ids': ['step6_grompp_genion/output_tpr_file']}, {'id': 'step7_genion', 'name': 'Add Ions - part 2', 'description': None, 'sink_ids': ['step7_genion/output_gro_file', 'step7_genion/output_top_zip_file']}, {'id': 'step8_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': None, 'sink_ids': ['step8_grompp_min/output_tpr_file']}, {'id': 'step9_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': None, 'sink_ids': ['step9_mdrun_min/output_trr_file', 'step9_mdrun_min/output_gro_file', 'step9_mdrun_min/output_edr_file', 'step9_mdrun_min/output_log_file']}, {'id': 'step10_energy_min', 'name': 'Energetically Minimize the System - part 3', 'description': None, 'sink_ids': ['step10_energy_min/output_xvg_file']}, {'id': 'step11_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': None, 'sink_ids': ['step11_grompp_nvt/output_tpr_file']}, {'id': 'step12_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': None, 'sink_ids': ['step12_mdrun_nvt/output_trr_file', 'step12_mdrun_nvt/output_gro_file', 'step12_mdrun_nvt/output_edr_file', 'step12_mdrun_nvt/output_log_file', 'step12_mdrun_nvt/output_cpt_file']}, {'id': 'step13_energy_nvt', 'name': 'Equilibrate the System (NVT) - part 3', 'description': None, 'sink_ids': ['step13_energy_nvt/output_xvg_file']}, {'id': 'step14_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': None, 'sink_ids': ['step14_grompp_npt/output_tpr_file']}, {'id': 'step15_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': None, 'sink_ids': ['step15_mdrun_npt/output_trr_file', 'step15_mdrun_npt/output_gro_file', 'step15_mdrun_npt/output_edr_file', 'step15_mdrun_npt/output_log_file', 'step15_mdrun_npt/output_cpt_file']}, {'id': 'step16_energy_npt', 'name': 'Equilibrate the System (NPT) - part 3', 'description': None, 'sink_ids': ['step16_energy_npt/output_xvg_file']}, {'id': 'step17_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': None, 'sink_ids': ['step17_grompp_md/output_tpr_file']}, {'id': 'step18_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': None, 'sink_ids': ['step18_mdrun_md/output_trr_file', 'step18_mdrun_md/output_gro_file', 'step18_mdrun_md/output_edr_file', 'step18_mdrun_md/output_log_file', 'step18_mdrun_md/output_cpt_file']}, {'id': 'step19_rmsfirst', 'name': 'Post-processing Resulting 3D Trajectory - part 1', 'description': None, 'sink_ids': ['step19_rmsfirst/output_xvg_file']}, {'id': 'step20_rmsexp', 'name': 'Post-processing Resulting 3D Trajectory - part 2', 'description': None, 'sink_ids': ['step20_rmsexp/output_xvg_file']}, {'id': 'step21_rgyr', 'name': 'Post-processing Resulting 3D Trajectory - part 3', 'description': None, 'sink_ids': ['step21_rgyr/output_xvg_file']}, {'id': 'step22_image', 'name': 'Post-processing Resulting 3D Trajectory - part 4', 'description': None, 'sink_ids': ['step22_image/output_traj_file']}, {'id': 'step23_dry', 'name': 'Post-processing Resulting 3D Trajectory - part 5', 'description': None, 'sink_ids': ['step23_dry/output_str_file']}], 'links': [{'id': 'output_pdb_path', 'source_id': 'step1_pdb_name', 'sink_id': 'step1_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_pdb_config', 'sink_id': 'step1_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb/output_pdb_file', 'sink_id': 'step2_fixsidechain', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_fixsidechain/output_pdb_file', 'sink_id': 'step3_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_pdb2gmx/output_gro_file', 'sink_id': 'step4_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step4_editconf/output_gro_file', 'sink_id': 'step5_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_pdb2gmx/output_top_zip_file', 'sink_id': 'step5_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_gppion_config', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_solvate/output_gro_file', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_solvate/output_top_zip_file', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_genion_config', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_genion/output_tpr_file', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_solvate/output_top_zip_file', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_gppmin_config', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_genion/output_gro_file', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step9_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step10_energy_min_config', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step10_energy_min_name', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step9_mdrun_min/output_edr_file', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_gppnvt_config', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step9_mdrun_min/output_gro_file', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_nvt/output_tpr_file', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_energy_nvt_config', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step13_energy_nvt_name', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step12_mdrun_nvt/output_edr_file', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_gppnpt_config', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_nvt/output_gro_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_nvt/output_cpt_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step14_grompp_npt/output_tpr_file', 'sink_id': 'step15_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step16_energy_npt_config', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step16_energy_npt_name', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step15_mdrun_npt/output_edr_file', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step17_gppmd_config', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step15_mdrun_npt/output_gro_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step15_mdrun_npt/output_cpt_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step18_mdrun_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step19_rmsfirst_config', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step19_rmsfirst_name', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step20_rmsexp_config', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step20_rmsexp_name', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step21_rgyr_config', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step22_image_config', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step23_dry_config', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step18_mdrun_md/output_gro_file', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 29,
    "text_field": "['protein_md.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: Workflow\nlabel: Example of setting up a simulation system\ndoc: |\n  Common Workflow Language example that illustrate the process of setting up a\n  simulation system containing a protein, step by step, using the BioExcel\n  Building Blocks library (biobb). The particular example used is the Lysozyme\n  protein (PDB code 1AKI).\n\ninputs:\n  step1_pdb_name: string\n  step1_pdb_config: string\n  step4_editconf_config: string\n  step6_gppion_config: string\n  step7_genion_config: string\n  step8_gppmin_config: string\n  step10_energy_min_config: string\n  step10_energy_min_name: string\n  step11_gppnvt_config: string\n  step13_energy_nvt_config: string\n  step13_energy_nvt_name: string\n  step14_gppnpt_config: string\n  step16_energy_npt_config: string\n  step16_energy_npt_name: string\n  step17_gppmd_config: string\n  step19_rmsfirst_config: string\n  step19_rmsfirst_name: string\n  step20_rmsexp_config: string\n  step20_rmsexp_name: string\n  step21_rgyr_config: string\n  step22_image_config: string\n  step23_dry_config: string\n\noutputs:\n  trr:\n    label: Trajectories - Raw trajectory\n    doc: |\n      Raw trajectory from the free simulation step\n    type: File\n    outputSource: step18_mdrun_md/output_trr_file\n    \n  trr_imaged_dry:\n    label: Trajectories - Post-processed trajectory\n    doc: |\n      Post-processed trajectory, dehydrated, imaged (rotations and translations\n      removed) and centered.\n    type: File\n    outputSource: step22_image/output_traj_file\n    \n  gro_dry:\n    label: Resulting protein structure\n    doc: |\n      Resulting protein structure taken from the post-processed trajectory, to\n      be used as a topology, usually for visualization purposes.\n    type: File\n    outputSource: step23_dry/output_str_file\n    \n  gro:\n    label: Structures - Raw structure\n    doc: |\n      Raw structure from the free simulation step.\n    type: File\n    outputSource: step18_mdrun_md/output_gro_file\n\n  cpt:\n    label: Checkpoint file\n    doc: |\n      GROMACS portable checkpoint file, allowing to restore (continue) the\n      simulation from the last step of the setup process.\n    type: File\n    outputSource: step18_mdrun_md/output_cpt_file\n\n  tpr:\n    label: Topologies GROMACS portable binary run\n    doc: |\n      GROMACS portable binary run input file, containing the starting structure\n      of the simulation, the molecular topology and all the simulation parameters.\n    type: File\n    outputSource: step17_grompp_md/output_tpr_file\n\n  top:\n    label: GROMACS topology file\n    doc: |\n      GROMACS topology file, containing the molecular topology in an ASCII\n      readable format.\n    type: File\n    outputSource: step7_genion/output_top_zip_file\n    \n  xvg_min:\n    label: System Setup Observables - Potential Energy\n    doc: |\n      Potential energy of the system during the minimization step.\n    type: File\n    outputSource: step10_energy_min/output_xvg_file\n\n  xvg_nvt:\n    label: System Setup Observables - Temperature\n    doc: |\n      Temperature of the system during the NVT equilibration step.\n    type: File\n    outputSource: step13_energy_nvt/output_xvg_file\n    \n  xvg_npt:\n    label: System Setup Observables - Pressure and density \n    type: File\n    outputSource: step16_energy_npt/output_xvg_file\n    \n  xvg_rmsfirst:\n    label: Simulation Analysis\n    doc: |\n      Root Mean Square deviation (RMSd) throughout the whole free simulation\n      step against the first snapshot of the trajectory (equilibrated system).\n    type: File\n    outputSource: step19_rmsfirst/output_xvg_file\n  xvg_rmsexp:\n    label: Simulation Analysis\n    doc: |\n      Root Mean Square deviation (RMSd) throughout the whole free simulation\n      step against the experimental structure (minimized system).\n    type: File\n    outputSource: step20_rmsexp/output_xvg_file\n    \n  xvg_rgyr:\n    label: Simulation Analysis\n    doc: |\n      Radius of Gyration (RGyr) of the molecule throughout the whole free simulation step\n    type: File\n    outputSource: step21_rgyr/output_xvg_file\n\nsteps:\n  step1_pdb:\n    label: Fetch PDB Structure\n    run: biobb_adapters/pdb.cwl\n    in:\n      output_pdb_path: step1_pdb_name\n      config: step1_pdb_config\n    out: [output_pdb_file]\n\n  step2_fixsidechain:\n    label: Fix Protein structure\n    run: biobb_adapters/fix_side_chain.cwl\n    in:\n      input_pdb_path: step1_pdb/output_pdb_file\n    out: [output_pdb_file]\n\n  step3_pdb2gmx:\n    label: Create Protein System Topology\n    run: biobb_adapters/pdb2gmx.cwl\n    in:\n      input_pdb_path: step2_fixsidechain/output_pdb_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step4_editconf:\n    label: Create Solvent Box\n    run: biobb_adapters/editconf.cwl\n    in:\n      input_gro_path: step3_pdb2gmx/output_gro_file\n    out: [output_gro_file]\n\n  step5_solvate:\n    label: Fill the Box with Water Molecules\n    run: biobb_adapters/solvate.cwl\n    in:\n      input_solute_gro_path: step4_editconf/output_gro_file\n      input_top_zip_path: step3_pdb2gmx/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step6_grompp_genion:\n    label: Add Ions - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step6_gppion_config\n      input_gro_path: step5_solvate/output_gro_file\n      input_top_zip_path: step5_solvate/output_top_zip_file\n    out: [output_tpr_file]\n\n  step7_genion:\n    label: Add Ions - part 2\n    run: biobb_adapters/genion.cwl\n    in:\n      config: step7_genion_config\n      input_tpr_path: step6_grompp_genion/output_tpr_file\n      input_top_zip_path: step5_solvate/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step8_grompp_min:\n    label: Energetically Minimize the System - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step8_gppmin_config\n      input_gro_path: step7_genion/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step9_mdrun_min:\n    label: Energetically Minimize the System - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step8_grompp_min/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file]\n\n  step10_energy_min:\n    label: Energetically Minimize the System - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step10_energy_min_config\n      output_xvg_path: step10_energy_min_name\n      input_energy_path: step9_mdrun_min/output_edr_file\n    out: [output_xvg_file]\n\n  step11_grompp_nvt:\n    label: Equilibrate the System (NVT) - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step11_gppnvt_config\n      input_gro_path: step9_mdrun_min/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step12_mdrun_nvt:\n    label: Equilibrate the System (NVT) - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step11_grompp_nvt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step13_energy_nvt:\n    label: Equilibrate the System (NVT) - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step13_energy_nvt_config\n      output_xvg_path: step13_energy_nvt_name\n      input_energy_path: step12_mdrun_nvt/output_edr_file\n    out: [output_xvg_file]\n\n  step14_grompp_npt:\n    label: Equilibrate the System (NPT) - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step14_gppnpt_config\n      input_gro_path: step12_mdrun_nvt/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n      input_cpt_path:  step12_mdrun_nvt/output_cpt_file\n    out: [output_tpr_file]\n\n  step15_mdrun_npt:\n    label: Equilibrate the System (NPT) - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step14_grompp_npt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step16_energy_npt:\n    label: Equilibrate the System (NPT) - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step16_energy_npt_config\n      output_xvg_path: step16_energy_npt_name\n      input_energy_path: step15_mdrun_npt/output_edr_file\n    out: [output_xvg_file]\n\n  step17_grompp_md:\n    label: Free Molecular Dynamics Simulation - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step17_gppmd_config\n      input_gro_path: step15_mdrun_npt/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n      input_cpt_path:  step15_mdrun_npt/output_cpt_file\n    out: [output_tpr_file]\n\n  step18_mdrun_md:\n    label: Free Molecular Dynamics Simulation - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step17_grompp_md/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step19_rmsfirst:\n    label: Post-processing Resulting 3D Trajectory - part 1\n    run: biobb_adapters/rms.cwl\n    in:\n      config: step19_rmsfirst_config\n      output_xvg_path: step19_rmsfirst_name\n      input_structure_path: step17_grompp_md/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step20_rmsexp:\n    label: Post-processing Resulting 3D Trajectory - part 2\n    run: biobb_adapters/rms.cwl\n    in:\n      config: step20_rmsexp_config\n      output_xvg_path: step20_rmsexp_name\n      input_structure_path: step8_grompp_min/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step21_rgyr:\n    label: Post-processing Resulting 3D Trajectory - part 3\n    run: biobb_adapters/rgyr.cwl\n    in:\n      config: step21_rgyr_config\n      input_structure_path: step8_grompp_min/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step22_image:\n    label: Post-processing Resulting 3D Trajectory - part 4\n    run: biobb_adapters/gmximage.cwl\n    in:\n      config: step22_image_config\n      input_top_path: step17_grompp_md/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_traj_file]\n\n  step23_dry:\n    label: Post-processing Resulting 3D Trajectory - part 5\n    run: biobb_adapters/gmxtrjconvstr.cwl\n    in:\n      config: step23_dry_config\n      input_structure_path: step18_mdrun_md/output_gro_file\n      input_top_path: step17_grompp_md/output_tpr_file\n    out: [output_str_file]",
    "p_tag_content": "Common Workflow Language example that illustrate the process of setting up a simulation system containing a protein, step by step, using theBioExcel Building Blockslibrary (biobb). The particular example used is the Lysozyme protein (PDB code 1AKI). This workflow returns a resulting protein structure and simulated 3D trajectories. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/29?version=3 DOI:10.48546/workflowhub.workflow.29.3 Changing CWL label to test if this corrects the workflow title. Update to paths for BioBB tools. Taken from Git commit 46f24f0 Added/updated 1 files Views:5479Downloads:629 Created: 16th Jun 2020 at 09:50 Last updated: 10th Feb 2022 at 16:23 Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks,UX trial team Organizations:The University of Manchester Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2 This BioExcel best practice guide outlines the development process for writing a workflow using the Common Workflow Language (CWL), from creating and selecting tools like BioBB, through early experimentation, reuse and testing, to optimization and ensuring reproducibility before publication in workflow repositories. Creators:Stian Soiland-Reyes,Douglas Lowe,Robin Long Submitter:Stian Soiland-Reyes Selection ofBioExcel Building Blocks(BioBB)Workflows, across three workflow languages (jupyter notebooks, CWL, and Galaxy), demonstrating the use of BioBB tool descriptors for each of these systems. Maintainers:Douglas Lowe,Stian Soiland-Reyes,Adam Hospital,Genís Bayarri,Pau Andrio Number of items: 5 Tags:Not specified Selection ofBioExcel Building Blocks(BioBB)Workflowsintended for tutorials and training. Maintainers:Stian Soiland-Reyes Number of items: 14 Tags:molecular dynamics"
  },
  {
    "": 207,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using GATK4.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using GATK4.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'GATK4', 'INDELs', 'SNPs']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/30?version=1', 'commit': 'f0602cf87770dd73717eb9cfa687deed9341b4bd', 'ref': 'refs/heads/master', 'tree': '/workflows/30/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:11:59.000Z",
    "updated_at": "2023-01-16T13:42:19.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'indices_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}], 'outputs': [{'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_indels/output']}, {'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_snps/output']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'create_sequence_dictionary', 'name': None, 'description': None, 'sink_ids': ['create_sequence_dictionary/sequences_with_dictionary']}, {'id': 'update_read_group', 'name': None, 'description': None, 'sink_ids': ['update_read_group/sequences_with_new_read_group']}, {'id': 'mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['mark_duplicates/bam_duprem']}, {'id': 'split_alignments', 'name': None, 'description': None, 'sink_ids': ['split_alignments/output']}, {'id': 'index_split_alignments', 'name': None, 'description': None, 'sink_ids': ['index_split_alignments/bam_sorted_indexed']}, {'id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'description': None, 'sink_ids': ['call_plausible_haplotypes_and_detect_variants/output']}, {'id': 'filer_out_low_quality_variants', 'name': None, 'description': None, 'sink_ids': ['filer_out_low_quality_variants/output']}, {'id': 'select_indels', 'name': None, 'description': None, 'sink_ids': ['select_indels/output']}, {'id': 'select_snps', 'name': None, 'description': None, 'sink_ids': ['select_snps/output']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'indices_folder', 'source_id': 'indices_folder', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'REFERENCE', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'create_sequence_dictionary', 'name': None, 'default_value': None}, {'id': 'INPUT', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'OUTPUT', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGID', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGLB', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPL', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGSM', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPU', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'SORT_ORDER', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'update_read_group/sequences_with_new_read_group', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'mark_duplicates/bam_duprem', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'split_alignments/output', 'sink_id': 'index_split_alignments', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'index_split_alignments/bam_sorted_indexed', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'call_plausible_haplotypes_and_detect_variants/output', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 30,
    "text_field": "['gatk4W.cwl', 'graph.png']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using GATK4.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n    \n  indices_folder:\n  \n    type: Directory\n    \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n      \n      indices_folder: indices_folder\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in:\n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  create_sequence_dictionary:\n\n    run: picard_CreateSequenceDictionary.cwl\n\n    in:\n\n      REFERENCE: sars_cov_2_reference_genome\n\n    out: [ sequences_with_dictionary ]\n\n\n\n  update_read_group:\n\n    run: picard_AddOrReplaceReadGroups.cwl\n\n    in:\n\n      INPUT: align_rnaseq_reads_to_genome/output\n\n      OUTPUT:\n\n        valueFrom: sars-cov-2-newreadgroups.bam\n\n      RGID:\n\n        valueFrom: \"1\"\n\n      RGLB:\n\n        valueFrom: 445_LIB\n\n      RGPL:\n\n        valueFrom: illumina\n\n      RGSM:\n\n        valueFrom: RNA\n\n      RGPU:\n\n        valueFrom: illumina\n\n      SORT_ORDER:\n\n        valueFrom: coordinate\n\n    out: [ sequences_with_new_read_group ]\n\n \n\n  mark_duplicates:\n\n    run: picard_markdup.cwl\n\n    in:\n\n      bam_sorted: update_read_group/sequences_with_new_read_group\n\n    out: [ bam_duprem ]\n\n\n\n  split_alignments:\n\n    run: GATK-SplitNCigarReads.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      reads: mark_duplicates/bam_duprem\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantsplit.bam\n\n      # read_filter:  # Not available in GATK4\n\n      #   valueFrom: ReassignOneMappingQuality  \n\n    out: [ output ]\n\n\n\n  index_split_alignments:\n\n    run: samtools_index.cwl\n\n    in:\n\n      bam_sorted: split_alignments/output\n\n    out: [ bam_sorted_indexed ]\n\n\n\n  call_plausible_haplotypes_and_detect_variants:\n\n    run: GATK-HaplotypeCaller.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      input: index_split_alignments/bam_sorted_indexed\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutant.vcf\n\n    out: [ output ]\n\n\n\n  filer_out_low_quality_variants:\n\n    run: GATK-VariantFiltration.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: call_plausible_haplotypes_and_detect_variants/output\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantfilter.vcf\n\n    out: [output]\n\n\n\n  select_indels:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: INDEL\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n\n\n  select_snps:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: SNP\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n \n\noutputs:\n\n  indels:\n\n    type: File\n\n    outputSource: select_indels/output\n\n  snps:\n\n    type: File\n\n    outputSource: select_snps/output\n\n\n\n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com&ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using GATK4. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/30?version=1 Added/updated 2 files Views:2677Downloads:324 Created: 17th Jun 2020 at 07:11 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 208,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using VARSCAN2.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'INDELs', 'SNPs', 'VARSCAN2']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/31?version=1', 'commit': 'dc0b2e7df1f2e56ac5edd96648a63681e43ab3e2', 'ref': 'refs/heads/master', 'tree': '/workflows/31/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:24:44.000Z",
    "updated_at": "2023-01-16T13:42:27.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['snp_calling_using_mpileup2snp/snpVCF']}, {'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['indel_calling_using_mpileup2indel/indelVCF']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'description': None, 'sink_ids': ['sam_to_bam_conversion_using_samtools_view/bam']}, {'id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'description': None, 'sink_ids': ['sort_alignment_files_using_samtools_sort/bam_sorted']}, {'id': 'index_bam_files_using_samtools_index', 'name': None, 'description': None, 'sink_ids': ['index_bam_files_using_samtools_index/bam_sorted_indexed']}, {'id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'description': None, 'sink_ids': ['mpileup_generation_using_samtools_mpileup/rawMpileup']}, {'id': 'snp_calling_using_mpileup2snp', 'name': None, 'description': None, 'sink_ids': ['snp_calling_using_mpileup2snp/snpVCF']}, {'id': 'indel_calling_using_mpileup2indel', 'name': None, 'description': None, 'sink_ids': ['indel_calling_using_mpileup2indel/indelVCF']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'sam_to_bam_conversion_using_samtools_view/bam', 'sink_id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'index_bam_files_using_samtools_index', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'inputMpileup', 'source_id': 'mpileup_generation_using_samtools_mpileup/rawMpileup', 'sink_id': 'snp_calling_using_mpileup2snp', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'snp_calling_using_mpileup2snp', 'name': None, 'default_value': None}, {'id': 'inputMpileup', 'source_id': 'mpileup_generation_using_samtools_mpileup/rawMpileup', 'sink_id': 'indel_calling_using_mpileup2indel', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'indel_calling_using_mpileup2indel', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 31,
    "text_field": "['graph1.png', 'varscanW.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n  sample_name:\n\n    type: string              \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in: \n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  sam_to_bam_conversion_using_samtools_view:\n\n    run: samtools_view_sam2bam.cwl\n\n    in: \n\n      sam: align_rnaseq_reads_to_genome/output\n\n    out: [bam] \n\n\n  sort_alignment_files_using_samtools_sort:\n   \n    run: samtools_sort.cwl\n\n    in: \n\n      bam_unsorted: sam_to_bam_conversion_using_samtools_view/bam\n\n    out: [bam_sorted]\n\n\n  \n  index_bam_files_using_samtools_index:\n    \n    run: samtools_index.cwl\n\n    in: \n\n      bam_sorted: sort_alignment_files_using_samtools_sort/bam_sorted\n\n    out: [bam_sorted_indexed]\n\n\n  mpileup_generation_using_samtools_mpileup:\n   \n    run: samtools_mpileup.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [rawMpileup]\n\n\n  \n  snp_calling_using_mpileup2snp:\n\n    run: mpileup2snp.cwl\n\n    in:\n\n      inputMpileup: mpileup_generation_using_samtools_mpileup/rawMpileup\n\n      sampleName: sample_name\n\n    out: [snpVCF]\n\n\n\n  indel_calling_using_mpileup2indel:\n\n    run: mpileup2indel.cwl\n\n    in:\n\n      inputMpileup: mpileup_generation_using_samtools_mpileup/rawMpileup\n\n      sampleName: sample_name\n\n    out: [indelVCF]\n\n\noutputs:\n\n  snps:\n\n    type: File\n\n    outputSource: snp_calling_using_mpileup2snp/snpVCF\n\n  indels:\n\n    type: File\n\n    outputSource: indel_calling_using_mpileup2indel/indelVCF \n   \n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com;ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using VARSCAN. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/31?version=1 Added/updated 2 files Views:2633Downloads:354 Created: 17th Jun 2020 at 07:24 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Detects SNPs and short INDELs. Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 209,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using GATK4 spark based tools.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using GATK4.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'GATK4', 'INDELs', 'SNPs', 'SPARK']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/33?version=1', 'commit': '9c6b1ee755a51bc505cfa5207f4fccfe3815c466', 'ref': 'refs/heads/master', 'tree': '/workflows/33/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:38:32.000Z",
    "updated_at": "2023-01-16T13:42:33.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sars_cov_2_reference_2bit_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sampleName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_indels/output']}, {'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_snps/output']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'create_sequence_dictionary', 'name': None, 'description': None, 'sink_ids': ['create_sequence_dictionary/sequences_with_dictionary']}, {'id': 'update_read_group', 'name': None, 'description': None, 'sink_ids': ['update_read_group/sequences_with_new_read_group']}, {'id': 'sort_sam', 'name': None, 'description': None, 'sink_ids': ['sort_sam/rawBAM']}, {'id': 'mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['mark_duplicates/rawBAM']}, {'id': 'split_alignments', 'name': None, 'description': None, 'sink_ids': ['split_alignments/output']}, {'id': 'index_split_alignments', 'name': None, 'description': None, 'sink_ids': ['index_split_alignments/bam_sorted_indexed']}, {'id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'description': None, 'sink_ids': ['call_plausible_haplotypes_and_detect_variants/output']}, {'id': 'filer_out_low_quality_variants', 'name': None, 'description': None, 'sink_ids': ['filer_out_low_quality_variants/output']}, {'id': 'select_indels', 'name': None, 'description': None, 'sink_ids': ['select_indels/output']}, {'id': 'select_snps', 'name': None, 'description': None, 'sink_ids': ['select_snps/output']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'REFERENCE', 'source_id': 'index_reference_genome_with_samtools/sequences_with_index', 'sink_id': 'create_sequence_dictionary', 'name': None, 'default_value': None}, {'id': 'INPUT', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'OUTPUT', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGID', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGLB', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPL', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGSM', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPU', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'SORT_ORDER', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'update_read_group/sequences_with_new_read_group', 'sink_id': 'sort_sam', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sampleName', 'sink_id': 'sort_sam', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_sam/rawBAM', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sampleName', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'mark_duplicates/rawBAM', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'split_alignments/output', 'sink_id': 'index_split_alignments', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'index_split_alignments/bam_sorted_indexed', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'call_plausible_haplotypes_and_detect_variants/output', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 33,
    "text_field": "['gatk4W-spark.cwl', 'graph2.png']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using GATK4.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    \n\n\n  sars_cov_2_reference_2bit_genome:\n\n    type: File\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    \n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n\n  sampleName:\n\n    type: string\n\n   \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in:\n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  create_sequence_dictionary:\n\n    run: picard_CreateSequenceDictionary.cwl\n\n    in:\n\n      REFERENCE: index_reference_genome_with_samtools/sequences_with_index\n\n    out: [ sequences_with_dictionary ]\n\n\n\n  update_read_group:\n\n    run: picard_AddOrReplaceReadGroups.cwl\n\n    in:\n\n      INPUT: align_rnaseq_reads_to_genome/output\n\n      OUTPUT:\n\n        valueFrom: sars-cov-2-newreadgroups.bam\n\n      RGID:\n\n        valueFrom: \"1\"\n\n      RGLB:\n\n        valueFrom: 445_LIB\n\n      RGPL:\n\n        valueFrom: illumina\n\n      RGSM:\n\n        valueFrom: RNA\n\n      RGPU:\n\n        valueFrom: illumina\n\n      SORT_ORDER:\n\n        valueFrom: coordinate\n\n    out: [ sequences_with_new_read_group ]\n\n \n\n  sort_sam:\n   \n    run: SortSamSparkNew.cwl\n\n    in:\n      \n      inputBAM: update_read_group/sequences_with_new_read_group\n\n      sampleName: sampleName\n\n    out: [rawBAM] \n\n  \n  mark_duplicates:\n\n    run: MarkDuplicatesSparkNew.cwl\n\n    in:\n\n      inputBAM: sort_sam/rawBAM\n    \n      sampleName: sampleName\n\n    out: [ rawBAM ]\n\n\n\n  split_alignments:\n\n    run: GATK-SplitNCigarReads.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      reads: mark_duplicates/rawBAM\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantsplit.bam\n\n      # read_filter:  # Not available in GATK4\n\n      #   valueFrom: ReassignOneMappingQuality  \n\n    out: [ output ]\n\n\n\n  index_split_alignments:\n\n    run: samtools_index.cwl\n\n    in:\n\n      bam_sorted: split_alignments/output\n\n    out: [ bam_sorted_indexed ]\n\n\n\n  call_plausible_haplotypes_and_detect_variants:\n\n    run: GATK-HaplotypeCaller.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      input: index_split_alignments/bam_sorted_indexed\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutant.vcf\n\n    out: [ output ]\n\n\n\n  filer_out_low_quality_variants:\n\n    run: GATK-VariantFiltration.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: call_plausible_haplotypes_and_detect_variants/output\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantfilter.vcf\n\n    out: [output]\n\n\n\n  select_indels:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: INDEL\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n\n\n  select_snps:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: SNP\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n \n\noutputs:\n\n  indels:\n\n    type: File\n\n    outputSource: select_indels/output\n\n  snps:\n\n    type: File\n\n    outputSource: select_snps/output",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com&ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using GATK4. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/33?version=1 Added/updated 2 files Views:2712Downloads:303 Created: 17th Jun 2020 at 07:38 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 210,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using SAMTools.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using SAMTools.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'INDELs', 'SAMTools', 'SNPs', 'covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/34?version=1', 'commit': '64d0fd2144a9a59847aacb9f43ed7f933002779b', 'ref': 'refs/heads/master', 'tree': '/workflows/34/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T07:41:06.000Z",
    "updated_at": "2023-01-16T13:42:36.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'snp', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['snp_generation_using_bcftools/snp']}, {'id': 'indel', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['indel_generation_using_bcftools/indel']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'description': None, 'sink_ids': ['sam_to_bam_conversion_using_samtools_view/bam']}, {'id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'description': None, 'sink_ids': ['sort_alignment_files_using_samtools_sort/bam_sorted']}, {'id': 'index_bam_files_using_samtools_index', 'name': None, 'description': None, 'sink_ids': ['index_bam_files_using_samtools_index/bam_sorted_indexed']}, {'id': 'snp_generation_using_bcftools', 'name': None, 'description': None, 'sink_ids': ['snp_generation_using_bcftools/snp']}, {'id': 'indel_generation_using_bcftools', 'name': None, 'description': None, 'sink_ids': ['indel_generation_using_bcftools/indel']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'sam_to_bam_conversion_using_samtools_view/bam', 'sink_id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'index_bam_files_using_samtools_index', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 34,
    "text_field": "['graph3.png', 'samtoolsW.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n  sample_name:\n\n    type: string              \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in: \n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  sam_to_bam_conversion_using_samtools_view:\n\n    run: samtools_view_sam2bam.cwl\n\n    in: \n\n      sam: align_rnaseq_reads_to_genome/output\n\n    out: [bam] \n\n\n  sort_alignment_files_using_samtools_sort:\n   \n    run: samtools_sort.cwl\n\n    in: \n\n      bam_unsorted: sam_to_bam_conversion_using_samtools_view/bam\n\n    out: [bam_sorted]\n\n\n  \n  index_bam_files_using_samtools_index:\n    \n    run: samtools_index.cwl\n\n    in: \n\n      bam_sorted: sort_alignment_files_using_samtools_sort/bam_sorted\n\n    out: [bam_sorted_indexed]\n\n\n  snp_generation_using_bcftools:\n   \n    run: bcftools_snps.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [snp]\n\n\n  indel_generation_using_bcftools:\n   \n    run: bcftools_indels.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [indel]\n\n\noutputs:\n\n  snp:\n\n    type: File\n\n    outputSource: snp_generation_using_bcftools/snp\n\n  indel:\n\n    type: File\n\n    outputSource: indel_generation_using_bcftools/indel\n\n\n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com;ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using SAMTools. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/34?version=1 Added/updated 2 files Views:3405Downloads:705 Created: 17th Jun 2020 at 08:41 Last updated: 27th Jun 2020 at 02:27 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Detects SNPs and short INDELs. Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 219,
    "discussion_links": [],
    "title": "NMR pipe",
    "license": "Apache-2.0",
    "description": "CWL workflow for NMR spectra Peak Picking\nThe workflow takes as input a series of 2D 1H 15N HSQC NMR spectra and uses nmrpipe tools to convert the spectra in nmrpipe format and performs an automatic peak picking.\nThis test uses a protein MDM2 with different ligands and peptide and generates a peak list with 1H and 15N chemical shift values for each spectrum. The difference among these peak lists can be used to characterize the ligand binding site on the protein.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/43?version=1', 'commit': '9fa4f7fde166cfedf761ec2f6ff9ab01f7a6446b', 'ref': 'refs/heads/master', 'tree': '/workflows/43/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-07-22T10:49:00.000Z",
    "updated_at": "2023-01-16T13:43:41.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'workdir_array', 'name': None, 'description': None, 'type': [{'type': 'Directory[]'}], 'default_value': None}], 'outputs': [{'id': 'final_result', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['pipe_to_pick/fid_out4']}], 'steps': [{'id': 'brucker_to_script', 'name': None, 'description': None, 'sink_ids': ['brucker_to_script/fid_out']}, {'id': 'script_to_fid', 'name': None, 'description': None, 'sink_ids': ['script_to_fid/fid_out2']}, {'id': 'fid_to_pipe', 'name': None, 'description': None, 'sink_ids': ['fid_to_pipe/fid_out3']}, {'id': 'pipe_to_pick', 'name': None, 'description': None, 'sink_ids': ['pipe_to_pick/fid_out4']}], 'links': [{'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'brucker_to_script', 'name': None, 'default_value': None}, {'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'script_to_fid', 'name': None, 'default_value': None}, {'id': 'fidcom', 'source_id': 'brucker_to_script/fid_out', 'sink_id': 'script_to_fid', 'name': None, 'default_value': None}, {'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'fid_to_pipe', 'name': None, 'default_value': None}, {'id': 'fiddir', 'source_id': 'script_to_fid/fid_out2', 'sink_id': 'fid_to_pipe', 'name': None, 'default_value': None}, {'id': 'ft2', 'source_id': 'fid_to_pipe/fid_out3', 'sink_id': 'pipe_to_pick', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 43,
    "text_field": "['nmrpipe_workflow.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.0\nclass: Workflow\n\nrequirements:\n  ScatterFeatureRequirement: {}\n\n# WORKFLOW INPUT\ninputs:\n  workdir_array:\n    type: Directory[]\n    inputBinding:\n      position: 1\n  \n# WORKFLOW OUTPUT\noutputs:\n    final_result:\n      type: File[]\n      #outputSource: script_to_fid/fid_out2\n      #outputSource: fid_to_pipe/fid_out3\n      outputSource: pipe_to_pick/fid_out4\n\n\n# WORKFLOW STEPS\nsteps:\n  # STEP 1\n  # genera lo/gli script fid.com nella directory di input\n  brucker_to_script:\n    run: brucker_to_script.cwl\n    scatter: workdir\n    in: \n      workdir: workdir_array\n    out:\n      [fid_out]\n\n\n\n  # STEP2\n  script_to_fid:\n    run: script_to_fid.cwl\n    scatter: \n      - fidcom\n      - workdir\n    scatterMethod: dotproduct  \n    in: \n      workdir: workdir_array\n      fidcom: brucker_to_script/fid_out\n    out:\n      [fid_out2]\n\n\n\n  # STEP 3\n  fid_to_pipe:\n    run: fid_to_pipe.cwl\n    scatter: \n      - fiddir\n      - workdir\n    scatterMethod: dotproduct  \n    in:\n      workdir: workdir_array\n      fiddir: script_to_fid/fid_out2\n    out:\n      [fid_out3]\n\n\n  # STEP 4\n  pipe_to_pick:\n    run: pipe_to_pick.cwl\n    scatter: ft2\n    in:\n      #workdir: workdir\n      ft2: fid_to_pipe/fid_out3\n    out:\n      [fid_out4]",
    "p_tag_content": "CWL workflow for NMR spectra Peak Picking\nThe workflow takes as input a series of 2D 1H 15N HSQC NMR spectra and uses nmrpipe tools to convert the spectra in nmrpipe format and performs an automatic peak picking.\nThis test uses a protein MDM2 with different ligands and peptide and generates a peak list with 1H and 15N chemical shift values for each spectrum. The difference among these peak lists can be used to characterize the ligand binding site on the protein. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/43?version=1 Added/updated 1 files Views:2415Downloads:879 Created: 22nd Jul 2020 at 11:49 This item has not yet been tagged. None Teams:NMR Workflow Organizations:CIRMMP A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified NMR workflow Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 295,
    "discussion_links": [],
    "title": "Inclusion Body Myositis Active Subnetwork Identification Workflow",
    "license": "MIT",
    "description": "Workflow for Creating a large disease network from various datasets and databases for IBM, and applying the active subnetwork identification method MOGAMUN.",
    "latest_version": 7,
    "tags": "['Bioinformatics', 'CWL', 'Genomics', 'Protein-Protein Interaction', 'Transcriptomics']",
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/681?version=1', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '5d0df39a96883f3390793ed3e527ddc804b8a347', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=2', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=3', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/3/tree', 'doi': None}, {'version': 4, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=4', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/4/tree', 'doi': None}, {'version': 5, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=5', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/5/tree', 'doi': None}, {'version': 6, 'revision_comments': 'More metada\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=6', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': 'fbe3ed59a9689a1e85890f3a88a3538abaf41010', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/6/tree', 'doi': None}, {'version': 7, 'revision_comments': 'Added remaining metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=7', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow.git', 'commit': '7e4122fc690aef90cafdd96758c561f2dde60555', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/7/tree', 'doi': '10.48546/workflowhub.workflow.681.7'}]",
    "version": 7,
    "revision_comments": "Added remaining metadata",
    "created_at": "2023-11-27T16:19:23.000Z",
    "updated_at": "2024-02-01T11:27:19.000Z",
    "doi": "10.48546/workflowhub.workflow.681.7",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Wijnbergen', 'given_name': 'Daphne', 'affiliation': 'Leiden University Medical Center', 'orcid': 'https://orcid.org/0000-0002-7449-6657'}, {'profile': None, 'family_name': 'Johari', 'given_name': 'Mridul', 'affiliation': 'Leiden University Medical Center', 'orcid': 'https://orcid.org/0000-0002-3549-558X'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Network analysis', 'identifier': 'http://edamontology.org/operation_3927'}, {'label': 'Protein interaction network analysis', 'identifier': 'http://edamontology.org/operation_0276'}, {'label': 'Weighted correlation network analysis', 'identifier': 'http://edamontology.org/operation_3766'}]",
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'stringdb_input_file', 'name': 'STRING data', 'description': 'Table with Protein - protein interaction data as downloaded from STRING', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'mirtarbase_input_file', 'name': 'miRTarBase data', 'description': 'Table with miRNA - mRNA target data as downloaded from', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'entrez2string', 'name': 'STRING identifier mapping', 'description': 'Table with entrez mappings from STRING protein idenfitiers as downloaded from STRING', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bridgedb', 'name': 'BridgeDB cache', 'description': 'directory with cached BridgeDB data', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'mRNA-mRNA_bicor', 'name': 'mRNA expression correlation', 'description': \"Tab separated edge list with Ensembl gene ID's in the first two columns, and their bi-weight midcorrelation as defined by Langelder et al. in the third column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'miRNA-mRNA_bicor', 'name': 'miRNA mRNA correlation', 'description': \"Tab separated edge list with Ensembl gene ID's in the first column, miRBase ID's in the second column. and their bi-weight midcorrelation as defined by Langelder et al. in the third column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'de_mRNA', 'name': 'Differential gene expression', 'description': 'Output of differential mRNA expression testing from DESeq2, with Ensembl gene ID\\'s concatened with gene symbols with \";\" inbetween in the first column', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'de_miRNA', 'name': 'Differential miRNA expression', 'description': \"Output of differential miRNA expression testing from DESeq2, with miRBase ID's in the first column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'variant_burden', 'name': 'Variant Burden', 'description': 'Output of variant burden testing using SKAT in the rvtests package, with HGNC symbols in the first column', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'stringdb_number_of_edges', 'name': 'STRING limit', 'description': 'The number of STRING edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'stringdb_min_weight', 'name': 'STRING filter', 'description': 'The minimum score for a STRING edge to be included in the analysis', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mirtarbase_number_of_edges', 'name': 'miRTarBase limit', 'description': 'The number of miRTarBase edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'max_cor_edges', 'name': 'Correlation limit', 'description': 'The number of correlation edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_generations', 'name': 'MOGAMUN generations', 'description': 'The number of generation to let the genetic algorithm in MOGAMUN evolve', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_runs', 'name': 'MOGAMUN runs', 'description': 'The number of parallel runs to let MOGAMUN do, these parallel runs are combined in postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_cores', 'name': 'MOGAMUN cores', 'description': 'The number of cores to let MOGAMUN use', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_min_size', 'name': 'Minimum subnetwork size', 'description': 'The minimum size of subnetworks during postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_max_size', 'name': 'Maximum subnetwork size', 'description': 'The maximum size of subnetworks during postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_merge_threshold', 'name': 'Subnetwork merge threshold', 'description': 'the minimum Jaccard Index overlap between two subnetworks to allow them to be merged', 'type': [{'type': 'int'}], 'default_value': None}], 'outputs': [{'id': 'full_graph', 'name': 'Full network', 'description': 'The full disease network, which combines all data sources', 'type': [{'type': 'File'}], 'source_ids': ['integrate_graph/full_graph']}, {'id': 'subnetworks', 'name': 'Subnetworks', 'description': 'Folder with the resulting subnetworks and generation statistics', 'type': [{'type': 'Directory'}], 'source_ids': ['postprocess_mogamun/subnetworks']}], 'steps': [{'id': 'import_stringdb', 'name': 'Import STRING', 'description': 'Imports STRING database file', 'sink_ids': ['import_stringdb/stringdb_edge_list']}, {'id': 'import_mirtarbase', 'name': 'Import miRTarBase', 'description': 'Imports miRTarBase database file', 'sink_ids': ['import_mirtarbase/mirtarbase_edge_list']}, {'id': 'map_stringdb', 'name': 'Map STRING', 'description': 'Maps STRING identifiers to identifiers consistent with datasets', 'sink_ids': ['map_stringdb/stringdb_mapped_edge_list']}, {'id': 'map_mirtarbase', 'name': 'Map miRTarBase', 'description': 'Maps miRTarBase identifiers to identifiers consistent with datasets', 'sink_ids': ['map_mirtarbase/mirtarbase_mapped_edge_list']}, {'id': 'integrate_graph', 'name': 'Integrate network', 'description': 'Integrates all datasources into a single disease network', 'sink_ids': ['integrate_graph/full_graph', 'integrate_graph/full_graph_rds']}, {'id': 'igraph_to_mogamun', 'name': 'Convert igraph to MOGAMUN', 'description': 'Converts the igraph network format to the MOGAMUN input format', 'sink_ids': ['igraph_to_mogamun/mogamun_input']}, {'id': 'run_mogamun', 'name': 'Run MOGAMUN', 'description': 'runs the MOGAMUN software with selected paramters', 'sink_ids': ['run_mogamun/mogamun_results']}, {'id': 'postprocess_mogamun', 'name': 'Postprocess MOGAMUN', 'description': 'processes output from MOGAMUN, and merges overlapping subnetwork', 'sink_ids': ['postprocess_mogamun/subnetworks']}], 'links': [{'id': 'stringdb_input_file', 'source_id': 'stringdb_input_file', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'stringdb_number_of_edges', 'source_id': 'stringdb_number_of_edges', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'stringdb_min_weight', 'source_id': 'stringdb_min_weight', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'mirtarbase_input_file', 'source_id': 'mirtarbase_input_file', 'sink_id': 'import_mirtarbase', 'name': None, 'default_value': None}, {'id': 'mirtarbase_number_of_edges', 'source_id': 'mirtarbase_number_of_edges', 'sink_id': 'import_mirtarbase', 'name': None, 'default_value': None}, {'id': 'stringdb_edge_list', 'source_id': 'import_stringdb/stringdb_edge_list', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'entrez2string', 'source_id': 'entrez2string', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'map_mirtarbase', 'name': None, 'default_value': None}, {'id': 'mirtarbase_edge_list', 'source_id': 'import_mirtarbase/mirtarbase_edge_list', 'sink_id': 'map_mirtarbase', 'name': None, 'default_value': None}, {'id': 'stringdb_mapped_edge_list', 'source_id': 'map_stringdb/stringdb_mapped_edge_list', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'mirtarbase_mapped_edge_list', 'source_id': 'map_mirtarbase/mirtarbase_mapped_edge_list', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'mRNA-mRNA_bicor', 'source_id': 'mRNA-mRNA_bicor', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'miRNA-mRNA_bicor', 'source_id': 'miRNA-mRNA_bicor', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'de_mRNA', 'source_id': 'de_mRNA', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'de_miRNA', 'source_id': 'de_miRNA', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'variant_burden', 'source_id': 'variant_burden', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'max_cor_edges', 'source_id': 'max_cor_edges', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'full_graph_rds', 'source_id': 'integrate_graph/full_graph_rds', 'sink_id': 'igraph_to_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_input', 'source_id': 'igraph_to_mogamun/mogamun_input', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_generations', 'source_id': 'mogamun_generations', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_runs', 'source_id': 'mogamun_runs', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_cores', 'source_id': 'mogamun_cores', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_input', 'source_id': 'igraph_to_mogamun/mogamun_input', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_results', 'source_id': 'run_mogamun/mogamun_results', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_min_size', 'source_id': 'mogamun_min_size', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_max_size', 'source_id': 'mogamun_max_size', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_merge_threshold', 'source_id': 'mogamun_merge_threshold', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 681,
    "text_field": "['docker', 'scripts', 'util', 'workflows', '.gitignore', 'README.md', 'Dockerfile', 'igraph_to_mogamun.R', 'import_mirtarbase.R', 'import_stringdb.R', 'integrate_graph.R', 'map_mirtarbase.R', 'map_stringdb.R', 'postprocess_mogamun.R', 'run_mogamun.R', 'load_omics_data.R', 'map_identifiers.R', 'prepare_mogamun.R', 'igraph_to_mogamun.cwl', 'import_mirtarbase.cwl', 'import_stringdb.cwl', 'integrate_graph.cwl', 'map_mirtarbase.cwl', 'map_stringdb.cwl', 'postprocess_mogamun.cwl', 'run_mogamun.cwl', 'test_job.yml', 'workflow.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Workflow for Creating a large disease network from various datasets and databases for IBM, and applying the active subnetwork identification method MOGAMUN. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/681?version=7 DOI:10.48546/workflowhub.workflow.681.7 Added remaining metadata More metada More metadata More metadata More metadata More metadata Update README.md Views:1966Downloads:712 Created: 27th Nov 2023 at 12:52 Last updated: 1st Feb 2024 at 11:26 None Teams:EJPRD WP13 case-studies workflows Organizations:EJP-RD A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified EJPRD WP13 case-studies workflows from phase 1. Space:Independent Teams Public web page:https://www.ejprarediseases.org/ Organisms:Not specified"
  },
  {
    "": 349,
    "discussion_links": "[{'id': '787', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '788', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/structure_checking'}, {'id': '789', 'label': 'Documentation', 'url': 'https://biobb-wf-structure-checking.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Molecular Structure Checking",
    "license": "Apache-2.0",
    "description": "# Molecular Structure Checking using BioExcel Building Blocks (biobb)\n\n***\n\nThis tutorial aims to illustrate the process of **checking** a **molecular structure** before using it as an input for a **Molecular Dynamics** simulation. The workflow uses the **BioExcel Building Blocks library (biobb)**. The particular structure used is the crystal structure of **human Adenylate Kinase 1A (AK1A)**, in complex with the **AP5A inhibitor** (PDB code [1Z83](https://www.rcsb.org/structure/1z83)).  \n\n**Structure checking** is a key step before setting up a protein system for **simulations**. A number of **common issues** found in structures at **Protein Data Bank** may compromise the success of the **simulation**, or may suggest that longer **equilibration** procedures are necessary.\n\nThe **workflow** shows how to:\n\n- Run **basic manipulations on structures** (selection of models, chains, alternative locations\n- Detect and fix **amide assignments** and **wrong chiralities**\n- Detect and fix **protein backbone** issues (missing fragments, and atoms, capping)\n- Detect and fix **missing side-chain atoms**\n- **Add hydrogen atoms** according to several criteria\n- Detect and classify **atomic clashes**\n- Detect possible **disulfide bonds (SS)**\n\nAn implementation of this workflow in a **web-based Graphical User Interface (GUI)** can be found in the [https://mmb.irbbarcelona.org/biobb-wfs/](https://mmb.irbbarcelona.org/biobb-wfs/) server (see [https://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check](https://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check)).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/776?version=1', 'commit': '24d34210ccf7272242da38ea933da629060f5abc', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/776/git/1/tree', 'doi': '10.48546/workflowhub.workflow.776.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-03-05T08:41:19.000Z",
    "updated_at": "2024-03-05T08:50:30.000Z",
    "doi": "10.48546/workflowhub.workflow.776.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_structure_check_init_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_structure_check_init_output_summary_path', 'name': 'Output file', 'description': 'Output summary checking results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_model_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_extract_model_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_model_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_model tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_fix_altlocs_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_fix_altlocs_config', 'name': 'Config file', 'description': 'Configuration file for biobb_model.fix_altlocs tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_fix_ssbonds_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_remove_molecules_ions_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_remove_molecules_ions_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_remove_molecules_ligands_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_remove_molecules_ligands_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_reduce_remove_hydrogens_output_path', 'name': 'Output file', 'description': 'Path to the output file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_remove_pdb_water_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_fix_amides_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_fix_chirality_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_fix_side_chain_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_fix_backbone_input_fasta_canonical_sequence_path', 'name': 'Input file', 'description': 'Input FASTA file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step12_fix_backbone_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_pdb_path', 'name': 'Output file', 'description': 'Output 3D structure PDB file matching the topology file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_top_path', 'name': 'Output file', 'description': 'Output topology file (AMBER ParmTop).', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_crd_path', 'name': 'Output file', 'description': 'Output coordinates file (AMBER crd).', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_config', 'name': 'Config file', 'description': 'Configuration file for biobb_amber.leap_gen_top tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_traj_path', 'name': 'Output file', 'description': 'Output trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_rst_path', 'name': 'Output file', 'description': 'Output restart file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_config', 'name': 'Config file', 'description': 'Configuration file for biobb_amber.sander_mdrun tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_amber_to_pdb_output_pdb_path', 'name': 'Output file', 'description': 'Structure PDB file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_fix_pdb_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_structure_check_output_summary_path', 'name': 'Output file', 'description': 'Output summary checking results.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_structure_check_init_out1', 'name': 'output_summary_path', 'description': 'Output summary checking results.', 'type': [{'type': 'File'}], 'source_ids': ['step0_structure_check_init/output_summary_path']}, {'id': 'step1_extract_model_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_model/output_structure_path']}, {'id': 'step2_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step2_extract_chain/output_structure_path']}, {'id': 'step3_fix_altlocs_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step3_fix_altlocs/output_pdb_path']}, {'id': 'step4_fix_ssbonds_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step4_fix_ssbonds/output_pdb_path']}, {'id': 'step5_remove_molecules_ions_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step5_remove_molecules_ions/output_molecules_path']}, {'id': 'step6_remove_molecules_ligands_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step6_remove_molecules_ligands/output_molecules_path']}, {'id': 'step7_reduce_remove_hydrogens_out1', 'name': 'output_path', 'description': 'Path to the output file.', 'type': [{'type': 'File'}], 'source_ids': ['step7_reduce_remove_hydrogens/output_path']}, {'id': 'step8_remove_pdb_water_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step8_remove_pdb_water/output_pdb_path']}, {'id': 'step9_fix_amides_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step9_fix_amides/output_pdb_path']}, {'id': 'step10_fix_chirality_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step10_fix_chirality/output_pdb_path']}, {'id': 'step11_fix_side_chain_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step11_fix_side_chain/output_pdb_path']}, {'id': 'step12_fix_backbone_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step12_fix_backbone/output_pdb_path']}, {'id': 'step13_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file.', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_pdb_path']}, {'id': 'step13_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop).', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_top_path']}, {'id': 'step13_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd).', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_crd_path']}, {'id': 'step14_sander_mdrun_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_traj_path']}, {'id': 'step14_sander_mdrun_out2', 'name': 'output_rst_path', 'description': 'Output restart file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_rst_path']}, {'id': 'step14_sander_mdrun_out3', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_log_path']}, {'id': 'step15_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file.', 'type': [{'type': 'File'}], 'source_ids': ['step15_amber_to_pdb/output_pdb_path']}, {'id': 'step16_fix_pdb_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step16_fix_pdb/output_pdb_path']}, {'id': 'step17_structure_check_out1', 'name': 'output_summary_path', 'description': 'Output summary checking results.', 'type': [{'type': 'File'}], 'source_ids': ['step17_structure_check/output_summary_path']}], 'steps': [{'id': 'step0_structure_check_init', 'name': 'structure_check', 'description': 'This class is a wrapper of the Structure Checking tool to generate summary checking results on a json file.', 'sink_ids': ['step0_structure_check_init/output_summary_path']}, {'id': 'step1_extract_model', 'name': 'extract_model', 'description': 'This class is a wrapper of the Structure Checking tool to extract a model from a 3D structure.', 'sink_ids': ['step1_extract_model/output_structure_path']}, {'id': 'step2_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step2_extract_chain/output_structure_path']}, {'id': 'step3_fix_altlocs', 'name': 'fix_altlocs', 'description': 'Fix alternate locations from residues.', 'sink_ids': ['step3_fix_altlocs/output_pdb_path']}, {'id': 'step4_fix_ssbonds', 'name': 'fix_ssbonds', 'description': 'Fix SS bonds from residues.', 'sink_ids': ['step4_fix_ssbonds/output_pdb_path']}, {'id': 'step5_remove_molecules_ions', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step5_remove_molecules_ions/output_molecules_path']}, {'id': 'step6_remove_molecules_ligands', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step6_remove_molecules_ligands/output_molecules_path']}, {'id': 'step7_reduce_remove_hydrogens', 'name': 'reduce_remove_hydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step7_reduce_remove_hydrogens/output_path']}, {'id': 'step8_remove_pdb_water', 'name': 'remove_pdb_water', 'description': 'This class is a wrapper of the Structure Checking tool to remove water molecules from PDB 3D structures.', 'sink_ids': ['step8_remove_pdb_water/output_pdb_path']}, {'id': 'step9_fix_amides', 'name': 'fix_amides', 'description': 'Creates a new PDB file flipping the clashing amide groups.', 'sink_ids': ['step9_fix_amides/output_pdb_path']}, {'id': 'step10_fix_chirality', 'name': 'fix_chirality', 'description': \"Creates a new PDB file fixing stereochemical errors in residue side-chains changing It's chirality.\", 'sink_ids': ['step10_fix_chirality/output_pdb_path']}, {'id': 'step11_fix_side_chain', 'name': 'fix_side_chain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step11_fix_side_chain/output_pdb_path']}, {'id': 'step12_fix_backbone', 'name': 'fix_backbone', 'description': 'Reconstructs the missing backbone atoms of the given PDB file.', 'sink_ids': ['step12_fix_backbone/output_pdb_path']}, {'id': 'step13_leap_gen_top', 'name': 'leap_gen_top', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step13_leap_gen_top/output_pdb_path', 'step13_leap_gen_top/output_top_path', 'step13_leap_gen_top/output_crd_path']}, {'id': 'step14_sander_mdrun', 'name': 'sander_mdrun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun/output_traj_path', 'step14_sander_mdrun/output_rst_path', 'step14_sander_mdrun/output_log_path']}, {'id': 'step15_amber_to_pdb', 'name': 'amber_to_pdb', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step15_amber_to_pdb/output_pdb_path']}, {'id': 'step16_fix_pdb', 'name': 'fix_pdb', 'description': 'Renumerates residues in a PDB structure according to a reference sequence from UniProt', 'sink_ids': ['step16_fix_pdb/output_pdb_path']}, {'id': 'step17_structure_check', 'name': 'structure_check', 'description': 'This class is a wrapper of the Structure Checking tool to generate summary checking results on a json file.', 'sink_ids': ['step17_structure_check/output_summary_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step0_structure_check_init_input_structure_path', 'sink_id': 'step0_structure_check_init', 'name': None, 'default_value': None}, {'id': 'output_summary_path', 'source_id': 'step0_structure_check_init_output_summary_path', 'sink_id': 'step0_structure_check_init', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_extract_model_config', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_model_input_structure_path', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step1_extract_model_output_structure_path', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_extract_chain_config', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_model/output_structure_path', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step2_extract_chain_output_structure_path', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_fix_altlocs_config', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_extract_chain/output_structure_path', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step3_fix_altlocs_output_pdb_path', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step3_fix_altlocs/output_pdb_path', 'sink_id': 'step4_fix_ssbonds', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step4_fix_ssbonds_output_pdb_path', 'sink_id': 'step4_fix_ssbonds', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_remove_molecules_ions_config', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_fix_ssbonds/output_pdb_path', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step5_remove_molecules_ions_output_molecules_path', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_remove_molecules_ligands_config', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step5_remove_molecules_ions/output_molecules_path', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step6_remove_molecules_ligands_output_molecules_path', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step6_remove_molecules_ligands/output_molecules_path', 'sink_id': 'step7_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step7_reduce_remove_hydrogens_output_path', 'sink_id': 'step7_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_reduce_remove_hydrogens/output_path', 'sink_id': 'step8_remove_pdb_water', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_remove_pdb_water_output_pdb_path', 'sink_id': 'step8_remove_pdb_water', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_remove_pdb_water/output_pdb_path', 'sink_id': 'step9_fix_amides', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step9_fix_amides_output_pdb_path', 'sink_id': 'step9_fix_amides', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step9_fix_amides/output_pdb_path', 'sink_id': 'step10_fix_chirality', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step10_fix_chirality_output_pdb_path', 'sink_id': 'step10_fix_chirality', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step10_fix_chirality/output_pdb_path', 'sink_id': 'step11_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step11_fix_side_chain_output_pdb_path', 'sink_id': 'step11_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step11_fix_side_chain/output_pdb_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'input_fasta_canonical_sequence_path', 'source_id': 'step12_fix_backbone_input_fasta_canonical_sequence_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step12_fix_backbone_output_pdb_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_leap_gen_top_config', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step12_fix_backbone/output_pdb_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step13_leap_gen_top_output_pdb_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step13_leap_gen_top_output_top_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step13_leap_gen_top_output_crd_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_sander_mdrun_config', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step13_leap_gen_top/output_top_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step13_leap_gen_top/output_crd_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step14_sander_mdrun_output_traj_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step14_sander_mdrun_output_rst_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step14_sander_mdrun_output_log_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step13_leap_gen_top/output_top_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step14_sander_mdrun/output_rst_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step15_amber_to_pdb_output_pdb_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step15_amber_to_pdb/output_pdb_path', 'sink_id': 'step16_fix_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step16_fix_pdb_output_pdb_path', 'sink_id': 'step16_fix_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step16_fix_pdb/output_pdb_path', 'sink_id': 'step17_structure_check', 'name': None, 'default_value': None}, {'id': 'output_summary_path', 'source_id': 'step17_structure_check_output_summary_path', 'sink_id': 'step17_structure_check', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 776,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'extract_chain.cwl', 'extract_model.cwl', 'fix_altlocs.cwl', 'fix_amides.cwl', 'fix_backbone.cwl', 'fix_chirality.cwl', 'fix_pdb.cwl', 'fix_side_chain.cwl', 'fix_ssbonds.cwl', 'leap_gen_top.cwl', 'reduce_remove_hydrogens.cwl', 'remove_molecules.cwl', 'remove_pdb_water.cwl', 'sander_mdrun.cwl', 'structure_check.cwl', 'sequence.fasta', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process ofcheckingamolecular structurebefore using it as an input for aMolecular Dynamicssimulation. The workflow uses theBioExcel Building Blocks library (biobb). The particular structure used is the crystal structure ofhuman Adenylate Kinase 1A (AK1A), in complex with theAP5A inhibitor(PDB code1Z83). Structure checkingis a key step before setting up a protein system forsimulations. A number ofcommon issuesfound in structures atProtein Data Bankmay compromise the success of thesimulation, or may suggest that longerequilibrationprocedures are necessary. Theworkflowshows how to: An implementation of this workflow in aweb-based Graphical User Interface (GUI)can be found in thehttps://mmb.irbbarcelona.org/biobb-wfs/server (seehttps://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/776?version=1 DOI:10.48546/workflowhub.workflow.776.1 Initial commit Views:792Downloads:446 Created: 5th Mar 2024 at 08:41 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 378,
    "discussion_links": [],
    "title": "Use Case 13: Novel Cell Surface Targets for Individual Cancer Patients Analyzed with Common Fund Datasets",
    "license": "CC-BY-NC-SA-4.0",
    "description": "The input to this workflow is a data matrix of gene expression that was collected from a pediatric patient tumor patient from the KidsFirst Common Fund program [1]. The RNA-seq samples are the columns of the matrix, and the rows are the raw expression gene count for all human coding genes (Table 1). This data matrix is fed into TargetRanger [2] to screen for targets which are highly expressed in the tumor but lowly expressed across most healthy human tissues based on gene expression data collected from postmortem patients with RNA-seq by the GTEx Common Fund program [3]. Based on this analysis the gene IMP U3 small nucleolar ribonucleoprotein 3 (IMP3) was selected because it was the top candidate returned from the TargetRanger analysis (Tables 2-3). IMP3 is also commonly called insulin-like growth factor 2 mRNA-binding protein 3 (IGF2BP3). Next, we leverage unique knowledge from various other Common Fund programs to examine various functions and knowledge related to IMP3. First, we queried the LINCS L1000 data [4] from the LINCS program [5] converted into RNA-seq-like LINCS L1000 Signatures [6] using the SigCom LINCS API [7] to identify mimicker or reverser small molecules that maximally impact the expression of IMP3 in human cell lines (Fig. 1, Table 4). In addition, we also queried the LINCS L1000 data to identify single gene CRISPR knockouts that down-regulate the expression of IMP3 (Fig. 1, Table 5). These potential drug targets were filtered using the Common Fund IDG program's list of understudied proteins [8] to produce a set of additional targets (Table 6). Next, IMP3 was searched for knowledge provided by the with the Metabolomics Workbench MetGENE tool [9]. MetGENE aggregates knowledge about pathways, reactions, metabolites, and studies from the Metabolomics Workbench Common Fund supported resource [10]. The Metabolomics Workbench was searched to find associated metabolites linked to IMP3 [10]. Furthermore, we leveraged the Linked Data Hub API [11] to list knowledge about regulatory elements associated with IMP3 (Table 6). Finally, the GlyGen database [12] was queried to identify relevant sets of proteins that are the product of the IMP3 genes, as well as known post-translational modifications discovered on IMP3.\n\n1. Lonsdale, J. et al. The Genotype-Tissue Expression (GTEx) project. Nature Genetics vol. 45 580–585 (2013). doi:10.1038/ng.2653\n2. Evangelista, J. E. et al. SigCom LINCS: data and metadata search engine for a million gene expression signatures. Nucleic Acids Research vol. 50 W697–W709 (2022). doi:10.1093/nar/gkac328\n3. IDG Understudied Proteins, https://druggablegenome.net/AboutIDGProteinList\n4. MetGENE, https://sc-cfdewebdev.sdsc.edu/MetGENE/metGene.php\n5. The Metabolomics Workbench, https://www.metabolomicsworkbench.org/\n6. Linked Data Hub, https://ldh.genome.network/cfde/ldh/\n7. York, W. S. et al. GlyGen: Computational and Informatics Resources for Glycoscience. Glycobiology vol. 30 72–73 (2019). doi:10.1093/glycob/cwz080",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/814?version=1', 'commit': '7d7d4ea1ceb21c3d7370ae29806321a98a616fae', 'ref': 'refs/heads/master', 'tree': '/workflows/814/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-04-16T21:42:58.000Z",
    "updated_at": "2024-04-23T15:54:49.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step-1-data', 'name': 'Input File', 'description': 'Upload a Data File', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step-4-data', 'name': 'Select One Gene', 'description': 'Select one Gene', 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'step-1-output', 'name': 'File URL', 'description': 'URL to a File', 'type': [{'type': 'File'}], 'source_ids': ['step-1/output']}, {'id': 'step-2-output', 'name': 'Gene Count Matrix', 'description': 'A gene count matrix file', 'type': [{'type': 'File'}], 'source_ids': ['step-2/output']}, {'id': 'step-3-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-3/output']}, {'id': 'step-4-output', 'name': 'Gene', 'description': 'Gene Term', 'type': [{'type': 'File'}], 'source_ids': ['step-4/output']}, {'id': 'step-5-output', 'name': 'LINCS L1000 Reverse Search Dashboard', 'description': 'A dashboard for performing L1000 Reverse Search queries for a given gene', 'type': [{'type': 'File'}], 'source_ids': ['step-5/output']}, {'id': 'step-6-output', 'name': 'Scored Drugs', 'description': 'ZScores of Drugs', 'type': [{'type': 'File'}], 'source_ids': ['step-6/output']}, {'id': 'step-7-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-7/output']}, {'id': 'step-8-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-8/output']}, {'id': 'step-9-output', 'name': 'MetGENE Summary', 'description': 'A dashboard for reviewing gene-centric information for a given gene from metabolomics', 'type': [{'type': 'File'}], 'source_ids': ['step-9/output']}, {'id': 'step-10-output', 'name': 'MetGENE metabolite table', 'description': 'MetGENE metabolite table', 'type': [{'type': 'File'}], 'source_ids': ['step-10/output']}, {'id': 'step-11-output', 'name': 'MetGENE Reaction Table', 'description': 'MetGENE Reaction Table', 'type': [{'type': 'File'}], 'source_ids': ['step-11/output']}, {'id': 'step-12-output', 'name': 'Regulatory Element Set', 'description': 'Set of Regulatory Elements', 'type': [{'type': 'File'}], 'source_ids': ['step-12/output']}, {'id': 'step-13-output', 'name': 'GlyGen Protein Products', 'description': 'Protein product records in GlyGen', 'type': [{'type': 'File'}], 'source_ids': ['step-13/output']}], 'steps': [{'id': 'step-1', 'name': 'Input File', 'description': 'Upload a Data File', 'sink_ids': ['step-1/output']}, {'id': 'step-2', 'name': 'Resolve a Gene Count Matrix from a File', 'description': 'Ensure a file contains a gene count matrix, load it into a standard format', 'sink_ids': ['step-2/output']}, {'id': 'step-3', 'name': 'Screen for Targets against GTEx', 'description': 'Identify significantly overexpressed genes when compared to normal tissue in GTEx', 'sink_ids': ['step-3/output']}, {'id': 'step-4', 'name': 'Select One Gene', 'description': 'Select one Gene', 'sink_ids': ['step-4/output']}, {'id': 'step-5', 'name': 'LINCS L1000 Reverse Search', 'description': 'Identify RNA-seq-like LINCS L1000 Signatures which reverse the expression of the gene.', 'sink_ids': ['step-5/output']}, {'id': 'step-6', 'name': 'Extract Down Regulating Perturbagens', 'description': 'Identify RNA-seq-like LINCS L1000 Chemical Perturbagen Signatures which reverse the expression of the gene.', 'sink_ids': ['step-6/output']}, {'id': 'step-7', 'name': 'Extract Down Regulating CRISPR KOs', 'description': 'Identify RNA-seq-like LINCS L1000 CRISPR KO Signatures which reverse the expression of the gene.', 'sink_ids': ['step-7/output']}, {'id': 'step-8', 'name': 'Filter genes by Understudied Proteins', 'description': 'Based on IDG understudied proteins list', 'sink_ids': ['step-8/output']}, {'id': 'step-9', 'name': 'MetGENE Search', 'description': 'Identify gene-centric information from Metabolomics.', 'sink_ids': ['step-9/output']}, {'id': 'step-10', 'name': 'MetGENE Metabolites', 'description': 'Extract Metabolomics metabolites for the gene from MetGENE', 'sink_ids': ['step-10/output']}, {'id': 'step-11', 'name': 'MetGENE Reactions', 'description': 'Extract Metabolomics reactions for the gene from MetGENE', 'sink_ids': ['step-11/output']}, {'id': 'step-12', 'name': 'Resolve Regulatory Elements from LDH', 'description': 'Resolve regulatory elements from gene with Linked Data Hub', 'sink_ids': ['step-12/output']}, {'id': 'step-13', 'name': 'Search GlyGen for Protein Products', 'description': 'Find protein product records in GlyGen for the gene', 'sink_ids': ['step-13/output']}], 'links': [{'id': 'data', 'source_id': 'step-1-data', 'sink_id': 'step-1', 'name': None, 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-1', 'name': None, 'default_value': 'step-1-output.json'}, {'id': 'inputs.file', 'source_id': 'step-1/output', 'sink_id': 'step-2', 'name': 'File URL', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-2', 'name': None, 'default_value': 'step-2-output.json'}, {'id': 'inputs.input', 'source_id': 'step-2/output', 'sink_id': 'step-3', 'name': 'Gene Count Matrix', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-3', 'name': None, 'default_value': 'step-3-output.json'}, {'id': 'data', 'source_id': 'step-4-data', 'sink_id': 'step-4', 'name': None, 'default_value': None}, {'id': 'inputs.scored', 'source_id': 'step-3/output', 'sink_id': 'step-4', 'name': 'Scored Genes', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-4', 'name': None, 'default_value': 'step-4-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-5', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-5', 'name': None, 'default_value': 'step-5-output.json'}, {'id': 'inputs.search', 'source_id': 'step-5/output', 'sink_id': 'step-6', 'name': 'LINCS L1000 Reverse Search Dashboard', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-6', 'name': None, 'default_value': 'step-6-output.json'}, {'id': 'inputs.search', 'source_id': 'step-5/output', 'sink_id': 'step-7', 'name': 'LINCS L1000 Reverse Search Dashboard', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-7', 'name': None, 'default_value': 'step-7-output.json'}, {'id': 'inputs.input', 'source_id': 'step-7/output', 'sink_id': 'step-8', 'name': 'Scored Genes', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-8', 'name': None, 'default_value': 'step-8-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-9', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-9', 'name': None, 'default_value': 'step-9-output.json'}, {'id': 'inputs.summary', 'source_id': 'step-9/output', 'sink_id': 'step-10', 'name': 'MetGENE Summary', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-10', 'name': None, 'default_value': 'step-10-output.json'}, {'id': 'inputs.summary', 'source_id': 'step-9/output', 'sink_id': 'step-11', 'name': 'MetGENE Summary', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-11', 'name': None, 'default_value': 'step-11-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-12', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-12', 'name': None, 'default_value': 'step-12-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-13', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-13', 'name': None, 'default_value': 'step-13-output.json'}]}",
    "tools": [],
    "id": 814,
    "text_field": "['diagram.png', 'pwb-export.json', 'pwb-report.html', 'workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.2\nclass: Workflow\ndoc: >-\n  A file was first uploaded. The file was parsed as a gene count matrix.\n  Significantly over-expressed genes when compared to normal tissue in GTEx [1]\n  were identified. IMP3 was chosen for further investigation. RNA-seq-like LINCS\n  L1000 Signatures [2] which mimick or reverse the the expression of IMP3 were\n  visualized. Drugs which down-regulate the expression of IMP3 were identified\n  from the RNA-seq-like LINCS L1000 Chemical Perturbagens [2]. Genes which\n  down-regulate the expression of IMP3 were identified from the RNA-seq-like\n  LINCS L1000 CRISPR Knockouts [2]. Genes were filtered by IDG Understudied\n  Proteins [3]. The gene was searched with the MetGENE tool providing pathways,\n  reactions, metabolites, and studies from the Metabolomics Workbench [4]. IMP3\n  was then searched in the Metabolomics Workbench [5] to identify associated\n  metabolites. IMP3 was then searched in the Metabolomics Workbench [5] to\n  identify relevant reactions. Regulatory elements were obtained from the Linked\n  Data Hub [6]. The GlyGen database [7] was searched to identify a relevant set\n  of protein products that originate from IMP3.\n\n\n  1. Lonsdale, J. et al. The Genotype-Tissue Expression (GTEx) project. Nature\n  Genetics vol. 45 580–585 (2013). doi:10.1038/ng.2653\n\n  2. Evangelista, J. E. et al. SigCom LINCS: data and metadata search engine for\n  a million gene expression signatures. Nucleic Acids Research vol. 50 W697–W709\n  (2022). doi:10.1093/nar/gkac328\n\n  3. IDG Understudied Proteins, https://druggablegenome.net/AboutIDGProteinList\n\n  4. MetGENE, https://sc-cfdewebdev.sdsc.edu/MetGENE/metGene.php\n\n  5. The Metabolomics Workbench, https://www.metabolomicsworkbench.org/\n\n  6. Linked Data Hub, https://ldh.genome.network/cfde/ldh/\n\n  7. York, W. S. et al. GlyGen: Computational and Informatics Resources for\n  Glycoscience. Glycobiology vol. 30 72–73 (2019). doi:10.1093/glycob/cwz080\nrequirements: {}\ninputs:\n  step-1-data:\n    label: Input File\n    doc: Upload a Data File\n    type: File\n  step-4-data:\n    label: Select One Gene\n    doc: Select one Gene\n    type: File\noutputs:\n  step-1-output:\n    label: File URL\n    doc: URL to a File\n    type: File\n    outputSource: step-1/output\n  step-2-output:\n    label: Gene Count Matrix\n    doc: A gene count matrix file\n    type: File\n    outputSource: step-2/output\n  step-3-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-3/output\n  step-4-output:\n    label: Gene\n    doc: Gene Term\n    type: File\n    outputSource: step-4/output\n  step-5-output:\n    label: LINCS L1000 Reverse Search Dashboard\n    doc: A dashboard for performing L1000 Reverse Search queries for a given gene\n    type: File\n    outputSource: step-5/output\n  step-6-output:\n    label: Scored Drugs\n    doc: ZScores of Drugs\n    type: File\n    outputSource: step-6/output\n  step-7-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-7/output\n  step-8-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-8/output\n  step-9-output:\n    label: MetGENE Summary\n    doc: A dashboard for reviewing gene-centric information for a given gene from\n      metabolomics\n    type: File\n    outputSource: step-9/output\n  step-10-output:\n    label: MetGENE metabolite table\n    doc: MetGENE metabolite table\n    type: File\n    outputSource: step-10/output\n  step-11-output:\n    label: MetGENE Reaction Table\n    doc: MetGENE Reaction Table\n    type: File\n    outputSource: step-11/output\n  step-12-output:\n    label: Regulatory Element Set\n    doc: Set of Regulatory Elements\n    type: File\n    outputSource: step-12/output\n  step-13-output:\n    label: GlyGen Protein Products\n    doc: Protein product records in GlyGen\n    type: File\n    outputSource: step-13/output\nsteps:\n  step-1:\n    run: FileInput.cwl\n    label: Input File\n    doc: Upload a Data File\n    in:\n      data:\n        source: step-1-data\n      outputFilename:\n        default: step-1-output.json\n    out:\n      - output\n  step-2:\n    run: GeneCountMatrixFromFile.cwl\n    label: Resolve a Gene Count Matrix from a File\n    doc: Ensure a file contains a gene count matrix, load it into a standard format\n    in:\n      inputs.file:\n        label: File URL\n        source: step-1/output\n      outputFilename:\n        default: step-2-output.json\n    out:\n      - output\n  step-3:\n    run: TargetRangerScreenTargets[GTEx_transcriptomics].cwl\n    label: Screen for Targets against GTEx\n    doc: Identify significantly overexpressed genes when compared to normal tissue\n      in GTEx\n    in:\n      inputs.input:\n        label: Gene Count Matrix\n        source: step-2/output\n      outputFilename:\n        default: step-3-output.json\n    out:\n      - output\n  step-4:\n    run: OneScoredT[Scored[Gene]].cwl\n    label: Select One Gene\n    doc: Select one Gene\n    in:\n      data:\n        source: step-4-data\n      inputs.scored:\n        label: Scored Genes\n        source: step-3/output\n      outputFilename:\n        default: step-4-output.json\n    out:\n      - output\n  step-5:\n    run: LINCSL1000ReverseSearch.cwl\n    label: LINCS L1000 Reverse Search\n    doc: Identify RNA-seq-like LINCS L1000 Signatures which reverse the expression\n      of the gene.\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-5-output.json\n    out:\n      - output\n  step-6:\n    run: LINCSL1000ReverseSearchExtract[Drug, Down].cwl\n    label: Extract Down Regulating Perturbagens\n    doc: Identify RNA-seq-like LINCS L1000 Chemical Perturbagen Signatures which\n      reverse the expression of the gene.\n    in:\n      inputs.search:\n        label: LINCS L1000 Reverse Search Dashboard\n        source: step-5/output\n      outputFilename:\n        default: step-6-output.json\n    out:\n      - output\n  step-7:\n    run: LINCSL1000ReverseSearchExtract[Gene, Down].cwl\n    label: Extract Down Regulating CRISPR KOs\n    doc: Identify RNA-seq-like LINCS L1000 CRISPR KO Signatures which reverse the\n      expression of the gene.\n    in:\n      inputs.search:\n        label: LINCS L1000 Reverse Search Dashboard\n        source: step-5/output\n      outputFilename:\n        default: step-7-output.json\n    out:\n      - output\n  step-8:\n    run: IDGFilter[Scored[Gene], all].cwl\n    label: Filter genes by Understudied Proteins\n    doc: Based on IDG understudied proteins list\n    in:\n      inputs.input:\n        label: Scored Genes\n        source: step-7/output\n      outputFilename:\n        default: step-8-output.json\n    out:\n      - output\n  step-9:\n    run: MetGeneSearch.cwl\n    label: MetGENE Search\n    doc: Identify gene-centric information from Metabolomics.\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-9-output.json\n    out:\n      - output\n  step-10:\n    run: MetgeneMetabolites.cwl\n    label: MetGENE Metabolites\n    doc: Extract Metabolomics metabolites for the gene from MetGENE\n    in:\n      inputs.summary:\n        label: MetGENE Summary\n        source: step-9/output\n      outputFilename:\n        default: step-10-output.json\n    out:\n      - output\n  step-11:\n    run: MetGeneRxns.cwl\n    label: MetGENE Reactions\n    doc: Extract Metabolomics reactions for the gene from MetGENE\n    in:\n      inputs.summary:\n        label: MetGENE Summary\n        source: step-9/output\n      outputFilename:\n        default: step-11-output.json\n    out:\n      - output\n  step-12:\n    run: GetRegulatoryElementsForGeneInfoFromGene.cwl\n    label: Resolve Regulatory Elements from LDH\n    doc: Resolve regulatory elements from gene with Linked Data Hub\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-12-output.json\n    out:\n      - output\n  step-13:\n    run: GlyGenProteinInformation.cwl\n    label: Search GlyGen for Protein Products\n    doc: Find protein product records in GlyGen for the gene\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-13-output.json\n    out:\n      - output",
    "p_tag_content": "The input to this workflow is a data matrix of gene expression that was collected from a pediatric patient tumor patient from the KidsFirst Common Fund program [1]. The RNA-seq samples are the columns of the matrix, and the rows are the raw expression gene count for all human coding genes (Table 1). This data matrix is fed into TargetRanger [2] to screen for targets which are highly expressed in the tumor but lowly expressed across most healthy human tissues based on gene expression data collected from postmortem patients with RNA-seq by the GTEx Common Fund program [3]. Based on this analysis the gene IMP U3 small nucleolar ribonucleoprotein 3 (IMP3) was selected because it was the top candidate returned from the TargetRanger analysis (Tables 2-3). IMP3 is also commonly called insulin-like growth factor 2 mRNA-binding protein 3 (IGF2BP3). Next, we leverage unique knowledge from various other Common Fund programs to examine various functions and knowledge related to IMP3. First, we queried the LINCS L1000 data [4] from the LINCS program [5] converted into RNA-seq-like LINCS L1000 Signatures [6] using the SigCom LINCS API [7] to identify mimicker or reverser small molecules that maximally impact the expression of IMP3 in human cell lines (Fig. 1, Table 4). In addition, we also queried the LINCS L1000 data to identify single gene CRISPR knockouts that down-regulate the expression of IMP3 (Fig. 1, Table 5). These potential drug targets were filtered using the Common Fund IDG program's list of understudied proteins [8] to produce a set of additional targets (Table 6). Next, IMP3 was searched for knowledge provided by the with the Metabolomics Workbench MetGENE tool [9]. MetGENE aggregates knowledge about pathways, reactions, metabolites, and studies from the Metabolomics Workbench Common Fund supported resource [10]. The Metabolomics Workbench was searched to find associated metabolites linked to IMP3 [10]. Furthermore, we leveraged the Linked Data Hub API [11] to list knowledge about regulatory elements associated with IMP3 (Table 6). Finally, the GlyGen database [12] was queried to identify relevant sets of proteins that are the product of the IMP3 genes, as well as known post-translational modifications discovered on IMP3. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/814?version=1 Initial commit Views:720Downloads:117 Created: 16th Apr 2024 at 22:42 Last updated: 23rd Apr 2024 at 16:54 This item has not yet been tagged. None Teams:NIH CFDE Playbook Workflow Partnership Organizations:Mount Sinai A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://playbook-workflow-builder.cloud/ Organisms:Not specified"
  },
  {
    "": 401,
    "discussion_links": "[{'id': '918', 'label': 'Issues', 'url': 'https://forgemia.inra.fr/tango/tango_models/-/issues'}]",
    "title": "Tango: Numerical reconciliation of bacterial fermentation in cheese production",
    "license": "GPL-3.0",
    "description": "Complete workflow for TANGO as reported in Lecomte et al (2024),\n\"Revealing the dynamics and mechanisms of bacterial interactions in\ncheese production with metabolic modelling\", Metabolic Eng. 83:24-38\nhttps://doi.org/10.1016/j.ymben.2024.02.014\n\n1. Parameters for individual models are obtained by optimization\n2. Individual dynamics and community dynamics are simulated\n3. Figures for the manuscript are assembled from the results.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/873?version=1', 'commit': 'fd9ed7efc8aa53c9af4651a987673db364ecd9fa', 'ref': 'refs/tags/Version-0.9.0', 'tree': '/workflows/873/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-05-03T07:03:12.000Z",
    "updated_at": "2024-05-03T07:08:20.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": "[{'label': 'Microbial ecology', 'identifier': 'http://edamontology.org/topic_3697'}]",
    "internals": "{'inputs': [{'id': '#main/community', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': '#main/pure_culture', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': '#main/which_figures', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'string'}]}], 'default_value': None}], 'outputs': [{'id': '#main/figures', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['#main/mkdir_figures/out_dir']}, {'id': '#main/results', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['#main/mkdir_results/out_dir']}], 'steps': [{'id': '#main/dynamics', 'name': None, 'description': None, 'sink_ids': ['#main/dynamics/results', '#main/dynamics/time_series']}, {'id': '#main/mkdir_figures', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_figures/out_dir']}, {'id': '#main/mkdir_models', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_models/models_dir']}, {'id': '#main/mkdir_results', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_results/out_dir']}, {'id': '#main/optimize', 'name': None, 'description': None, 'sink_ids': ['#main/optimize/result_optimization']}, {'id': '#main/plot_figures', 'name': None, 'description': None, 'sink_ids': ['#main/plot_figures/figures']}], 'links': [{'id': '#main/dynamics/community', 'source_id': '#main/community', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/dynamics/initial_res_optim', 'source_id': '#main/optimize/result_optimization', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/dynamics/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/mkdir_figures/file_list', 'source_id': '#main/plot_figures/figures', 'sink_id': '#main/mkdir_figures', 'name': None, 'default_value': None}, {'id': '#main/mkdir_figures/name', 'source_id': None, 'sink_id': '#main/mkdir_figures', 'name': None, 'default_value': None}, {'id': '#main/mkdir_models/community', 'source_id': '#main/community', 'sink_id': '#main/mkdir_models', 'name': None, 'default_value': None}, {'id': '#main/mkdir_models/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/mkdir_models', 'name': None, 'default_value': None}, {'id': '#main/mkdir_results/file_list', 'source_id': '#main/dynamics/results', 'sink_id': '#main/mkdir_results', 'name': None, 'default_value': None}, {'id': '#main/mkdir_results/name', 'source_id': None, 'sink_id': '#main/mkdir_results', 'name': None, 'default_value': None}, {'id': '#main/optimize/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/optimize', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/models', 'source_id': '#main/mkdir_models/models_dir', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/results', 'source_id': '#main/dynamics/results', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/results', 'source_id': '#main/dynamics/time_series', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/which_figures', 'source_id': '#main/which_figures', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 873,
    "text_field": "['packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Complete workflow for TANGO as reported in Lecomte et al (2024),\n\"Revealing the dynamics and mechanisms of bacterial interactions in\ncheese production with metabolic modelling\", Metabolic Eng. 83:24-38https://doi.org/10.1016/j.ymben.2024.02.014 Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/873?version=1 Initial commit Views:568Downloads:105 Created: 3rd May 2024 at 08:03 This item has not yet been tagged. None Teams:MISTIC Organizations:Inria A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Microbial communities and TIC Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 410,
    "discussion_links": [],
    "title": "beacon-workflow",
    "license": "MIT",
    "description": "# beacon-omop-worker-workflows",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Merge pull request #1 from Health-Informatics-UoN/workflow_files\\r\\n\\r\\nAdd workflow files', 'url': 'https://workflowhub.eu/workflows/882?version=1', 'remote': 'https://github.com/Health-Informatics-UoN/beacon-omop-worker-workflows.git', 'commit': 'b08dc696f14ae4237d20184d01836ced770b2957', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/882/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #4 from Health-Informatics-UoN/remove_env_vars\\r\\n\\r\\nRemove environment variables', 'url': 'https://workflowhub.eu/workflows/882?version=2', 'remote': 'https://github.com/Health-Informatics-UoN/beacon-omop-worker-workflows.git', 'commit': '17afa9be6a259ef8df1e2e9bd5cedb23befc1751', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/882/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Merge pull request #4 from Health-Informatics-UoN/remove_env_vars\n\nRemove environment variables",
    "created_at": "2024-05-22T13:18:49.000Z",
    "updated_at": "2024-05-22T13:18:49.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'filters', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'output_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['beacon-oneshot/output_file']}], 'steps': [{'id': 'beacon-oneshot', 'name': None, 'description': None, 'sink_ids': ['beacon-oneshot/output_file']}], 'links': [{'id': 'filters', 'source_id': 'filters', 'sink_id': 'beacon-oneshot', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 882,
    "text_field": "['LICENSE', 'README.md', 'beacon-omop-worker.cwl', 'workflow_entrypoint.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: CommandLineTool\nid: beacon-oneshot\nlabel: beacon-oneshot\n\nhints:\n    DockerRequirement:\n        dockerPull: hutchstack/beacon-omop-worker:latest\nrequirements:\n    EnvVarRequirement:\n        envDef:\n            DATASOURCE_DB_HOST: $(inputs.db_host)\n            DATASOURCE_DB_DATABASE: $(inputs.db_name)\n            DATASOURCE_DB_USERNAME: $(inputs.db_user)\n            DATASOURCE_DB_PASSWORD: $(inputs.db_password)\n\nbaseCommand: [beacon-omop-worker]\narguments: [\"individuals\"]\ninputs:\n    filters:\n        type: string?\n        inputBinding:\n            position: 2\n            prefix: -f\n    db_host:\n      type: string\n    db_name:\n      type: string\n    db_user:\n      type: string\n    db_password:\n      type: string\n\noutputs:\n    output_file:\n        type: File\n        outputBinding:\n            glob: \"output.json\"\n\ncwlVersion: v1.0\nclass: Workflow\nid: beacon_workflow\nlabel: beacon-workflow\n\ninputs:\n    filters:\n        type: string?\n    db_host:\n        type: string\n    db_name:\n        type: string\n    db_user:\n        type: string\n    db_password:\n        type: string\n\noutputs:\n    output_file:\n        type: File\n        outputSource: beacon-oneshot/output_file\n\nsteps:\n    beacon-oneshot:\n        run: ./beacon-omop-worker.cwl\n        in:\n            filters: filters\n            db_host: db_host\n            db_name: db_name\n            db_user: db_user\n            db_password: db_password\n            \n        out: [output_file]",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/882?version=2 Merge pull request #4 from Health-Informatics-UoN/remove_env_vars Remove environment variables Merge pull request #1 from Health-Informatics-UoN/workflow_files Add workflow files Views:1009Downloads:303 Created: 10th May 2024 at 13:40 Last updated: 22nd May 2024 at 14:18 This item has not yet been tagged. None Teams:TRE-FX Organizations:University of Nottingham A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TRE-FX is assembling leading technology providers from ELIXIR-UK and HDR UK, with three TRE providers and two leading analysis platforms to show through a real reference implementation how we can use secure Research Objects to move between TREs while still supporting the Five Safes principles that govern and protect patient data; all overseen by patient representatives. Space:Independent Teams Public web page:https://trefx.uk/ Start date: 1st Mar 2023 End date: 31st Oct 2023 Organisms:Not specified"
  },
  {
    "": 412,
    "discussion_links": [],
    "title": "GSC (Genotype Sparse Compression)",
    "license": "MIT",
    "description": "# GSC (Genotype Sparse Compression)\nGenotype Sparse Compression (GSC) is an advanced tool for lossless compression of VCF files, designed to efficiently store and manage VCF files in a compressed format. It accepts VCF/BCF files as input and utilizes advanced compression techniques to significantly reduce storage requirements while ensuring fast query capabilities. In our study, we successfully compressed the VCF files from the 1000 Genomes Project (1000Gpip3), consisting of 2504 samples and 80 million variants, from an uncompressed VCF file of 803.70GB to approximately 1GB.\n\n## Requirements \n### GSC requires:\n\n- **Compiler Compatibility**: GSC requires a modern C++14-ready compiler, such as:\n  - g++ version 10.1.0 or higher\n\n- **Build System**: Make build system is necessary for compiling GSC.\n\n- **Operating System**: GSC supports 64-bit operating systems, including:\n  - Linux (Ubuntu 18.04)\n  \n## Installation\nTo download, build and install GSC use the following commands.\n```bash\ngit clone https://github.com/luo-xiaolong/GSC.git\ncd GSC\nmake\n```\nTo clean the GSC build use:\n```bash\nmake clean\n```\n## Usage\n```bash\nUsage: gsc [option] [arguments] \nAvailable options: \n        compress - compress VCF/BCF file\n        decompress     - query and decompress to VCF/BCF file\n```\n- Compress the input VCF/BCF file\n```bash\nUsage of gsc compress:\n\n        gsc compress [options] [--in [in_file]] [--out [out_file]]\n\nWhere:\n\n        [options]              Optional flags and parameters for compression.\n        -i,  --in [in_file]    Specify the input file (default: VCF or VCF.GZ). If omitted, input is taken from standard input (stdin).\n        -o,  --out [out_file]  Specify the output file. If omitted, output is sent to standard output (stdout).\n\nOptions:\n\n        -M,  --mode_lossly     Choose lossy compression mode (lossless by default).\n        -b,  --bcf             Input is a BCF file (default: VCF or VCF.GZ).\n        -p,  --ploidy [X]      Set ploidy of samples in input VCF to [X] (default: 2).\n        -t,  --threads [X]     Set number of threads to [X] (default: 1).\n        -d,  --depth [X]       Set maximum replication depth to [X] (default: 100, 0 means no matches).\n        -m,  --merge [X]       Specify files to merge, separated by commas (e.g., -m chr1.vcf,chr2.vcf), or '@' followed by a file containing a list of VCF files (e.g., -m @file_with_IDs.txt). By default, all VCF files are compressed.\n```\n- Decompress / Query\n```bash\nUsage of gsc decompress and query:\n\n        gsc decompress [options] --in [in_file] --out [out_file]\n\nWhere:\n        [options]              Optional flags and parameters for compression.\n        -i,  --in [in_file]    Specify the input file . If omitted, input is taken from standard input (stdin).\n        -o,  --out [out_file]  Specify the output file (default: VCF). If omitted, output is sent to standard output (stdout).\n\nOptions:\n\n    General Options:\n\n        -M,  --mode_lossly      Choose lossy compression mode (default: lossless).\n        -b,  --bcf              Output a BCF file (default: VCF).\n\n    Filter options (applicable in lossy compression mode only): \n\n        -r,  --range [X]        Specify range in format [start],[end] (e.g., -r 4999756,4999852).\n        -s,  --samples [X]      Samples separated by comms (e.g., -s HG03861,NA18639) OR '@' sign followed by the name of a file with sample name(s) separated by whitespaces (for exaple: -s @file_with_IDs.txt). By default all samples/individuals are decompressed. \n        --header-only           Output only the header of the VCF/BCF.\n        --no-header             Output without the VCF/BCF header (only genotypes).\n        -G,  --no-genotype      Don't output sample genotypes (only #CHROM, POS, ID, REF, ALT, QUAL, FILTER, and INFO columns).\n        -C,  --out-ac-an        Write AC/AN to the INFO field.\n        -S,  --split            Split output into multiple files (one per chromosome).\n        -I, [ID=^]              Include only sites with specified ID (e.g., -I \"ID=rs6040355\").\n        --minAC [X]             Include only sites with AC <= X.\n        --maxAC [X]             Include only sites with AC >= X.\n        --minAF [X]             Include only sites with AF >= X (X: 0 to 1).\n        --maxAF [X]             Include only sites with AF <= X (X: 0 to 1).\n        --min-qual [X]          Include only sites with QUAL >= X.\n        --max-qual [X]          Include only sites with QUAL <= X.\n```\n## Example\nThere is an example VCF/VCF.gz/BCF file, `toy.vcf`/`toy.vcf.gz`/`toy.bcf`, in the toy folder, which can be used to test GSC\n### compress\n\n#### lossless compression:\nThe input file format is VCF. You can compress a VCF file in lossless mode using one of the following methods:\n1. **Explicit input and output file parameters**:\n   \n   Use the `--in` option to specify the input VCF file and the `--out` option for the output compressed file.\n   ```bash\n   ./gsc compress --in toy/toy.vcf --out toy/toy_lossless.gsc\n   ```\n2. **Input file parameter and output redirection**:\n   \n   Use the `--out` option for the output compressed file and redirect the input VCF file into the command.\n   ```bash\n   ./gsc compress --out toy/toy_lossless.gsc < toy/toy.vcf\n   ```\n3. **Output file redirection and input file parameter**:\n   \n   Specify the input VCF file with the `--in` option and redirect the output to create the compressed file.\n   ```bash\n   ./gsc compress --in toy/toy.vcf > toy/toy_lossless.gsc\n   ```\n4. **Input and output redirection**:\n   \n   Use shell redirection for both input and output. This method does not use the `--in` and `--out` options.\n   ```bash\n   ./gsc compress < toy/toy.vcf > toy/toy_lossless.gsc\n   ```\nThis will create a file:\n* `toy_lossless.gsc` - The compressed archive of the entire VCF file.\n\n#### lossy compression:\n\nThe input file format is VCF. The commands are similar to those used for lossless compression, with the addition of the `-M` parameter to enable lossy compression.\n\n   For example, to compress a VCF file in lossy mode:\n\n   ```bash\n   ./gsc compress -M --in toy/toy.vcf --out toy/toy_lossy.gsc\n   ```\n   Or using redirection:\n   ```bash\n   ./gsc compress -M --out toy/toy_lossy.gsc < toy/toy.vcf\n   ``` \n   This will create a file:\n   * `toy_lossy.gsc` - The compressed archive of the entire VCF file is implemented with lossy compression. It only retains the 'GT' subfield within the INFO and FORMAT fields, and excludes all other subfields..\n    \n### Decompress   (The commands are similar to those used for compression)\nlossless decompression:\n\nTo decompress the compressed toy_lossless.gsc into a VCF file named toy_lossless.vcf:\n```bash\n./gsc decompress --in toy/toy_lossless.gsc --out toy/toy_lossless.vcf\n```\nlossy decompression:\n\nTo decompress the compressed toy_lossy.gsc into a VCF file named toy_lossy.vcf:\n```bash\n./gsc decompress -M --in toy/toy_lossy.gsc --out toy/toy_lossy.vcf\n```\n## Dockerfile\nDockerfile can be used to build a Docker image with all necessary dependencies and GSC compressor. The image is based on Ubuntu 18.04. To build a Docker image and run a Docker container, you need Docker Desktop (https://www.docker.com). Example commands (run it within a directory with Dockerfile):\n```bash\ndocker build -t gsc_project .\ndocker run -it gsc_project\n```\n## Citations\n- **bio.tools ID**: `gsc_genotype_sparse_compression`\n- **Research Resource Identifier (RRID)**: `SCR_025071`",
    "latest_version": 1,
    "tags": "['Bioinformatics', 'Genomics']",
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/885?version=1', 'remote': 'https://github.com/luo-xiaolong/GSC.git', 'commit': 'f9e0b1ea322f2a553f11f2dd09f62c1d6756b587', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/885/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Update README.md",
    "created_at": "2024-05-17T16:51:00.000Z",
    "updated_at": "2024-05-17T16:51:00.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 885,
    "text_field": "['include', 'cpp-mmf', 'htslib', 'sdsl', 'zstd-1.5.2', '.circleci', 'images', 'primary', '.github', 'ISSUE_TEMPLATE', 'workflows', 'build', 'VS2008', 'fullbench', 'fuzzer', 'zstd', 'zstdlib', 'VS2010', 'datagen', 'fullbench-dll', 'fullbench', 'fuzzer', 'libzstd-dll', 'libzstd', 'zstd', 'VS_scripts', 'cmake', 'CMakeModules', 'contrib', 'gen_html', 'pzstd', 'lib', 'programs', 'tests', 'meson', 'contrib', 'gen_html', 'pzstd', 'lib', 'programs', 'tests', 'single_file_libs', 'examples', 'contrib', 'VS2005', 'fullbench', 'fuzzer', 'zstd', 'zstdlib', 'diagnose_corruption', 'docker', 'freestanding_lib', 'gen_html', 'largeNbDicts', 'linux-kernel', 'test', 'include', 'asm', 'linux', 'match_finders', 'premake', 'pzstd', 'images', 'test', 'utils', 'test', 'recovery', 'seekable_format', 'examples', 'tests', 'snap', 'doc', 'educational_decoder', 'images', 'examples', 'lib', 'common', 'compress', 'decompress', 'deprecated', 'dictBuilder', 'dll', 'example', 'legacy', 'programs', 'windres', 'tests', 'dict-files', 'fuzz', 'golden-compression', 'golden-dictionaries', 'gzip', 'regression', 'zlibWrapper', 'examples', 'lib', 'pkgconfig', 'src', '.idea', 'test_scripts', 'bcftools_folder', 'bcftools-1.11', 'doc', 'htslib-1.11', 'cram', 'htslib', 'm4', 'os', 'test', 'bcf-sr', 'fuzz', 'longrefs', 'maintainer', 'mpileup', 'tabix', 'm4', 'misc', 'plugins', 'test', 'csq', 'EDUMMY0001', 'EDUMMY0002', 'EDUMMY0003', 'EMN908947', 'ENSG00000173376', 'ENSMUST00000121418', 'ENSMUST00000133836', 'ENST00000218032', 'ENST00000227471', 'ENST00000230048', 'ENST00000256452', 'ENST00000263103-INS', 'ENST00000271583', 'ENST00000294661', 'ENST00000295641', 'ENST00000301246', 'ENST00000303039', 'ENST00000318249.2', 'ENST00000318249', 'ENST00000329454', 'ENST00000341065', 'ENST00000357367', 'ENST00000368801.2', 'ENST00000368801', 'ENST00000373833', 'ENST00000375992', 'ENST00000378322', 'ENST00000381157', 'ENST00000382647', 'ENST00000390520', 'ENST00000400151', 'ENST00000409523', 'ENST00000410009', 'ENST00000413103', 'ENST00000420190', 'ENST00000420670', 'ENST00000423372', 'ENST00000436063', 'ENST00000448695', 'ENST00000479739', 'ENST00000518414-ENST00000521270', 'ENST00000518414', 'ENST00000519442', 'ENST00000520795', 'ENST00000520868', 'ENST00000528237', 'ENST00000536784', 'ENST00000542803', 'ENST00000543077', 'ENST00000545279', 'ENST00000557788', 'ENST00000573314', 'ENST00000593942', 'ENST00000624631', 'mpileup', 'result', 'toy', 'Dockerfile', 'LICENSE', 'Makefile', 'README.md', 'gsc', 'LICENSE.md', 'README.md', 'memory_mapped_file.cpp', 'memory_mapped_file.d', 'memory_mapped_file.hpp', 'memory_mapped_file.o', 'divsufsort.h', 'divsufsort64.h', 'bgzf.h', 'cram.h', 'faidx.h', 'hfile.h', 'hts.h', 'hts_defs.h', 'hts_endian.h', 'hts_log.h', 'hts_os.h', 'kbitset.h', 'kfunc.h', 'khash.h', 'khash_str2int.h', 'klist.h', 'knetfile.h', 'kseq.h', 'ksort.h', 'kstring.h', 'regidx.h', 'sam.h', 'synced_bcf_reader.h', 'tbx.h', 'thread_pool.h', 'vcf.h', 'vcf_sweep.h', 'vcfutils.h', 'libbsc.h', 'bit_vector_il.hpp', 'bit_vectors.hpp', 'bits.hpp', 'bp_support.hpp', 'bp_support_algorithm.hpp', 'bp_support_g.hpp', 'bp_support_gg.hpp', 'bp_support_sada.hpp', 'coder.hpp', 'coder_comma.hpp', 'coder_elias_delta.hpp', 'coder_elias_gamma.hpp', 'coder_fibonacci.hpp', 'config.hpp', 'construct.hpp', 'construct_bwt.hpp', 'construct_config.hpp', 'construct_isa.hpp', 'construct_lcp.hpp', 'construct_lcp_helper.hpp', 'construct_sa.hpp', 'construct_sa_se.hpp', 'csa_alphabet_strategy.hpp', 'csa_bitcompressed.hpp', 'csa_sada.hpp', 'csa_sampling_strategy.hpp', 'csa_wt.hpp', 'cst_fully.hpp', 'cst_iterators.hpp', 'cst_sada.hpp', 'cst_sct3.hpp', 'dac_vector.hpp', 'enc_vector.hpp', 'fast_cache.hpp', 'hyb_vector.hpp', 'int_vector.hpp', 'int_vector_buffer.hpp', 'int_vector_io_wrappers.hpp', 'int_vector_mapper.hpp', 'inv_perm_support.hpp', 'io.hpp', 'iterators.hpp', 'k2_treap.hpp', 'k2_treap_algorithm.hpp', 'k2_treap_helper.hpp', 'k2_tree.hpp', 'k2_tree_helper.hpp', 'lcp.hpp', 'lcp_bitcompressed.hpp', 'lcp_byte.hpp', 'lcp_dac.hpp', 'lcp_support_sada.hpp', 'lcp_support_tree.hpp', 'lcp_support_tree2.hpp', 'lcp_vlc.hpp', 'lcp_wt.hpp', 'louds_tree.hpp', 'memory_management.hpp', 'nearest_neighbour_dictionary.hpp', 'nn_dict_dynamic.hpp', 'qsufsort.hpp', 'ram_filebuf.hpp', 'ram_fs.hpp', 'rank_support.hpp', 'rank_support_scan.hpp', 'rank_support_v.hpp', 'rank_support_v5.hpp', 'raster_img.hpp', 'rmq_succinct_sada.hpp', 'rmq_succinct_sct.hpp', 'rmq_support.hpp', 'rmq_support_sparse_table.hpp', 'rrr_helper.hpp', 'rrr_vector.hpp', 'rrr_vector_15.hpp', 'sd_vector.hpp', 'sdsl_concepts.hpp', 'select_support.hpp', 'select_support_mcl.hpp', 'select_support_scan.hpp', 'sfstream.hpp', 'sorted_int_stack.hpp', 'sorted_multi_stack_support.hpp', 'sorted_stack_support.hpp', 'structure_tree.hpp', 'suffix_array_algorithm.hpp', 'suffix_array_helper.hpp', 'suffix_arrays.hpp', 'suffix_tree_algorithm.hpp', 'suffix_tree_helper.hpp', 'suffix_trees.hpp', 'uint128_t.hpp', 'uint256_t.hpp', 'uintx_t.hpp', 'util.hpp', 'vectors.hpp', 'vlc_vector.hpp', 'wavelet_trees.hpp', 'wm_int.hpp', 'wt_algorithm.hpp', 'wt_ap.hpp', 'wt_blcd.hpp', 'wt_gmr.hpp', 'wt_helper.hpp', 'wt_huff.hpp', 'wt_hutu.hpp', 'wt_int.hpp', 'wt_pc.hpp', 'wt_rlmn.hpp', '.buckconfig', '.buckversion', 'config.yml', 'Dockerfile', '.cirrus.yml', '.gitattributes', 'bug_report.md', 'feature_request.md', 'dev-long-tests.yml', 'dev-short-tests.yml', 'publish-release-artifacts.yml', '.gitignore', '.travis.yml', 'CHANGELOG', 'CODE_OF_CONDUCT.md', 'CONTRIBUTING.md', 'COPYING', 'LICENSE', 'Makefile', 'Package.swift', 'README.md', 'TESTING.md', 'appveyor.yml', '.gitignore', 'LICENSE', 'README.md', 'fullbench.vcproj', 'fuzzer.vcproj', 'zstd.sln', 'zstd.vcproj', 'zstdlib.vcproj', 'CompileAsCpp.props', 'datagen.vcxproj', 'fullbench-dll.vcxproj', 'fullbench.vcxproj', 'fuzzer.vcxproj', 'libzstd-dll.rc', 'libzstd-dll.vcxproj', 'libzstd.vcxproj', 'zstd.sln', 'zstd.rc', 'zstd.vcxproj', 'README.md', 'build.VS2010.cmd', 'build.VS2012.cmd', 'build.VS2013.cmd', 'build.VS2015.cmd', 'build.VS2017.cmd', 'build.VS2017Community.cmd', 'build.VS2017Enterprise.cmd', 'build.VS2017Professional.cmd', 'build.generic.cmd', '.gitignore', 'CMakeLists.txt', 'AddZstdCompilationFlags.cmake', 'FindLibLZ4.cmake', 'GetZstdLibraryVersion.cmake', 'README.md', 'CMakeLists.txt', 'CMakeLists.txt', 'CMakeLists.txt', '.gitignore', 'CMakeLists.txt', 'cmake_uninstall.cmake.in', '.gitignore', 'CMakeLists.txt', '.gitignore', 'CMakeLists.txt', 'zstdConfig.cmake', 'GetZstdLibraryVersion.py', 'InstallSymlink.py', 'README.md', 'meson.build', 'meson.build', 'meson.build', 'meson.build', 'meson.build', 'meson_options.txt', 'meson.build', 'meson.build', 'valgrindTest.py', '.gitignore', 'README.md', 'build_decoder_test.sh', 'build_library_test.sh', 'combine.sh', 'create_single_file_decoder.sh', 'create_single_file_library.sh', 'README.md', 'emscripten.c', 'roundtrip.c', 'shell.html', 'simple.c', 'testcard-dxt1.inl', 'testcard-zstd.inl', 'testcard.png', 'zstd-in.c', 'zstddeclib-in.c', 'README.md', 'fullbench.vcproj', 'fuzzer.vcproj', 'zstd.sln', 'zstd.vcproj', 'zstdlib.vcproj', 'cleanTabs', '.gitignore', 'Makefile', 'check_flipped_bits.c', 'Dockerfile', 'README.md', 'freestanding.py', '.gitignore', 'Makefile', 'README.md', 'gen-zstd-manual.sh', 'gen_html.cpp', '.gitignore', 'Makefile', 'README.md', 'largeNbDicts.c', '.gitignore', 'Makefile', 'README.md', 'btrfs-benchmark.sh', 'btrfs-extract-benchmark.sh', 'decompress_sources.h', 'linux.mk', 'linux_zstd.h', 'mem.h', 'squashfs-benchmark.sh', 'Makefile', 'unaligned.h', 'compiler.h', 'errno.h', 'kernel.h', 'limits.h', 'math64.h', 'module.h', 'printk.h', 'stddef.h', 'swab.h', 'types.h', 'xxhash.h', 'macro-test.sh', 'static_test.c', 'test.c', 'zstd_compress_module.c', 'zstd_decompress_module.c', 'zstd_deps.h', 'README.md', 'zstd_edist.c', 'zstd_edist.h', 'premake4.lua', 'zstd.lua', '.gitignore', 'BUCK', 'ErrorHolder.h', 'Logging.h', 'Makefile', 'Options.cpp', 'Options.h', 'Pzstd.cpp', 'Pzstd.h', 'README.md', 'SkippableFrame.cpp', 'SkippableFrame.h', 'Cspeed.png', 'Dspeed.png', 'main.cpp', 'BUCK', 'OptionsTest.cpp', 'PzstdTest.cpp', 'RoundTrip.h', 'RoundTripTest.cpp', 'BUCK', 'Buffer.h', 'FileSystem.h', 'Likely.h', 'Range.h', 'ResourcePool.h', 'ScopeGuard.h', 'ThreadPool.h', 'WorkQueue.h', 'BUCK', 'BufferTest.cpp', 'RangeTest.cpp', 'ResourcePoolTest.cpp', 'ScopeGuardTest.cpp', 'ThreadPoolTest.cpp', 'WorkQueueTest.cpp', 'Makefile', 'recover_directory.c', '.gitignore', 'Makefile', 'parallel_compression.c', 'parallel_processing.c', 'seekable_compression.c', 'seekable_decompression.c', 'seekable_decompression_mem.c', '.gitignore', 'Makefile', 'seekable_tests.c', 'zstd_seekable.h', 'zstd_seekable_compression_format.md', 'zstdseek_compress.c', 'zstdseek_decompress.c', 'snapcraft.yaml', 'README.md', '.gitignore', 'Makefile', 'README.md', 'harness.c', 'zstd_decompress.c', 'zstd_decompress.h', 'CSpeed2.png', 'DCspeed5.png', 'DSpeed3.png', 'cdict_v136.png', 'dict-cr.png', 'dict-cs.png', 'dict-ds.png', 'zstd_cdict_v1_3_5.png', 'zstd_logo86.png', 'zstd_compression_format.md', 'zstd_manual.html', '.gitignore', 'Makefile', 'README.md', 'common.h', 'dictionary_compression.c', 'dictionary_decompression.c', 'multiple_simple_compression.c', 'multiple_streaming_compression.c', 'simple_compression.c', 'simple_decompression.c', 'streaming_compression.c', 'streaming_compression_thread_pool.c', 'streaming_decompression.c', 'streaming_memory_usage.c', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'bitstream.h', 'compiler.h', 'cpu.h', 'debug.c', 'debug.h', 'entropy_common.c', 'error_private.c', 'error_private.h', 'fse.h', 'fse_decompress.c', 'huf.h', 'mem.h', 'pool.c', 'pool.h', 'portability_macros.h', 'threading.c', 'threading.h', 'xxhash.c', 'xxhash.h', 'zstd_common.c', 'zstd_deps.h', 'zstd_internal.h', 'zstd_trace.h', 'clevels.h', 'fse_compress.c', 'hist.c', 'hist.h', 'huf_compress.c', 'zstd_compress.c', 'zstd_compress_internal.h', 'zstd_compress_literals.c', 'zstd_compress_literals.h', 'zstd_compress_sequences.c', 'zstd_compress_sequences.h', 'zstd_compress_superblock.c', 'zstd_compress_superblock.h', 'zstd_cwksp.h', 'zstd_double_fast.c', 'zstd_double_fast.h', 'zstd_fast.c', 'zstd_fast.h', 'zstd_lazy.c', 'zstd_lazy.h', 'zstd_ldm.c', 'zstd_ldm.h', 'zstd_ldm_geartab.h', 'zstd_opt.c', 'zstd_opt.h', 'zstdmt_compress.c', 'zstdmt_compress.h', 'huf_decompress.c', 'huf_decompress_amd64.S', 'zstd_ddict.c', 'zstd_ddict.h', 'zstd_decompress.c', 'zstd_decompress_block.c', 'zstd_decompress_block.h', 'zstd_decompress_internal.h', 'zbuff.h', 'zbuff_common.c', 'zbuff_compress.c', 'zbuff_decompress.c', 'cover.c', 'cover.h', 'divsufsort.c', 'divsufsort.h', 'fastcover.c', 'zdict.c', 'Makefile', 'README.md', 'build_package.bat', 'fullbench-dll.sln', 'fullbench-dll.vcxproj', 'zstd_legacy.h', 'zstd_v01.c', 'zstd_v01.h', 'zstd_v02.c', 'zstd_v02.h', 'zstd_v03.c', 'zstd_v03.h', 'zstd_v04.c', 'zstd_v04.h', 'zstd_v05.c', 'zstd_v05.h', 'zstd_v06.c', 'zstd_v06.h', 'zstd_v07.c', 'zstd_v07.h', 'libzstd.mk', 'libzstd.pc.in', 'module.modulemap', 'zdict.h', 'zstd.h', 'zstd_errors.h', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'benchfn.c', 'benchfn.h', 'benchzstd.c', 'benchzstd.h', 'datagen.c', 'datagen.h', 'dibio.c', 'dibio.h', 'fileio.c', 'fileio.h', 'platform.h', 'timefn.c', 'timefn.h', 'util.c', 'util.h', 'verrsrc.h', 'zstd.rc', 'zstd32.res', 'zstd64.res', 'zstd.1', 'zstd.1.md', 'zstdcli.c', 'zstdcli_trace.c', 'zstdcli_trace.h', 'zstdgrep', 'zstdgrep.1', 'zstdgrep.1.md', 'zstdless', 'zstdless.1', 'zstdless.1.md', '.gitignore', 'DEPRECATED-test-zstd-speed.py', 'Makefile', 'README.md', 'automated_benchmarking.py', 'bigdict.c', 'checkTag.c', 'datagencli.c', 'decodecorpus.c', 'zero-weight-dict', 'fullbench.c', '.gitignore', 'Makefile', 'README.md', 'block_decompress.c', 'block_round_trip.c', 'decompress_dstSize_tooSmall.c', 'dictionary_decompress.c', 'dictionary_loader.c', 'dictionary_round_trip.c', 'dictionary_stream_round_trip.c', 'fse_read_ncount.c', 'fuzz.h', 'fuzz.py', 'fuzz_data_producer.c', 'fuzz_data_producer.h', 'fuzz_helpers.c', 'fuzz_helpers.h', 'huf_decompress.c', 'huf_round_trip.c', 'raw_dictionary_round_trip.c', 'regression_driver.c', 'seekable_roundtrip.c', 'sequence_compression_api.c', 'simple_compress.c', 'simple_decompress.c', 'simple_round_trip.c', 'stream_decompress.c', 'stream_round_trip.c', 'zstd_frame_info.c', 'zstd_helpers.c', 'zstd_helpers.h', 'fuzzer.c', 'http', 'huffman-compressed-larger', 'http-dict-missing-symbols', 'Makefile', 'gzip-env.sh', 'helin-segv.sh', 'help-version.sh', 'hufts-segv.gz', 'hufts.sh', 'init.cfg', 'init.sh', 'keep.sh', 'list.sh', 'memcpy-abuse.sh', 'mixed.sh', 'null-suffix-clobber.sh', 'stdin.sh', 'test-driver.sh', 'trailing-nul.sh', 'unpack-invalid.sh', 'z-suffix.sh', 'zdiff.sh', 'zgrep-context.sh', 'zgrep-f.sh', 'zgrep-signal.sh', 'znew-k.sh', 'invalidDictionaries.c', 'legacy.c', 'libzstd_builds.sh', 'longmatch.c', 'paramgrill.c', 'playTests.sh', 'poolTests.c', 'rateLimiter.py', '.gitignore', 'Makefile', 'README.md', 'config.c', 'config.h', 'data.c', 'data.h', 'levels.h', 'method.c', 'method.h', 'result.c', 'result.h', 'results.csv', 'test.c', 'roundTripCrash.c', 'seqgen.c', 'seqgen.h', 'test-license.py', 'test-variants.sh', 'test-zstd-versions.py', 'zstreamtest.c', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'example.c', 'example_original.c', 'fitblk.c', 'fitblk_original.c', 'minigzip.c', 'zwrapbench.c', 'gzclose.c', 'gzcompatibility.h', 'gzguts.h', 'gzlib.c', 'gzread.c', 'gzwrite.c', 'zstd_zlibwrapper.c', 'zstd_zlibwrapper.h', 'libbsc.a', 'libdivsufsort.a', 'libdivsufsort64.a', 'libhts.a', 'libhts.so', 'libhts.so.2', 'libsdsl.a', 'libzstd.a', 'htslib.pc', '.gitignore', 'misc.xml', 'modules.xml', 'src.iml', 'bit_memory.cpp', 'bit_memory.d', 'bit_memory.h', 'bit_memory.o', 'block_processing.cpp', 'block_processing.d', 'block_processing.h', 'block_processing.o', 'bsc.cpp', 'bsc.d', 'bsc.h', 'bsc.o', 'compression_reader.cpp', 'compression_reader.d', 'compression_reader.h', 'compression_reader.o', 'compressor.cpp', 'compressor.d', 'compressor.h', 'compressor.o', 'decompression_reader.cpp', 'decompression_reader.d', 'decompression_reader.h', 'decompression_reader.o', 'decompressor.cpp', 'decompressor.d', 'decompressor.h', 'decompressor.o', 'defs.h', 'file_handle.cpp', 'file_handle.d', 'file_handle.h', 'file_handle.o', 'gsc_params.h', 'main.cpp', 'main.d', 'main.o', 'queues.h', 'samples.cpp', 'samples.d', 'samples.h', 'samples.o', 'utils.cpp', 'utils.d', 'utils.h', 'utils.o', 'variant.h', 'vint_code.cpp', 'vint_code.d', 'vint_code.h', 'vint_code.o', 'zstd_compress.cpp', 'zstd_compress.d', 'zstd_compress.h', 'zstd_compress.o', 'bcftools', 'bcftools-1.11.tar.bz2', '.appveyor.yml', 'AUTHORS', 'HMM.c', 'HMM.h', 'HMM.o', 'INSTALL', 'LICENSE', 'Makefile', 'NEWS', 'README', 'bam2bcf.c', 'bam2bcf.h', 'bam2bcf.o', 'bam2bcf_indel.c', 'bam2bcf_indel.o', 'bam_sample.c', 'bam_sample.h', 'bam_sample.o', 'bcftools', 'bcftools.h', 'bin.c', 'bin.h', 'bin.o', 'call.h', 'ccall.c', 'ccall.o', 'cols.c', 'cols.h', 'cols.o', 'config.h', 'config.h.in', 'config.log', 'config.mk', 'config.mk.in', 'config.status', 'configure', 'configure.ac', 'consensus.c', 'consensus.o', 'convert.c', 'convert.h', 'convert.o', 'csq.c', 'csq.o', 'bcftools.1', 'bcftools.html', 'bcftools.txt', 'docbook-xsl.css', 'em.c', 'em.o', 'extsort.c', 'extsort.h', 'extsort.o', 'filter.c', 'filter.h', 'filter.o', 'gvcf.c', 'gvcf.h', 'gvcf.o', 'hclust.c', 'hclust.h', 'hclust.o', 'hex.h', 'INSTALL', 'LICENSE', 'Makefile', 'NEWS', 'README', 'README.large_positions.md', 'bcf_sr_sort.c', 'bcf_sr_sort.h', 'bcf_sr_sort.o', 'bgzf.c', 'bgzf.o', 'bgzip.1', 'bgzip.c', 'config.h', 'config.h.in', 'config.log', 'config.mk', 'config.mk.in', 'config.status', 'configure', 'configure.ac', 'cram.h', 'cram_codecs.c', 'cram_codecs.h', 'cram_codecs.o', 'cram_decode.c', 'cram_decode.h', 'cram_decode.o', 'cram_encode.c', 'cram_encode.h', 'cram_encode.o', 'cram_external.c', 'cram_external.o', 'cram_index.c', 'cram_index.h', 'cram_index.o', 'cram_io.c', 'cram_io.h', 'cram_io.o', 'cram_samtools.c', 'cram_samtools.h', 'cram_samtools.o', 'cram_stats.c', 'cram_stats.h', 'cram_stats.o', 'cram_structs.h', 'mFILE.c', 'mFILE.h', 'mFILE.o', 'misc.h', 'open_trace_file.c', 'open_trace_file.h', 'open_trace_file.o', 'os.h', 'pooled_alloc.c', 'pooled_alloc.h', 'pooled_alloc.o', 'rANS_byte.h', 'rANS_static.c', 'rANS_static.h', 'rANS_static.o', 'string_alloc.c', 'string_alloc.h', 'string_alloc.o', 'errmod.c', 'errmod.o', 'faidx.5', 'faidx.c', 'faidx.o', 'header.c', 'header.h', 'header.o', 'hfile.c', 'hfile.o', 'hfile_gcs.c', 'hfile_gcs.o', 'hfile_internal.h', 'hfile_libcurl.c', 'hfile_libcurl.o', 'hfile_net.c', 'hfile_net.o', 'hfile_s3.c', 'hfile_s3.o', 'hfile_s3_write.c', 'hfile_s3_write.o', 'hts-object-files', 'hts.c', 'hts.o', 'hts_internal.h', 'hts_os.c', 'hts_os.o', 'htsfile.1', 'htsfile.c', 'htslib-s3-plugin.7', 'htslib.mk', 'htslib.pc.in', 'htslib.pc.tmp', 'bgzf.h', 'cram.h', 'faidx.h', 'hfile.h', 'hts.h', 'hts_defs.h', 'hts_endian.h', 'hts_log.h', 'hts_os.h', 'kbitset.h', 'kfunc.h', 'khash.h', 'khash_str2int.h', 'klist.h', 'knetfile.h', 'kroundup.h', 'kseq.h', 'ksort.h', 'kstring.h', 'regidx.h', 'sam.h', 'synced_bcf_reader.h', 'tbx.h', 'thread_pool.h', 'vcf.h', 'vcf_sweep.h', 'vcfutils.h', 'htslib_static.mk', 'htslib_vars.mk', 'kfunc.c', 'kfunc.o', 'knetfile.c', 'knetfile.o', 'kstring.c', 'kstring.o', 'libhts.a', 'hts_hide_dynamic_syms.m4', 'hts_prog_cc_warnings.m4', 'pkg.m4', 'md5.c', 'md5.o', 'multipart.c', 'multipart.o', 'lzma_stub.h', 'rand.c', 'plugin.c', 'probaln.c', 'probaln.o', 'realn.c', 'realn.o', 'regidx.c', 'regidx.o', 'region.c', 'region.o', 'sam.5', 'sam.c', 'sam.o', 'sam_internal.h', 'synced_bcf_reader.c', 'synced_bcf_reader.o', 'tabix.1', 'tabix.c', 'tbx.c', 'tbx.o', 'auxf#values.sam', 'auxf#values_java.cram', 'auxf.fa', 'auxf.fa.fai', 'merge.noidx.a.vcf', 'merge.noidx.abc.expected.out', 'merge.noidx.b.vcf', 'merge.noidx.c.vcf', 'merge.noidx.hdr_order.vcf', 'merge.noidx.rec_order.vcf', 'bgziptest.txt', 'bgziptest.txt.gz', 'bgziptest.txt.gz.gzi', 'c1#bounds.sam', 'c1#clip.sam', 'c1#noseq.sam', 'c1#pad1.sam', 'c1#pad2.sam', 'c1#pad3.sam', 'c1#unknown.sam', 'c1.fa', 'c1.fa.fai', 'c2#pad.sam', 'c2.fa', 'c2.fa.fai', 'ce#1.sam', 'ce#1000.sam', 'ce#2.sam', 'ce#5.sam', 'ce#5b.sam', 'ce#5b_java.cram', 'ce#large_seq.sam', 'ce#supp.sam', 'ce#tag_depadded.sam', 'ce#tag_padded.sam', 'ce#unmap.sam', 'ce#unmap1.sam', 'ce#unmap2.sam', 'ce.fa', 'ce.fa.fai', 'colons.bam', 'colons.bam.bai', 'compare_sam.pl', 'cross_validate.sh', 'emptyfile', 'faidx.fa', 'fastqs.fq', 'fastqs_README.txt', 'fieldarith.c', 'fieldarith.sam', 'formatcols.vcf', 'formatmissing-out.vcf', 'formatmissing.vcf', 'hts_open_fuzzer.c', 'header_syms.pl', 'hfile.c', 'hts_endian.c', 'index.bam.bai', 'index.bam.csi', 'index.bcf.csi', 'index.cram.crai', 'index.sam', 'index.sam.gz.bai', 'index.sam.gz.csi', 'index.vcf', 'index.vcf.gz.csi', 'index.vcf.gz.tbi', 'index.expected1.vcf', 'index.expected2.vcf', 'index.vcf', 'longref.sam', 'longref_itr.expected.sam', 'longref_multi.expected.sam', 'check_copyright.pl', 'check_spaces.pl', 'md#1.sam', 'md.fa', 'md.fa.fai', 'c1#pad1.out', 'c1#pad1.sam', 'c1#pad2.out', 'c1#pad2.sam', 'c1#pad3.out', 'c1#pad3.sam', 'mp_D.out', 'mp_D.sam', 'mp_DI.out', 'mp_DI.sam', 'mp_I.out', 'mp_I.sam', 'mp_ID.out', 'mp_ID.sam', 'mp_N.out', 'mp_N.sam', 'mp_N2.out', 'mp_N2.sam', 'mp_P.out', 'mp_P.sam', 'mpileup.tst', 'small.bam', 'small.out', 'test-pileup.sh', 'no_hdr_sq_1.bam', 'no_hdr_sq_1.bam.csi', 'no_hdr_sq_1.expected.sam', 'noroundtrip-out.vcf', 'noroundtrip.vcf', 'pileup.c', 'plugins-dlhts.c', 'range.bam', 'range.bam.bai', 'range.cram', 'range.cram.crai', 'range.out', 'realn01.fa', 'realn01.fa.fai', 'realn01.sam', 'realn01_exp-a.sam', 'realn01_exp-e.sam', 'realn01_exp.sam', 'realn02-r.sam', 'realn02.fa', 'realn02.fa.fai', 'realn02.sam', 'realn02_exp-a.sam', 'realn02_exp-e.sam', 'realn02_exp.sam', 'sam.c', 'simple_test_driver.sh', 'tabix.out', 'bed_file.Y.100200.out', 'bed_file.bed', 'bed_file.separate.out', 'gff_file.X.2934832.2935190.out', 'gff_file.gff', 'large_chr.20.1.2147483647.out', 'large_chr.vcf', 'tabix.tst', 'test-tabix.sh', 'vcf_file.1.3000151.out', 'vcf_file.2.3199812.out', 'vcf_file.bcf', 'vcf_file.vcf', 'test-bcf-sr.c', 'test-bcf-sr.pl', 'test-bcf-translate.c', 'test-bcf-translate.out', 'test-logging.pl', 'test-parse-reg.c', 'test-regidx.c', 'test-vcf-api.c', 'test-vcf-api.out', 'test-vcf-hdr-in.vcf', 'test-vcf-hdr.out', 'test-vcf-sweep.c', 'test-vcf-sweep.out', 'test.pl', 'test_bgzf.c', 'test_index.c', 'test_kfunc.c', 'test_kstring.c', 'test_realn.c', 'test_str2int.c', 'test_view.c', 'thrash_threads1.c', 'thrash_threads2.c', 'thrash_threads3.c', 'thrash_threads4.c', 'thrash_threads5.c', 'thrash_threads6.c', 'thrash_threads7.c', 'thread_pool.md', 'with-shlib.sh', 'xx#MD.sam', 'xx#MD2.sam', 'xx#blank.sam', 'xx#large_aux.sam', 'xx#large_aux2.sam', 'xx#large_aux_java.cram', 'xx#minimal.sam', 'xx#pair.sam', 'xx#repeated.sam', 'xx#rg.sam', 'xx#tlen.sam', 'xx#tlen2.sam', 'xx#triplet.sam', 'xx#unsorted.sam', 'xx.fa', 'xx.fa.fai', 'textutils.c', 'textutils.o', 'textutils_internal.h', 'thread_pool.c', 'thread_pool.o', 'thread_pool_internal.h', 'vcf.5', 'vcf.c', 'vcf.o', 'vcf_sweep.c', 'vcf_sweep.o', 'vcfutils.c', 'vcfutils.o', 'version.h', 'version.sh', 'install-sh', 'khash_str2str.h', 'kheap.h', 'kmin.c', 'kmin.h', 'kmin.o', 'ax_with_htslib.m4', 'hts_prog_cc_warnings.m4', 'main.c', 'main.o', 'mcall.c', 'mcall.o', 'color-chrs.pl', 'demo-flt.pl', 'fix-broken-GATK-Double-vs-Integer', 'gff2gff.py', 'guess-ploidy.py', 'plot-roh.py', 'plot-vcfstats', 'run-roh.pl', 'vcfutils.pl', 'mpileup.c', 'mpileup.o', 'mw.h', 'peakfit.c', 'peakfit.h', 'ploidy.c', 'ploidy.h', 'ploidy.o', 'GTisec.c', 'GTisec.mk', 'GTisec.so', 'GTsubset.c', 'GTsubset.mk', 'GTsubset.so', 'ad-bias.c', 'ad-bias.mk', 'ad-bias.so', 'add-variantkey.c', 'add-variantkey.so', 'af-dist.c', 'af-dist.mk', 'af-dist.so', 'allele-length.c', 'allele-length.so', 'check-ploidy.c', 'check-ploidy.so', 'check-sparsity.c', 'check-sparsity.so', 'color-chrs.c', 'color-chrs.mk', 'color-chrs.so', 'contrast.c', 'contrast.so', 'counts.c', 'counts.so', 'dosage.c', 'dosage.so', 'fill-AN-AC.c', 'fill-AN-AC.so', 'fill-from-fasta.c', 'fill-from-fasta.mk', 'fill-from-fasta.so', 'fill-tags.c', 'fill-tags.so', 'fixploidy.c', 'fixploidy.mk', 'fixploidy.so', 'fixref.c', 'fixref.so', 'frameshifts.c', 'frameshifts.so', 'guess-ploidy.c', 'guess-ploidy.so', 'gvcfz.c', 'gvcfz.so', 'impute-info.c', 'impute-info.so', 'indel-stats.c', 'indel-stats.so', 'isecGT.c', 'isecGT.mk', 'isecGT.so', 'mendelian.c', 'mendelian.so', 'missing2ref.c', 'missing2ref.so', 'parental-origin.c', 'parental-origin.so', 'prune.c', 'prune.so', 'remove-overlaps.c', 'remove-overlaps.so', 'scatter.c', 'scatter.so', 'setGT.c', 'setGT.so', 'smpl-stats.c', 'smpl-stats.so', 'split-vep.c', 'split-vep.so', 'split.c', 'split.so', 'tag2tag.c', 'tag2tag.so', 'trio-dnm.c', 'trio-dnm.so', 'trio-stats.c', 'trio-stats.so', 'trio-switch-rate.c', 'trio-switch-rate.so', 'variantkey-hex.c', 'variantkey-hex.so', 'polysomy.c', 'prob1.c', 'prob1.h', 'prob1.o', 'rbuf.h', 'regidx.c', 'regidx.h', 'regidx.o', 'reheader.c', 'reheader.o', 'smpl_ilist.c', 'smpl_ilist.h', 'smpl_ilist.o', 'tabix.c', 'tabix.o', '23andme.fa', '23andme.fa.fai', 'aa.2.out', 'aa.fa', 'aa.fa.fai', 'aa.hdr', 'aa.out', 'aa.vcf', 'ad-bias.2.out', 'ad-bias.2.vcf', 'ad-bias.out', 'ad-bias.samples', 'ad-bias.vcf', 'af-dist.out', 'af-dist.vcf', 'annotate.hdr', 'annotate.multi.1.out', 'annotate.multi.tab', 'annotate.multi.vcf', 'annotate.out', 'annotate.tab', 'annotate.vcf', 'annotate10.hdr', 'annotate10.out', 'annotate10.vcf', 'annotate11.out', 'annotate11.vcf', 'annotate12.out', 'annotate12.vcf', 'annotate13.hdr', 'annotate13.out', 'annotate13.vcf', 'annotate14.out', 'annotate14.vcf', 'annotate15.hdr', 'annotate15.out', 'annotate15.tab', 'annotate15.vcf', 'annotate16.out', 'annotate16.vcf', 'annotate17.1.out', 'annotate17.1.tab', 'annotate17.1.vcf', 'annotate17.2.out', 'annotate17.2.vcf', 'annotate17.3.out', 'annotate17.3.tab', 'annotate17.3.vcf', 'annotate17.out', 'annotate18.1.out', 'annotate18.1.tab', 'annotate18.1.vcf', 'annotate18.2.out', 'annotate18.2.tab', 'annotate18.2.vcf', 'annotate18.out', 'annotate19.1.out', 'annotate19.2.out', 'annotate19.dst.vcf', 'annotate19.out', 'annotate19.src.vcf', 'annotate2.out', 'annotate2.tab', 'annotate2.vcf', 'annotate20.1.out', 'annotate20.2.out', 'annotate20.3.out', 'annotate20.dst.vcf', 'annotate20.out', 'annotate20.src.vcf', 'annotate21.out', 'annotate22.out', 'annotate23.out', 'annotate24.out', 'annotate25.out', 'annotate26.out', 'annotate27.out', 'annotate28.out', 'annotate3.out', 'annotate3.vcf', 'annotate4.hdr', 'annotate4.out', 'annotate4.vcf', 'annotate5.out', 'annotate6.out', 'annotate7.out', 'annotate8.out', 'annotate9.out', 'annotate9.vcf', 'annots.vcf', 'annots10.tab', 'annots11.tab', 'annots11.vcf', 'annots12.vcf', 'annots13.tab', 'annots2.vcf', 'annots4.tab', 'annots4.vcf', 'annots9.tab', 'annots9.vcf', 'check.chk', 'check.gs.chrom.gen', 'check.gs.chrom.samples', 'check.gs.vcfids.gen', 'check.gs.vcfids.samples', 'check.gs.vcfids_chrom.gen', 'check.gs.vcfids_chrom.samples', 'check.vcf', 'check_merge.chk', 'concat.1.a.vcf', 'concat.1.b.vcf', 'concat.1.bcf.out', 'concat.1.vcf.out', 'concat.2.a.vcf', 'concat.2.b.vcf', 'concat.2.bcf.out', 'concat.2.vcf.out', 'concat.3.0.vcf', 'concat.3.a.vcf', 'concat.3.b.vcf', 'concat.3.bcf.out', 'concat.3.c.vcf', 'concat.3.d.vcf', 'concat.3.e.vcf', 'concat.3.f.vcf', 'concat.3.vcf.out', 'concat.4.bcf.out', 'concat.4.vcf.out', 'consensus.1.chain', 'consensus.1.out', 'consensus.10.vcf', 'consensus.11.1.out', 'consensus.11.2.out', 'consensus.11.fa', 'consensus.11.vcf', 'consensus.12.fa', 'consensus.12.out', 'consensus.12.vcf', 'consensus.13.fa', 'consensus.13.out', 'consensus.13.vcf', 'consensus.2.chain', 'consensus.2.out', 'consensus.3.chain', 'consensus.3.out', 'consensus.4.chain', 'consensus.4.out', 'consensus.5.out', 'consensus.8a.out', 'consensus.8b.out', 'consensus.8c.out', 'consensus.8d.out', 'consensus.8e.out', 'consensus.8f.out', 'consensus.9.1.fa', 'consensus.9.1.out', 'consensus.9.2.fa', 'consensus.9.2.out', 'consensus.9.vcf', 'consensus.fa', 'consensus.tab', 'consensus.vcf', 'consensus2.1.out', 'consensus2.2.out', 'consensus2.fa', 'consensus2.vcf', 'consensus3.2.out', 'consensus3.out', 'consensus3.vcf', 'consensus4.out', 'consensus4.vcf', 'consensus5.fa', 'consensus5.out', 'consensus5.vcf', 'consensus6.fa', 'consensus6.out', 'consensus6.vcf', 'consensus7.fa', 'consensus7.vcf', 'consensus7a.out', 'consensus7b.out', 'consensus7c.out', 'consensus7d.out', 'consensus8.vcf', 'contrast.out', 'contrast.vcf', 'contrast0.txt', 'contrast1.txt', 'convert.23andme', 'convert.23andme.vcf', 'convert.gs.gt.gen', 'convert.gs.gt.samples', 'convert.gs.pl.gen', 'convert.gs.pl.samples', 'convert.gt.noHead.ids.vcf', 'convert.gt.noHead.vcf', 'convert.gt.vcf', 'convert.gvcf.out', 'convert.gvcf.vcf', 'convert.hap-missing.haps', 'convert.hap-missing.vcf', 'convert.hls.gt.hap', 'convert.hls.gt.legend', 'convert.hls.gt.samples', 'convert.hls.haps', 'convert.hls.legend', 'convert.hls.samples', 'convert.hs.gt.hap', 'convert.hs.gt.samples', 'convert.hs.hap', 'convert.hs.sample', 'convert.vcf', 'create-bam-test', 'csq.1.out', 'csq.fa', 'csq.fa.fai', 'csq.gff3', 'csq.vcf', 'EDUMMY0001.fa', 'EDUMMY0001.fa.fai', 'EDUMMY0001.gff', 'starts-with-1.txt', 'starts-with-1.txt-l', 'starts-with-1.vcf', 'EDUMMY0002.fa', 'EDUMMY0002.fa.fai', 'EDUMMY0002.gff', 'boundaries.txt', 'boundaries.vcf', 'EDUMMY0003.fa', 'EDUMMY0003.fa.fai', 'EDUMMY0003.gff', 'long-del.txt', 'long-del.vcf', 'EMN908947.fa', 'EMN908947.fa.fai', 'ribosomal-slippage.cmd', 'ribosomal-slippage.cmd.out', 'ribosomal-slippage.gff', 'ribosomal-slippage.vcf', 'simple.cmd', 'simple.cmd.out', 'simple.gff', 'simple.vcf', 'ENSG00000173376.fa', 'ENSG00000173376.fa.fai', 'ENSG00000173376.gff', 'synon.txt', 'synon.vcf', 'ENSMUST00000121418.fa', 'ENSMUST00000121418.fa.fai', 'ENSMUST00000121418.gff', 'filter-problem.1.cmd', 'filter-problem.1.cmd.out', 'filter-problem.2.cmd', 'filter-problem.2.cmd.out', 'filter-problem.3.cmd', 'filter-problem.3.cmd.out', 'filter-problem.vcf', 'ENSMUST00000133836.fa', 'ENSMUST00000133836.fa.fai', 'ENSMUST00000133836.gff', 'filter-problem.1.cmd', 'filter-problem.1.cmd.out', 'filter-problem.vcf', 'ENST00000218032.fa', 'ENST00000218032.fa.fai', 'ENST00000218032.gff', 'start-lost-del.txt', 'start-lost-del.vcf', 'start-lost.txt', 'start-lost.txt-l', 'start-lost.vcf', 'ENST00000227471.fa', 'ENST00000227471.fa.fai', 'ENST00000227471.gff', 'insert-splice-vs-frameshift.txt', 'insert-splice-vs-frameshift.vcf', 'ENST00000230048.fa', 'ENST00000230048.fa.fai', 'ENST00000230048.gff', 'ascii-art.txt', 'start-del.txt', 'start-del.vcf', 'ENST00000256452.fa', 'ENST00000256452.fa.fai', 'ENST00000256452.gff', 'intron.txt', 'intron.vcf', 'ENST00000263103-INS.fa', 'ENST00000263103-INS.fa.fai', 'ENST00000263103-INS.gff', 'insertions.txt', 'insertions.vcf', 'ENST00000271583.fa', 'ENST00000271583.fa.fai', 'ENST00000271583.gff', 'splice-acceptor.txt', 'splice-acceptor.vcf', 'ENST00000294661.fa', 'ENST00000294661.fa.fai', 'ENST00000294661.gff', 'non-coding-boundary.txt', 'non-coding-boundary.txt-l', 'non-coding-boundary.vcf', 'ENST00000295641.fa', 'ENST00000295641.fa.fai', 'ENST00000295641.gff', 'not-a-start-lost.txt', 'not-a-start-lost.txt-l', 'not-a-start-lost.vcf', '15bp-insert.txt', '15bp-insert.vcf', 'ENST00000301246.fa', 'ENST00000301246.fa.fai', 'ENST00000301246.gff', 'ENST00000303039.fa', 'ENST00000303039.fa.fai', 'ENST00000303039.gff', 'not-a-stop.txt', 'not-a-stop.txt-l', 'not-a-stop.vcf', 'ENST00000318249.2.fa', 'ENST00000318249.2.fa.fai', 'ENST00000318249.2.gff', 'ascii-art.txt', 'synonymous-start-lost.txt', 'synonymous-start-lost.vcf', 'ENST00000318249.fa', 'ENST00000318249.fa.fai', 'ENST00000318249.gff', 'ascii-art.txt', 'start-lost.txt', 'start-lost.txt-l', 'start-lost.vcf', 'start-lost.vcf.ori', 'start-lost.vep', 'ENST00000329454.fa', 'ENST00000329454.fa.fai', 'ENST00000329454.gff', 'boundary-deletion.txt', 'boundary-deletion.txt-l', 'boundary-deletion.vcf', 'ENST00000341065.fa', 'ENST00000341065.fa.fai', 'ENST00000341065.gff', 'ascii-art.txt', 'ascii-art.txt-l', 'frame1.txt', 'frame1.txt-l', 'frame1.vcf', 'frame2.txt', 'frame2.txt-l', 'frame2.vcf', 'frame3.txt', 'frame3.txt-l', 'frame3.vcf', 'not-a-start-lost.txt', 'not-a-start-lost.txt-l', 'not-a-start-lost.vcf', 'splice-acceptor-donor1.txt', 'splice-acceptor-donor1.txt-l', 'splice-acceptor-donor1.vcf', 'splice-acceptor-donor2.txt', 'splice-acceptor-donor2.txt-l', 'splice-acceptor-donor2.vcf', 'splice-acceptor-donor3.txt', 'splice-acceptor-donor3.txt-l', 'splice-acceptor-donor3.vcf', 'splice-acceptor-donor4.txt', 'splice-acceptor-donor4.txt-l', 'splice-acceptor-donor4.vcf', 'splice-acceptor-donor5.txt', 'splice-acceptor-donor5.txt-l', 'splice-acceptor-donor5.vcf', 'splice-acceptor-donor6.txt', 'splice-acceptor-donor6.txt-l', 'splice-acceptor-donor6.vcf', 'splice-acceptor-donor7.txt', 'splice-acceptor-donor7.txt-l', 'splice-acceptor-donor7.vcf', 'splice-acceptor-donor8.txt', 'splice-acceptor-donor8.txt-l', 'splice-acceptor-donor8.vcf', 'splice-acceptor-donor9.txt', 'splice-acceptor-donor9.txt-l', 'splice-acceptor-donor9.vcf', 'ENST00000357367.fa', 'ENST00000357367.fa.fai', 'ENST00000357367.gff', 'stop-retained.txt', 'stop-retained.vcf', 'ENST00000368801.2.fa', 'ENST00000368801.2.fa.fai', 'ENST00000368801.2.gff', 'ascii-art.txt', 'start-lost.txt', 'start-lost.vcf', 'ENST00000368801.fa', 'ENST00000368801.fa.fai', 'ENST00000368801.gff', 'ascii-art.txt', 'compound-lost.txt', 'compound-lost.vcf', 'ENST00000373833.fa', 'ENST00000373833.fa.fai', 'ENST00000373833.gff', 'boundary-insertion.txt', 'boundary-insertion.txt-l', 'boundary-insertion.vcf', 'ENST00000375992.fa', 'ENST00000375992.fa.fai', 'ENST00000375992.gff', 'ascii-art.txt', 'incorrect-synon-del-not-start-lost.txt', 'incorrect-synon-del-not-start-lost.vcf', 'ENST00000378322.fa', 'ENST00000378322.fa.fai', 'ENST00000378322.gff', 'ascii-art.txt', 'ascii-art.txt-l', 'end-overlap-tscript.txt', 'end-overlap-tscript.txt-l', 'end-overlap-tscript.vcf', 'ENST00000381157.fa', 'ENST00000381157.fa.fai', 'ENST00000381157.gff', 'haploid-diploid.txt', 'haploid-diploid.vcf', 'ENST00000382647.fa', 'ENST00000382647.fa.fai', 'ENST00000382647.gff', 'synon-splice-region-insert.txt', 'synon-splice-region-insert.vcf', 'ENST00000390520.fa', 'ENST00000390520.fa.fai', 'ENST00000390520.gff', 'deletion-overlap.txt', 'deletion-overlap.vcf', 'ENST00000400151.fa', 'ENST00000400151.fa.fai', 'ENST00000400151.gff', 'ascii-art.txt', 'long-del.txt', 'long-del.vcf', 'ENST00000409523.fa', 'ENST00000409523.fa.fai', 'ENST00000409523.gff', 'ascii-art.txt', 'long-overlapping-del.txt', 'long-overlapping-",
    "raw_text_content": "",
    "p_tag_content": "Genotype Sparse Compression (GSC) is an advanced tool for lossless compression of VCF files, designed to efficiently store and manage VCF files in a compressed format. It accepts VCF/BCF files as input and utilizes advanced compression techniques to significantly reduce storage requirements while ensuring fast query capabilities. In our study, we successfully compressed the VCF files from the 1000 Genomes Project (1000Gpip3), consisting of 2504 samples and 80 million variants, from an uncompressed VCF file of 803.70GB to approximately 1GB. Compiler Compatibility: GSC requires a modern C++14-ready compiler, such as: Build System: Make build system is necessary for compiling GSC. Operating System: GSC supports 64-bit operating systems, including: To download, build and install GSC use the following commands. To clean the GSC build use: There is an example VCF/VCF.gz/BCF file,toy.vcf/toy.vcf.gz/toy.bcf, in the toy folder, which can be used to test GSC The input file format is VCF. You can compress a VCF file in lossless mode using one of the following methods: Explicit input and output file parameters: Use the--inoption to specify the input VCF file and the--outoption for the output compressed file. Input file parameter and output redirection: Use the--outoption for the output compressed file and redirect the input VCF file into the command. Output file redirection and input file parameter: Specify the input VCF file with the--inoption and redirect the output to create the compressed file. Input and output redirection: Use shell redirection for both input and output. This method does not use the--inand--outoptions. This will create a file: The input file format is VCF. The commands are similar to those used for lossless compression, with the addition of the-Mparameter to enable lossy compression. For example, to compress a VCF file in lossy mode: Or using redirection: This will create a file: lossless decompression: To decompress the compressed toy_lossless.gsc into a VCF file named toy_lossless.vcf: lossy decompression: To decompress the compressed toy_lossy.gsc into a VCF file named toy_lossy.vcf: Dockerfile can be used to build a Docker image with all necessary dependencies and GSC compressor. The image is based on Ubuntu 18.04. To build a Docker image and run a Docker container, you need Docker Desktop (https://www.docker.com). Example commands (run it within a directory with Dockerfile): SEEK ID:https://workflowhub.eu/workflows/885?version=1 Update README.md Views:750Downloads:133 Created: 17th May 2024 at 17:51 None Teams:Genome Data Compression Team Organizations:Shenzhen University Expertise:Bioinformatics Tools:Workflows Teams:Genome Data Compression Team Web page:Not specified We are dedicated to designing efficient genome data compression algorithms and developing related tools to address the challenges of large-scale genome data storage and transmission. Our goal is to reduce data storage costs and improve data processing efficiency through advanced technology, thereby advancing genomic research. Space:GenomeDataCompression Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 421,
    "discussion_links": "[{'id': '429', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "NGTax",
    "license": "CC0-1.0",
    "description": "Amplicon analysis workflow using NG-Tax\n\n**Steps:**\n\n* Quality control on the reads\n* Execute NGTax for ASV detection and classification\n\nFor more information about NG-Tax 2.0 have a look at https://doi.org/10.3389/fgene.2019.01366",
    "latest_version": 7,
    "tags": "['16S', 'Amplicon', 'ITS']",
    "versions": "[{'version': 7, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/45?version=7', 'commit': 'e10f31f762c11d24f2a6efa1515d2927be1ad156', 'ref': 'refs/heads/master', 'tree': '/workflows/45/git/7/tree', 'doi': None}]",
    "version": 7,
    "revision_comments": "",
    "created_at": "2020-10-28T11:07:26.000Z",
    "updated_at": "2023-01-16T13:43:45.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "Jesse van Dam, Peter Schaap,",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_primer', 'name': 'Forward primer', 'description': 'Forward primer used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'reverse_primer', 'name': 'Reverse primer', 'description': 'Reverse primer used', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'reference_db', 'name': 'Reference database', 'description': 'Reference database used in FASTA format', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'rev_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'for_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'sample', 'name': 'Sample name', 'description': 'Name of the sample being analysed', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['fastqc_files_to_folder/results']}, {'id': 'files_to_folder_ngtax', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['ngtax_files_to_folder/results']}], 'steps': [{'id': 'fastqc', 'name': None, 'description': None, 'sink_ids': ['fastqc/output']}, {'id': 'reads_to_folder', 'name': None, 'description': None, 'sink_ids': ['reads_to_folder/results']}, {'id': 'ngtax', 'name': None, 'description': None, 'sink_ids': ['ngtax/biom', 'ngtax/turtle']}, {'id': 'fastqc_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['fastqc_files_to_folder/results']}, {'id': 'ngtax_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['ngtax_files_to_folder/results']}], 'links': [{'id': 'fastqs', 'source_id': 'forward_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'fastqs', 'source_id': 'reverse_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'forward_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reverse_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'forward_primer', 'source_id': 'forward_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reverse_primer', 'source_id': 'reverse_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reference_db', 'source_id': 'reference_db', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'reads_to_folder/results', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'rev_read_len', 'source_id': 'rev_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'for_read_len', 'source_id': 'for_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'sample', 'source_id': 'sample', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'minimum_threshold', 'source_id': None, 'sink_id': 'ngtax', 'name': None, 'default_value': 0.1}, {'id': 'files', 'source_id': 'fastqc/output', 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/biom', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 45,
    "text_field": "['workflow_ngtax.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: Workflow\nrequirements:\n   - class: StepInputExpressionRequirement\n   - class: InlineJavascriptRequirement\n   - class: MultipleInputFeatureRequirement\n\ninputs:\n  files:\n    type: string[]\n    doc: files to download\n    label: file paths\n  destination:\n    type: string\n    doc: Final destination on iRODS\n    label: IRODS final destination\n  forward_primer: \n    type: string\n    doc: Forward primer used\n    label: Forward primer\n    default: \"[AG]GGATTAGATACCC\"\n  reverse_primer:\n    type: string\n    doc: Reverse primer used\n    label: Reverse primer\n    default: \"CGAC[AG][AG]CCATGCA[ACGT]CACCT\"\n  reference_db:\n    type: string?\n    doc: Reference database used in FASTA format\n    label: Reference database\n    # default: \"/unlock/Databases/Silva/SILVA_132_SSURef_tax_silva.fasta.gz\"\n  rev_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  for_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  sample:\n    type: string\n    doc: Name of the sample being analysed\n    label: Sample name\n    \noutputs:\n  info:\n    type: string\n  error: \n    type: string\n\nsteps:\n############################\n  irods_download:\n    run: ../irods/irods.cwl\n    in:\n      files: files\n      pull: \n        default: true\n    out: [irods_files, irods_folder]\n############################\n  fastqc:\n   run: ../fastqc/fastqc.cwl\n   in:\n     step:\n       default: 1\n     fastqs: irods_download/irods_files\n   out: [upload]\n############################\n  ngtax:\n   run: ../ngtax/ngtax.cwl\n   in:\n    step:\n      default: 2\n    forward_primer: forward_primer\n    reverse_primer: reverse_primer\n    reference_db: reference_db\n    folder: irods_download/irods_folder\n    rev_read_len: rev_read_len\n    for_read_len: for_read_len\n    sample: sample\n    minimum_threshold:\n      default: 0.1\n   out: [upload]\n############################    \n\n\noutputs:\n  fastqc_output:\n    type: Directory\n    outputSource: fastqc/upload\n  ngtax_output:\n    type: Directory\n    outputSource: ngtax/upload\n\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/docs/schema_org_rdfa.html\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Amplicon analysis workflow using NG-Tax Steps: For more information about NG-Tax 2.0 have a look athttps://doi.org/10.3389/fgene.2019.01366 Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/45?version=7 Jesse van Dam, Peter Schaap, Views:9920Downloads:280 Created: 23rd Jul 2020 at 10:59 Last updated: 8th Jun 2021 at 08:11 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 438,
    "discussion_links": "[{'id': '48', 'label': 'Gitter Chat', 'url': 'https://gitter.im/arvados/pubseq'}]",
    "title": "COVID-19 PubSeq Pangenome Generate",
    "license": "Apache-2.0",
    "description": "",
    "latest_version": 1,
    "tags": "['CWL', 'covid-19', 'pangenome']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/63?version=1', 'commit': 'c89b1838e4c9d86689ce03be964a8503406153e0', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/63/git/1/tree', 'doi': '10.48546/workflowhub.workflow.63.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-10-07T09:36:13.000Z",
    "updated_at": "2023-01-16T13:44:54.000Z",
    "doi": "10.48546/workflowhub.workflow.63.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Prins', 'given_name': 'Pjotr', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-8021-9162'}, {'profile': None, 'family_name': 'Guarracino', 'given_name': 'Andrea', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0001-9744-131X'}, {'profile': None, 'family_name': 'Amstutz', 'given_name': 'Peter', 'affiliation': 'Curii, Inc.', 'orcid': 'https://orcid.org/0000-0003-3566-7705'}, {'profile': None, 'family_name': 'Liener', 'given_name': 'Thomas', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0003-3257-9937'}, {'profile': None, 'family_name': 'Novak', 'given_name': 'Adam M.', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0001-5828-047X'}, {'profile': None, 'family_name': 'Munyoki', 'given_name': 'Bonface', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5049-8658'}, {'profile': '/people/263', 'family_name': 'Inutano', 'given_name': 'Tazro', 'affiliation': 'Database Center for Life Science', 'orcid': 'https://orcid.org/0000-0003-3777-5945'}, {'profile': None, 'family_name': 'Heuer', 'given_name': 'Michael', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-9052-6000'}, {'profile': '/people/70', 'family_name': 'Crusoe', 'given_name': 'Michael R.', 'affiliation': 'VU Amsterdam', 'orcid': 'https://orcid.org/0000-0002-2961-9670'}, {'profile': '/people/2', 'family_name': 'Soiland-Reyes', 'given_name': 'Stian', 'affiliation': 'The University of Manchester', 'orcid': 'https://orcid.org/0000-0001-9842-9718'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'inputReads', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadata', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadataSchema', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'subjects', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'exclude', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bin_widths', 'name': None, 'description': 'width of each bin in basepairs along the graph vector', 'type': [{'type': 'int[]'}], 'default_value': [1, 4, 16, 64, 256, 1000, 4000, 16000]}, {'id': 'cells_per_file', 'name': None, 'description': 'Cells per file on component_segmentation', 'type': [{'type': 'int'}], 'default_value': 100}], 'outputs': [{'id': 'odgiGraph', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['buildGraph/odgiGraph']}, {'id': 'odgiPNG', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['vizGraph/graph_image']}, {'id': 'seqwishGFA', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['induceGraph/seqwishGFA']}, {'id': 'odgiRDF', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['odgi2rdf/rdf']}, {'id': 'readsMergeDedup', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['dedup/reads_dedup']}, {'id': 'mergedMetadata', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['mergeMetadata/merged']}, {'id': 'indexed_paths', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['index_paths/indexed_paths']}, {'id': 'colinear_components', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['segment_components/colinear_components']}], 'steps': [{'id': 'relabel', 'name': None, 'description': None, 'sink_ids': ['relabel/relabeledSeqs', 'relabel/originalLabels']}, {'id': 'dedup', 'name': None, 'description': None, 'sink_ids': ['dedup/reads_dedup', 'dedup/dups']}, {'id': 'overlapReads', 'name': None, 'description': None, 'sink_ids': ['overlapReads/alignments']}, {'id': 'induceGraph', 'name': None, 'description': None, 'sink_ids': ['induceGraph/seqwishGFA']}, {'id': 'buildGraph', 'name': None, 'description': None, 'sink_ids': ['buildGraph/odgiGraph']}, {'id': 'vizGraph', 'name': None, 'description': None, 'sink_ids': ['vizGraph/graph_image']}, {'id': 'odgi2rdf', 'name': None, 'description': None, 'sink_ids': ['odgi2rdf/rdf']}, {'id': 'mergeMetadata', 'name': None, 'description': None, 'sink_ids': ['mergeMetadata/merged']}, {'id': 'bin_paths', 'name': None, 'description': None, 'sink_ids': ['bin_paths/bins', 'bin_paths/pangenome_sequence']}, {'id': 'index_paths', 'name': 'Create path index', 'description': None, 'sink_ids': ['index_paths/indexed_paths']}, {'id': 'segment_components', 'name': 'Run component segmentation', 'description': None, 'sink_ids': ['segment_components/colinear_components']}], 'links': [{'id': 'readsFA', 'source_id': 'inputReads', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'subjects', 'source_id': 'subjects', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'exclude', 'source_id': 'exclude', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'relabel/relabeledSeqs', 'sink_id': 'dedup', 'name': None, 'default_value': None}, {'id': 'target', 'source_id': 'dedup/reads_dedup', 'sink_id': 'overlapReads', 'name': None, 'default_value': None}, {'id': 'query', 'source_id': 'dedup/reads_dedup', 'sink_id': 'overlapReads', 'name': None, 'default_value': None}, {'id': 'outputCIGAR', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': True}, {'id': 'preset', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': 'asm20'}, {'id': 'miniWinSize', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': 1}, {'id': 'readsFA', 'source_id': 'dedup/reads_dedup', 'sink_id': 'induceGraph', 'name': None, 'default_value': None}, {'id': 'readsPAF', 'source_id': 'overlapReads/alignments', 'sink_id': 'induceGraph', 'name': None, 'default_value': None}, {'id': 'inputGFA', 'source_id': 'induceGraph/seqwishGFA', 'sink_id': 'buildGraph', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'vizGraph', 'name': None, 'default_value': None}, {'id': 'width', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 50000}, {'id': 'height', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 500}, {'id': 'path_per_row', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': True}, {'id': 'path_height', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 4}, {'id': 'odgi', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'odgi2rdf', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'metadataSchema', 'source_id': 'metadataSchema', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'subjects', 'source_id': 'subjects', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'dups', 'source_id': 'dedup/dups', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'originalLabels', 'source_id': 'relabel/originalLabels', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'bin_paths', 'name': None, 'default_value': None}, {'id': 'bin_width', 'source_id': 'bin_widths', 'sink_id': 'bin_paths', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'index_paths', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'bin_paths/bins', 'sink_id': 'segment_components', 'name': None, 'default_value': None}, {'id': 'cells_per_file', 'source_id': 'cells_per_file', 'sink_id': 'segment_components', 'name': None, 'default_value': None}, {'id': 'pangenome_sequence', 'source_id': 'bin_paths/pangenome_sequence', 'sink_id': 'segment_components', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 63,
    "text_field": "['pangenome-generate.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.1\nclass: Workflow\nrequirements:\n  ScatterFeatureRequirement: {}\n  StepInputExpressionRequirement: {}\ninputs:\n  inputReads: File[]\n  metadata: File[]\n  metadataSchema: File\n  subjects: string[]\n  exclude: File?\n  bin_widths:\n    type: int[]\n    default: [ 1, 4, 16, 64, 256, 1000, 4000, 16000]\n    doc: width of each bin in basepairs along the graph vector\n  cells_per_file:\n    type: int\n    default: 100\n    doc: Cells per file on component_segmentation\noutputs:\n  odgiGraph:\n    type: File\n    outputSource: buildGraph/odgiGraph\n  odgiPNG:\n    type: File\n    outputSource: vizGraph/graph_image\n  seqwishGFA:\n    type: File\n    outputSource: induceGraph/seqwishGFA\n  odgiRDF:\n    type: File\n    outputSource: odgi2rdf/rdf\n  readsMergeDedup:\n    type: File\n    outputSource: dedup/reads_dedup\n  mergedMetadata:\n    type: File\n    outputSource: mergeMetadata/merged\n  indexed_paths:\n    type: File\n    outputSource: index_paths/indexed_paths\n  colinear_components:\n    type: Directory\n    outputSource: segment_components/colinear_components\nsteps:\n  relabel:\n    in:\n      readsFA: inputReads\n      subjects: subjects\n      exclude: exclude\n    out: [relabeledSeqs, originalLabels]\n    run: relabel-seqs.cwl\n  dedup:\n    in: {reads: relabel/relabeledSeqs}\n    out: [reads_dedup, dups]\n    run: ../tools/seqkit/seqkit_rmdup.cwl\n  overlapReads:\n    in:\n      target: dedup/reads_dedup\n      query: dedup/reads_dedup\n      outputCIGAR: {default: true}\n      preset: {default: asm20}\n      miniWinSize: {default: 1}\n    out: [alignments]\n    run: ../tools/minimap2/minimap2_paf.cwl\n  induceGraph:\n    in:\n      readsFA: dedup/reads_dedup\n      readsPAF: overlapReads/alignments\n    out: [seqwishGFA]\n    run: seqwish.cwl\n  buildGraph:\n    in: {inputGFA: induceGraph/seqwishGFA}\n    out: [odgiGraph]\n    run: odgi-build.cwl\n  vizGraph:\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n      width:\n        default: 50000\n      height:\n        default: 500\n      path_per_row:\n        default: true\n      path_height:\n        default: 4\n    out: [graph_image]\n    run: ../tools/odgi/odgi_viz.cwl\n  odgi2rdf:\n    in: {odgi: buildGraph/odgiGraph}\n    out: [rdf]\n    run: odgi_to_rdf.cwl\n  mergeMetadata:\n    in:\n      metadata: metadata\n      metadataSchema: metadataSchema\n      subjects: subjects\n      dups: dedup/dups\n      originalLabels: relabel/originalLabels\n    out: [merged]\n    run: merge-metadata.cwl\n  bin_paths:\n    run: ../tools/odgi/odgi_bin.cwl\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n      bin_width: bin_widths\n    scatter: bin_width\n    out: [ bins, pangenome_sequence ]\n  index_paths:\n    label: Create path index\n    run: ../tools/odgi/odgi_pathindex.cwl\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n    out: [ indexed_paths ]\n  segment_components:\n    label: Run component segmentation\n    run: ../tools/graph-genome-segmentation/component_segmentation.cwl\n    in:\n      bins: bin_paths/bins\n      cells_per_file: cells_per_file\n      pangenome_sequence:\n        source: bin_paths/pangenome_sequence\n        valueFrom: $(self[0])\n        # the bin_paths step is scattered over the bin_width array, but always using the same sparse_graph_index\n        # the pangenome_sequence that is extracted is exactly the same for the same sparse_graph_index\n        # regardless of bin_width, so we take the first pangenome_sequence as input for this step\n    out: [ colinear_components ]",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/63?version=1 DOI:10.48546/workflowhub.workflow.63.1 Views:2315Downloads:685 Created: 7th Oct 2020 at 10:36 Last updated: 21st Sep 2022 at 10:26 None Teams:COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,Common Workflow Language (CWL) community,MGnify,Metabolomics-Reproducibility Organizations:VU Amsterdam,ELIXIR Teams:Pitagora-Network Organizations:Database Center for Life Science Teams:IBISBA Workflows,GalaxyProject SARS-CoV-2,BioBB Building Blocks,Common Workflow Language (CWL) community,BioExcel Best Practice Guides,Specimen Data Refinery,FAIR Computational Workflows,Vertebrate Genomes Pipelines in Galaxy,TRE-FX,EuroScienceGateway,Biodiversity Genomics Europe (general),BY-COVID Baseline Use Case: SARS-CoV-2 Vaccine(s) effectiveness in preventing SARS-CoV-2 infection,BY-COVID (general),BioDT additional pipelines,BioDT Use Case 4.1.1.1 Biodiversity dynamics,BioDT Use Case 4.1.2.2 DNA detected biodiversity, poorly known habitats,BioDT Use Case 4.1.2.1 Crop wild relatives and genetic resources for food security,BioDT Use Case 4.1.3.1 Invasive species,BioDT Use Case 4.1.3.2 Endangered species,BioDT Use Case 4.1.4.1 Disease outbreaks,BioDT Use Case 4.1.4.2 Pollinators,BioDT Use Case 4.1.1.2 Ecosystem services,ELIXIR Training,ELIXIR Tools platform Organizations:The University of Manchester,ELIXIR-UK A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:http://covid-19.genenetwork.org/ Organisms:Not specified"
  },
  {
    "": 439,
    "discussion_links": "[{'id': '49', 'label': 'GitLab Issues', 'url': 'https://git.wur.nl/unlock/cwl/-/issues'}]",
    "title": "Metagenomic Binning from Assembly",
    "license": "Apache-2.0",
    "description": "### Workflow for Metagenomics binning from assembly\n\n**Minimal inputs are: Identifier, assembly (fasta) and a associated sorted BAM file**\n\n**Summary**\n  - MetaBAT2 (binning)\n  - MaxBin2 (binning)\n  - SemiBin (binning)\n  - DAS Tool (bin merging)\n  - EukRep (eukaryotic classification)\n  - CheckM (bin completeness and contamination)\n  - BUSCO (bin completeness)\n  - GTDB-Tk (bin taxonomic classification)\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://gitlab.com/m-unlock/cwl<br>\n  Workflows: https://gitlab.com/m-unlock/cwl/workflows<br>\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 11,
    "tags": "['Metagenomics', 'binning', 'metagenome', 'microbial']",
    "versions": "[{'version': 7, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=7', 'commit': 'f3919f225bcea97b6b0c10750c8acb34841a52f1', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/7/tree', 'doi': None}, {'version': 8, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=8', 'commit': '06604059e37a63c5882f4e180ce1ea693ca96706', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/8/tree', 'doi': None}, {'version': 9, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=9', 'commit': 'd6fcbfaa5609d3aaa341a3b31bd3075f99b80df8', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/9/tree', 'doi': None}, {'version': 10, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=10', 'commit': 'c2519b156dfa0c2f2be55e5edaa2f82775079e1a', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/10/tree', 'doi': None}, {'version': 11, 'revision_comments': 'Added more binning and assembly reports', 'url': 'https://workflowhub.eu/workflows/64?version=11', 'commit': 'd4c912ca61c0fa194b94eb7a6cc479d8b295179d', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/11/tree', 'doi': None}]",
    "version": 11,
    "revision_comments": "Added more binning and assembly reports",
    "created_at": "2021-10-18T09:49:33.000Z",
    "updated_at": "2023-02-02T15:15:38.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}]",
    "topic_annotations": "[{'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'assembly', 'name': 'Assembly fasta', 'description': 'Assembly in fasta format', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bam_file', 'name': 'Bam file', 'description': 'Mapping file in sorted bam format containing reads mapped to the assembly', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'threads', 'name': 'Threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'memory usage (MB)', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'gtdbtk_data', 'name': 'gtdbtk data directory', 'description': 'Directory containing the GTDB database. When none is given GTDB-Tk will be skipped.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'busco_data', 'name': 'BUSCO dataset', 'description': 'Directory containing the BUSCO dataset location.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'run_semibin', 'name': 'Run SemiBin', 'description': 'Run with SemiBin binner', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'semibin_environment', 'name': 'SemiBin Environment', 'description': 'Semibin Built-in models (human_gut/dog_gut/ocean/soil/cat_gut/human_oral/mouse_gut/pig_gut/built_environment/wastewater/global)', 'type': [{'type': 'string?'}], 'default_value': 'global'}, {'id': 'sub_workflow', 'name': 'Sub workflow Run', 'description': 'Use this when you need the output bins as File[] for subsequent analysis workflow steps in another workflow.', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'step', 'name': 'CWL base step number', 'description': 'Step number for order of steps', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output destination (not used in the workflow itself)', 'description': 'Optional output destination path for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'bins', 'name': 'Bin files', 'description': 'Bins files in fasta format. To be be used in other workflows.', 'type': [{'type': 'File[]?'}], 'source_ids': ['output_bin_files/bins_out']}, {'id': 'metabat2_output', 'name': 'MetaBAT2', 'description': 'MetaBAT2 output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['metabat2_files_to_folder/results']}, {'id': 'maxbin2_output', 'name': 'MaxBin2', 'description': 'MaxBin2 output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['maxbin2_files_to_folder/results']}, {'id': 'semibin_output', 'name': 'SemiBin', 'description': 'MaxBin2 output directory', 'type': [{'type': 'Directory?'}], 'source_ids': ['semibin_files_to_folder/results']}, {'id': 'das_tool_output', 'name': 'DAS Tool', 'description': 'DAS Tool output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['das_tool_files_to_folder/results']}, {'id': 'checkm_output', 'name': 'CheckM', 'description': 'CheckM output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['checkm_files_to_folder/results']}, {'id': 'busco_output', 'name': 'BUSCO', 'description': 'BUSCO output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['busco_files_to_folder/results']}, {'id': 'gtdbtk_output', 'name': 'GTDB-Tk', 'description': 'GTDB-Tk output directory', 'type': [{'type': 'Directory?'}], 'source_ids': ['gtdbtk_files_to_folder/results']}, {'id': 'bins_summary_table', 'name': 'Bins summary', 'description': 'Summary of info about the bins', 'type': [{'type': 'File'}], 'source_ids': ['bins_summary/bins_summary_table']}, {'id': 'bins_read_stats', 'name': 'Assembly/Bin read stats', 'description': 'General assembly and bin coverage', 'type': [{'type': 'File'}], 'source_ids': ['bin_readstats/binReadStats']}, {'id': 'eukrep_fasta', 'name': 'EukRep fasta', 'description': 'EukRep eukaryotic classified contigs', 'type': [{'type': 'File'}], 'source_ids': ['eukrep/euk_fasta_out']}, {'id': 'eukrep_stats_file', 'name': 'EukRep stats', 'description': 'EukRep fasta statistics', 'type': [{'type': 'File'}], 'source_ids': ['eukrep_stats/output']}], 'steps': [{'id': 'metabat2_contig_depths', 'name': 'contig depths', 'description': 'MetabatContigDepths to obtain the depth file used in the MetaBat2 and SemiBin binning process', 'sink_ids': ['metabat2_contig_depths/depths']}, {'id': 'contig_read_counts', 'name': 'samtools idxstats', 'description': 'Reports alignment summary statistics', 'sink_ids': ['contig_read_counts/contigReadCounts']}, {'id': 'assembly_read_counts', 'name': 'samtools flagstat', 'description': 'Reports alignment summary statistics', 'sink_ids': ['assembly_read_counts/flagstat']}, {'id': 'eukrep', 'name': 'EukRep', 'description': 'EukRep, eukaryotic sequence classification', 'sink_ids': ['eukrep/euk_fasta_out']}, {'id': 'eukrep_stats', 'name': 'EukRep stats', 'description': 'EukRep fasta statistics', 'sink_ids': ['eukrep_stats/output']}, {'id': 'metabat2', 'name': 'MetaBAT2 binning', 'description': 'Binning procedure using MetaBAT2', 'sink_ids': ['metabat2/bin_dir', 'metabat2/log']}, {'id': 'metabat2_filter_bins', 'name': 'Filter MetBAT2 Bins', 'description': 'Removed unwanted fasta files from the MetaBAT2 bin directory (like TooShort.fa)', 'sink_ids': ['metabat2_filter_bins/output_folder']}, {'id': 'metabat2_contig2bin', 'name': 'MetaBAT2 to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['metabat2_contig2bin/table']}, {'id': 'maxbin2', 'name': 'MaxBin2 binning', 'description': 'Binning procedure using MaxBin2', 'sink_ids': ['maxbin2/bins', 'maxbin2/summary', 'maxbin2/log']}, {'id': 'maxbin2_to_folder', 'name': 'MaxBin2 bins to folder', 'description': 'Create folder with MaxBin2 bins', 'sink_ids': ['maxbin2_to_folder/results']}, {'id': 'maxbin2_contig2bin', 'name': 'MaxBin2 to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['maxbin2_contig2bin/table']}, {'id': 'semibin', 'name': 'Sembin binning', 'description': 'Binning procedure using SemiBin', 'sink_ids': ['semibin/recluster_bins', 'semibin/data', 'semibin/data_split', 'semibin/model', 'semibin/coverage']}, {'id': 'semibin_contig2bin', 'name': 'SemiBin to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['semibin_contig2bin/table']}, {'id': 'das_tool', 'name': 'DAS Tool integrate predictions from multiple binning tools', 'description': 'DAS Tool', 'sink_ids': ['das_tool/bin_dir', 'das_tool/summary', 'das_tool/contig2bin', 'das_tool/log']}, {'id': 'das_tool_bins', 'name': 'Bin dir to files[]', 'description': 'DAS Tool bins folder to File array for further analysis', 'sink_ids': ['das_tool_bins/files']}, {'id': 'aggregate_bin_depths', 'name': 'Depths per bin', 'description': 'Depths per bin', 'sink_ids': ['aggregate_bin_depths/binDepths']}, {'id': 'bins_summary', 'name': 'Bins summary', 'description': 'Table of all bins and their statistics like size, contigs, completeness etc', 'sink_ids': ['bins_summary/bins_summary_table']}, {'id': 'bin_readstats', 'name': 'Bin and assembly read stats', 'description': 'Table general bin and assembly read mapping stats', 'sink_ids': ['bin_readstats/binReadStats']}, {'id': 'checkm', 'name': 'CheckM', 'description': 'CheckM bin quality assessment', 'sink_ids': ['checkm/checkm_out_table', 'checkm/checkm_out_folder']}, {'id': 'busco', 'name': 'BUSCO', 'description': 'BUSCO assembly completeness workflow', 'sink_ids': ['busco/short_summaries']}, {'id': 'merge_busco_summaries', 'name': 'Merge BUSCO summaries', 'description': None, 'sink_ids': ['merge_busco_summaries/output']}, {'id': 'gtdbtk', 'name': 'GTDBTK', 'description': 'Taxomic assigment of bins with GTDB-Tk', 'sink_ids': ['gtdbtk/gtdbtk_summary', 'gtdbtk/gtdbtk_out_folder']}, {'id': 'compress_gtdbtk', 'name': 'Compress GTDB-Tk', 'description': 'Compress GTDB-Tk output folder', 'sink_ids': ['compress_gtdbtk/outfile']}, {'id': 'metabat2_files_to_folder', 'name': 'MetaBAT2 output folder', 'description': 'Preparation of MetaBAT2 output files + unbinned contigs to a specific output folder', 'sink_ids': ['metabat2_files_to_folder/results']}, {'id': 'maxbin2_files_to_folder', 'name': 'MaxBin2 output folder', 'description': 'Preparation of maxbin2 output files to a specific output folder.', 'sink_ids': ['maxbin2_files_to_folder/results']}, {'id': 'semibin_files_to_folder', 'name': 'SemiBin output folder', 'description': 'Preparation of SemiBin output files to a specific output folder.', 'sink_ids': ['semibin_files_to_folder/results']}, {'id': 'das_tool_files_to_folder', 'name': 'DAS Tool output folder', 'description': 'Preparation of DAS Tool output files to a specific output folder.', 'sink_ids': ['das_tool_files_to_folder/results']}, {'id': 'checkm_files_to_folder', 'name': 'CheckM output', 'description': 'Preparation of CheckM output files to a specific output folder', 'sink_ids': ['checkm_files_to_folder/results']}, {'id': 'busco_files_to_folder', 'name': 'BUSCO output folder', 'description': 'Preparation of BUSCO output files to a specific output folder', 'sink_ids': ['busco_files_to_folder/results']}, {'id': 'gtdbtk_files_to_folder', 'name': 'GTBD-Tk output folder', 'description': 'Preparation of GTDB-Tk output files to a specific output folder', 'sink_ids': ['gtdbtk_files_to_folder/results']}, {'id': 'output_bin_files', 'name': 'Bin files', 'description': 'Bin files for subsequent workflow runs when sub_worflow = true', 'sink_ids': ['output_bin_files/bins_out']}], 'links': [{'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'metabat2_contig_depths', 'name': None, 'default_value': None}, {'id': 'bamFile', 'source_id': 'bam_file', 'sink_id': 'metabat2_contig_depths', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'bam_file', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'bam_file', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'eukrep', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'eukrep', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'input_fasta', 'source_id': 'eukrep/euk_fasta_out', 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'depths', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'metabat2/bin_dir', 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'regex', 'source_id': None, 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'output_folder_name', 'source_id': None, 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'metabat2_filter_bins/output_folder', 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'extension', 'source_id': None, 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'contigs', 'source_id': 'assembly', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'abundances', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/bins', 'sink_id': 'maxbin2_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'maxbin2_to_folder', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'maxbin2_to_folder/results', 'sink_id': 'maxbin2_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'maxbin2_contig2bin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'metabat2_depth_file', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'environment', 'source_id': 'semibin_environment', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'semibin/recluster_bins', 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'extension', 'source_id': None, 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'metabat2_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'semibin_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'binner_labels', 'source_id': None, 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'das_tool/bin_dir', 'sink_id': 'das_tool_bins', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'metabatdepthsFile', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'bin_depths', 'source_id': 'aggregate_bin_depths/binDepths', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'checkm', 'source_id': 'checkm/checkm_out_table', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'gtdbtk', 'source_id': 'gtdbtk/gtdbtk_summary', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'busco_dir', 'source_id': 'busco_files_to_folder/results', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'binContigs', 'source_id': 'das_tool/contig2bin', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'idxstats', 'source_id': 'contig_read_counts/contigReadCounts', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'flagstat', 'source_id': 'assembly_read_counts/flagstat', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'sequence_file', 'source_id': 'das_tool_bins/files', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'mode', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'busco_data', 'source_id': 'busco_data', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'auto-lineage-prok', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'merge_busco_summaries', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'busco/short_summaries', 'sink_id': 'merge_busco_summaries', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'compress_gtdbtk', 'name': None, 'default_value': None}, {'id': 'indir', 'source_id': 'gtdbtk/gtdbtk_out_folder', 'sink_id': 'compress_gtdbtk', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metabat2/log', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metabat2/bin_dir', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/summary', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/log', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'maxbin2_to_folder/results', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin_contig2bin/table', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/data', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/data_split', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/model', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/coverage', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'semibin/recluster_bins', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/log', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/summary', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/contig2bin', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'aggregate_bin_depths/binDepths', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'das_tool/bin_dir', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'checkm/checkm_out_table', 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'checkm/checkm_out_folder', 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'merge_busco_summaries/output', 'sink_id': 'busco_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'busco_files_to_folder', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'gtdbtk/gtdbtk_summary', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_gtdbtk/outfile', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'sub_workflow', 'source_id': 'sub_workflow', 'sink_id': 'output_bin_files', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'output_bin_files', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 64,
    "text_field": "['workflow_metagenomics_binning.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Minimal inputs are: Identifier, assembly (fasta) and a associated sorted BAM file Summary Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:Tools:https://gitlab.com/m-unlock/cwlWorkflows:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/64?version=11 Added more binning and assembly reports Views:9030Downloads:861 Created: 15th Oct 2020 at 14:55 Last updated: 2nd Nov 2022 at 15:29 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 494,
    "discussion_links": [],
    "title": "cocomico_wf_simulated",
    "license": "GPL-3.0+",
    "description": "CoCoMiCo analyses on collections of simulated communities.\nCommunity: scatterplots and KW tests of cooperation and competition\npotentials, for each collection.\nSimilarity: cooperation and competition potentials vs model\nsimilarity, defined as the Jaccard distance on sets of reactions.\nAdded value: boxplots comparing the added value of models in\ncommunities.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/1081?version=1', 'commit': 'e7a1844dbc3ccdaa2af73e293766dca1510a10d8', 'ref': 'refs/heads/master', 'tree': '/workflows/1081/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-07-18T19:57:27.000Z",
    "updated_at": "2024-08-14T15:24:11.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'community', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}, {'id': 'similarity', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}, {'id': 'added_value', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}], 'outputs': [{'id': 'similarity_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_similarity/figure_pdf']}, {'id': 'community_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_community/figure_pdf']}, {'id': 'added_value_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_added_value/figure_pdf']}], 'steps': [{'id': 'coco_community', 'name': None, 'description': None, 'sink_ids': ['coco_community/csv']}, {'id': 'fig_community', 'name': None, 'description': None, 'sink_ids': ['fig_community/figure_pdf']}, {'id': 'jaccard_distance', 'name': None, 'description': None, 'sink_ids': ['jaccard_distance/distance_matrix']}, {'id': 'coco_similarity', 'name': None, 'description': None, 'sink_ids': ['coco_similarity/csv']}, {'id': 'fig_similarity', 'name': None, 'description': None, 'sink_ids': ['fig_similarity/figure_pdf']}, {'id': 'coco_added_value', 'name': None, 'description': None, 'sink_ids': ['coco_added_value/csv']}, {'id': 'fig_added_value', 'name': None, 'description': None, 'sink_ids': ['fig_added_value/figure_pdf']}], 'links': [{'id': 'spec', 'source_id': 'community', 'sink_id': 'coco_community', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_community/csv', 'sink_id': 'fig_community', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'similarity', 'sink_id': 'jaccard_distance', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'similarity', 'sink_id': 'coco_similarity', 'name': None, 'default_value': None}, {'id': 'distance', 'source_id': 'jaccard_distance/distance_matrix', 'sink_id': 'fig_similarity', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_similarity/csv', 'sink_id': 'fig_similarity', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'added_value', 'sink_id': 'coco_added_value', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_added_value/csv', 'sink_id': 'fig_added_value', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 1081,
    "text_field": "",
    "raw_text_content": "",
    "p_tag_content": "CoCoMiCo analyses on collections of simulated communities.\nCommunity: scatterplots and KW tests of cooperation and competition\npotentials, for each collection.\nSimilarity: cooperation and competition potentials vs model\nsimilarity, defined as the Jaccard distance on sets of reactions.\nAdded value: boxplots comparing the added value of models in\ncommunities. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/1081?version=1 Initial commit Views:329Downloads:0 Created: 18th Jul 2024 at 20:57 Last updated: 18th Jul 2024 at 21:01 This item has not yet been tagged. None Teams:MISTIC Organizations:Inria A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Microbial communities and TIC Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 520,
    "discussion_links": "[{'id': '431', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Indices builder from GBOL RDF (TTL)",
    "license": "CC0-1.0",
    "description": "Workflow to build different indices for different tools from a genome and transcriptome. \n\nThis workflow expects an (annotated) genome in GBOL ttl format.\n\nSteps:\n  - SAPP: rdf2gtf (genome fasta)\n  - SAPP: rdf2fasta (transcripts fasta)\n  - STAR index (Optional for Eukaryotic origin)\n  - bowtie2 index\n  - kallisto index",
    "latest_version": 1,
    "tags": "['Alignment']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/75?version=1', 'commit': 'f8d3db7af24d8ad8fceac69baf83f572a64abff2', 'ref': 'refs/heads/master', 'tree': '/workflows/75/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-11-23T16:22:43.000Z",
    "updated_at": "2023-01-16T13:46:15.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'maximum memory usage in megabytes', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'inputFile', 'name': 'turtle file', 'description': 'Annotated genome in GBOL turtle file (.ttl) format', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'run_star', 'name': 'Run STAR', 'description': 'create STAR index for genome if true. (For genomes with exons)', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'genomeSAindexNbases', 'name': 'STAR parameter', 'description': 'For small genomes, the parameter --genomeSAindexNbases must be scaled down.', 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'STAR', 'name': 'STAR', 'description': 'STAR index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['STAR/STAR']}, {'id': 'bowtie2', 'name': 'bowtie2', 'description': 'bowtie2 index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['bowtie2/bowtie2']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'kallisto index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto/kallisto_indexFolder']}, {'id': 'genomefasta', 'name': 'Genome fasta', 'description': 'Genome fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2gtf/genomefasta']}, {'id': 'gtf', 'name': 'GTF', 'description': 'Genes in GTF format', 'type': [{'type': 'File'}], 'source_ids': ['rdf2gtf/gtf']}, {'id': 'transcripts', 'name': 'Transcripts', 'description': 'Transcripts fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2fasta/transcripts']}, {'id': 'proteins', 'name': 'Proteins', 'description': 'Proteins fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2fasta/proteins']}], 'steps': [{'id': 'rdf2gtf', 'name': 'RDF to GTF', 'description': 'Convert input RDF (turtle) file to GTF file', 'sink_ids': ['rdf2gtf/genomefasta', 'rdf2gtf/gtf']}, {'id': 'rdf2fasta', 'name': 'RDF to Fasta', 'description': 'Convert input RDF (turtle) file to Genome fasta file.', 'sink_ids': ['rdf2fasta/transcripts', 'rdf2fasta/proteins']}, {'id': 'STAR', 'name': 'STAR index', 'description': 'Creates STAR index with genome fasta and GTF file', 'sink_ids': ['STAR/STAR']}, {'id': 'bowtie2', 'name': 'bowtie2 index', 'description': 'Creates bowtie2 index with genome fasta', 'sink_ids': ['bowtie2/bowtie2']}, {'id': 'kallisto', 'name': 'kallisto index', 'description': 'Creates kallisto index with transcripts fasta file', 'sink_ids': ['kallisto/kallisto_indexFolder']}], 'links': [{'id': 'inputFile', 'source_id': 'inputFile', 'sink_id': 'rdf2gtf', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'inputFile', 'sink_id': 'rdf2fasta', 'name': None, 'default_value': None}, {'id': 'run_star', 'source_id': 'run_star', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2gtf/genomefasta', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'sjdbGTFfile', 'source_id': 'rdf2gtf/gtf', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'genomeSAindexNbases', 'source_id': 'genomeSAindexNbases', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2gtf/genomefasta', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2fasta/transcripts', 'sink_id': 'kallisto', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 75,
    "text_field": "['workflow_indexbuilder.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Indices builder from GBOL RDF (TTL)\ndoc: |\n    Workflow to build different indices for different tools from a genome and transcriptome. \n    \n    This workflow expects an (annotated) genome in GBOL ttl format.\n\n    Steps:\n      - SAPP: rdf2gtf (genome fasta)\n      - SAPP: rdf2fasta (transcripts fasta)\n      - STAR index (Optional for Eukaryotic origin)\n      - bowtie2 index\n      - kallisto index\n\noutputs:\n  STAR:\n    type: Directory\n    label: STAR\n    doc: STAR index folder\n    outputSource: STAR/STAR\n  bowtie2:\n    type: Directory\n    label: bowtie2\n    doc: bowtie2 index folder\n    outputSource: bowtie2/bowtie2\n  kallisto:\n    label: kallisto\n    doc: kallisto index folder\n    type: Directory\n    outputSource: kallisto/kallisto_indexFolder\n  genomefasta:\n    label: Genome fasta\n    doc: Genome fasta file\n    type: [File]\n    outputSource: [rdf2gtf/genomefasta]\n  gtf:\n    label: GTF\n    doc: Genes in GTF format\n    type: [File]\n    outputSource: [rdf2gtf/gtf]\n  transcripts:\n    label: Transcripts\n    doc: Transcripts fasta file\n    type: [File]\n    outputSource: [rdf2fasta/transcripts]\n  proteins:\n    label: Proteins\n    doc: Proteins fasta file\n    type: [File]\n    outputSource: [rdf2fasta/proteins]\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: maximum memory usage in megabytes\n    default: 4000\n  inputFile:\n    label: Input File\n    doc: Annotated genome in GBOL turtle file (.ttl) format\n    type: File\n    label: turtle file  \n  run_star:\n    label: Run STAR\n    doc: create STAR index for genome if true. (For genomes with exons)\n    type: boolean\n    default: false\n\n  genomeSAindexNbases:\n  # TODO calculate genomeSAindexNbases automatically per genome\n    type: int?\n    doc: For small genomes, the parameter --genomeSAindexNbases must be scaled down.\n    label: STAR parameter\n  \nsteps:\n  #########################################\n  # Workflow for SAPP rdf2gtf\n  rdf2gtf:\n    label: RDF to GTF\n    doc: Convert input RDF (turtle) file to GTF file\n    run: ../sapp/conversion_rdf2gtf.cwl\n    in:\n      inputFile: inputFile\n    out: [genomefasta,gtf]\n  #########################################\n  # Workflow for SAPP rdf2fasta\n  rdf2fasta:\n    label: RDF to Fasta\n    doc: Convert input RDF (turtle) file to Genome fasta file. \n    run: ../sapp/conversion_rdf2fasta.cwl\n    in:\n      inputFile: inputFile\n    out: [transcripts,proteins]\n  #########################################\n  # Workflow for STAR\n  STAR:\n    label: STAR index\n    doc: Creates STAR index with genome fasta and GTF file \n    when: $(inputs.run_star)\n    run: ../RNAseq/star/star_index.cwl\n    in:\n      run_star: run_star\n      inputFile: rdf2gtf/genomefasta\n      sjdbGTFfile: rdf2gtf/gtf\n      genomeSAindexNbases: genomeSAindexNbases\n      # TODO calculate genomeSAindexNbases automatically per genome\n    out: [STAR]\n  #########################################\n  # Workflow for bowtie2\n  bowtie2:\n   label: bowtie2 index\n   doc: Creates bowtie2 index with genome fasta\n   run: ../bowtie2/bowtie2_index.cwl\n   in:\n    inputFile: rdf2gtf/genomefasta\n   out: [bowtie2]\n\n  #########################################\n  # Workflow for kallisto\n  kallisto:\n   label: kallisto index\n   doc: Creates kallisto index with transcripts fasta file\n   run: ../RNAseq/kallisto/kallisto_index.cwl\n   in:\n    inputFile: rdf2fasta/transcripts\n   out: [kallisto_indexFolder]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow to build different indices for different tools from a genome and transcriptome. This workflow expects an (annotated) genome in GBOL ttl format. Steps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/75?version=1 Added/updated 1 files Views:2285Downloads:258 Created: 23rd Nov 2020 at 16:22 None Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 521,
    "discussion_links": "[{'id': '428', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "NonSpliced RNAseq workflow",
    "license": "CC0-1.0",
    "description": "Workflow for NonSpliced RNAseq data with multiple aligners.\n\nSteps:  \n    - workflow_quality.cwl:\n        - FastQC (control)\n        - fastp (trimming)\n    - bowtie2 (read mapping)\n    - sam_to_sorted-bam\n    - featurecounts (transcript read counts)\n    - kallisto (transcript [pseudo]counts)",
    "latest_version": 1,
    "tags": "['Alignment', 'bowtie2', 'featurecounts', 'kallisto', 'nonspliced']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/77?version=1', 'commit': '533f564586c3f2e4f924104184220bab21f3612d', 'ref': 'refs/heads/master', 'tree': '/workflows/77/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-11-24T11:05:56.000Z",
    "updated_at": "2023-01-16T13:46:21.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Max memory', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': 'Filer rRNA', 'description': 'Filter rRNA from reads if true', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'prefix_id', 'name': 'Filename prefix', 'description': 'Prefix of the output filenames.', 'type': [{'type': 'string'}], 'default_value': 'out'}, {'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bowtie2-indexfolder', 'name': 'bowtie2 index', 'description': 'Folder location of the bowtie2 index files.', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'kallisto-indexfolder', 'name': 'kallisto index', 'description': 'Folder location of the kallisto index file.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'gtf', 'name': 'GTF file', 'description': 'GTF file location', 'type': [{'type': 'File?'}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': 'FASTQC', 'description': 'Quality reporting by FASTQC', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_fastqc']}, {'id': 'files_to_folder_filtered', 'name': 'Filtered reads folder', 'description': 'Output folder with filtered reads.', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_filtered']}, {'id': 'files_to_folder_bowtie2', 'name': 'bowtie2 output', 'description': 'bowtie2 mapping results folder. Contains sorted bam file, metrics file and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['bowtie2_files_to_folder/results']}, {'id': 'files_to_folder_featurecounts', 'name': 'FeatureCounts output', 'description': 'FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['featurecounts_files_to_folder/results']}, {'id': 'files_to_folder_kallisto', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['quality/files_to_folder_fastqc', 'quality/files_to_folder_filtered', 'quality/QC_forward_reads', 'quality/QC_reverse_reads']}, {'id': 'bowtie2', 'name': 'bowtie2', 'description': 'runs bowtie2 alignment on the genome with the quality filtered reads.', 'sink_ids': ['bowtie2/sam', 'bowtie2/metricsfile', 'bowtie2/bowtie2_stats']}, {'id': 'sam_to_sorted-bam', 'name': 'sam to sorted bam', 'description': 'Converts a SAM file to a sorted BAM file', 'sink_ids': ['sam_to_sorted-bam/sortedbam']}, {'id': 'featurecounts', 'name': 'FeatureCounts', 'description': 'Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.', 'sink_ids': ['featurecounts/readcounts', 'featurecounts/summary', 'featurecounts/overview']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.h5', 'kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'bowtie2_files_to_folder', 'name': 'bowtie2 output', 'description': 'Preparation of bowtie2 output files to a specific output folder', 'sink_ids': ['bowtie2_files_to_folder/results']}, {'id': 'featurecounts_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of FeatureCounts output files to a specific output folder', 'sink_ids': ['featurecounts_files_to_folder/results']}, {'id': 'kallisto_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix_id', 'source_id': 'prefix_id', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'bowtie2-indexfolder', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'bowtie2/sam', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'sam_to_sorted-bam/sortedbam', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'kallisto-indexfolder', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'sam_to_sorted-bam/sortedbam', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'bowtie2/metricsfile', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'bowtie2/bowtie2_stats', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': 'Step_3_bowtie2-alignment'}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/readcounts', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/summary', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/overview', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': 'Step_4_FeatureCounts'}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.h5', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': 'Step_5_Kallisto'}]}",
    "tools": [],
    "id": 77,
    "text_field": "['workflow_RNAseq_NonSpliced.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: NonSpliced RNAseq workflow\ndoc: | \n  Workflow for NonSpliced RNAseq data alignment with multiple aligners.\n  Steps:  \n      - workflow_quality.cwl:\n          - FastQC (control)\n          - fastp (trimming)\n      - bowtie2 (read mapping)\n      - sam_to_sorted-bam\n      - featurecounts (transcript read counts)\n      - kallisto (transcript [pseudo]counts)\n\noutputs:\n  files_to_folder_fastqc:\n    type: Directory\n    label: FASTQC\n    doc: Quality reporting by FASTQC\n    outputSource: quality/files_to_folder_fastqc\n  files_to_folder_filtered:\n    label: Filtered reads folder\n    doc: Output folder with filtered reads.\n    type: Directory\n    outputSource: quality/files_to_folder_filtered\n  files_to_folder_bowtie2:\n    type: Directory\n    label: bowtie2 output\n    doc: bowtie2 mapping results folder. Contains sorted bam file, metrics file and mapping statistics (stdout).\n    outputSource: bowtie2_files_to_folder/results\n  files_to_folder_featurecounts:\n    type: Directory\n    label: FeatureCounts output\n    doc: FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).\n    outputSource: featurecounts_files_to_folder/results\n  files_to_folder_kallisto:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: Max memory\n    default: 4000\n  filter_rrna:\n    type: boolean\n    label: Filer rRNA\n    doc: Filter rRNA from reads if true\n    default: false\n  prefix_id:\n    type: string\n    label: Filename prefix\n    doc: Prefix of the output filenames.\n    default: out\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File\n    doc: reverse sequence file locally\n    label: reverse reads\n  bowtie2-indexfolder:\n    type: Directory\n    label:  bowtie2 index\n    doc: Folder location of the bowtie2 index files.\n  kallisto-indexfolder:\n    type: Directory?\n    label: kallisto index\n    doc: Folder location of the kallisto index file.\n  gtf:\n    type: File?\n    label: GTF file\n    doc: GTF file location\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering using fastqc, fastp and optionally bbduk\n  quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    in:\n      filter_rrna: filter_rrna\n      prefix_id: prefix_id\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      threads: threads\n      memory: memory\n    run: ../workflows/workflow_quality.cwl\n    out: [files_to_folder_fastqc, files_to_folder_filtered, QC_forward_reads, QC_reverse_reads]\n  #########################################\n  # bowtie2 alignment\n  bowtie2:\n    label: bowtie2\n    doc: runs bowtie2 alignment on the genome with the quality filtered reads.\n    in:\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: bowtie2-indexfolder\n      threads: threads\n    run: ../bowtie2/bowtie2_align_simple.cwl\n    out:     \n      [sam, metricsfile,bowtie2_stats]\n  #########################################\n  # convert sam file to sorted bam file\n  sam_to_sorted-bam:\n    label: sam to sorted bam\n    doc: Converts a SAM file to a sorted BAM file\n    in:\n      prefix: \n       source: prefix_id\n       valueFrom: $(self+\"_bowtie2\")\n      sam: bowtie2/sam\n      threads: threads\n    run: ../samtools/sam_to_sorted-bam.cwl\n    out: \n      [sortedbam]\n  #########################################\n  # Feature counts with GTF file and with bowtie2 mapped output\n  featurecounts:\n    label: FeatureCounts\n    doc: Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.\n    when: $(inputs.gtf != undefined)\n    run: ../RNAseq/featurecounts.cwl\n    in:\n      prefix: prefix_id\n      bam: sam_to_sorted-bam/sortedbam\n      gtf: gtf\n      threads: threads\n    out: \n      [readcounts, summary, overview]\n\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    when: $(inputs.gtf != undefined)\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    in:\n      gtf: gtf\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: kallisto-indexfolder\n      threads: threads\n    out:\n      [abundance.h5, abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  bowtie2_files_to_folder:\n    label: bowtie2 output\n    doc: Preparation of bowtie2 output files to a specific output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [sam_to_sorted-bam/sortedbam, bowtie2/metricsfile, bowtie2/bowtie2_stats]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_3_bowtie2-alignment\"\n    out:\n      [results]\n  featurecounts_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of FeatureCounts output files to a specific output folder\n    when: $(inputs.gtf != undefined)\n    run: ../expressions/files_to_folder.cwl\n    in:\n      gtf: gtf\n      files: \n        source: [featurecounts/readcounts, featurecounts/summary, featurecounts/overview]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        default: \"Step_4_FeatureCounts\"\n    out:\n      [results]\n  kallisto_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of kallisto output files to a specific output folder\n    when: $(inputs.gtf != undefined)\n    run: ../expressions/files_to_folder.cwl\n    in:\n      gtf: gtf\n      files: \n        source: [kallisto/abundance.h5, kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_5_Kallisto\"\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for NonSpliced RNAseq data with multiple aligners. Steps:- workflow_quality.cwl:\n- FastQC (control)\n- fastp (trimming)\n- bowtie2 (read mapping)\n- sam_to_sorted-bam\n- featurecounts (transcript read counts)\n- kallisto (transcript [pseudo]counts) Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/77?version=1 Added/updated 1 files Views:2574Downloads:292 Created: 24th Nov 2020 at 11:05 Last updated: 8th Jun 2021 at 08:32 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 522,
    "discussion_links": "[{'id': '427', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Spliced RNAseq workflow",
    "license": "CC0-1.0",
    "description": "Workflow for Spliced RNAseq data\n**Steps:**\n\n* workflow_quality.cwl:\n\t* FastQC (Read Quality Control)\n\t* fastp (Read Trimming)\n* STAR (Read mapping)\n* featurecounts (transcript read counts)\n* kallisto (transcript [pseudo]counts)",
    "latest_version": 1,
    "tags": "['RNASEQ', 'STAR', 'kallisto', 'rna', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/95?version=1', 'commit': '168dee2311b3378831943d3ab3c047e41b86537d', 'ref': 'refs/heads/master', 'tree': '/workflows/95/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-12-22T15:53:49.000Z",
    "updated_at": "2023-01-16T13:46:30.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'maximum memory usage in megabytes', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'prefix_id', 'name': None, 'description': 'prefix of the filename outputs', 'type': [{'type': 'string'}], 'default_value': 'out'}, {'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'STAR-indexfolder', 'name': 'folder where the STAR indices are', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'kallisto-indexfolder', 'name': 'folder where the kallisto indices are', 'description': None, 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'gtf', 'name': None, 'description': 'gtf file', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'quantMode', 'name': None, 'description': 'Run with get gene quantification', 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['None', 'TranscriptomeSAM', 'GeneCounts']}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': 'FASTQC', 'description': 'Quality reporting by FASTQC', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_fastqc']}, {'id': 'files_to_folder_filtered', 'name': 'Filtered reads folder', 'description': 'Output folder with filtered reads.', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_filtered']}, {'id': 'files_to_folder_STAR', 'name': 'STAR output folder', 'description': 'STAR results folder. Contains logs, bam file, readcounts per gene and splice_junctions.', 'type': [{'type': 'Directory'}], 'source_ids': ['STAR_files_to_folder/results']}, {'id': 'files_to_folder_featurecounts', 'name': 'FeatureCounts output', 'description': 'FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['featurecounts_files_to_folder/results']}, {'id': 'files_to_folder_kallisto', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['quality/files_to_folder_fastqc', 'quality/files_to_folder_filtered', 'quality/QC_forward_reads', 'quality/QC_reverse_reads']}, {'id': 'STAR', 'name': 'STAR', 'description': 'runs STAR alignment on the genome with the quality filtered reads.', 'sink_ids': ['STAR/bam', 'STAR/log_file', 'STAR/final_log_file', 'STAR/reads_per_gene', 'STAR/splice_junctions']}, {'id': 'featurecounts', 'name': 'FeatureCounts', 'description': 'Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.', 'sink_ids': ['featurecounts/readcounts', 'featurecounts/summary', 'featurecounts/overview']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.h5', 'kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'STAR_files_to_folder', 'name': 'STAR output', 'description': 'Preparation of STAR output files to a specific output folder', 'sink_ids': ['STAR_files_to_folder/results']}, {'id': 'featurecounts_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of FeatureCounts output files to a specific output folder', 'sink_ids': ['featurecounts_files_to_folder/results']}, {'id': 'kallisto_files_to_folder', 'name': 'kallisto output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix_id', 'source_id': 'prefix_id', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'OutFileNamePrefix', 'source_id': 'prefix_id', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'genomeDir', 'source_id': 'STAR-indexfolder', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'sjdbGTFfile', 'source_id': 'gtf', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'quantMode', 'source_id': 'quantMode', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'STAR/bam', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'kallisto-indexfolder', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/bam', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/log_file', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/final_log_file', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/reads_per_gene', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/splice_junctions', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': 'Step_3_STAR-alignment'}, {'id': 'files', 'source_id': 'featurecounts/readcounts', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/summary', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/overview', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': 'Step_4_FeatureCounts'}, {'id': 'files', 'source_id': 'kallisto/abundance.h5', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': 'Step_5_Kallisto'}]}",
    "tools": [],
    "id": 95,
    "text_field": "['workflow_RNAseq_Spliced.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Spliced RNAseq workflow\ndoc: | \n  Workflow for Spliced RNAseq data\n  Steps:  \n      - workflow_quality.cwl:\n          - FastQC (Read Quality Control)\n          - fastp (Read Trimming)\n      - STAR (Read mapping)\n      - featurecounts (transcript read counts)\n      - kallisto (transcript [pseudo]counts)\n\noutputs:\n  files_to_folder_fastqc:\n    type: Directory\n    label: FASTQC\n    doc: Quality reporting by FASTQC\n    outputSource: quality/files_to_folder_fastqc\n  files_to_folder_filtered:\n    type: Directory\n    label: Filtered reads folder\n    doc: Output folder with filtered reads.\n    outputSource: quality/files_to_folder_filtered\n  files_to_folder_STAR:\n    type: Directory\n    label: STAR output folder\n    doc: STAR results folder. Contains logs, bam file, readcounts per gene and splice_junctions.\n    outputSource: STAR_files_to_folder/results\n  files_to_folder_featurecounts:\n    type: Directory\n    label: FeatureCounts output\n    doc: FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).\n    outputSource: featurecounts_files_to_folder/results\n  files_to_folder_kallisto:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: maximum memory usage in megabytes\n    default: 4000\n  filter_rrna:\n    type: boolean\n    default: true\n  prefix_id:\n    type: string\n    doc: prefix of the filename outputs\n    default: out\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File\n    doc: reverse sequence file locally\n    label: reverse reads\n\n  STAR-indexfolder: \n    type: Directory\n    label: folder where the STAR indices are\n  kallisto-indexfolder:\n    type: Directory?\n    label: folder where the kallisto indices are\n\n  gtf:\n    type: File\n    format: http://edamontology.org/format_2306 # GTF\n    doc: gtf file\n\n  quantMode:\n    type:\n     - \"null\"\n     - type: enum\n       symbols:\n        - None\n        - TranscriptomeSAM\n        - GeneCounts\n    doc: Run with get gene quantification\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering using fastqc, fastp and optionally bbduk\n  quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    in:\n      filter_rrna: filter_rrna\n      prefix_id: prefix_id\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      threads: threads\n      memory: memory\n    run: ../workflows/workflow_quality.cwl\n    out: [files_to_folder_fastqc, files_to_folder_filtered, QC_forward_reads, QC_reverse_reads]\n  #########################################\n  # STAR alignment\n  STAR:\n    label: STAR\n    doc: runs STAR alignment on the genome with the quality filtered reads.\n    in:\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n\n      OutFileNamePrefix:\n        source: prefix_id\n        valueFrom: $(self+\"_\")\n      genomeDir: STAR-indexfolder\n      sjdbGTFfile: gtf\n      quantMode: quantMode\n   \n      memory: memory\n      threads: threads\n    run: ../RNAseq/star/star_align.cwl\n    out: \n      [bam, log_file,final_log_file, reads_per_gene, splice_junctions]\n  #########################################\n  # FeatureCounts\n  featurecounts:\n    label: FeatureCounts\n    doc: Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.\n    in:\n      prefix: prefix_id\n      bam: STAR/bam\n      gtf: gtf\n      threads: threads\n    run: ../RNAseq/featurecounts.cwl\n    out: \n      [readcounts, summary, overview]\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    in:\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: kallisto-indexfolder\n      threads: threads\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    out:\n      [abundance.h5, abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  STAR_files_to_folder:\n    label: STAR output\n    doc: Preparation of STAR output files to a specific output folder\n    in:\n      files: \n        source: [STAR/bam, STAR/log_file, STAR/final_log_file, STAR/reads_per_gene, STAR/splice_junctions]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_3_STAR-alignment\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n\n  featurecounts_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of FeatureCounts output files to a specific output folder    \n    in:\n      files: \n        source: [featurecounts/readcounts, featurecounts/summary, featurecounts/overview]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_4_FeatureCounts\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n\n  kallisto_files_to_folder:\n    label: kallisto output\n    doc: Preparation of kallisto output files to a specific output folder\n    in:\n      files: \n        source: [kallisto/abundance.h5, kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_5_Kallisto\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for Spliced RNAseq dataSteps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/95?version=1 Added/updated 1 files Views:2446Downloads:296 Created: 22nd Dec 2020 at 15:53 Last updated: 8th Jun 2021 at 13:31 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 523,
    "discussion_links": [],
    "title": "Example of setting up a simulation system",
    "license": "Apache-2.0",
    "description": "CWL version of the md_list.cwl workflow for HPC.",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 2, 'revision_comments': 'Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows)', 'url': 'https://workflowhub.eu/workflows/98?version=2', 'commit': '9a5aab77d77ec7eac06516395d371a610c323e0a', 'ref': 'refs/heads/master', 'tree': '/workflows/98/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows)",
    "created_at": "2021-01-29T16:56:33.000Z",
    "updated_at": "2023-01-16T13:46:36.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'dir', 'name': 'whole workflow output', 'description': 'outputs from the whole workflow, containing these optional files:\\nstep14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\\nstep14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\\nstep14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\\n                                   simulation from the last step of the setup process.\\nstep13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\\n                                   of the simulation, the molecular topology and all the simulation parameters.\\nstep5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\\n                                   readable format.\\n', 'type': [{'type': 'Directory'}], 'source_ids': ['step15_gather_outputs/project_work_dir']}], 'steps': [{'id': 'step1_pdb2gmx', 'name': 'Create Protein System Topology', 'description': None, 'sink_ids': ['step1_pdb2gmx/output_gro_file', 'step1_pdb2gmx/output_top_zip_file']}, {'id': 'step2_editconf', 'name': 'Create Solvent Box', 'description': None, 'sink_ids': ['step2_editconf/output_gro_file']}, {'id': 'step3_solvate', 'name': 'Fill the Box with Water Molecules', 'description': None, 'sink_ids': ['step3_solvate/output_gro_file', 'step3_solvate/output_top_zip_file']}, {'id': 'step4_grompp_genion', 'name': 'Add Ions - part 1', 'description': None, 'sink_ids': ['step4_grompp_genion/output_tpr_file']}, {'id': 'step5_genion', 'name': 'Add Ions - part 2', 'description': None, 'sink_ids': ['step5_genion/output_gro_file', 'step5_genion/output_top_zip_file']}, {'id': 'step6_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': None, 'sink_ids': ['step6_grompp_min/output_tpr_file']}, {'id': 'step7_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': None, 'sink_ids': ['step7_mdrun_min/output_trr_file', 'step7_mdrun_min/output_gro_file', 'step7_mdrun_min/output_edr_file', 'step7_mdrun_min/output_log_file']}, {'id': 'step8_make_ndx', 'name': 'Generate GROMACS index file', 'description': None, 'sink_ids': ['step8_make_ndx/output_ndx_file']}, {'id': 'step9_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': None, 'sink_ids': ['step9_grompp_nvt/output_tpr_file']}, {'id': 'step10_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': None, 'sink_ids': ['step10_mdrun_nvt/output_trr_file', 'step10_mdrun_nvt/output_gro_file', 'step10_mdrun_nvt/output_edr_file', 'step10_mdrun_nvt/output_log_file', 'step10_mdrun_nvt/output_cpt_file']}, {'id': 'step11_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': None, 'sink_ids': ['step11_grompp_npt/output_tpr_file']}, {'id': 'step12_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': None, 'sink_ids': ['step12_mdrun_npt/output_trr_file', 'step12_mdrun_npt/output_gro_file', 'step12_mdrun_npt/output_edr_file', 'step12_mdrun_npt/output_log_file', 'step12_mdrun_npt/output_cpt_file']}, {'id': 'step13_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': None, 'sink_ids': ['step13_grompp_md/output_tpr_file']}, {'id': 'step14_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': None, 'sink_ids': ['step14_mdrun_md/output_trr_file', 'step14_mdrun_md/output_gro_file', 'step14_mdrun_md/output_edr_file', 'step14_mdrun_md/output_log_file', 'step14_mdrun_md/output_cpt_file']}, {'id': 'step15_gather_outputs', 'name': 'Archiving outputs to be returned to user', 'description': None, 'sink_ids': ['step15_gather_outputs/project_work_dir']}], 'links': [{'id': 'input_pdb_path', 'source_id': 'step1_pdb_file', 'sink_id': 'step1_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step1_pdb2gmx/output_gro_file', 'sink_id': 'step2_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step2_editconf/output_gro_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step1_pdb2gmx/output_top_zip_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_grompp_genion_config', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_solvate/output_gro_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_genion_config', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step4_grompp_genion/output_tpr_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_grompp_min_config', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_genion/output_gro_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_min/output_tpr_file', 'sink_id': 'step7_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_make_ndx_config', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_nvt_config', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_nvt/output_tpr_file', 'sink_id': 'step10_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_npt_config', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_nvt/output_gro_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step10_mdrun_nvt/output_cpt_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_npt/output_tpr_file', 'sink_id': 'step12_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_md_config', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_npt/output_gro_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_npt/output_cpt_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_mdrun_md_config', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'external_project_file', 'source_id': 'step1_pdb_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_trr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_gro_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_cpt_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 98,
    "text_field": "['1_md_list.cwl', 'graph.svg', 'md_list.cwl']",
    "raw_text_content": "<!DOCTYPE html>\n\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing,\n  ~ software distributed under the License is distributed on an\n  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  ~ KIND, either express or implied.  See the License for the\n  ~ specific language governing permissions and limitations\n  ~ under the License.\n  -->\n\n<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:site\" content=\"@commonwl\" />\n    <meta name=\"twitter:title\" content=\"CWL Workflow: Example of setting up a simulation system\" />\n    <meta name=\"twitter:description\" content=\"CWL version of the md_list.cwl workflow for HPC.\n\" />\n    <meta name=\"twitter:image\" content=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" />\n    <title>Example of setting up a simulation system - Common Workflow Language Viewer</title>\n    <link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main-20180518.css\" />\n</head>\n<body>\n\n<nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container\">\n        <div class=\"navbar-header\">\n            <a href=\"/\" class=\"navbar-left\">\n                <img id=\"logo\" src=\"/img/CWL-Logo-nofonts.svg\" />\n            </a>\n            <a href=\"/workflows\" class=\"button navbar-toggle\">Explore</a>\n            <a href=\"/apidocs\" class=\"button navbar-toggle\">API</a>\n            <a href=\"/about\" class=\"button navbar-toggle\">About</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li><a href=\"/about\">About</a></li>\n                <li><a href=\"/apidocs\">API</a></li>\n                <li><a href=\"/workflows\">Explore</a></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n\n<!-- Modal for viewing DOT graph -->\n<div class=\"modal fade\" id=\"dotGraph\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dotGraphLabel\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                <h4 class=\"modal-title\" id=\"dotGraphLabel\">Workflow DOT Graph</h4>\n            </div>\n            <div class=\"modal-body\">\n                <h4 id=\"modalTitle\">Dot File Source:</h4>\n<textarea id=\"dot\" class=\"form-control\" rows=\"15\" name=\"visualisationDot\">\ndigraph workflow {\n  graph [\n    bgcolor = &quot;#eeeeee&quot;\n    color = &quot;black&quot;\n    fontsize = &quot;10&quot;\n    labeljust = &quot;left&quot;\n    clusterrank = &quot;local&quot;\n    ranksep = &quot;0.22&quot;\n    nodesep = &quot;0.05&quot;\n  ]\n  node [\n    fontname = &quot;Helvetica&quot;\n    fontsize = &quot;10&quot;\n    fontcolor = &quot;black&quot;\n    shape = &quot;record&quot;\n    height = &quot;0&quot;\n    width = &quot;0&quot;\n    color = &quot;black&quot;\n    fillcolor = &quot;lightgoldenrodyellow&quot;\n    style = &quot;filled&quot;\n  ];\n  edge [\n    fontname=&quot;Helvetica&quot;\n    fontsize=&quot;8&quot;\n    fontcolor=&quot;black&quot;\n    color=&quot;black&quot;\n    arrowsize=&quot;0.7&quot;\n  ];\n  subgraph cluster_inputs {\n    rank = &quot;same&quot;;\n    style = &quot;dashed&quot;;\n    label = &quot;Workflow Inputs&quot;;\n    &quot;step6_grompp_min_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step6_grompp_min_config&quot;];\n    &quot;step5_genion_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step5_genion_config&quot;];\n    &quot;step9_grompp_nvt_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step9_grompp_nvt_config&quot;];\n    &quot;step11_grompp_npt_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step11_grompp_npt_config&quot;];\n    &quot;step13_grompp_md_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step13_grompp_md_config&quot;];\n    &quot;step14_mdrun_md_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step14_mdrun_md_config&quot;];\n    &quot;step8_make_ndx_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step8_make_ndx_config&quot;];\n    &quot;step2_editconf_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step2_editconf_config&quot;];\n    &quot;step4_grompp_genion_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step4_grompp_genion_config&quot;];\n    &quot;step1_pdb_file&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step1_pdb_file&quot;];\n  }\n  subgraph cluster_outputs {\n    rank = &quot;same&quot;;\n    style = &quot;dashed&quot;;\n    labelloc = &quot;b&quot;;\n    label = &quot;Workflow Outputs&quot;;\n    &quot;dir&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;whole workflow output&quot;];\n  }\n  &quot;step14_mdrun_md&quot; [label=&quot;step14_mdrun_md&quot;];\n  &quot;step11_grompp_npt&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step6_grompp_min&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step5_genion&quot; [label=&quot;step5_genion&quot;];\n  &quot;step15_gather_outputs&quot; [label=&quot;step15_gather_outputs&quot;];\n  &quot;step13_grompp_md&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step3_solvate&quot; [label=&quot;step3_solvate&quot;];\n  &quot;step10_mdrun_nvt&quot; [label=&quot;step10_mdrun_nvt&quot;];\n  &quot;step8_make_ndx&quot; [label=&quot;step8_make_ndx&quot;];\n  &quot;step7_mdrun_min&quot; [label=&quot;step7_mdrun_min&quot;];\n  &quot;step9_grompp_nvt&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step4_grompp_genion&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step12_mdrun_npt&quot; [label=&quot;step12_mdrun_npt&quot;];\n  &quot;step1_pdb2gmx&quot; [label=&quot;step1_pdb2gmx&quot;];\n  &quot;step2_editconf&quot; [label=&quot;step2_editconf&quot;];\n  &quot;step13_grompp_md&quot; -&gt; &quot;step14_mdrun_md&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step14_mdrun_md_config&quot; -&gt; &quot;step14_mdrun_md&quot; [label=&quot;config&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step10_mdrun_nvt&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step10_mdrun_nvt&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_cpt_path&quot;];\n  &quot;step11_grompp_npt_config&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;config&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step6_grompp_min_config&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;config&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step5_genion&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step5_genion_config&quot; -&gt; &quot;step5_genion&quot; [label=&quot;config&quot;];\n  &quot;step4_grompp_genion&quot; -&gt; &quot;step5_genion&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step13_grompp_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step1_pdb_file&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_project_file&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step13_grompp_md_config&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;config&quot;];\n  &quot;step12_mdrun_npt&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step12_mdrun_npt&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_cpt_path&quot;];\n  &quot;step1_pdb2gmx&quot; -&gt; &quot;step3_solvate&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step2_editconf&quot; -&gt; &quot;step3_solvate&quot; [label=&quot;input_solute_gro_path&quot;];\n  &quot;step9_grompp_nvt&quot; -&gt; &quot;step10_mdrun_nvt&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step8_make_ndx_config&quot; -&gt; &quot;step8_make_ndx&quot; [label=&quot;config&quot;];\n  &quot;step7_mdrun_min&quot; -&gt; &quot;step8_make_ndx&quot; [label=&quot;input_structure_path&quot;];\n  &quot;step6_grompp_min&quot; -&gt; &quot;step7_mdrun_min&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step7_mdrun_min&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step9_grompp_nvt_config&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;config&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step4_grompp_genion_config&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;config&quot;];\n  &quot;step11_grompp_npt&quot; -&gt; &quot;step12_mdrun_npt&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step1_pdb_file&quot; -&gt; &quot;step1_pdb2gmx&quot; [label=&quot;input_pdb_path&quot;];\n  &quot;step1_pdb2gmx&quot; -&gt; &quot;step2_editconf&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step15_gather_outputs&quot; -&gt; &quot;dir&quot;;\n}\n</textarea>\n                <a id=\"download-link-dot\" href=\"\" download=\"workflow.dot\"></a>\n                <button id=\"download-dot\" class=\"btn btn-primary\" type=\"button\">Download dot File</button>\n                <a href=\"/graph/xdot/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" download=\"graph.dot\" class=\"btn btn-primary\" type=\"button\">Download xdot File</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal for viewing the graph in full screen -->\n<div class=\"modal fade\" id=\"fullScreenGraphModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"fullScreenGraphLabel\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                <h4 class=\"modal-title\" id=\"fullScreenGraphLabel\">Workflow Graph</h4>\n            </div>\n            <div class=\"modal-body\">\n                <span id=\"fullscreen-close\" data-dismiss=\"modal\" class=\"close glyphicon glyphicon-resize-small graphControl\" data-tooltip=\"true\" title=\"Close\"></span>\n                <object id=\"graphFullscreen\" type=\"image/svg+xml\" data=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">\n                    <img alt=\"fullscreen\" src=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" />\n                </object>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container\" role=\"main\" id=\"main\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Workflow: <span>Example of setting up a simulation system</span></h2>\n        </div>\n        <div class=\"col-md-6\">\n            <a href=\"https://github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" rel=\"noopener\" target=\"_blank\" style=\"text-decoration:none;\">\n                <img id=\"gitLogo\" src=\"/img/GitHub-Mark-32px.png\" width=\"24\" height=\"24\" />\n                \n            </a>\n        <i>Fetched <span>2021-01-29 13:47:55 GMT</span></i>\n          <span class=\"hidden-print hidden-sm hidden-xs\">\n                \n            <span id=\"generating\" class=\"hide\"> - Generating download link <img alt=\"loading\" src=\"/img/loading.svg\" width=\"20\" height=\"20\" /></span>\n            <span id=\"generated\">\n                    - <a id=\"download\" href=\"/robundle/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" download=\"bundle.zip\">Download as Research Object Bundle</a>\n                    <a href=\"http://www.researchobject.org/\" rel=\"noopener\" class=\"help\" target=\"_blank\">[?]</a>\n                </span>\n          </span>\n        </div>\n        <div class=\"col-md-6 text-right hidden-xs\">\n            <img class=\"verification_icon\" src=\"/img/tick.svg\" width=\"20\" height=\"22\" /> Verified with cwltool version <samp>3.0.20201203173111</samp>\n        </div>\n\n        <div class=\"col-md-12\" style=\"margin-top:5px;\">\n            <p id=\"workflow-doc\">CWL version of the md_list.cwl workflow for HPC.\n</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-9 col-md-8 col-sm-6\">\n                <div class=\"permalink hidden-sm hidden-xs hidden-print\">\n                        Permalink:\n                          <a href=\"https://w3id.org/cwl/view/\" rel=\"noopener\" class=\"help\" target=\"_blank\">[?]</a>\n                          <a id=\"permalink\" href=\"https://w3id.org/cwl/view/git/95111f381617c8e63794eca42d06f10ed2605f4f/md_list.cwl\">https://w3id.org/cwl/view/git/95111f381617c8e63794eca42d06f10ed2605f4f/md_list.cwl</a>\n                </div>\n\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 hidden-xs\">\n            <div class=\"graph-menu hidden-print\" id=\"pull-right\">\n                <button id=\"view-dot\" class=\"hidden-print hidden-sm-down btn btn-primary\" type=\"button\" data-toggle=\"modal\" data-target=\"#dotGraph\">View DOT</button>\n                <div class=\"btn-group hidden-print\">\n                    <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Download Image <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                        <li><a id=\"download-graph\" download=\"graph.svg\" href=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">As .svg</a></li>\n                        <li><a id=\"download-graph\" download=\"graph.png\" href=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">As .png</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div id=\"visualisation\" class=\"jumbotron hidden-print\">\n                <span id=\"fullscreen-open\" data-toggle=\"modal\" data-target=\"#fullScreenGraphModal\" data-tooltip=\"true\" class=\"glyphicon glyphicon-resize-full graphControl\" title=\"Expand\"></span>\n                <img id=\"selectChildren\" class=\"graphControl\" src=\"/img/children-logo.svg\" alt=\"children\" data-tooltip=\"true\" title=\"Select All Children\" />\n                <img id=\"selectParents\" class=\"graphControl\" src=\"/img/parents-logo.svg\" alt=\"parents\" data-tooltip=\"true\" title=\"Select All Parents\" />\n                <div id=\"graph\" data-svgurl=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\"></div>\n            </div>\n            <img alt=\"Workflow as SVG\" src=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" class=\"visible-print-block\" />\n            <ul class=\"legend\">\n                <li><span class=\"selectednode hidden-print\"></span> Selected</li>\n                <li class=\"hidden-xs\">|</li>\n                <li><span class=\"defaults\"></span> Default Values</li>\n                <li><span class=\"nestedworkflows\"></span> Nested Workflows</li>\n                <li><span class=\"tools\"></span> Tools</li>\n                <li><span class=\"inputoutputs\"></span> Inputs/Outputs</li>\n            </ul>\n            \n            <div class=\"alert alert-success\" role=\"alert\">\n            \t<span class=\"hidden-xs\">This workflow is Open Source and may be reused according to the terms of:</span>\n            \t<a href=\"https://raw.githubusercontent.com/douglowe/biobb_hpc_cwl_md_list/main/LICENSE\" class=\"alert-link\">\n        \t\t\t\t\t\t\n        \t\t\t\t\t\t\t<!-- TODO: Move license 'registry' to controller? -->\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\thttps://raw.githubusercontent.com/douglowe/biobb_hpc_cwl_md_list/main/LICENSE\n        \t\t\t\t\t\t\n\t\t\t\t</a>\n\t\t\t\t<div class=\"hidden-xs\"><small>Note that the <em>tools</em> invoked by the workflow may have separate licenses.</small></div>\n\t\t\t</div>\n\t\t\t\n            <h2>Inputs</h2>\n            \n            <div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped table-hover input\">\n                        <thead>\n                            <th>ID</th>\n                            <th>Type</th>\n                            <th>Title</th>\n                            <th>Doc</th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"id\">step5_genion_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step11_grompp_npt_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step13_grompp_md_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step14_mdrun_md_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step2_editconf_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step4_grompp_genion_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step1_pdb_file</td>\n                                <td class=\"type\">\n                                    \n                                    <span>File</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step8_make_ndx_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step6_grompp_min_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step9_grompp_nvt_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <h2>Steps</h2>\n            \n            <div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped table-hover steps\">\n                        <thead>\n\t                        <th>ID</th>\n\t                        <th>Runs</th>\n\t                        <th>Label</th>\n\t                        <th>Doc</th>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td class=\"id\">step2_editconf</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/editconf.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step5_genion</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/genion.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step13_grompp_md</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step12_mdrun_npt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step10_mdrun_nvt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step15_gather_outputs</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>md_gather.cwl</span>\n                                    (<span>ExpressionTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                <p>This javascript takes two inputs, a list of \nfiles, a project file, and an optional string. \nIt will create a directory named after the \nproject file and optional string, populate\nthat directory with the files in the list, and\nreturn the directory.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step7_mdrun_min</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step8_make_ndx</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/make_ndx.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step1_pdb2gmx</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/pdb2gmx.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step4_grompp_genion</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step6_grompp_min</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step11_grompp_npt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)",
    "p_tag_content": "CWL version of the md_list.cwl workflow for HPC. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/98?version=2 Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows) Views:1707Downloads:352 Created: 29th Jan 2021 at 16:37 Last updated: 29th Jan 2021 at 16:56 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 532,
    "discussion_links": [],
    "title": "VariantCaller_GATK3.6",
    "license": "Apache-2.0",
    "description": "Rare disease researchers workflow is that they submit their raw data (fastq), run the mapping and variant calling RD-Connect pipeline and obtain unannotated gvcf files to further submit to the RD-Connect GPAP or analyse on their own.\n\nThis demonstrator focuses on the variant calling pipeline. The raw genomic data is processed using the RD-Connect pipeline ([Laurie et al., 2016](https://www.ncbi.nlm.nih.gov/pubmed/27604516)) running on the standards (GA4GH) compliant, interoperable container orchestration platform.\n\nThis demonstrator will be aligned with the current implementation study on [Development of Architecture for Software Containers at ELIXIR and its use by EXCELERATE use-case communities](docs/Appendix%201%20-%20Project%20Plan%202018-biocontainers%2020171117.pdf) \n\nFor this implementation, different steps are required:\n\n1. Adapt the pipeline to CWL and dockerise elements \n2. Align with IS efforts on software containers to package the different components (Nextflow) \n3. Submit trio of Illumina NA12878 Platinum Genome or Exome to the GA4GH platform cloud (by Aspera or ftp server)\n4. Run the RD-Connect pipeline on the container platform\n5. Return corresponding gvcf files\n6. OPTIONAL: annotate and update to RD-Connect playground instance\n\nN.B: The demonstrator might have some manual steps, which will not be in production. \n\n## RD-Connect pipeline\n\nDetailed information about the RD-Connect pipeline can be found in [Laurie et al., 2016](https://www.ncbi.nlm.nih.gov/pubmed/?term=27604516)\n\n![alt text](https://raw.githubusercontent.com/inab/Wetlab2Variations/eosc-life/docs/RD-Connect_pipeline.jpg)\n\n## The applications\n\n**1\\. Name of the application: Adaptor removal**\nFunction: remove sequencing adaptors   \nContainer (readiness status, location, version): [cutadapt (v.1.18)](https://hub.docker.com/r/cnag/cutadapt)  \nRequired resources in cores and RAM: current container size 169MB  \nInput data (amount, format, directory..): raw fastq  \nOutput data: paired fastq without adaptors  \n\n**2\\. Name of the application: Mapping and bam sorting**  \nFunction: align data to reference genome  \nContainer : [bwa-mem (v.0.7.17)](https://hub.docker.com/r/cnag/bwa) / [Sambamba (v. 0.6.8 )](https://hub.docker.com/r/cnag/sambamba)(or samtools)  \nResources :current container size 111MB / 32MB  \nInput data: paired fastq without adaptors  \nOutput data: sorted bam  \n\n**3\\. Name of the application: MarkDuplicates**  \nFunction: Mark (and remove) duplicates  \nContainer: [Picard (v.2.18.25)](https://hub.docker.com/r/cnag/picard)\nResources: current container size 261MB  \nInput data:sorted bam  \nOutput data: Sorted bam with marked (or removed) duplicates  \n\n**4\\. Name of the application: Base quality recalibration (BQSR)**  \nFunction: Base quality recalibration  \nContainer: [GATK (v.3.6-0)](https://hub.docker.com/r/cnag/gatk)\nResources: current container size 270MB  \nInput data: Sorted bam with marked (or removed) duplicates  \nOutput data: Sorted bam with marked duplicates & base quality recalculated  \n\n**5\\. Name of the application: Variant calling**  \nFunction: variant calling  \nContainer: [GATK (v.3.6-0)](https://hub.docker.com/r/cnag/gatk)\nResources: current container size 270MB  \nInput data:Sorted bam with marked duplicates & base quality recalculated  \nOutput data: unannotated gvcf per sample  \n\n**6\\. (OPTIONAL)Name of the application: Quality of the fastq**  \nFunction: report on the sequencing quality  \nContainer: [fastqc 0.11.8](https://hub.docker.com/r/cnag/fastqc)\nResources: current container size 173MB  \nInput data: raw fastq  \nOutput data: QC report \n\n## Licensing\n\nGATK declares that archived packages are made available for free to academic researchers under a limited license for non-commercial use. If you need to use one of these packages for commercial use. https://software.broadinstitute.org/gatk/download/archive",
    "latest_version": 1,
    "tags": "['CWL', 'variant_calling']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/107?version=1', 'commit': 'e0f868f36095db8590147a97a88572ede5457f9d', 'ref': 'refs/heads/master', 'tree': '/workflows/107/git/1/tree', 'doi': '10.48546/workflowhub.workflow.107.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-02-18T15:01:31.000Z",
    "updated_at": "2023-04-21T12:35:06.000Z",
    "doi": "10.48546/workflowhub.workflow.107.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/110', 'family_name': 'Fernández', 'given_name': 'José Mª', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), EJP-RD', 'orcid': 'https://orcid.org/0000-0002-4806-5140'}, {'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_files', 'name': None, 'description': 'List of paired-end input FASTQ files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_genome', 'name': None, 'description': 'Compress FASTA files with the reference genome chromosomes', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'known_indels_file', 'name': None, 'description': 'VCF file correlated to reference genome assembly with known indels', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'known_sites_file', 'name': None, 'description': 'VCF file correlated to reference genome assembly with know sites (for instance dbSNP)', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'chromosome', 'name': None, 'description': 'Label of the chromosome to be used for the analysis. By default all the chromosomes are used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'readgroup_str', 'name': None, 'description': 'Parsing header which should correlate to FASTQ files', 'type': [{'type': 'string'}], 'default_value': '@RG\\\\tID:Seq01p\\\\tSM:Seq01\\\\tPL:ILLUMINA\\\\tPI:330'}, {'id': 'sample_name', 'name': None, 'description': 'Sample name', 'type': [{'type': 'string'}], 'default_value': 'ABC3'}, {'id': 'gqb', 'name': None, 'description': 'Exclusive upper bounds for reference confidence GQ bands (must be in [1, 100] and specified in increasing order)', 'type': [{'type': 'int[]'}], 'default_value': [20, 25, 30, 35, 40, 45, 50, 70, 90, 99]}], 'outputs': [{'id': 'metrics', 'name': None, 'description': 'Several metrics about the result', 'type': [{'type': 'File'}], 'source_ids': ['picard_markduplicates/output_metrics']}, {'id': 'gvcf', 'name': None, 'description': 'unannotated gVCF output file from the mapping and variant calling pipeline', 'type': [{'type': 'File'}], 'source_ids': ['gatk_haplotype_caller/gvcf']}], 'steps': [{'id': 'unzipped_known_sites', 'name': None, 'description': None, 'sink_ids': ['unzipped_known_sites/output']}, {'id': 'unzipped_known_indels', 'name': None, 'description': None, 'sink_ids': ['unzipped_known_indels/output']}, {'id': 'gunzip', 'name': None, 'description': None, 'sink_ids': ['gunzip/unzipped_fasta']}, {'id': 'picard_dictionary', 'name': None, 'description': None, 'sink_ids': ['picard_dictionary/dict']}, {'id': 'cutadapt2', 'name': None, 'description': None, 'sink_ids': ['cutadapt2/trimmed_fastq']}, {'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'samtools_index', 'name': None, 'description': None, 'sink_ids': ['samtools_index/index_fai']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/aligned_sam']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/sorted_bam']}, {'id': 'picard_markduplicates', 'name': 'picard-MD', 'description': None, 'sink_ids': ['picard_markduplicates/md_bam', 'picard_markduplicates/output_metrics']}, {'id': 'gatk3-rtc', 'name': 'gatk3-rtc', 'description': None, 'sink_ids': ['gatk3-rtc/rtc_intervals_file']}, {'id': 'gatk-ir', 'name': 'gatk-ir', 'description': None, 'sink_ids': ['gatk-ir/realigned_bam']}, {'id': 'gatk-base_recalibration', 'name': 'gatk-base_recalibration', 'description': None, 'sink_ids': ['gatk-base_recalibration/br_model']}, {'id': 'gatk-base_recalibration_print_reads', 'name': 'gatk-base_recalibration_print_reads', 'description': None, 'sink_ids': ['gatk-base_recalibration_print_reads/bqsr_bam']}, {'id': 'gatk_haplotype_caller', 'name': 'gatk-haplotype_caller', 'description': None, 'sink_ids': ['gatk_haplotype_caller/gvcf']}], 'links': [{'id': 'input', 'source_id': 'known_sites_file', 'sink_id': 'unzipped_known_sites', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'known_indels_file', 'sink_id': 'unzipped_known_indels', 'name': None, 'default_value': None}, {'id': 'reference_file', 'source_id': 'reference_genome', 'sink_id': 'gunzip', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'picard_dictionary', 'name': None, 'default_value': None}, {'id': 'raw_sequences', 'source_id': 'fastq_files', 'sink_id': 'cutadapt2', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'samtools_index', 'name': None, 'default_value': None}, {'id': 'sample_name', 'source_id': 'sample_name', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'trimmed_fastq', 'source_id': 'cutadapt2/trimmed_fastq', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'readgroup_str', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'bwa_mem/aligned_sam', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_sort/sorted_bam', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/md_bam', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'known_indels', 'source_id': 'unzipped_known_indels/output', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/md_bam', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'rtc_intervals', 'source_id': 'gatk3-rtc/rtc_intervals_file', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-ir/realigned_bam', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'unzipped_known_sites_file', 'source_id': 'unzipped_known_sites/output', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'known_indels_file', 'source_id': 'unzipped_known_indels/output', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-ir/realigned_bam', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'br_model', 'source_id': 'gatk-base_recalibration/br_model', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-base_recalibration_print_reads/bqsr_bam', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'chromosome', 'source_id': 'chromosome', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'gqb', 'source_id': 'gqb', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 107,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nlabel: RD_Connect\n\nrequirements:\n  - class: MultipleInputFeatureRequirement\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/version/latest/schemaorg-current-https.rdf\n - http://edamontology.org/EDAM_1.18.owl\n\ninputs:\n  fastq_files: {type: 'File[]', doc: \"List of paired-end input FASTQ files\"}\n  reference_genome: {type: 'File[]', doc: \"Compress FASTA files with the reference genome chromosomes\"}\n  known_indels_file: {type: File, doc: \"VCF file correlated to reference genome assembly with known indels\"}\n  known_sites_file: {type: File, doc: \"VCF file correlated to reference genome assembly with know sites (for instance dbSNP)\"}\n  chromosome: {type: string, doc: \"Label of the chromosome to be used for the analysis. By default all the chromosomes are used\"}\n  readgroup_str: {type: string, default: '@RG\\tID:Seq01p\\tSM:Seq01\\tPL:ILLUMINA\\tPI:330', doc: \"Parsing header which should correlate to FASTQ files\"}\n  sample_name: {type: string, default: 'ABC3', doc: \"Sample name\"}\n  gqb: {type: 'int[]', default: [20, 25, 30, 35, 40, 45, 50, 70, 90, 99], doc: \"Exclusive upper bounds for reference confidence GQ bands (must be in [1, 100] and specified in increasing order)\"}\n\noutputs: \n  metrics: {type: File, outputSource: picard_markduplicates/output_metrics, doc: \"Several metrics about the result\"}\n  gvcf: {type: File, outputSource: gatk_haplotype_caller/gvcf, doc: \"unannotated gVCF output file from the mapping and variant calling pipeline\"}\n\nsteps:\n  - id: unzipped_known_sites\n    in:\n      input: known_sites_file\n    out: [output]\n    run: ../tools/gunzip_known_sites.cwl\n\n  - id: unzipped_known_indels\n    in:\n      input: known_indels_file\n    out: [output]\n    run: ../tools/gunzip_known_sites.cwl\n\n  - id: gunzip\n    in:\n      - id: reference_file\n        source:\n          - reference_genome\n    out:\n      - id: unzipped_fasta\n    run: ../tools/gunzip.cwl\n\n  - id: picard_dictionary\n    # from samtools reference genome\n    in:\n      - id: reference_genome\n        source:\n          - gunzip/unzipped_fasta\n    # produced .dict file\n    out:\n      - id: dict\n    run: ../tools/picard_dictionary.cwl\n\n  - id: cutadapt2\n    in:\n      - id: raw_sequences\n        source:\n          - fastq_files\n    out: \n      - id: trimmed_fastq\n    run: ../tools/cutadapt-v.1.18.cwl\n\n  - id: bwa_index\n    in:\n      - id: reference_genome\n        source:\n          - gunzip/unzipped_fasta\n    out:\n      - id: output\n    run: ../tools/bwa-index.cwl\n\n  - id: samtools_index\n    in:\n      - id: input\n        source:\n          - gunzip/unzipped_fasta\n    out:\n      - id: index_fai\n    run: ../tools/samtools_index.cwl\n\n  - id: bwa_mem\n    in:\n\n      - id: sample_name\n        source:\n          - sample_name\n      - id: trimmed_fastq\n        source:\n         - cutadapt2/trimmed_fastq\n      - id: read_group\n        source:\n          - readgroup_str\n      - id: reference_genome\n        source:\n          - bwa_index/output\n    out:\n      - id: aligned_sam\n    run: ../tools/bwa-mem.cwl\n\n  - id: samtools_sort\n    in:\n      - id: input\n        source:\n          - bwa_mem/aligned_sam\n    out:\n      - id: sorted_bam\n    run: ../tools/samtools_sort_bam.cwl\n   \n  - id: picard_markduplicates\n    in:\n      - id: input\n        source: \n          - samtools_sort/sorted_bam\n    out:\n      - id: md_bam\n      - id: output_metrics\n    run: ../tools/picard_markduplicates.cwl\n    label: picard-MD\n\n  - id: gatk3-rtc\n    in:\n      - id: input\n        source: \n          - picard_markduplicates/md_bam\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: known_indels\n        source:\n          - unzipped_known_indels/output\n    out:\n      - id: rtc_intervals_file\n    run: ../tools/gatk3-rtc.cwl\n    label: gatk3-rtc\n\n  - id: gatk-ir\n    in:\n      - id: input\n        source: \n          - picard_markduplicates/md_bam\n      - id: rtc_intervals\n        source: \n          - gatk3-rtc/rtc_intervals_file\n      - id: reference_genome\n        source: \n           - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n    out:\n      - id: realigned_bam\n    run: ../tools/gatk-ir.cwl\n    label: gatk-ir\n\n  - id: gatk-base_recalibration\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-ir/realigned_bam\n      - id: unzipped_known_sites_file\n        source:\n          - unzipped_known_sites/output\n      - id: known_indels_file\n        source:\n          - unzipped_known_indels/output\n    out:\n      - id: br_model \n    run: ../tools/gatk-base_recalibration.cwl\n    label: gatk-base_recalibration\n\n  - id: gatk-base_recalibration_print_reads\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-ir/realigned_bam\n      - id: br_model\n        source:\n          - gatk-base_recalibration/br_model\n    out:\n      - id: bqsr_bam\n    run: ../tools/gatk-base_recalibration_print_reads.cwl\n    label: gatk-base_recalibration_print_reads\n\n  - id: gatk_haplotype_caller\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-base_recalibration_print_reads/bqsr_bam\n      - id: chromosome\n        source: \n          - chromosome\n      - id: gqb\n        source:\n          - gqb\n    out:\n      - id: gvcf\n    run: ../tools/gatk-haplotype_caller.cwl\n    label: gatk-haplotype_caller\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-7893-2404\n    s:email: mailto:raul.tonda@cnag.crg.cat\n    s:name: Raul Tonda\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-0807-2570\n    s:email: mailto:leslie.matalonga@cnag.crg.eu\n    s:name: Leslie Matalonga\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-1687-2754\n    s:email: mailto:varma@ebi.ac.uk\n    s:name: Susheel Varma\n\ns:contributor:\n  - class: s:Person\n    s:identifier: http://orcid.org/0000-0002-7681-6415\n    s:email: mailto:jarno.laitinen@csc.fi\n    s:name: Jarno Laitinen\n  - class: s:Person\n    s:email: mailto:aniewielska@ebi.ac.uk\n    s:name: Ania Niewielska\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-3468-0652\n    s:email: mailto:alexander.kanitz@unibas.ch\n    s:name: Alex Kanitz\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-4806-5140\n    s:email: mailto:jose.m.fernandez@bsc.es\n    s:name: José M. Fernández\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:citation: https://dx.doi.org/10.1002/humu.23114\ns:codeRepository: https://github.com/inab/Wetlab2Variations/\ns:dateCreated: \"2019-03-06\"\ns:license: https://spdx.org/licenses/Apache-2.0",
    "p_tag_content": "Rare disease researchers workflow is that they submit their raw data (fastq), run the mapping and variant calling RD-Connect pipeline and obtain unannotated gvcf files to further submit to the RD-Connect GPAP or analyse on their own. This demonstrator focuses on the variant calling pipeline. The raw genomic data is processed using the RD-Connect pipeline (Laurie et al., 2016) running on the standards (GA4GH) compliant, interoperable container orchestration platform. This demonstrator will be aligned with the current implementation study onDevelopment of Architecture for Software Containers at ELIXIR and its use by EXCELERATE use-case communities For this implementation, different steps are required: N.B: The demonstrator might have some manual steps, which will not be in production. Detailed information about the RD-Connect pipeline can be found inLaurie et al., 2016  1. Name of the application: Adaptor removalFunction: remove sequencing adaptorsContainer (readiness status, location, version):cutadapt (v.1.18)Required resources in cores and RAM: current container size 169MBInput data (amount, format, directory..): raw fastqOutput data: paired fastq without adaptors 2. Name of the application: Mapping and bam sortingFunction: align data to reference genomeContainer :bwa-mem (v.0.7.17)/Sambamba (v. 0.6.8 )(or samtools)Resources :current container size 111MB / 32MBInput data: paired fastq without adaptorsOutput data: sorted bam 3. Name of the application: MarkDuplicatesFunction: Mark (and remove) duplicatesContainer:Picard (v.2.18.25)Resources: current container size 261MBInput data:sorted bamOutput data: Sorted bam with marked (or removed) duplicates 4. Name of the application: Base quality recalibration (BQSR)Function: Base quality recalibrationContainer:GATK (v.3.6-0)Resources: current container size 270MBInput data: Sorted bam with marked (or removed) duplicatesOutput data: Sorted bam with marked duplicates & base quality recalculated 5. Name of the application: Variant callingFunction: variant callingContainer:GATK (v.3.6-0)Resources: current container size 270MBInput data:Sorted bam with marked duplicates & base quality recalculatedOutput data: unannotated gvcf per sample 6. (OPTIONAL)Name of the application: Quality of the fastqFunction: report on the sequencing qualityContainer:fastqc 0.11.8Resources: current container size 173MBInput data: raw fastqOutput data: QC report GATK declares that archived packages are made available for free to academic researchers under a limited license for non-commercial use. If you need to use one of these packages for commercial use.https://software.broadinstitute.org/gatk/download/archive Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/107?version=1 DOI:10.48546/workflowhub.workflow.107.1 Added/updated 1 files Views:2827Downloads:346 Created: 18th Feb 2021 at 15:01 Last updated: 8th Mar 2021 at 21:35 None Teams:EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics,EuroScienceGateway Organizations:Barcelona Supercomputing Center (BSC-CNS),EJP-RD Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) EOSC-Life brings together the 13 Life Science ‘ESFRI’ research infrastructures (LS RIs) to create an open, digital and collaborative space for biological and medical research. The project will publish ‘FAIR’ data and a catalogue of services provided by participating RIs for the management, storage and reuse of data in the European Open Science Cloud (EOSC). Teams:EOSC-Life - Demonstrator 7: Rare Diseases,EOSC-Life WP3 Web page:https://www.eosc-life.eu/ An integrative analysis pipeline of genomic and transcriptomic human data for disentangling the genetic origin of a rare-disease in the context of the European Open Science Cloud. Space:EOSC-Life Public web page:https://www.eosc-life.eu/services/demonstrators/ Organisms:Not specified"
  },
  {
    "": 541,
    "discussion_links": [],
    "title": "COSIFER",
    "license": "Apache-2.0",
    "description": "# COnSensus Interaction Network InFErence Service\nInference framework for reconstructing networks using a consensus approach between multiple methods and data sources.\n\n![alt text](https://github.com/PhosphorylatedRabbits/cosifer/raw/master/docs/_static/logo.png)\n\n## Reference\n[Manica, Matteo, Charlotte, Bunne, Roland, Mathis, Joris, Cadow, Mehmet Eren, Ahsen, Gustavo A, Stolovitzky, and María Rodríguez, Martínez. \"COSIFER: a python package for the consensus inference of molecular interaction networks\".Bioinformatics (2020)](https://doi.org/10.1093/bioinformatics/btaa942).",
    "latest_version": 1,
    "tags": "['cancer', 'cosifer', 'pediatric', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/118?version=1', 'commit': '1632c07a099437449eedbf009c9f3a56b7c9d7e1', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/118/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-05-05T15:50:31.000Z",
    "updated_at": "2023-04-21T11:04:20.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}, {'profile': '/people/110', 'family_name': 'Fernández', 'given_name': 'José Mª', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), EJP-RD', 'orcid': 'https://orcid.org/0000-0002-4806-5140'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'data_matrix', 'name': None, 'description': 'Gene expression data matrix', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'gmt_filepath', 'name': None, 'description': 'Optional GMT file to perform inference on multiple gene sets', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'index_col', 'name': None, 'description': 'Column index in the data. Defaults to None, a.k.a., no index', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'outdir', 'name': None, 'description': 'Path to the output directory', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'separator', 'name': None, 'description': 'Separator for the data. Defaults to .', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samples_on_rows', 'name': None, 'description': 'Flag that indicates that data contain the samples on rows. Defaults to False.', 'type': [{'type': 'boolean?'}], 'default_value': None}], 'outputs': [{'id': 'resdir', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['cosifer/resdir']}], 'steps': [{'id': 'cosifer', 'name': None, 'description': None, 'sink_ids': ['cosifer/resdir']}], 'links': [{'id': 'data_matrix', 'source_id': 'data_matrix', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'separator', 'source_id': 'separator', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'index_col', 'source_id': 'index_col', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'gmt_filepath', 'source_id': 'gmt_filepath', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'outdir', 'source_id': 'outdir', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'samples_on_rows', 'source_id': 'samples_on_rows', 'sink_id': 'cosifer', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 118,
    "text_field": "['cosifer-workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: cosifer_workflow\nlabel: cosifer-workflow\n\ninputs:\n  data_matrix: {type: File, doc: \"Gene expression data matrix\"}\n  gmt_filepath: {type: \"File?\", doc: \"Optional GMT file to perform inference on multiple gene sets\"}\n  index_col: {type: \"int?\", doc: \"Column index in the data. Defaults to None, a.k.a., no index\"}\n  outdir: {type: string, doc: \"Path to the output directory\"}\n  separator: {type: \"string?\", doc: \"Separator for the data. Defaults to .\"}\n  samples_on_rows: {type: \"boolean?\", doc: \"Flag that indicates that data contain the samples on rows. Defaults to False.\"}\n\noutputs:\n  resdir: {type: Directory, outputSource: cosifer/resdir}\n\nsteps:\n  cosifer:\n    run: ./cosifer.cwl\n    in:\n      data_matrix: data_matrix\n      separator: separator\n      index_col: index_col\n      gmt_filepath: gmt_filepath\n      outdir: outdir\n      samples_on_rows: samples_on_rows\n    out: [resdir]",
    "p_tag_content": "Inference framework for reconstructing networks using a consensus approach between multiple methods and data sources.  Manica, Matteo, Charlotte, Bunne, Roland, Mathis, Joris, Cadow, Mehmet Eren, Ahsen, Gustavo A, Stolovitzky, and María Rodríguez, Martínez. \"COSIFER: a python package for the consensus inference of molecular interaction networks\".Bioinformatics (2020). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/118?version=1 Views:4306Downloads:230 Created: 5th May 2021 at 16:50 Last updated: 21st Apr 2023 at 11:50 None Teams:EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics,EuroScienceGateway Organizations:Barcelona Supercomputing Center (BSC-CNS),EJP-RD Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 544,
    "discussion_links": "[{'id': '104', 'label': 'Original Python Workflows', 'url': 'https://github.com/bioexcel/biobb_hpc_workflows'}]",
    "title": "Molecular Dynamics Simulation",
    "license": "Apache-2.0",
    "description": "CWL version of the md_list.py workflow for HPC. This performs a system setup and runs a molecular dynamics simulation on the structure passed to this workflow. This workflow uses the md\\_gather.cwl sub-workflow to gather the outputs together to return these.\nTo work with more than one structure this workflow can be called from either the md\\_launch.cwl workflow, or the md\\_launch\\_mutate.cwl workflow. These use scatter for parallelising the workflow. md\\_launch.cwl operates on a list of individual input molecule files. md\\_launch\\_mutate.cwl operates on a single input molecule file, and a list of mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will indicate that the molecule should be simulated without any mutation being applied.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/121?version=1', 'commit': 'afa7458cd45f38cf30831f882c4babdc4884ecec', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/121/git/1/tree', 'doi': '10.48546/workflowhub.workflow.121.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-05-20T14:41:19.000Z",
    "updated_at": "2023-01-16T13:49:52.000Z",
    "doi": "10.48546/workflowhub.workflow.121.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_file', 'name': 'Input file', 'description': 'Molecule to process (PDB format)', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_editconf_config', 'name': 'Editconf configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_grompp_genion_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_genion_config', 'name': 'Genion configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_grompp_min_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_make_ndx_config', 'name': 'GROMACS make_ndx configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_nvt_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_npt_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_md_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_md_config', 'name': 'GROMACS mdrun configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'dir', 'name': 'whole workflow output', 'description': 'outputs from the whole workflow, containing these optional files:\\nstep14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\\nstep14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\\nstep14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\\n                                   simulation from the last step of the setup process.\\nstep13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\\n                                   of the simulation, the molecular topology and all the simulation parameters.\\nstep5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\\n                                   readable format.\\n', 'type': [{'type': 'Directory'}], 'source_ids': ['step15_gather_outputs/project_work_dir']}], 'steps': [{'id': 'step1_pdb2gmx', 'name': 'Create Protein System Topology', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.pdb2gmx', 'sink_ids': ['step1_pdb2gmx/output_gro_file', 'step1_pdb2gmx/output_top_zip_file']}, {'id': 'step2_editconf', 'name': 'Create Solvent Box', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.editconf', 'sink_ids': ['step2_editconf/output_gro_file']}, {'id': 'step3_solvate', 'name': 'Fill the Box with Water Molecules', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.solvate', 'sink_ids': ['step3_solvate/output_gro_file', 'step3_solvate/output_top_zip_file']}, {'id': 'step4_grompp_genion', 'name': 'Add Ions - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step4_grompp_genion/output_tpr_file']}, {'id': 'step5_genion', 'name': 'Add Ions - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.genion', 'sink_ids': ['step5_genion/output_gro_file', 'step5_genion/output_top_zip_file']}, {'id': 'step6_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step6_grompp_min/output_tpr_file']}, {'id': 'step7_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step7_mdrun_min/output_trr_file', 'step7_mdrun_min/output_gro_file', 'step7_mdrun_min/output_edr_file', 'step7_mdrun_min/output_log_file']}, {'id': 'step8_make_ndx', 'name': 'Generate GROMACS index file', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.make_ndx', 'sink_ids': ['step8_make_ndx/output_ndx_file']}, {'id': 'step9_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step9_grompp_nvt/output_tpr_file']}, {'id': 'step10_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step10_mdrun_nvt/output_trr_file', 'step10_mdrun_nvt/output_gro_file', 'step10_mdrun_nvt/output_edr_file', 'step10_mdrun_nvt/output_log_file', 'step10_mdrun_nvt/output_cpt_file']}, {'id': 'step11_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step11_grompp_npt/output_tpr_file']}, {'id': 'step12_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step12_mdrun_npt/output_trr_file', 'step12_mdrun_npt/output_gro_file', 'step12_mdrun_npt/output_edr_file', 'step12_mdrun_npt/output_log_file', 'step12_mdrun_npt/output_cpt_file']}, {'id': 'step13_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step13_grompp_md/output_tpr_file']}, {'id': 'step14_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step14_mdrun_md/output_trr_file', 'step14_mdrun_md/output_gro_file', 'step14_mdrun_md/output_edr_file', 'step14_mdrun_md/output_log_file', 'step14_mdrun_md/output_cpt_file']}, {'id': 'step15_gather_outputs', 'name': 'Archiving outputs to be returned to user', 'description': 'This uses the local md_gather.cwl workflow to gather all desired output files. A filter for missing files is applied (pickValue: all_non_null), which requires using a runner which is compliant with v1.2.0, or later, CWL standards.\\n', 'sink_ids': ['step15_gather_outputs/project_work_dir']}], 'links': [{'id': 'input_pdb_path', 'source_id': 'step1_pdb_file', 'sink_id': 'step1_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step1_pdb2gmx/output_gro_file', 'sink_id': 'step2_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step2_editconf/output_gro_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step1_pdb2gmx/output_top_zip_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_grompp_genion_config', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_solvate/output_gro_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_genion_config', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step4_grompp_genion/output_tpr_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_grompp_min_config', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_genion/output_gro_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_min/output_tpr_file', 'sink_id': 'step7_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_make_ndx_config', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_nvt_config', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_nvt/output_tpr_file', 'sink_id': 'step10_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_npt_config', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_nvt/output_gro_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step10_mdrun_nvt/output_cpt_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_npt/output_tpr_file', 'sink_id': 'step12_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_md_config', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_npt/output_gro_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_npt/output_cpt_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_mdrun_md_config', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'external_project_file', 'source_id': 'step1_pdb_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_trr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_gro_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_cpt_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 121,
    "text_field": "['md_list.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.2\nclass: Workflow\nlabel: Molecular Dynamics Simulation.\ndoc: >\n  CWL version of the md_list.cwl workflow for HPC. This performs a system setup and runs\n  a molecular dynamics simulation on the structure passed to this workflow. This workflow\n  uses the md_gather.cwl sub-workflow to gather the outputs together to return these.\n  \n  To work with more than one structure this workflow can be called from either the\n  md_launch.cwl workflow, or the md_launch_mutate.cwl workflow. These use scatter for\n  parallelising the workflow. md_launch.cwl operates on a list of individual input molecule\n  files. md_launch_mutate.cwl operates on a single input molecule file, and a list of\n  mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will\n  indicate that the molecule should be simulated without any mutation being applied.\n\nrequirements:\n  SubworkflowFeatureRequirement: {}\n  MultipleInputFeatureRequirement: {}\n\n\ninputs:\n  step1_pdb_file:\n    label: Input file\n    doc: Molecule to process (PDB format)\n    type: File\n  step2_editconf_config:\n    label: Editconf configuration dictionary\n    type: string\n  step4_grompp_genion_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step5_genion_config:\n    label: Genion configuration dictionary\n    type: string\n  step6_grompp_min_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step8_make_ndx_config:\n    label: GROMACS make_ndx configuration dictionary\n    type: string\n  step9_grompp_nvt_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step11_grompp_npt_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step13_grompp_md_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step14_mdrun_md_config:\n    label: GROMACS mdrun configuration dictionary\n    type: string\n\noutputs:\n  dir:\n    label: whole workflow output\n    doc: |\n      outputs from the whole workflow, containing these optional files:\n      step14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\n      step14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\n      step14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\n                                         simulation from the last step of the setup process.\n      step13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\n                                         of the simulation, the molecular topology and all the simulation parameters.\n      step5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\n                                         readable format.\n    type: Directory\n    outputSource: step15_gather_outputs/project_work_dir\n\nsteps:\n  step1_pdb2gmx:\n    label: Create Protein System Topology\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.pdb2gmx\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/pdb2gmx.cwl\n    in:\n      input_pdb_path: step1_pdb_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step2_editconf:\n    label: Create Solvent Box\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.editconf\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/editconf.cwl\n    in:\n      input_gro_path: step1_pdb2gmx/output_gro_file\n    out: [output_gro_file]\n\n  step3_solvate:\n    label: Fill the Box with Water Molecules\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.solvate\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/solvate.cwl\n    in:\n      input_solute_gro_path: step2_editconf/output_gro_file\n      input_top_zip_path: step1_pdb2gmx/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step4_grompp_genion:\n    label: Add Ions - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step4_grompp_genion_config\n      input_gro_path: step3_solvate/output_gro_file\n      input_top_zip_path: step3_solvate/output_top_zip_file\n    out: [output_tpr_file]\n\n  step5_genion:\n    label: Add Ions - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.genion\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/genion.cwl\n    in:\n      config: step5_genion_config\n      input_tpr_path: step4_grompp_genion/output_tpr_file\n      input_top_zip_path: step3_solvate/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step6_grompp_min:\n    label: Energetically Minimize the System - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step6_grompp_min_config\n      input_gro_path: step5_genion/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step7_mdrun_min:\n    label: Energetically Minimize the System - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step6_grompp_min/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file]\n\n  step8_make_ndx:\n    label: Generate GROMACS index file\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.make_ndx\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/make_ndx.cwl\n    in:\n      config: step8_make_ndx_config\n      input_structure_path: step7_mdrun_min/output_gro_file\n    out: [output_ndx_file]\n\n  step9_grompp_nvt:\n    label: Equilibrate the System (NVT) - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step9_grompp_nvt_config\n      input_gro_path: step7_mdrun_min/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n    out: [output_tpr_file]\n\n  step10_mdrun_nvt:\n    label: Equilibrate the System (NVT) - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step9_grompp_nvt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step11_grompp_npt:\n    label: Equilibrate the System (NPT) - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step11_grompp_npt_config\n      input_gro_path: step10_mdrun_nvt/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n      input_cpt_path:  step10_mdrun_nvt/output_cpt_file\n    out: [output_tpr_file]\n\n  step12_mdrun_npt:\n    label: Equilibrate the System (NPT) - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step11_grompp_npt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step13_grompp_md:\n    label: Free Molecular Dynamics Simulation - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step13_grompp_md_config\n      input_gro_path: step12_mdrun_npt/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n      input_cpt_path:  step12_mdrun_npt/output_cpt_file\n    out: [output_tpr_file]\n\n  step14_mdrun_md:\n    label: Free Molecular Dynamics Simulation - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      config: step14_mdrun_md_config\n      input_tpr_path: step13_grompp_md/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step15_gather_outputs:\n    label: Archiving outputs to be returned to user\n    doc: >\n      This uses the local md_gather.cwl workflow to gather all desired output files.\n      A filter for missing files is applied (pickValue: all_non_null), which requires\n      using a runner which is compliant with v1.2.0, or later, CWL standards.\n    in:\n      external_project_file: step1_pdb_file\n      external_files: \n        source:\n          - step14_mdrun_md/output_trr_file\n          - step14_mdrun_md/output_gro_file\n          - step14_mdrun_md/output_cpt_file\n          - step13_grompp_md/output_tpr_file \n          - step5_genion/output_top_zip_file\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    run: md_gather.cwl\n    out: [project_work_dir]",
    "p_tag_content": "CWL version of the md_list.py workflow for HPC. This performs a system setup and runs a molecular dynamics simulation on the structure passed to this workflow. This workflow uses the md_gather.cwl sub-workflow to gather the outputs together to return these.\nTo work with more than one structure this workflow can be called from either the md_launch.cwl workflow, or the md_launch_mutate.cwl workflow. These use scatter for parallelising the workflow. md_launch.cwl operates on a list of individual input molecule files. md_launch_mutate.cwl operates on a single input molecule file, and a list of mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will indicate that the molecule should be simulated without any mutation being applied. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/121?version=1 DOI:10.48546/workflowhub.workflow.121.1 Views:1998Downloads:179 Created: 20th May 2021 at 15:41 Last updated: 20th May 2021 at 15:48 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 545,
    "discussion_links": [],
    "title": "SPARQL query (in a file) on graph database",
    "license": "Apache-2.0",
    "description": "A workflow querying on an endpoint of a graph database by a file containing a SPARQL query.",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/122?version=1', 'commit': '9e87c28926021389c61cef227c643db33bca3849', 'ref': 'refs/heads/master', 'tree': '/workflows/122/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/122?version=2', 'commit': '39e31d70180c1d82992f640872bce3a574c07066', 'ref': 'refs/heads/master', 'tree': '/workflows/122/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "",
    "created_at": "2021-05-26T10:51:51.000Z",
    "updated_at": "2023-01-16T13:49:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'query_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'endpoint', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [], 'steps': [], 'links': []}",
    "tools": [],
    "id": 122,
    "text_field": "['sparql-query.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: CommandLineTool\nbaseCommand: [curl, -d]\ninputs:\n  query_file:\n    type: string\n    inputBinding:\n      position: 1\n      prefix: '@'\n      separate: false\n  endpoint:\n    type: string\n    inputBinding:\n      position: 2\noutputs: []",
    "p_tag_content": "A workflow querying on an endpoint of a graph database by a file containing a SPARQL query. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/122?version=2 Added/updated 1 files Views:2609Downloads:390 Created: 23rd May 2021 at 17:14 Last updated: 26th May 2021 at 11:51 This item has not yet been tagged. None Teams:EOSC-Life-WP6-Demos Organizations:Leiden University Medical Center Teams:EOSC-Life-WP6-Demos Web page:Not specified Team to create the demos for the EOSC-Life work package 6. Space:EOSC-Life-WP6 Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 573,
    "discussion_links": "[{'id': '426', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Quality assessment, amplicon classification and functional prediction",
    "license": "AFL-3.0",
    "description": "Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2. \nIn addition files are exported to their respective subfolders for easier data management in a later stage.\nSteps:  \n    - FastQC (read quality control)\n    - NGTax 2.0\n    - Picrust 2\n    - Export module for ngtax",
    "latest_version": 2,
    "tags": "['Amplicon', 'CWL', 'Classification']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/154?version=1', 'commit': '8002b928b79bec5a3227b24672e1e109afd681c9', 'ref': 'refs/heads/master', 'tree': '/workflows/154/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/154?version=2', 'commit': '6d183280b89c5f52c86307f73627d42f78c193e6', 'ref': 'refs/heads/master', 'tree': '/workflows/154/git/2/tree', 'doi': '10.48546/workflowhub.workflow.154.2'}]",
    "version": 2,
    "revision_comments": "",
    "created_at": "2021-09-30T11:15:19.000Z",
    "updated_at": "2023-01-16T13:51:47.000Z",
    "doi": "10.48546/workflowhub.workflow.154.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_primer', 'name': 'Forward primer', 'description': 'Forward primer used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'reverse_primer', 'name': 'Reverse primer', 'description': 'Reverse primer used', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'reference_db', 'name': 'Reference database', 'description': 'Reference database used in FASTA format', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'rev_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'for_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'sample', 'name': 'Sample name', 'description': 'Name of the sample being analysed', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'fragment', 'name': 'Subfragment name', 'description': 'Subfragment that is being analysed (e.g. V1-V3 or V5-region)', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'primersRemoved', 'name': 'Primers are removed', 'description': 'Wether the primers are removed or not from the input files', 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'metadata', 'name': 'Metadata file', 'description': 'UNLOCK assay metadata file', 'type': [{'type': 'File?'}], 'default_value': None}], 'outputs': [{'id': 'turtle', 'name': None, 'description': 'Used for other workflows', 'type': [{'type': 'File'}], 'source_ids': ['ngtax/turtle']}, {'id': 'files_to_folder_fastqc', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['fastqc_files_to_folder/results']}, {'id': 'files_to_folder_ngtax', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['ngtax_files_to_folder/results']}, {'id': 'files_to_folder_picrust2', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['picrust_files_to_folder/results']}, {'id': 'files_to_folder_phyloseq', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['phyloseq_files_to_folder/results']}], 'steps': [{'id': 'fastqc', 'name': None, 'description': None, 'sink_ids': ['fastqc/html_files']}, {'id': 'reads_to_folder', 'name': None, 'description': None, 'sink_ids': ['reads_to_folder/results']}, {'id': 'ngtax', 'name': None, 'description': None, 'sink_ids': ['ngtax/biom', 'ngtax/turtle']}, {'id': 'ngtax_to_tsv-fasta', 'name': None, 'description': None, 'sink_ids': ['ngtax_to_tsv-fasta/picrust_fasta', 'ngtax_to_tsv-fasta/picrust_tsv', 'ngtax_to_tsv-fasta/physeq_asv', 'ngtax_to_tsv-fasta/physeq_seq', 'ngtax_to_tsv-fasta/physeq_tax', 'ngtax_to_tsv-fasta/physeq_met']}, {'id': 'picrust2', 'name': None, 'description': None, 'sink_ids': ['picrust2/EC_metagenome_out', 'picrust2/PFAM_metagenome_out', 'picrust2/TIGRFAM_metagenome_out', 'picrust2/COG_metagenome_out', 'picrust2/KO_metagenome_out', 'picrust2/intermediate', 'picrust2/pathways_out', 'picrust2/EC_predicted.tsv.gz', 'picrust2/PFAM_predicted.tsv.gz', 'picrust2/TIGRFAM_predicted.tsv.gz', 'picrust2/KO_predicted.tsv.gz', 'picrust2/marker_predicted_and_nsti.tsv.gz', 'picrust2/out.tre']}, {'id': 'folder_compression', 'name': None, 'description': None, 'sink_ids': ['folder_compression/outfile']}, {'id': 'fastqc_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['fastqc_files_to_folder/results']}, {'id': 'ngtax_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['ngtax_files_to_folder/results']}, {'id': 'picrust_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['picrust_files_to_folder/results']}, {'id': 'phyloseq_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['phyloseq_files_to_folder/results']}], 'links': [{'id': 'fastqs', 'source_id': 'forward_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'fastqs', 'source_id': 'reverse_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'forward_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reverse_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'forward_primer', 'source_id': 'forward_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reverse_primer', 'source_id': 'reverse_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reference_db', 'source_id': 'reference_db', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'reads_to_folder/results', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'rev_read_len', 'source_id': 'rev_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'for_read_len', 'source_id': 'for_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'sample', 'source_id': 'sample', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'fragment', 'source_id': 'fragment', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'primersRemoved', 'source_id': 'primersRemoved', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'sample', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'fragment', 'source_id': 'fragment', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'sample', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'input_table', 'source_id': 'ngtax_to_tsv-fasta/picrust_tsv', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'indir', 'source_id': 'picrust2/intermediate', 'sink_id': 'folder_compression', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'folder_compression', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc/html_files', 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/biom', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/EC_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/PFAM_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/TIGRFAM_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/KO_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/marker_predicted_and_nsti.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/out.tre', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'folder_compression/outfile', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/EC_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/PFAM_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/TIGRFAM_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/COG_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/KO_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/pathways_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_asv', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_seq', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_tax', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_met', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 154,
    "text_field": "['workflow_ngtax_picrust2.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n   - class: StepInputExpressionRequirement\n   - class: InlineJavascriptRequirement\n   - class: MultipleInputFeatureRequirement\n\nlabel: Quality assessment, amplicon classification and functional prediction\ndoc: | \n  Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2. \n  In addition files are exported to their respective subfolders for easier data management in a later stage.\n  Steps:  \n      - FastQC (read quality control)\n      - NGTax 2.0\n      - Picrust 2\n      - Export module\n\ninputs:\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File?\n    doc: reverse sequence file locally\n    label: reverse reads\n  forward_primer: \n    type: string\n    doc: Forward primer used\n    label: Forward primer\n  reverse_primer:\n    type: string?\n    doc: Reverse primer used\n    label: Reverse primer\n  reference_db:\n    type: string?\n    doc: Reference database used in FASTA format\n    label: Reference database\n  rev_read_len: \n    type: int?\n    doc: Read length of the reverse read\n    label: Reverse read length\n  for_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  sample:\n    type: string\n    doc: Name of the sample being analysed\n    label: Sample name\n  fragment:\n    type: string\n    doc: Subfragment that is being analysed (e.g. V1-V3 or V5-region)\n    label: Subfragment name\n  primersRemoved:\n    type: boolean?\n    doc: Wether the primers are removed or not from the input files\n    label: Primers are removed\n    \nsteps:\n############################\n  fastqc:\n    run: ../fastqc/fastqc.cwl\n    in:\n      fastqs: \n        source: [forward_reads, reverse_reads]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    out: [output]\n#############################\n  reads_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [forward_reads, reverse_reads]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        valueFrom: $(\"reads\")\n    out:\n      [results]\n############################\n  ngtax:\n    run: ../ngtax/ngtax.cwl\n    in:\n      forward_primer: forward_primer\n      reverse_primer: reverse_primer\n      reference_db: reference_db\n      folder: reads_to_folder/results\n      rev_read_len: rev_read_len\n      for_read_len: for_read_len\n      sample: sample\n      fragment: fragment\n      primersRemoved: primersRemoved\n    out: [biom, turtle]\n#############################\n  ngtax_to_tsv-fasta:\n    run: ../ngtax/ngtax_to_tsv-fasta.cwl\n    in:\n        inputfile: ngtax/turtle\n        identifier: sample\n        fragment: fragment\n    out:\n      [picrust_fasta, picrust_tsv, physeq_asv, physeq_seq, physeq_tax]\n############################\n  picrust2:\n    run: ../picrust2/picrust2_pipeline.cwl\n    in:\n        identifier: sample\n        input_table: ngtax_to_tsv-fasta/picrust_tsv\n        fasta: ngtax_to_tsv-fasta/picrust_fasta\n    out: [EC_metagenome_out, EC_predicted.tsv.gz, KO_metagenome_out, KO_predicted.tsv.gz, intermediate, marker_predicted_and_nsti.tsv.gz, out.tre,pathways_out]\n############################\n  fastqc_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [fastqc/output]\n      destination: \n        valueFrom: $(\"Step_1_QualityControl\")\n    out:\n      [results]\n############################\n  ngtax_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [ngtax/biom, ngtax/turtle]\n      destination: \n        valueFrom: $(\"Step_2_Classification\")\n    out:\n      [results]\n############################\n  picrust_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [picrust2/EC_predicted.tsv.gz,picrust2/KO_predicted.tsv.gz,picrust2/marker_predicted_and_nsti.tsv.gz,picrust2/out.tre]\n        linkMerge: merge_flattened\n      folders:\n        source: [picrust2/EC_metagenome_out,picrust2/KO_metagenome_out,picrust2/intermediate,picrust2/pathways_out]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Step_3_PICRUSt2\")\n    out:\n      [results]\n############################\n  phyloseq_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [ngtax_to_tsv-fasta/physeq_asv, ngtax_to_tsv-fasta/physeq_seq, ngtax_to_tsv-fasta/physeq_tax]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Step_4_PHYLOSEQ\")\n    out:\n      [results]\n############################\n\noutputs:\n  turtle:\n    type: File\n    doc: Used for other workflows\n    outputSource: ngtax/turtle\n  files_to_folder_fastqc:\n    type: Directory\n    outputSource: fastqc_files_to_folder/results\n  files_to_folder_ngtax:\n    type: Directory\n    outputSource: ngtax_files_to_folder/results\n  files_to_folder_picrust2:\n    type: Directory\n    outputSource: picrust_files_to_folder/results\n  files_to_folder_phyloseq:\n    type: Directory\n    outputSource: phyloseq_files_to_folder/results\n    \n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2021-01-01\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2.\nIn addition files are exported to their respective subfolders for easier data management in a later stage.\nSteps:- FastQC (read quality control)\n- NGTax 2.0\n- Picrust 2\n- Export module for ngtax Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/154?version=2 DOI:10.48546/workflowhub.workflow.154.2 Added/updated 1 files Views:2913Downloads:424 Created: 30th Aug 2021 at 08:18 Last updated: 11th Oct 2021 at 13:50 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 576,
    "discussion_links": [],
    "title": "Cryo electron microscopy of SARS-CoV-2 spike in prefusion state",
    "license": "Apache-2.0",
    "description": "Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/160?version=1', 'commit': '1529420c03ab77c1baad5ccdc37629a8eddde4d4', 'ref': 'refs/heads/master', 'tree': '/workflows/160/git/1/tree', 'doi': '10.48546/workflowhub.workflow.160.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-14T13:52:01.000Z",
    "updated_at": "2023-01-16T13:52:18.000Z",
    "doi": "10.48546/workflowhub.workflow.160.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*20* Movies imported from /home/ubuntu/scipion/data/tests/relion_tutorial/micrographs/*.mrc, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '379_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/ubuntu/ScipionUserData/projects/testEmpiar3/Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/workflow.json][Scipion workflow]], - [[Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '379_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 160,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: Cryo electron microscopy of SARS-CoV-2 spike in prefusion state\ndoc: Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*20* Movies imported from /home/ubuntu/scipion/data/tests/relion_tutorial/micrographs/*.mrc,\\\n      \\ Is the data phase flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:SetOfMovies\n    out:\n    - 2.outputMovies\n    in: []\n  379_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/ubuntu/ScipionUserData/projects/testEmpiar3/Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/workflow.json][Scipion\n      workflow]], - [[Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:SetOfMovies\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://bioportal.bioontology.org/ontologies/CRYOEM/?p=classes&conceptid=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2Fhttp%3A%2F%2Fwww.semanticweb.org%2Fcoss%2Fontologies%2F2020%2F2%2Funtitled-ontology-2%",
    "p_tag_content": "Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/160?version=1 DOI:10.48546/workflowhub.workflow.160.1 Added/updated 4 files Views:1516Downloads:208 Created: 14th Sep 2021 at 14:52 Last updated: 15th Sep 2021 at 14:14 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 577,
    "discussion_links": [],
    "title": "testEntryTitleNew",
    "license": "Apache-2.0",
    "description": "Cryo-EM processing workflow",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/183?version=1', 'commit': 'a6bdaea233189ddbaca454d4c148ddb2a37d79c3', 'ref': 'refs/heads/master', 'tree': '/workflows/183/git/1/tree', 'doi': '10.48546/workflowhub.workflow.183.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-15T13:56:31.000Z",
    "updated_at": "2023-01-16T13:52:41.000Z",
    "doi": "10.48546/workflowhub.workflow.183.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '87_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/irene/ScipionUserData/projects/testK/Runs/000087_EmpiarDepositor/extra/topFolder/workflow.json][Scipion workflow]], - [[Runs/000087_EmpiarDepositor/extra/topFolder/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '87_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 183,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.json', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: testEntryTitleNew\ndoc: Cryo-EM processing workflow\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase\\\n      \\ flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n    out:\n    - 2.outputMovies\n    in: []\n  87_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/irene/ScipionUserData/projects/testK/Runs/000087_EmpiarDepositor/extra/topFolder/workflow.json][Scipion\n      workflow]], - [[Runs/000087_EmpiarDepositor/extra/topFolder/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://scipion.i2pc.es/ontology/",
    "p_tag_content": "Cryo-EM processing workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/183?version=1 DOI:10.48546/workflowhub.workflow.183.1 Added/updated 5 files Views:1563Downloads:194 Created: 15th Sep 2021 at 14:56 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 578,
    "discussion_links": [],
    "title": "entryTitleTest",
    "license": "Apache-2.0",
    "description": "Cryo-EM processing workflow",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/188?version=1', 'commit': 'be36e5e67e6e688ce4390a02689448045f3c07be', 'ref': 'refs/heads/master', 'tree': '/workflows/188/git/1/tree', 'doi': '10.48546/workflowhub.workflow.188.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-15T15:26:44.000Z",
    "updated_at": "2023-01-16T13:52:45.000Z",
    "doi": "10.48546/workflowhub.workflow.188.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '87_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/irene/ScipionUserData/projects/workflowhub/Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/workflow.json][Scipion workflow]], - [[Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '87_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 188,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.json', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: entryTitleTest\ndoc: Cryo-EM processing workflow\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase\\\n      \\ flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n    out:\n    - 2.outputMovies\n    in: []\n  87_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/irene/ScipionUserData/projects/workflowhub/Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/workflow.json][Scipion\n      workflow]], - [[Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://scipion.i2pc.es/ontology/",
    "p_tag_content": "Cryo-EM processing workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/188?version=1 DOI:10.48546/workflowhub.workflow.188.1 Added/updated 5 files Views:1595Downloads:210 Created: 15th Sep 2021 at 16:26 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 606,
    "discussion_links": [],
    "title": "exome-alignment",
    "license": "Apache-2.0",
    "description": "Exome Alignment Workflow",
    "latest_version": 1,
    "tags": "['Alignment', 'cancer', 'pediatric']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/239?version=1', 'commit': '0b2bfbc160dca7ad3facfde5d12ad101079b5b1a', 'ref': 'refs/heads/master', 'tree': '/workflows/239/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-11-19T10:06:37.000Z",
    "updated_at": "2023-01-16T13:55:02.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_files', 'name': None, 'description': 'List of paired-end input FASTQ files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_fasta', 'name': None, 'description': 'Compress FASTA files with the reference genome chromosomes', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'readgroup', 'name': None, 'description': 'Parsing header which should correlate to FASTQ files', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': 'Sample name', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'sorted_bam', 'name': None, 'description': 'Sorted aligned BAM file', 'type': [{'type': 'File'}], 'source_ids': ['picard_markduplicates/output']}], 'steps': [{'id': 'gunzip', 'name': None, 'description': None, 'sink_ids': ['gunzip/output']}, {'id': 'picard_dictionary', 'name': None, 'description': None, 'sink_ids': ['picard_dictionary/output']}, {'id': 'cutadapt', 'name': None, 'description': None, 'sink_ids': ['cutadapt/output']}, {'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'samtools_faidx', 'name': None, 'description': None, 'sink_ids': ['samtools_faidx/output']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/output']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/output']}, {'id': 'picard_markduplicates', 'name': None, 'description': None, 'sink_ids': ['picard_markduplicates/output']}], 'links': [{'id': 'reference_genome', 'source_id': 'reference_fasta', 'sink_id': 'gunzip', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/output', 'sink_id': 'picard_dictionary', 'name': None, 'default_value': None}, {'id': 'raw_sequences', 'source_id': 'fastq_files', 'sink_id': 'cutadapt', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/output', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'gunzip/output', 'sink_id': 'samtools_faidx', 'name': None, 'default_value': None}, {'id': 'sample_name', 'source_id': 'sample_name', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'trimmed_fastq', 'source_id': 'cutadapt/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'readgroup', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'bwa_mem/output', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'samtools_sort/output', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 239,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\nid: alignment-workflow\nlabel: alignment_workflow\n\ndoc: |\n  Exome Alignment Workflow\n\nrequirements:\n  MultipleInputFeatureRequirement: {}\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/version/latest/schemaorg-current-https.rdf\n - http://edamontology.org/EDAM_1.18.owl\n\ninputs:\n  fastq_files: {type: 'File[]', doc: \"List of paired-end input FASTQ files\"}\n  reference_fasta: {type: File, doc: \"Compress FASTA files with the reference genome chromosomes\"}\n  readgroup: {type: string, doc: \"Parsing header which should correlate to FASTQ files\"}\n  sample_name: {type: string, doc: \"Sample name\"}\n\noutputs:\n  sorted_bam: {type: File, outputSource: picard_markduplicates/output, doc: \"Sorted aligned BAM file\"}\n\nsteps:\n  gunzip:\n    run: tools/gunzip.cwl\n    in:\n      reference_genome: reference_fasta\n    out: [output]\n\n  picard_dictionary:\n    run: tools/picard_dictionary.cwl\n    in:\n      reference_genome:\n        source: gunzip/output\n    out: [output]\n\n  cutadapt:\n    run: tools/cutadapt.cwl\n    in:\n      raw_sequences: fastq_files\n    out: [output]\n\n  bwa_index:\n    run: tools/bwa-index.cwl\n    in:\n      reference_genome:\n        source: gunzip/output\n    out: [output]\n\n  samtools_faidx:\n    run: tools/samtools_faidx.cwl\n    in:\n      sequences:\n        source: gunzip/output\n    out: [output]\n\n  bwa_mem:\n    run: tools/bwa-mem.cwl\n    in:\n      sample_name: sample_name\n      trimmed_fastq:\n        source: cutadapt/output\n      read_group: readgroup\n      reference_genome:\n        source: bwa_index/output\n    out: [output]\n\n  samtools_sort:\n    run: tools/samtools_sort.cwl\n    in:\n      bam_unsorted:\n        source: bwa_mem/output\n    out: [output]\n\n  picard_markduplicates:\n    run: tools/picard_markduplicates.cwl\n    in:\n      alignments:\n        source: samtools_sort/output\n    out: [output]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:dateCreated: \"2021-02-19\"\ns:license: https://spdx.org/licenses/Apache-2.0",
    "p_tag_content": "Exome Alignment Workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/239?version=1 Added/updated 1 files Views:1873Downloads:256 Created: 19th Nov 2021 at 10:06 Last updated: 19th Nov 2021 at 10:08 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 616,
    "discussion_links": [],
    "title": "multiAffinity",
    "license": "Apache-2.0",
    "description": "<br>\n\n<img src=\"https://github.com/marbatlle/multiAffinity/raw/main/docs/img/multiAffinty-logo.png\" alt=\"drawing\" width=\"400\"/>\n\n<br>\n\nMultiAffinity enables the study of how gene dysregulation propagates on a multilayer network on a disease of interest, uncovering key genes. Find the detailed documentation for the tool [here](https://marbatlle.github.io/multiAffinity/).\n\n![alt](https://github.com/marbatlle/multiAffinity/raw/main/docs/img/multiAffinity_workflow.png)",
    "latest_version": 1,
    "tags": "['cancer', 'community-detection', 'networks', 'pediatric', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/250?version=1', 'commit': '581e04bf8e7ad39949d1a725b61657f7e490fc43', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/250/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-12-14T10:01:12.000Z",
    "updated_at": "2023-04-21T11:42:40.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "Mar Batlle",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'counts', 'name': None, 'description': 'Count Matrices of the RNA-Seq studies - List of input CSV files, separated by commas', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadata', 'name': None, 'description': 'Metadata of the RNA-Seq studies - List of input CSV files, separated by commas', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'layers', 'name': None, 'description': 'Layers of the multilayer networks - List of input CSV files, separated by commas', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'approach', 'name': None, 'description': 'Computes correlation on each community or respect all genes, local or global approach (default is local)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'output_dir', 'name': None, 'description': 'Defines name for output folder', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'padj', 'name': None, 'description': \"Sets significance value for DESeq2, RRA, and Spearman's Corr (default is 0.05)\", 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'LFC', 'name': None, 'description': 'Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'control_id', 'name': None, 'description': 'Defines metadata label for the control samples (default is Normal)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'multiXrank_r', 'name': None, 'description': 'Global restart probability for multiXrank, given by float between 0 and 1 (default is 0.15)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'multiXrank_selfloops', 'name': None, 'description': 'Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'Molti_modularity', 'name': None, 'description': 'Sets Newman modularity resolution parameter on molTI-DREAM (default is 1)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'Molti_Louvain', 'name': None, 'description': 'Switches to randomized Louvain on molTI-DREAM and sets num. of randomizations (default is 5)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_nodes', 'name': None, 'description': 'Defines minimum number of nodes required to describe a community (default is 7)', 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'output', 'name': None, 'description': 'Contains degs, communities and affinity information', 'type': [{'type': 'Directory'}], 'source_ids': ['tool/output']}], 'steps': [{'id': 'tool', 'name': None, 'description': None, 'sink_ids': ['tool/output']}], 'links': [{'id': 'counts', 'source_id': 'counts', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'layers', 'source_id': 'layers', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'approach', 'source_id': 'approach', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'output_dir', 'source_id': 'output_dir', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'padj', 'source_id': 'padj', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'LFC', 'source_id': 'LFC', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'multiXrank_r', 'source_id': 'multiXrank_r', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'control_id', 'source_id': 'control_id', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'Molti_modularity', 'source_id': 'Molti_modularity', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'multiXrank_selfloops', 'source_id': 'multiXrank_selfloops', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'Molti_Louvain', 'source_id': 'Molti_Louvain', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'min_nodes', 'source_id': 'min_nodes', 'sink_id': 'tool', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 250,
    "text_field": "['multiaffinity-workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\nid: multiaffinity_workflow\nlabel: multiaffinity-workflow\n\n$namespaces:\n  s: http://schema.org/\n\ninputs:\n  counts: {type: 'File[]', doc: \"Count Matrices of the RNA-Seq studies - List of input CSV files, separated by commas\"}\n  metadata: {type: 'File[]', doc: \"Metadata of the RNA-Seq studies - List of input CSV files, separated by commas\"}\n  layers: {type: 'File[]?', doc: \"Layers of the multilayer networks - List of input CSV files, separated by commas\"}\n  approach: {type: 'string?', doc: \"Computes correlation on each community or respect all genes, local or global approach (default is local)\"}\n  output_dir: {type: 'string?', doc: \"Defines name for output folder\"}\n  padj: {type: 'string?', doc: \"Sets significance value for DESeq2, RRA, and Spearman's Corr (default is 0.05)\"}\n  LFC: {type: 'string?', doc: \"Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)\"}\n  control_id: {type: 'string?', doc: \"Defines metadata label for the control samples (default is Normal)\"}\n  multiXrank_r: {type: 'string?', doc: \"Global restart probability for multiXrank, given by float between 0 and 1 (default is 0.15)\"}\n  multiXrank_selfloops: {type: 'int?', doc: \"Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)\"}\n  Molti_modularity: {type: 'int?', doc: \"Sets Newman modularity resolution parameter on molTI-DREAM (default is 1)\"}\n  Molti_Louvain: {type: 'int?', doc: \"Switches to randomized Louvain on molTI-DREAM and sets num. of randomizations (default is 5)\"}\n  min_nodes: {type: 'int?', doc: \"Defines minimum number of nodes required to describe a community (default is 7)\"}\n\noutputs:\n  output: {type: Directory, outputSource: tool/output, doc: \"Contains degs, communities and affinity information\"}\n\nsteps:\n  tool:\n    run: ./multiaffinity.cwl\n    in:\n      counts: counts\n      metadata: metadata\n      layers: layers\n      approach: approach\n      output_dir: output_dir\n      padj: padj\n      LFC: LFC\n      multiXrank_r: multiXrank_r\n      control_id: control_id\n      Molti_modularity: Molti_modularity\n      multiXrank_selfloops: multiXrank_selfloops\n      Molti_Louvain: Molti_Louvain\n      min_nodes: min_nodes\n    out: [output]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8508-6234\n    s:email: mailto:mar.batlle@bsc.es\n    s:name: Mar Batlle\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:dateCreated: \"2021-09-15",
    "p_tag_content": "MultiAffinity enables the study of how gene dysregulation propagates on a multilayer network on a disease of interest, uncovering key genes. Find the detailed documentation for the toolhere.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/250?version=1 Mar Batlle Views:1485Downloads:206 Created: 14th Dec 2021 at 10:01 Last updated: 21st Apr 2023 at 12:06 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 619,
    "discussion_links": "[{'id': '424', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Nanopore Guppy Basecalling Assembly Workflow",
    "license": "Apache-2.0",
    "description": "### - deprecated - \n\nWorkflow for sequencing with ONT Nanopore, from basecalling to assembly.\n  - Guppy (basecalling of raw reads)\n  - MinIONQC (quality check)\n  - FASTQ merging from multi into one file\n  - Kraken2 (taxonomic classification)\n  - Krona (classification visualization)\n  - Flye (de novo assembly)\n  - Medaka (assembly polishing)\n  - QUAST (assembly quality reports)\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/253?version=1', 'commit': '62ee0fe4f4ab53a3ae317da1d9de2838fd7481cf', 'ref': 'refs/heads/master', 'tree': '/workflows/253/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2022-01-06T07:36:38.000Z",
    "updated_at": "2023-01-16T13:56:37.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'fast5_files', 'name': 'nanopore reads', 'description': 'folder with Nanopore raw reads', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'configuration_command', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'kraken_database', 'name': None, 'description': 'database location of kraken2', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'basecall_model', 'name': 'basecalling model', 'description': 'basecalling model used with Guppy', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'guppy_output', 'name': 'Guppy for CPU', 'description': 'Basecalling of raw reads with Guppy', 'type': [{'type': 'Directory'}], 'source_ids': ['guppy_files_to_folder/results']}, {'id': 'minionqc_output', 'name': 'MinION-Quality-Check', 'description': 'Quality check of basecalling with MinIONQC', 'type': [{'type': 'Directory'}], 'source_ids': ['minionqc_files_to_folder/results']}, {'id': 'merge_output', 'name': 'FASTQ files merged', 'description': 'Concatenation of FASTQ files from Guppy', 'type': [{'type': 'Directory'}], 'source_ids': []}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/kraken2_output']}, {'id': 'krona_output', 'name': 'Krona taxonomy visualization', 'description': 'Visual presentation in HTML of Kraken2 results', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/krona_output']}, {'id': 'flye_output', 'name': 'Flye de novo assembler for single-molecule reads', 'description': 'Flye output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/flye_output']}, {'id': 'medaka_output', 'name': 'Medaka polisher', 'description': 'Polishing of Flye assembly', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/medaka_output']}, {'id': 'quast_output', 'name': 'QUAlity assessment', 'description': 'QUAST analysis output', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/quast_output']}], 'steps': [{'id': 'workflow_basecalling', 'name': 'Guppy-CPU basecalling', 'description': 'Basecalling with Guppy for CPU of raw reads to FASTQ reads with summary', 'sink_ids': ['workflow_basecalling/reads_directory', 'workflow_basecalling/fastq_reads', 'workflow_basecalling/summary', 'workflow_basecalling/telemetry', 'workflow_basecalling/guppy_log']}, {'id': 'workflow_nanopore_noguppy', 'name': 'Nanopore workflow', 'description': 'The rest of the nanopore workflow without basecalling', 'sink_ids': ['workflow_nanopore_noguppy/kraken2_output', 'workflow_nanopore_noguppy/krona_output', 'workflow_nanopore_noguppy/flye_output', 'workflow_nanopore_noguppy/medaka_output', 'workflow_nanopore_noguppy/quast_output']}, {'id': 'guppy_files_to_folder', 'name': 'Guppy output folder', 'description': 'Preparation of Guppy output files to a specific output folder', 'sink_ids': ['guppy_files_to_folder/results']}, {'id': 'workflow_minionqc', 'name': 'MinIONQC quality check', 'description': 'Plots and statistics generated with MinIONQC from basecalling with Guppy', 'sink_ids': ['workflow_minionqc/qc_files']}, {'id': 'minionqc_files_to_folder', 'name': 'MinIONQC output folder', 'description': 'Preparation of MinIONQC output files to a specific output folder', 'sink_ids': ['minionqc_files_to_folder/results']}], 'links': [{'id': 'fast5_files', 'source_id': 'fast5_files', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'configuration_command', 'source_id': 'configuration_command', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'nanopore_fastq_reads', 'source_id': 'workflow_basecalling/fastq_reads', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'basecall_model', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/summary', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/telemetry', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/guppy_log', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'seq_summary', 'source_id': 'workflow_basecalling/summary', 'sink_id': 'workflow_minionqc', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_minionqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_minionqc/qc_files', 'sink_id': 'minionqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'minionqc_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 253,
    "text_field": "['workflow_nanopore.cwl']",
    "raw_text_content": "#!/usr/bin/env cwltool\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: nanopore workflow\ndoc: |\n    Workflow for sequencing with ONT nanopore, from basecalling to assembly quality.\n    Steps:\n      - Guppy (basecalling of raw reads)\n      - MinIONQC (quality check)\n      - FASTQ merging from multi into one file\n      - Kraken2 (taxonomic classification)\n      - Krona (classification visualization)\n      - Flye (de novo assembly)\n      - Medaka (assembly polishing)\n      - QUAST (assembly quality reports)\n\n      The dependencies are either accessible from https://unlock-icat.irods.surfsara.nl (anonymous) or \n      by using the conda / pip environments as shown in https://unlock-icat.irods.surfsara.nl/infrastructure/binaries/scripts/setup.sh\n      \noutputs:\n  guppy_output:\n    label: Guppy for CPU\n    doc: Basecalling of raw reads with Guppy\n    type: Directory\n    outputSource: guppy_files_to_folder/results\n  minionqc_output:\n    label: MinION-Quality-Check\n    doc: Quality check of basecalling with MinIONQC\n    type: Directory\n    outputSource: minionqc_files_to_folder/results\n  merge_output:\n    label: FASTQ files merged\n    doc: Concatenation of FASTQ files from Guppy\n    type: Directory\n  kraken2_output:\n    label: Kraken2 reports\n    doc: Kraken2 taxonomic classification reports\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/kraken2_output\n  krona_output:\n    label: Krona taxonomy visualization\n    doc: Visual presentation in HTML of Kraken2 results\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/krona_output\n  flye_output:\n    label: Flye de novo assembler for single-molecule reads\n    doc: Flye output directory\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/flye_output\n  medaka_output:\n    label: Medaka polisher\n    doc: Polishing of Flye assembly\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/medaka_output\n  quast_output:\n    label: QUAlity assessment\n    doc: QUAST analysis output\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/quast_output\n\ninputs:\n# General\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: identifier used\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n# Guppy\n  fast5_files:\n    type: File[]\n    doc: folder with Nanopore raw reads\n    label: nanopore reads\n  configuration_command:\n    type: string\n# Kraken2\n  kraken_database:\n    type: Directory\n    doc: database location of kraken2\n# Medaka\n  basecall_model:\n    type: string\n    doc: basecalling model used with Guppy\n    label: basecalling model\n\nsteps:\n#############################################\n#### basecalling with Guppy for CPU\n  workflow_basecalling:\n    label: Guppy-CPU basecalling\n    doc: Basecalling with Guppy for CPU of raw reads to FASTQ reads with summary\n    run: ../guppy/guppy.cwl\n    in:\n      fast5_files: fast5_files\n      configuration_command: configuration_command\n      threads: threads\n    out: [reads_directory, fastq_reads, summary, telemetry, guppy_log]\n#############################################\n#### Nanopore classification and assembly workflow\n  workflow_nanopore_noguppy:\n    label: Nanopore workflow\n    doc: The rest of the nanopore workflow without basecalling\n    run: workflow_nanopore_noguppy.cwl\n    in:\n      identifier: identifier\n      threads: threads\n      nanopore_fastq_reads: workflow_basecalling/fastq_reads\n      kraken_database: kraken_database\n      basecall_model: basecall_model\n    out: [kraken2_output, krona_output, flye_output, medaka_output, quast_output]\n#############################################\n#### Move to folder if not part of a workflow\n  guppy_files_to_folder:\n    doc: Preparation of Guppy output files to a specific output folder\n    label: Guppy output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [workflow_basecalling/summary, workflow_basecalling/telemetry, workflow_basecalling/guppy_log]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"1_Guppy_basecalling\")\n    out:\n      [results]\n############################################# LOCAL INSTALL, BUT USE CONDA IF NO CONFLICTS\n#### quality check of basecalling with MinIONQC\n  workflow_minionqc:\n    label: MinIONQC quality check\n    doc: Plots and statistics generated with MinIONQC from basecalling with Guppy\n    run: ../minionqc/minionqc.cwl\n    in:\n      seq_summary: workflow_basecalling/summary\n      threads: threads\n    out: [qc_files]\n#############################################\n#### Move to folder if not part of a workflow\n  minionqc_files_to_folder:\n    doc: Preparation of MinIONQC output files to a specific output folder\n    label: MinIONQC output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [workflow_minionqc/qc_files]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"2_MinIONQC_qualitycheck\")\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-5516-8391\n    s:email: mailto:german.royvalgarcia@wur.nl\n    s:name: Germán Royval\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2021-12-10\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for sequencing with ONT Nanopore, from basecalling to assembly. All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/253?version=1 Added/updated 1 files Views:3276Downloads:210 Created: 6th Jan 2022 at 07:36 Last updated: 2nd Nov 2022 at 15:03 This item has not yet been tagged. None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 620,
    "discussion_links": "[{'id': '423', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Nanopore Assembly Workflow - Deprecated -",
    "license": "Apache-2.0",
    "description": "#### - Deprecated -\n#### See our updated hybrid assembly workflow: https://workflowhub.eu/workflows/367\n#### And other workflows: https://workflowhub.eu/projects/16#workflows\n# \n**Workflow for sequencing with ONT Nanopore data, from basecalled reads to (meta)assembly and binning**\n- Workflow Nanopore Quality\n- Kraken2 taxonomic classification of FASTQ reads\n- Flye (de-novo assembly)\n- Medaka (assembly polishing)\n- metaQUAST (assembly quality reports)\n\n**When Illumina reads are provided:** \n  - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n  - Assembly polishing with Pilon<br>\n  - Workflow binnning https://workflowhub.eu/workflows/64?version=11\n      - Metabat2\n      - CheckM\n      - BUSCO\n      - GTDB-Tk\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>",
    "latest_version": 3,
    "tags": "['Genomics', 'Metagenomics', 'nanopore']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=1', 'commit': 'babd8b7dc73a6df07ceaea318611423a3c63b545', 'ref': 'refs/heads/master', 'tree': '/workflows/254/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=2', 'commit': '441b6ec155f9c1f2b874f7772e4d5d74719d0bc0', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/254/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=3', 'commit': '69b53ab3a679673ad857745e9985f0e7fdc6a87a', 'ref': 'refs/heads/master', 'tree': '/workflows/254/git/3/tree', 'doi': None}]",
    "version": 3,
    "revision_comments": "",
    "created_at": "2022-04-20T09:12:09.000Z",
    "updated_at": "2023-02-02T15:16:21.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}, {'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}, {'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/topic_0196'}, {'label': 'Sequencing', 'identifier': 'http://edamontology.org/topic_3168'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 40000}, {'id': 'nanopore_fastq_files', 'name': 'Nanopore reads', 'description': 'List of file paths with Nanopore raw reads in fastq format', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'illumina_forward_reads', 'name': 'illumina forward reads', 'description': 'illumina sequenced forward read file', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'illumina_reverse_reads', 'name': 'illumina reverse reads', 'description': 'illumina sequenced reverse file', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'use_reference_mapped_reads', 'name': 'Use mapped reads', 'description': 'Continue with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads (Illumina) with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Absolute path with database location of kraken2', 'type': [{'type': 'string'}], 'default_value': '/unlock/references/databases/Kraken2/K2_PlusPF_20210517'}, {'id': 'basecall_model', 'name': 'Basecalling model', 'description': 'Basecalling model used with Guppy', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'metagenome', 'name': 'When working with metagenomes', 'description': 'Metagenome option for the flye assembly', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'filter_references', 'name': 'Contamination reference file(s)', 'description': 'Reference fasta file(s) for contamination filtering', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'pilon_fixlist', 'name': 'Pilon fix list', 'description': 'A comma-separated list of categories of issues to try to fix', 'type': [{'type': 'string'}], 'default_value': 'snps,gaps,local'}, {'id': 'binning', 'name': 'Run binning workflow', 'description': 'Run with contig binning workflow', 'type': [{'type': 'boolean?'}], 'default_value': False}], 'outputs': [{'id': 'nanopore_quality_output', 'name': 'Read quality and filtering reports', 'description': 'Quality reports', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality_nanopore/reports_to_folder']}, {'id': 'illumina_quality_stats', 'name': 'Filtered statistics', 'description': 'Statistics on quality and preprocessing of the reads', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality_illumina/reports_to_folder']}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory'}], 'source_ids': ['kraken2_files_to_folder/results']}, {'id': 'assembly_output', 'name': 'Assembly output', 'description': 'Output from different assembly steps', 'type': [{'type': 'Directory'}], 'source_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_output', 'name': 'Binning output', 'description': 'Binning outputfolders', 'type': [{'type': 'Directory'}], 'source_ids': ['binning_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality_nanopore', 'name': 'Nanopore quality and filtering workflow', 'description': 'Quality and filtering workflow for nanopore reads', 'sink_ids': ['workflow_quality_nanopore/filtered_reads', 'workflow_quality_nanopore/reports_to_folder']}, {'id': 'workflow_quality_illumina', 'name': 'Illumina quality and filtering workflow', 'description': 'Quality and filtering workflow for illumina reads', 'sink_ids': ['workflow_quality_illumina/QC_reverse_reads', 'workflow_quality_illumina/QC_forward_reads', 'workflow_quality_illumina/reports_to_folder']}, {'id': 'nanopore_kraken2', 'name': 'Kraken2 Nanopore', 'description': 'Taxonomic classification of Nanopore reads', 'sink_ids': ['nanopore_kraken2/standard_report', 'nanopore_kraken2/sample_report']}, {'id': 'illumina_kraken2', 'name': 'Kraken2 Illumina', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['illumina_kraken2/standard_report', 'illumina_kraken2/sample_report']}, {'id': 'kraken2_compress', 'name': 'Compress kraken2', 'description': 'Compress large kraken2 report file', 'sink_ids': ['kraken2_compress/outfile']}, {'id': 'kraken2_krona', 'name': 'Krona Kraken2', 'description': 'Visualization of kraken2 with Krona', 'sink_ids': ['kraken2_krona/krona_html']}, {'id': 'flye', 'name': 'Nanopore Flye assembly', 'description': 'De novo assembly of single-molecule reads with Flye', 'sink_ids': ['flye/00_assembly', 'flye/10_consensus', 'flye/20_repeat', 'flye/30_contigger', 'flye/40_polishing', 'flye/assembly', 'flye/assembly_info', 'flye/flye_log', 'flye/params']}, {'id': 'medaka', 'name': 'Medaka polishing of assembly', 'description': 'Medaka for polishing of assembled genome', 'sink_ids': ['medaka/polished_assembly', 'medaka/gaps_in_draft_coords']}, {'id': 'metaquast_medaka', 'name': 'assembly evaluation', 'description': 'evaluation of polished assembly with metaQUAST', 'sink_ids': ['metaquast_medaka/metaquast_outdir', 'metaquast_medaka/meta_combined_ref', 'metaquast_medaka/meta_icarusDir', 'metaquast_medaka/metaquast_krona', 'metaquast_medaka/not_aligned', 'metaquast_medaka/meta_downloaded_ref', 'metaquast_medaka/runs_per_reference', 'metaquast_medaka/meta_summary', 'metaquast_medaka/meta_icarus', 'metaquast_medaka/metaquast_log', 'metaquast_medaka/metaquast_report', 'metaquast_medaka/basicStats', 'metaquast_medaka/quast_icarusDir', 'metaquast_medaka/quast_icarusHtml', 'metaquast_medaka/quastReport', 'metaquast_medaka/quastLog', 'metaquast_medaka/transposedReport']}, {'id': 'workflow_pilon', 'name': 'Pilon worklow', 'description': 'Illumina reads assembly polishing with Pilon', 'sink_ids': ['workflow_pilon/pilon_polished_assembly', 'workflow_pilon/vcf', 'workflow_pilon/log']}, {'id': 'metaquast_nanopore_pilon', 'name': 'Illumina assembly evaluation', 'description': 'Illumina evaluation of pilon polished assembly with metaQUAST', 'sink_ids': ['metaquast_nanopore_pilon/metaquast_outdir', 'metaquast_nanopore_pilon/meta_combined_ref', 'metaquast_nanopore_pilon/meta_icarusDir', 'metaquast_nanopore_pilon/metaquast_krona', 'metaquast_nanopore_pilon/not_aligned', 'metaquast_nanopore_pilon/meta_downloaded_ref', 'metaquast_nanopore_pilon/runs_per_reference', 'metaquast_nanopore_pilon/meta_summary', 'metaquast_nanopore_pilon/meta_icarus', 'metaquast_nanopore_pilon/metaquast_log', 'metaquast_nanopore_pilon/metaquast_report', 'metaquast_nanopore_pilon/basicStats', 'metaquast_nanopore_pilon/quast_icarusDir', 'metaquast_nanopore_pilon/quast_icarusHtml', 'metaquast_nanopore_pilon/quastReport', 'metaquast_nanopore_pilon/quastLog', 'metaquast_nanopore_pilon/transposedReport']}, {'id': 'illumina_pilon_readmapping', 'name': 'Read mapping', 'description': 'Illumina read mapping on pilon assembly for binning', 'sink_ids': ['illumina_pilon_readmapping/sam', 'illumina_pilon_readmapping/stats', 'illumina_pilon_readmapping/covstats', 'illumina_pilon_readmapping/log']}, {'id': 'illumina_pilon_sam_to_sorted_bam', 'name': 'sam conversion to sorted bam', 'description': 'Sam file conversion to a sorted bam file', 'sink_ids': ['illumina_pilon_sam_to_sorted_bam/sortedbam']}, {'id': 'workflow_binning', 'name': 'Binning workflow', 'description': 'Binning workflow to create bins', 'sink_ids': ['workflow_binning/metabat2_output', 'workflow_binning/checkm_output', 'workflow_binning/gtdbtk_output', 'workflow_binning/busco_output']}, {'id': 'kraken2_files_to_folder', 'name': 'Kraken2 output folder', 'description': 'Preparation of Kraken2 output files to a specific output folder', 'sink_ids': ['kraken2_files_to_folder/results']}, {'id': 'flye_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['flye_files_to_folder/results']}, {'id': 'metaquast_medaka_files_to_folder', 'name': 'Nanopore metaQUAST output folder', 'description': 'Preparation of metaQUAST output files to a specific output folder', 'sink_ids': ['metaquast_medaka_files_to_folder/results']}, {'id': 'medaka_files_to_folder', 'name': 'Medaka output folder', 'description': 'Preparation of Medaka output files to a specific output folder', 'sink_ids': ['medaka_files_to_folder/results']}, {'id': 'metaquast_pilon_files_to_folder', 'name': 'Illumina metaQUAST output folder', 'description': 'Preparation of QUAST output files to a specific output folder', 'sink_ids': ['metaquast_pilon_files_to_folder/results']}, {'id': 'pilon_files_to_folder', 'name': 'Pilon output folder', 'description': 'Preparation of pilon output files to a specific output folder', 'sink_ids': ['pilon_files_to_folder/results']}, {'id': 'assembly_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_files_to_folder', 'name': 'Binning output folder', 'description': 'Preparation of quast output files to a specific output folder', 'sink_ids': ['binning_files_to_folder/results']}], 'links': [{'id': 'reads', 'source_id': 'nanopore_fastq_files', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': 1}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'illumina_reverse_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': 2}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': True}, {'id': 'inputfile', 'source_id': 'nanopore_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'illumina_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'nano_raw', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'metagenome', 'source_id': 'metagenome', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'flye/assembly', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'basecall_model', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'fixlist', 'source_id': 'pilon_fixlist', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'metaquast_nanopore_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'metaquast_nanopore_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'illumina_pilon_readmapping/sam', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'illumina_pilon_sam_to_sorted_bam/sortedbam', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_binning', 'name': None, 'default_value': 1}, {'id': 'files', 'source_id': 'kraken2_compress/outfile', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_krona/krona_html', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly_info', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/flye_log', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/params', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/metaquast_report', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/quastReport', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/metaquast_krona', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/not_aligned', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/runs_per_reference', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/polished_assembly', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/gaps_in_draft_coords', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka_files_to_folder/results', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_nanopore_pilon/metaquast_report', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_nanopore_pilon/quastReport', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_nanopore_pilon/metaquast_krona', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_nanopore_pilon/not_aligned', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/vcf', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/log', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_pilon_files_to_folder/results', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'flye_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'medaka_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'pilon_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/metabat2_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/checkm_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/gtdbtk_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/busco_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 254,
    "text_field": "['workflow_nanopore_assembly.cwl', 'workflow_nanopore_noguppy.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Workflow for sequencing with ONT Nanopore data, from basecalled reads to (meta)assembly and binning When Illumina reads are provided: All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/254?version=3 Added/updated 1 files Views:3370Downloads:477 Created: 6th Jan 2022 at 07:38 Last updated: 2nd Feb 2023 at 15:16 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 621,
    "discussion_links": "[{'id': '231', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '232', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/ligand-parameterization'}, {'id': '233', 'label': 'Documentation', 'url': 'https://biobb-wf-ligand-parameterization.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL GMX Automatic Ligand Parameterization tutorial",
    "license": "Apache-2.0",
    "description": "# Automatic Ligand parameterization tutorial using BioExcel Building Blocks (biobb)\n\n***\n\nThis tutorial aims to illustrate the process of **ligand parameterization** for a **small molecule**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Sulfasalazine** protein (3-letter code SAS), used to treat rheumatoid arthritis, ulcerative colitis, and Crohn's disease.\n\n**OpenBabel and ACPype** packages are used to **add hydrogens, energetically minimize the structure**, and **generate parameters** for the **GROMACS** package. With *Generalized Amber Force Field (GAFF) forcefield and AM1-BCC* charges.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/255?version=1', 'commit': 'f7acba5a04b799f9a3d45f17a657f9efe9bff804', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/255/git/1/tree', 'doi': '10.48546/workflowhub.workflow.255.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/255?version=2', 'commit': 'dda947f32836f66202a3b1fdc30dc3d36ef12533', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/255/git/2/tree', 'doi': '10.48546/workflowhub.workflow.255.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T12:24:16.000Z",
    "updated_at": "2023-06-06T12:33:16.000Z",
    "doi": "10.48546/workflowhub.workflow.255.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step2_babel_minimize_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_babel_minimize_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_babel_minimize_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_gro', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_itp', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_top', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step2_babel_minimize_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step2_babel_minimize/output_path']}, {'id': 'step3_acpype_params_gmx_out1', 'name': 'output_path_gro', 'description': 'Path to the GRO output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_gro']}, {'id': 'step3_acpype_params_gmx_out2', 'name': 'output_path_itp', 'description': 'Path to the ITP output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_itp']}, {'id': 'step3_acpype_params_gmx_out3', 'name': 'output_path_top', 'description': 'Path to the TOP output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_top']}], 'steps': [{'id': 'step2_babel_minimize', 'name': 'BabelMinimize', 'description': 'Energetically minimize small molecules.', 'sink_ids': ['step2_babel_minimize/output_path']}, {'id': 'step3_acpype_params_gmx', 'name': 'AcpypeParamsGMX', 'description': 'Small molecule parameterization for GROMACS MD package.', 'sink_ids': ['step3_acpype_params_gmx/output_path_gro', 'step3_acpype_params_gmx/output_path_itp', 'step3_acpype_params_gmx/output_path_top']}], 'links': [{'id': 'config', 'source_id': 'step2_babel_minimize_config', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step2_babel_minimize_input_path', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step2_babel_minimize_output_path', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_acpype_params_gmx_config', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step2_babel_minimize/output_path', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_gro', 'source_id': 'step3_acpype_params_gmx_output_path_gro', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_itp', 'source_id': 'step3_acpype_params_gmx_output_path_itp', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_top', 'source_id': 'step3_acpype_params_gmx_output_path_top', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 255,
    "text_field": "['biobb_adapters', 'README.md', 'acpype_params_gmx.cwl', 'babel_minimize.cwl', 'ligand.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process ofligand parameterizationfor asmall molecule, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theSulfasalazineprotein (3-letter code SAS), used to treat rheumatoid arthritis, ulcerative colitis, and Crohn's disease. OpenBabel and ACPypepackages are used toadd hydrogens, energetically minimize the structure, andgenerate parametersfor theGROMACSpackage. WithGeneralized Amber Force Field (GAFF) forcefield and AM1-BCCcharges. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/255?version=2 DOI:10.48546/workflowhub.workflow.255.2 Updated workflow descriptors Views:2883Downloads:542 Created: 10th Jan 2022 at 10:39 Last updated: 17th Mar 2022 at 14:06 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 622,
    "discussion_links": "[{'id': '239', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '240', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/vs_fpocket'}, {'id': '241', 'label': 'Documentation', 'url': 'https://biobb-wf-virtual-screening.readthedocs.io/en/latest/fpocket_tutorial.html'}, {'id': '242', 'label': 'Launch on MyBinder', 'url': 'https://bioexcel-binder.tsi.ebi.ac.uk/v2/gh/bioexcel/biobb_wf_virtual-screening/master?filepath=%2Fbiobb_wf_virtual-screening%2Fnotebooks%2Ffpocket%2Fwf_vs_fpocket.ipynb'}]",
    "title": "Protein-ligand docking (fpocket)",
    "license": "Apache-2.0",
    "description": "This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb).",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/257?version=1', 'commit': 'a397c3b47ce92c68e5619fc4470256e1aa11315a', 'ref': 'refs/heads/master', 'tree': '/workflows/257/git/1/tree', 'doi': '10.48546/workflowhub.workflow.257.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2022-01-10T11:48:32.000Z",
    "updated_at": "2023-01-16T13:56:53.000Z",
    "doi": "10.48546/workflowhub.workflow.257.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_fpocket_select_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_input_pockets_zip', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pdb', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pqr', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_pdbqt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step1_fpocket_select_out1', 'name': 'output_pocket_pdb', 'description': 'Path to the PDB file with the cavity found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pdb']}, {'id': 'step1_fpocket_select_out2', 'name': 'output_pocket_pqr', 'description': 'Path to the PQR file with the pocket found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box_out1', 'name': 'output_pdb_path', 'description': 'PDB including the annotation of the box center and size as REMARKs', 'type': [{'type': 'File'}], 'source_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens_out1', 'name': 'output_structure_path', 'description': 'Output structure file path', 'type': [{'type': 'File'}], 'source_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run_out1', 'name': 'output_pdbqt_path', 'description': 'Path to the output PDBQT file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_pdbqt_path']}, {'id': 'step5_autodock_vina_run_out2', 'name': 'output_log_path', 'description': 'Path to the log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'steps': [{'id': 'step1_fpocket_select', 'name': 'FPocketSelect', 'description': 'Selects a single pocket in the outputs of the fpocket building block..', 'sink_ids': ['step1_fpocket_select/output_pocket_pdb', 'step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box', 'name': 'Box', 'description': 'This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.', 'sink_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens', 'name': 'StrCheckAddHydrogens', 'description': 'This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.', 'sink_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run', 'name': 'AutoDockVinaRun', 'description': 'Wrapper of the AutoDock Vina software.', 'sink_ids': ['step5_autodock_vina_run/output_pdbqt_path', 'step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'links': [{'id': 'config', 'source_id': 'step1_fpocket_select_config', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'input_pockets_zip', 'source_id': 'step1_fpocket_select_input_pockets_zip', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pdb', 'source_id': 'step1_fpocket_select_output_pocket_pdb', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pqr', 'source_id': 'step1_fpocket_select_output_pocket_pqr', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_box_config', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_fpocket_select/output_pocket_pqr', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_box_output_pdb_path', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_babel_convert_prep_lig_config', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step3_babel_convert_prep_lig_input_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step3_babel_convert_prep_lig_output_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_str_check_add_hydrogens_config', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_str_check_add_hydrogens_input_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step4_str_check_add_hydrogens_output_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_ligand_pdbqt_path', 'source_id': 'step3_babel_convert_prep_lig/output_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_receptor_pdbqt_path', 'source_id': 'step4_str_check_add_hydrogens/output_structure_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_box_path', 'source_id': 'step2_box/output_pdb_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_pdbqt_path', 'source_id': 'step5_autodock_vina_run_output_pdbqt_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_autodock_vina_run_output_log_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_babel_convert_pose_pdb_config', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step5_autodock_vina_run/output_pdbqt_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step6_babel_convert_pose_pdb_output_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 257,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.0\nclass: Workflow\nlabel: Protein-ligand docking\ndoc: |-\n  This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb).\ninputs:\n  step1_fpocket_select_config: string\n  step1_fpocket_select_input_pockets_zip: File\n  step1_fpocket_select_output_pocket_pdb: string\n  step1_fpocket_select_output_pocket_pqr: string\n  step2_box_config: string\n  step2_box_output_pdb_path: string\n  step3_babel_convert_prep_lig_config: string\n  step3_babel_convert_prep_lig_input_path: File\n  step3_babel_convert_prep_lig_output_path: string\n  step4_str_check_add_hydrogens_config: string\n  step4_str_check_add_hydrogens_input_structure_path: File\n  step4_str_check_add_hydrogens_output_structure_path: string\n  step5_autodock_vina_run_output_pdbqt_path: string\n  step5_autodock_vina_run_output_log_path: string\n  step6_babel_convert_pose_pdb_config: string\n  step6_babel_convert_pose_pdb_output_path: string\noutputs:\n  step1_fpocket_select_out1:\n    label: output_pocket_pdb\n    doc: |-\n      Path to the PDB file with the cavity found by fpocket\n    type: File\n    outputSource: step1_fpocket_select/output_pocket_pdb\n  step1_fpocket_select_out2:\n    label: output_pocket_pqr\n    doc: |-\n      Path to the PQR file with the pocket found by fpocket\n    type: File\n    outputSource: step1_fpocket_select/output_pocket_pqr\n  step2_box_out1:\n    label: output_pdb_path\n    doc: |-\n      PDB including the annotation of the box center and size as REMARKs\n    type: File\n    outputSource: step2_box/output_pdb_path\n  step3_babel_convert_prep_lig_out1:\n    label: output_path\n    doc: |-\n      Path to the output file\n    type: File\n    outputSource: step3_babel_convert_prep_lig/output_path\n  step4_str_check_add_hydrogens_out1:\n    label: output_structure_path\n    doc: |-\n      Output structure file path\n    type: File\n    outputSource: step4_str_check_add_hydrogens/output_structure_path\n  step5_autodock_vina_run_out1:\n    label: output_pdbqt_path\n    doc: |-\n      Path to the output PDBQT file\n    type: File\n    outputSource: step5_autodock_vina_run/output_pdbqt_path\n  step5_autodock_vina_run_out2:\n    label: output_log_path\n    doc: |-\n      Path to the log file\n    type: File\n    outputSource: step5_autodock_vina_run/output_log_path\n  step6_babel_convert_pose_pdb_out1:\n    label: output_path\n    doc: |-\n      Path to the output file\n    type: File\n    outputSource: step6_babel_convert_pose_pdb/output_path\nsteps:\n  step1_fpocket_select:\n    label: FPocketSelect\n    doc: |-\n      Selects a single pocket in the outputs of the fpocket building block..\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/fpocket_select.cwl\n    in:\n      config: step1_fpocket_select_config\n      input_pockets_zip: step1_fpocket_select_input_pockets_zip\n      output_pocket_pdb: step1_fpocket_select_output_pocket_pdb\n      output_pocket_pqr: step1_fpocket_select_output_pocket_pqr\n    out:\n    - output_pocket_pdb\n    - output_pocket_pqr\n  step2_box:\n    label: Box\n    doc: |-\n      This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/box.cwl\n    in:\n      config: step2_box_config\n      input_pdb_path: step1_fpocket_select/output_pocket_pqr\n      output_pdb_path: step2_box_output_pdb_path\n    out:\n    - output_pdb_path\n  step3_babel_convert_prep_lig:\n    label: BabelConvert\n    doc: |-\n      Small molecule format conversion.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_chemistry/babel_convert.cwl\n    in:\n      config: step3_babel_convert_prep_lig_config\n      input_path: step3_babel_convert_prep_lig_input_path\n      output_path: step3_babel_convert_prep_lig_output_path\n    out:\n    - output_path\n  step4_str_check_add_hydrogens:\n    label: StrCheckAddHydrogens\n    doc: |-\n      This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_structure_utils/str_check_add_hydrogens.cwl\n    in:\n      config: step4_str_check_add_hydrogens_config\n      input_structure_path: step4_str_check_add_hydrogens_input_structure_path\n      output_structure_path: step4_str_check_add_hydrogens_output_structure_path\n    out:\n    - output_structure_path\n  step5_autodock_vina_run:\n    label: AutoDockVinaRun\n    doc: |-\n      Wrapper of the AutoDock Vina software.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/autodock_vina_run.cwl\n    in:\n      input_ligand_pdbqt_path: step3_babel_convert_prep_lig/output_path\n      input_receptor_pdbqt_path: step4_str_check_add_hydrogens/output_structure_path\n      input_box_path: step2_box/output_pdb_path\n      output_pdbqt_path: step5_autodock_vina_run_output_pdbqt_path\n      output_log_path: step5_autodock_vina_run_output_log_path\n    out:\n    - output_pdbqt_path\n    - output_log_path\n  step6_babel_convert_pose_pdb:\n    label: BabelConvert\n    doc: |-\n      Small molecule format conversion.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_chemistry/babel_convert.cwl\n    in:\n      config: step6_babel_convert_pose_pdb_config\n      input_path: step5_autodock_vina_run/output_pdbqt_path\n      output_path: step6_babel_convert_pose_pdb_output_path\n    out:\n    - output_path",
    "p_tag_content": "This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/257?version=1 DOI:10.48546/workflowhub.workflow.257.1 Added/updated 1 files Views:1257Downloads:147 Created: 10th Jan 2022 at 11:48 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 623,
    "discussion_links": "[{'id': '243', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '244', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/protein-complex_md_setup'}, {'id': '245', 'label': 'Documentation', 'url': 'https://biobb-wf-protein-complex-md-setup.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein Ligand Complex MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# Protein Ligand Complex MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/complex/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation system** containing a **protein in complex with a ligand**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **T4 lysozyme** L99A/M102Q protein (PDB code 3HTB), in complex with the **2-propylphenol** small molecule (3-letter Code JZ4). \n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/258?version=1', 'commit': '2816c507dd61acf6a1f21aecd49aa7284990c32c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/258/git/1/tree', 'doi': '10.48546/workflowhub.workflow.258.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/258?version=2', 'commit': 'b82813d5302869cbb3925995bbbaf032bbbbdb32', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/258/git/2/tree', 'doi': '10.48546/workflowhub.workflow.258.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T10:54:43.000Z",
    "updated_at": "2023-06-07T11:04:49.000Z",
    "doi": "10.48546/workflowhub.workflow.258.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 258,
    "text_field": "['biobb_adapters', 'README.md', 'append_ligand.cwl', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'genrestr.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'ligand.gro', 'ligand.itp', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulation systemcontaining aprotein in complex with a ligand, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theT4 lysozymeL99A/M102Q protein (PDB code 3HTB), in complex with the2-propylphenolsmall molecule (3-letter Code JZ4). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/258?version=2 DOI:10.48546/workflowhub.workflow.258.2 Updated workflow descriptors Views:2611Downloads:519 Created: 10th Jan 2022 at 11:52 Last updated: 17th Mar 2022 at 09:54 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 624,
    "discussion_links": "[{'id': '247', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '248', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/vs_fpocket'}, {'id': '249', 'label': 'Documentation', 'url': 'https://biobb-wf-virtual-screening.readthedocs.io/en/latest/fpocket_tutorial.html'}]",
    "title": "CWL Protein-ligand Docking tutorial (Fpocket)",
    "license": "Apache-2.0",
    "description": "# Protein-ligand Docking tutorials using BioExcel Building Blocks (biobb)\n\nThis tutorials aim to illustrate the process of **protein-ligand docking**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular examples used are based on the **Mitogen-activated protein kinase 14** (p38-α) protein (PDB code [3HEC](https://www.rcsb.org/structure/3HEC)), a well-known **Protein Kinase enzyme**,\n in complex with the FDA-approved **Imatinib** (PDB Ligand code [STI](https://www.rcsb.org/ligand/STI), DrugBank Ligand Code [DB00619](https://go.drugbank.com/drugs/DB00619)) and **Dasatinib** (PDB Ligand code [1N1](https://www.rcsb.org/ligand/1N1), DrugBank Ligand Code [DB01254](https://go.drugbank.com/drugs/DB01254)), small **kinase inhibitors** molecules used to treat certain types of **cancer**.\n\nThe tutorials will guide you through the process of identifying the **active site cavity** (pocket) without previous knowledge, and the final prediction of the **protein-ligand complex**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/259?version=1', 'commit': '6fdda2045bc7bf3f10b7654acd45daedc34f12ac', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/259/git/1/tree', 'doi': '10.48546/workflowhub.workflow.259.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/259?version=2', 'commit': '992192ca9b524bac76e6eb011757e51e55dbc278', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/259/git/2/tree', 'doi': '10.48546/workflowhub.workflow.259.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T14:57:00.000Z",
    "updated_at": "2023-06-06T15:02:00.000Z",
    "doi": "10.48546/workflowhub.workflow.259.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_fpocket_select_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_input_pockets_zip', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pdb', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pqr', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_pdbqt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step1_fpocket_select_out1', 'name': 'output_pocket_pdb', 'description': 'Path to the PDB file with the cavity found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pdb']}, {'id': 'step1_fpocket_select_out2', 'name': 'output_pocket_pqr', 'description': 'Path to the PQR file with the pocket found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box_out1', 'name': 'output_pdb_path', 'description': 'PDB including the annotation of the box center and size as REMARKs', 'type': [{'type': 'File'}], 'source_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens_out1', 'name': 'output_structure_path', 'description': 'Output structure file path', 'type': [{'type': 'File'}], 'source_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run_out1', 'name': 'output_pdbqt_path', 'description': 'Path to the output PDBQT file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_pdbqt_path']}, {'id': 'step5_autodock_vina_run_out2', 'name': 'output_log_path', 'description': 'Path to the log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'steps': [{'id': 'step1_fpocket_select', 'name': 'FPocketSelect', 'description': 'Selects a single pocket in the outputs of the fpocket building block..', 'sink_ids': ['step1_fpocket_select/output_pocket_pdb', 'step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box', 'name': 'Box', 'description': 'This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.', 'sink_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens', 'name': 'StrCheckAddHydrogens', 'description': 'This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.', 'sink_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run', 'name': 'AutoDockVinaRun', 'description': 'Wrapper of the AutoDock Vina software.', 'sink_ids': ['step5_autodock_vina_run/output_pdbqt_path', 'step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'links': [{'id': 'config', 'source_id': 'step1_fpocket_select_config', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'input_pockets_zip', 'source_id': 'step1_fpocket_select_input_pockets_zip', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pdb', 'source_id': 'step1_fpocket_select_output_pocket_pdb', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pqr', 'source_id': 'step1_fpocket_select_output_pocket_pqr', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_box_config', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_fpocket_select/output_pocket_pqr', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_box_output_pdb_path', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_babel_convert_prep_lig_config', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step3_babel_convert_prep_lig_input_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step3_babel_convert_prep_lig_output_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_str_check_add_hydrogens_config', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_str_check_add_hydrogens_input_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step4_str_check_add_hydrogens_output_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_ligand_pdbqt_path', 'source_id': 'step3_babel_convert_prep_lig/output_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_receptor_pdbqt_path', 'source_id': 'step4_str_check_add_hydrogens/output_structure_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_box_path', 'source_id': 'step2_box/output_pdb_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_pdbqt_path', 'source_id': 'step5_autodock_vina_run_output_pdbqt_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_autodock_vina_run_output_log_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_babel_convert_pose_pdb_config', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step5_autodock_vina_run/output_pdbqt_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step6_babel_convert_pose_pdb_output_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 259,
    "text_field": "['biobb_adapters', 'README.md', 'all_pockets.zip', 'autodock_vina_run.cwl', 'babel_convert.cwl', 'box.cwl', 'fpocket_select.cwl', 'str_check_add_hydrogens.cwl', 'ligand.pdb', 'protein.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorials aim to illustrate the process ofprotein-ligand docking, step by step, using theBioExcel Building Blocks library (biobb). The particular examples used are based on theMitogen-activated protein kinase 14(p38-α) protein (PDB code3HEC), a well-knownProtein Kinase enzyme,\nin complex with the FDA-approvedImatinib(PDB Ligand codeSTI, DrugBank Ligand CodeDB00619) andDasatinib(PDB Ligand code1N1, DrugBank Ligand CodeDB01254), smallkinase inhibitorsmolecules used to treat certain types ofcancer. The tutorials will guide you through the process of identifying theactive site cavity(pocket) without previous knowledge, and the final prediction of theprotein-ligand complex. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/259?version=2 DOI:10.48546/workflowhub.workflow.259.2 Updated workflow descriptors Views:2587Downloads:490 Created: 10th Jan 2022 at 11:55 Last updated: 17th Mar 2022 at 10:13 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 625,
    "discussion_links": "[{'id': '251', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '252', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_md_setup'}, {'id': '253', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/mdsetup_tutorial.html'}]",
    "title": "CWL Amber Protein MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/260?version=1', 'commit': '569bbc97a5617a3df32d494c69cffb360f332800', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/260/git/1/tree', 'doi': '10.48546/workflowhub.workflow.260.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/260?version=2', 'commit': '817772879b025350923ed55b5b2ac62f4f8706c6', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/260/git/2/tree', 'doi': '10.48546/workflowhub.workflow.260.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-08T07:26:33.000Z",
    "updated_at": "2023-06-08T07:32:27.000Z",
    "doi": "10.48546/workflowhub.workflow.260.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_molecule_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb4amber_run_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_amber_to_pdb_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_input_exp_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step20_rmsd_exp_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_molecule/output_molecule_path']}, {'id': 'step1_pdb4amber_run_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_pdb_path']}, {'id': 'step2_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_top_path']}, {'id': 'step2_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_traj_path']}, {'id': 'step3_sander_mdrun_minH_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_rst_path']}, {'id': 'step3_sander_mdrun_minH_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_traj_path']}, {'id': 'step5_sander_mdrun_min_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_rst_path']}, {'id': 'step5_sander_mdrun_min_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_pdb_path']}, {'id': 'step8_leap_solvate_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_top_path']}, {'id': 'step8_leap_solvate_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_pdb_path']}, {'id': 'step9_leap_add_ions_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_top_path']}, {'id': 'step9_leap_add_ions_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_traj_path']}, {'id': 'step10_sander_mdrun_energy_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_rst_path']}, {'id': 'step10_sander_mdrun_energy_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_traj_path']}, {'id': 'step12_sander_mdrun_warm_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_rst_path']}, {'id': 'step12_sander_mdrun_warm_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_traj_path']}, {'id': 'step14_sander_mdrun_nvt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_rst_path']}, {'id': 'step14_sander_mdrun_nvt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_traj_path']}, {'id': 'step16_sander_mdrun_npt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_rst_path']}, {'id': 'step16_sander_mdrun_npt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_traj_path']}, {'id': 'step18_sander_mdrun_md_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_rst_path']}, {'id': 'step18_sander_mdrun_md_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output analysis', 'type': [{'type': 'File'}], 'source_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory', 'type': [{'type': 'File'}], 'source_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'steps': [{'id': 'step0_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step0_extract_molecule/output_molecule_path']}, {'id': 'step1_pdb4amber_run', 'name': 'Pdb4amberRun', 'description': 'Analyse PDB files and clean them for further usage, especially with the LEaP programs of Amber, using pdb4amber tool from the AmberTools MD package', 'sink_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top', 'name': 'LeapGenTop', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step2_leap_gen_top/output_pdb_path', 'step2_leap_gen_top/output_top_path', 'step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step3_sander_mdrun_minH/output_traj_path', 'step3_sander_mdrun_minH/output_rst_path', 'step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step5_sander_mdrun_min/output_traj_path', 'step5_sander_mdrun_min/output_rst_path', 'step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb', 'name': 'AmberToPDB', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate', 'name': 'LeapSolvate', 'description': 'Creates and solvates a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step8_leap_solvate/output_pdb_path', 'step8_leap_solvate/output_top_path', 'step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions', 'name': 'LeapAddIons', 'description': 'Adds counterions to a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step9_leap_add_ions/output_pdb_path', 'step9_leap_add_ions/output_top_path', 'step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step10_sander_mdrun_energy/output_traj_path', 'step10_sander_mdrun_energy/output_rst_path', 'step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step12_sander_mdrun_warm/output_traj_path', 'step12_sander_mdrun_warm/output_rst_path', 'step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun_nvt/output_traj_path', 'step14_sander_mdrun_nvt/output_rst_path', 'step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step16_sander_mdrun_npt/output_traj_path', 'step16_sander_mdrun_npt/output_rst_path', 'step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step18_sander_mdrun_md/output_traj_path', 'step18_sander_mdrun_md/output_rst_path', 'step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr', 'name': 'CpptrajRgyr', 'description': 'Wrapper of the Ambertools Cpptraj module for computing the radius of gyration (Rgyr) from a given cpptraj compatible trajectory.', 'sink_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image', 'name': 'CpptrajImage', 'description': 'Wrapper of the Ambertools Cpptraj module for correcting periodicity (image) from a given cpptraj trajectory file.', 'sink_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step0_extract_molecule_input_structure_path', 'sink_id': 'step0_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step0_extract_molecule_output_molecule_path', 'sink_id': 'step0_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_molecule/output_molecule_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step1_pdb4amber_run_output_pdb_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_leap_gen_top_config', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb4amber_run/output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_leap_gen_top_output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step2_leap_gen_top_output_top_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step2_leap_gen_top_output_crd_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_sander_mdrun_minH_config', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step3_sander_mdrun_minH_output_traj_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step3_sander_mdrun_minH_output_rst_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_sander_mdrun_minH_output_log_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_process_minout_minH_config', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step3_sander_mdrun_minH/output_log_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step4_process_minout_minH_output_dat_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_sander_mdrun_min_config', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step5_sander_mdrun_min_output_traj_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step5_sander_mdrun_min_output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_sander_mdrun_min_output_log_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_process_minout_min_config', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step5_sander_mdrun_min/output_log_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step6_process_minout_min_output_dat_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step7_amber_to_pdb_output_pdb_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_leap_solvate_config', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_amber_to_pdb/output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_leap_solvate_output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step8_leap_solvate_output_top_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step8_leap_solvate_output_crd_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_leap_add_ions_config', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_leap_solvate/output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step9_leap_add_ions_output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step9_leap_add_ions_output_top_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step9_leap_add_ions_output_crd_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step10_sander_mdrun_energy_config', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step9_leap_add_ions/output_top_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step9_leap_add_ions/output_crd_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step9_leap_add_ions/output_crd_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step10_sander_mdrun_energy_output_traj_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step10_sander_mdrun_energy_output_rst_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step10_sander_mdrun_energy_output_log_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_process_minout_energy_config', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step10_sander_mdrun_energy/output_log_path', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step11_process_minout_energy_output_dat_path', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step12_sander_mdrun_warm_config', 'sink_id': 'step12_sander_mdrun_warm', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step9_leap_add_ions/output_top_path', 'sink_id': 'step12_sander_mdrun_warm',",
    "tools": [],
    "id": 260,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'cat_pdb.cwl', 'cpptraj_image.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'extract_molecule.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'pdb4amber_run.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'reduce_remove_hydrogens.cwl', 'sander_mdrun.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/260?version=2 DOI:10.48546/workflowhub.workflow.260.2 Updated workflow descriptors Views:2297Downloads:401 Created: 10th Jan 2022 at 13:24 Last updated: 17th Mar 2022 at 10:24 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 626,
    "discussion_links": "[{'id': '256', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '257', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_md_setup_lig'}, {'id': '258', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/mdsetup_lig_tutorial.html'}]",
    "title": "CWL Amber Protein Ligand Complex MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/261?version=1', 'commit': 'c9cd8a761d59321a668a2de6190b4e3b82f336c9', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/261/git/1/tree', 'doi': '10.48546/workflowhub.workflow.261.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/261?version=2', 'commit': 'b9eafdb1156b1bb84fa51f88250732766685b54e', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/261/git/2/tree', 'doi': '10.48546/workflowhub.workflow.261.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-09T06:44:44.000Z",
    "updated_at": "2023-06-09T07:10:36.000Z",
    "doi": "10.48546/workflowhub.workflow.261.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step00_extract_molecule_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb4amber_run_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_leap_gen_top_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_amber_to_pdb_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step8_leap_solvate_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step9_leap_add_ions_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step00_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step00_extract_molecule/output_molecule_path']}, {'id': 'step0_cat_pdb_out1', 'name': 'output_structure_path', 'description': 'Output protein file path', 'type': [{'type': 'File'}], 'source_ids': ['step0_cat_pdb/output_structure_path']}, {'id': 'step1_pdb4amber_run_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_pdb_path']}, {'id': 'step2_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_top_path']}, {'id': 'step2_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_traj_path']}, {'id': 'step3_sander_mdrun_minH_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_rst_path']}, {'id': 'step3_sander_mdrun_minH_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_traj_path']}, {'id': 'step5_sander_mdrun_min_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_rst_path']}, {'id': 'step5_sander_mdrun_min_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_pdb_path']}, {'id': 'step8_leap_solvate_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_top_path']}, {'id': 'step8_leap_solvate_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_pdb_path']}, {'id': 'step9_leap_add_ions_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_top_path']}, {'id': 'step9_leap_add_ions_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_traj_path']}, {'id': 'step10_sander_mdrun_energy_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_rst_path']}, {'id': 'step10_sander_mdrun_energy_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_traj_path']}, {'id': 'step12_sander_mdrun_warm_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_rst_path']}, {'id': 'step12_sander_mdrun_warm_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_traj_path']}, {'id': 'step14_sander_mdrun_nvt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_rst_path']}, {'id': 'step14_sander_mdrun_nvt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_traj_path']}, {'id': 'step16_sander_mdrun_npt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_rst_path']}, {'id': 'step16_sander_mdrun_npt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_traj_path']}, {'id': 'step18_sander_mdrun_md_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_rst_path']}, {'id': 'step18_sander_mdrun_md_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output analysis', 'type': [{'type': 'File'}], 'source_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory', 'type': [{'type': 'File'}], 'source_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'steps': [{'id': 'step00_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step00_extract_molecule/output_molecule_path']}, {'id': 'step0_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step0_cat_pdb/output_structure_path']}, {'id': 'step1_pdb4amber_run', 'name': 'Pdb4amberRun', 'description': 'Analyse PDB files and clean them for further usage, especially with the LEaP programs of Amber, using pdb4amber tool from the AmberTools MD package', 'sink_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top', 'name': 'LeapGenTop', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step2_leap_gen_top/output_pdb_path', 'step2_leap_gen_top/output_top_path', 'step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step3_sander_mdrun_minH/output_traj_path', 'step3_sander_mdrun_minH/output_rst_path', 'step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step5_sander_mdrun_min/output_traj_path', 'step5_sander_mdrun_min/output_rst_path', 'step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb', 'name': 'AmberToPDB', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate', 'name': 'LeapSolvate', 'description': 'Creates and solvates a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step8_leap_solvate/output_pdb_path', 'step8_leap_solvate/output_top_path', 'step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions', 'name': 'LeapAddIons', 'description': 'Adds counterions to a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step9_leap_add_ions/output_pdb_path', 'step9_leap_add_ions/output_top_path', 'step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step10_sander_mdrun_energy/output_traj_path', 'step10_sander_mdrun_energy/output_rst_path', 'step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step12_sander_mdrun_warm/output_traj_path', 'step12_sander_mdrun_warm/output_rst_path', 'step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun_nvt/output_traj_path', 'step14_sander_mdrun_nvt/output_rst_path', 'step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step16_sander_mdrun_npt/output_traj_path', 'step16_sander_mdrun_npt/output_rst_path', 'step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step18_sander_mdrun_md/output_traj_path', 'step18_sander_mdrun_md/output_rst_path', 'step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr', 'name': 'CpptrajRgyr', 'description': 'Wrapper of the Ambertools Cpptraj module for computing the radius of gyration (Rgyr) from a given cpptraj compatible trajectory.', 'sink_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image', 'name': 'CpptrajImage', 'description': 'Wrapper of the Ambertools Cpptraj module for correcting periodicity (image) from a given cpptraj trajectory file.', 'sink_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step00_extract_molecule_input_structure_path', 'sink_id': 'step00_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step00_extract_molecule_output_molecule_path', 'sink_id': 'step00_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step00_extract_molecule/output_molecule_path', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step0_cat_pdb_input_structure2', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_cat_pdb_output_structure_path', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_cat_pdb/output_structure_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step1_pdb4amber_run_output_pdb_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_leap_gen_top_config', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb4amber_run/output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_lib_path', 'source_id': 'step2_leap_gen_top_input_lib_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_frcmod_path', 'source_id': 'step2_leap_gen_top_input_frcmod_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_leap_gen_top_output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step2_leap_gen_top_output_top_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step2_leap_gen_top_output_crd_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_sander_mdrun_minH_config', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step3_sander_mdrun_minH_output_traj_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step3_sander_mdrun_minH_output_rst_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_sander_mdrun_minH_output_log_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_process_minout_minH_config', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step3_sander_mdrun_minH/output_log_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step4_process_minout_minH_output_dat_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_sander_mdrun_min_config', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step5_sander_mdrun_min_output_traj_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step5_sander_mdrun_min_output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_sander_mdrun_min_output_log_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_process_minout_min_config', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step5_sander_mdrun_min/output_log_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step6_process_minout_min_output_dat_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step7_amber_to_pdb_output_pdb_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_leap_solvate_config', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_amber_to_pdb/output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_lib_path', 'source_id': 'step8_leap_solvate_input_lib_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_frcmod_path', 'source_id': 'step8_leap_solvate_input_frcmod_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_leap_solvate_output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step8_leap_solvate_output_top_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step8_leap_solvate_output_crd_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_leap_add_ions_config', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_leap_solvate/output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'n",
    "tools": [],
    "id": 261,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'cat_pdb.cwl', 'cpptraj_image.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'extract_molecule.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'pdb4amber_run.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'reduce_remove_hydrogens.cwl', 'sander_mdrun.cwl', 'heteroatoms.pdb', 'input_frcmod.zip', 'input_lib.zip', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/261?version=2 DOI:10.48546/workflowhub.workflow.261.2 Updated workflow descriptors Views:2687Downloads:503 Created: 10th Jan 2022 at 15:27 Last updated: 17th Mar 2022 at 10:35 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 627,
    "discussion_links": "[{'id': '260', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '261', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_abcsetup'}, {'id': '262', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/abcsetup_tutorial.html'}]",
    "title": "CWL ABC MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/262?version=1', 'commit': 'c3a41d929d94bc5b5130ae33f44922d59170c319', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/262/git/1/tree', 'doi': '10.48546/workflowhub.workflow.262.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/262?version=2', 'commit': '62d05f1208abc6a6ac532456486ecda97165a3df', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/262/git/2/tree', 'doi': '10.48546/workflowhub.workflow.262.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-12T08:27:43.000Z",
    "updated_at": "2023-06-12T08:35:34.000Z",
    "doi": "10.48546/workflowhub.workflow.262.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 262,
    "text_field": "['ABCix_config_files', 'biobb_adapters', 'md.in', 'md.in.ORIG', 'step1.in', 'step10.in', 'step2.in', 'step3.in', 'step4.in', 'step5.in', 'step6.in', 'step7.in', 'step8.in', 'step9.in', 'README.md', 'cpptraj_image.cwl', 'cpptraj_randomize_ions.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'parmed_hmassrepartition.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'sander_mdrun.cwl', 'sequence.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/262?version=2 DOI:10.48546/workflowhub.workflow.262.2 Updated workflow descriptors Views:2531Downloads:493 Created: 11th Jan 2022 at 08:14 Last updated: 17th Mar 2022 at 10:44 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 1,
    "discussion_links": [],
    "title": "Virus genome assembly with Unicycler and Spades.",
    "license": "MIT",
    "description": "Virus genome assembly with Unicycler and Spades,\nThe 2 assemblers works in parallel. The graph  visualization is made with Bandage.\nworkflow git repository : https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/blob/master/Assembly/workflow/assembly-wf-virus.cwl\nBased on  https://github.com/galaxyproject/SARS-CoV-2/blob/master/genomics/2-Assembly/as_wf.png",
    "latest_version": 1,
    "tags": "['Assembly', 'covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/3?version=1', 'commit': 'c03490495899c483a57b2f32b0bce0290c07f08d', 'ref': 'refs/heads/master', 'tree': '/workflows/3/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-04-10T10:45:00.000Z",
    "updated_at": "2023-01-16T13:39:45.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_file_type', 'name': None, 'description': 'Paired and single end data', 'type': [{'type': 'enum', 'symbols': ['paired', 'single']}], 'default_value': None}, {'id': 'mode', 'name': None, 'description': 'Bridging mode, values:\\nconservative (smaller contigs, lower misassembly)\\nnormal (moderate contig size and misassembly rate)\\nbold  (longest contigs, higher misassembly rate)\\n', 'type': [{'type': 'enum', 'symbols': ['conservative', 'normal', 'bold']}], 'default_value': None}, {'id': 'fastq1_type', 'name': None, 'description': 'Type of the First set of reads. Only when fastq_file_type = single  or  paired', 'type': [{'type': 'enum', 'symbols': ['fastqsanger', 'fastqsanger.gz']}], 'default_value': 'fastqsanger'}, {'id': 'fastq1', 'name': None, 'description': 'First set of reads with forward reads. Only when fastq_file_type = single or paired', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'fastq2_type', 'name': None, 'description': 'Type of the Second set of reads. Only when fastq_file_type=paired', 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['fastqsanger', 'fastqsanger.gz']}], 'default_value': 'null'}, {'id': 'fastq2', 'name': None, 'description': 'Second set of reads with reverse reads. Only when fastq_file_type=paired', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'libraries_metadata', 'name': None, 'description': 'reads library metadata\\nrelated to   libraries_fwd_rev and libraries_mono inputs\\nlib_index(id) must match\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'libraries_fwd_rev', 'name': None, 'description': 'reads file\\norientation must be a value in  ff, fr, rf\\nK-mer choices can be chosen by SPAdes instead of being entered manually\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'libraries_mono', 'name': None, 'description': 'reads file\\nfile_type value must be in : interleaved, merged, unpaired\\n', 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': 'pacbio_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'nanopore_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'sanger_reads', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'trusted_contigs', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'untrusted_contigs', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'default_value': None}, {'id': 'auto_kmer_choice', 'name': None, 'description': 'Automatically choose k-mer values.\\nK-mer choices can be chosen by SPAdes instead of being entered manually\\n', 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'kmers', 'name': None, 'description': 'K-mers to use, separated by commas.\\nComma-separated list of k-mer sizes to be used \\n(all values must be odd, less than 128, listed in ascending order,\\n and smaller than the read length). The default value is 21,33,55\\n', 'type': [{'type': 'string'}], 'default_value': '21,33,55'}, {'id': 'cov_state', 'name': None, 'description': \"Coverage cutoff ( 'auto', or 'off', or 'value'). auto if null\\nwhen cov_state=value (User Specific) , cov_cutoff must be provided\\n\", 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': [False, 'value', 'auto']}], 'default_value': None}, {'id': 'cov_cutoff', 'name': None, 'description': 'coverage cutoff value (a positive float number )\\n', 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'iontorrent', 'name': None, 'description': 'true if Libraries are IonTorrent reads.\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'sc', 'name': None, 'description': 'This option is required for MDA. \\ntrue if single-cell data. \\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'onlyassembler', 'name': None, 'description': 'Run only assembly if true\\n(without read error correction)\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'careful', 'name': None, 'description': 'Careful correction.\\nTries to reduce number of mismatches and short indels. \\nAlso runs MismatchCorrector, a post processing tool,\\nwhich uses BWA tool (comes with SPAdes).\\n', 'type': [{'type': 'boolean'}], 'default_value': True}], 'outputs': [{'id': 'out_contigs_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_contigs']}, {'id': 'out_scaffolds_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_scaffolds']}, {'id': 'out_contig_stats_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_contig_stats']}, {'id': 'out_scaffold_stats_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/out_scaffold_stats']}, {'id': 'assembly_graph_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/assembly_graph']}, {'id': 'assembly_graph_with_scaffolds_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['spades/assembly_graph_with_scaffolds']}, {'id': 'all_log_spades', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['spades/all_log']}, {'id': 'assembly_image_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_image_spades/image']}, {'id': 'assembly_info_spades', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_info_spades/assembly_graph_info']}, {'id': 'assembly_graph_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unicycler/assembly_graph']}, {'id': 'assembly_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unicycler/assembly']}, {'id': 'assembly_image_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_image_unicycler/image']}, {'id': 'assembly_info_unicycler', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['bandage_info_unicycler/assembly_graph_info']}], 'steps': [{'id': 'unicycler', 'name': None, 'description': None, 'sink_ids': ['unicycler/assembly_graph', 'unicycler/assembly']}, {'id': 'spades', 'name': None, 'description': None, 'sink_ids': ['spades/out_contigs', 'spades/out_scaffolds', 'spades/out_contig_stats', 'spades/out_scaffold_stats', 'spades/assembly_graph', 'spades/assembly_graph_with_scaffolds', 'spades/all_log']}, {'id': 'bandage_image_unicycler', 'name': None, 'description': None, 'sink_ids': ['bandage_image_unicycler/image']}, {'id': 'bandage_info_unicycler', 'name': None, 'description': None, 'sink_ids': ['bandage_info_unicycler/assembly_graph_info']}, {'id': 'bandage_image_spades', 'name': None, 'description': None, 'sink_ids': ['bandage_image_spades/image']}, {'id': 'bandage_info_spades', 'name': None, 'description': None, 'sink_ids': ['bandage_info_spades/assembly_graph_info']}], 'links': [{'id': 'fastq1_type', 'source_id': 'fastq1_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'fastq1', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq2_type', 'source_id': 'fastq2_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'fastq2', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'mode', 'source_id': 'mode', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'fastq_file_type', 'source_id': 'fastq_file_type', 'sink_id': 'unicycler', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'pacbio_reads', 'source_id': 'pacbio_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'sanger_reads', 'source_id': 'sanger_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_metadata', 'source_id': 'libraries_metadata', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_fwd_rev', 'source_id': 'libraries_fwd_rev', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'libraries_mono', 'source_id': 'libraries_mono', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'trusted_contigs', 'source_id': 'trusted_contigs', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'untrusted_contigs', 'source_id': 'untrusted_contigs', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'cov_state', 'source_id': 'cov_state', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'cov_cutoff', 'source_id': 'cov_cutoff', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'iontorrent', 'source_id': 'iontorrent', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'sc', 'source_id': 'sc', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'onlyassembler', 'source_id': 'onlyassembler', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'careful', 'source_id': 'careful', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'auto_kmer_choice', 'source_id': 'auto_kmer_choice', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'kmers', 'source_id': 'kmers', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'unicycler/assembly_graph', 'sink_id': 'bandage_image_unicycler', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'unicycler/assembly_graph', 'sink_id': 'bandage_info_unicycler', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'spades/assembly_graph', 'sink_id': 'bandage_image_spades', 'name': None, 'default_value': None}, {'id': 'graph', 'source_id': 'spades/assembly_graph', 'sink_id': 'bandage_info_spades', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 3,
    "text_field": "['assembly-wf-virus.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: assembly_wf_virus\nlabel: assembly-wf-virus\n \ndoc:  \"Virus genome assembly with Unicycler and spades, in parallel. visualisation with bandage\"\n\n\ninputs:\n\n##############unicycler\n\n  - id: fastq_file_type\n    type:\n      type: enum\n      symbols: [paired,single]\n    doc:  \"Paired and single end data\"\n  \n  \n  - id: mode\n    type:\n      type: enum\n      symbols: [conservative,normal,bold]\n    doc: |\n        Bridging mode, values:\n        conservative (smaller contigs, lower misassembly)\n        normal (moderate contig size and misassembly rate)\n        bold  (longest contigs, higher misassembly rate)\n\n\n  - id: fastq1_type\n    type:\n      type: enum\n      symbols:\n        - fastqsanger\n        - fastqsanger.gz\n    doc: \"Type of the First set of reads. Only when fastq_file_type = single  or  paired\"  \n    default: fastqsanger\n\n  - id: fastq1\n    type: File\n    doc: \"First set of reads with forward reads. Only when fastq_file_type = single or paired\" \n\n\n  - id: fastq2_type\n    type:\n     - \"null\"\n     -  type: enum\n        symbols:\n         - fastqsanger\n         - fastqsanger.gz\n    default: \"null\"\n    doc: \"Type of the Second set of reads. Only when fastq_file_type=paired\"  \n\n    \n  - id: fastq2\n    type: File?\n    doc: \"Second set of reads with reverse reads. Only when fastq_file_type=paired\"  \n\n\n\n\n\n##############spades\n\n\n  - id: libraries_metadata\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n             - name: lib_index\n               type: int? \n\n             - name: orientation\n               type: string?\n  \n             - name: lib_type\n               type: string? \n\n\n    doc: |\n        reads library metadata\n        related to   libraries_fwd_rev and libraries_mono inputs\n        lib_index(id) must match\n\n\n  - id: libraries_fwd_rev\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n\n             - name: lib_index\n               type: int? \n\n             - name: fwd_reads\n               type: File?\n\n             - name: rev_reads\n               type: File?\n    doc: |\n        reads file\n        orientation must be a value in  ff, fr, rf\n        K-mer choices can be chosen by SPAdes instead of being entered manually\n\n\n  - id: libraries_mono\n    type:\n      type: array\n      items:\n          type: record\n          fields:\n\n             - name: lib_index\n               type: int? \n\n             - name: file_type\n               type: string?\n\n             - name: reads\n               type: File?\n    doc: |\n        reads file\n        file_type value must be in : interleaved, merged, unpaired\n\n\n\n  - id: pacbio_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: nanopore_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: sanger_reads\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: trusted_contigs\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n  - id: untrusted_contigs\n    type:\n      - \"null\"\n      - type: array\n        items: File\n \n\n\n \n\n  - id: auto_kmer_choice\n    type:  boolean\n    default: true\n    doc: |\n        Automatically choose k-mer values.\n        K-mer choices can be chosen by SPAdes instead of being entered manually\n\n  - id: kmers\n    type:  string\n    default: \"21,33,55\"\n    doc: |\n        K-mers to use, separated by commas.\n        Comma-separated list of k-mer sizes to be used \n        (all values must be odd, less than 128, listed in ascending order,\n         and smaller than the read length). The default value is 21,33,55\n\n\n\n  - id: cov_state\n    type:\n     - \"null\"\n     -  type: enum\n        symbols:\n          - off\n          - value\n          - auto\n    doc: |\n        Coverage cutoff ( 'auto', or 'off', or 'value'). auto if null\n        when cov_state=value (User Specific) , cov_cutoff must be provided\n\n\n  - id: cov_cutoff\n    type:  float?\n    doc: |\n        coverage cutoff value (a positive float number )\n\n  - id: iontorrent\n    type:  boolean\n    default: false\n    doc: |\n        true if Libraries are IonTorrent reads.\n\n  - id: sc\n    type:  boolean\n    default: false\n    doc: |\n        This option is required for MDA. \n        true if single-cell data. \n\n  - id: onlyassembler\n    type: boolean\n    default: false\n    doc: |\n        Run only assembly if true\n        (without read error correction)\n\n\n  - id: careful\n    type: boolean\n    default: true\n    doc: |\n        Careful correction.\n        Tries to reduce number of mismatches and short indels. \n        Also runs MismatchCorrector, a post processing tool,\n        which uses BWA tool (comes with SPAdes).\n\n \n\n\n\n\noutputs:\n\n  - id: out_contigs_spades\n    outputSource:\n      - spades/out_contigs\n    type: 'File'\n\n  - id: out_scaffolds_spades\n    outputSource:\n      - spades/out_scaffolds\n    type: 'File'\n\n  - id: out_contig_stats_spades\n    outputSource:\n      - spades/out_contig_stats\n    type: 'File'\n\n\n  - id: out_scaffold_stats_spades\n    outputSource:\n      - spades/out_scaffold_stats\n    type: 'File'\n\n\n  - id: assembly_graph_spades\n    outputSource:\n      - spades/assembly_graph\n    type: 'File'\n\n  - id: assembly_graph_with_scaffolds_spades\n    outputSource:\n      - spades/assembly_graph_with_scaffolds\n    type: 'File'\n\n  - id: all_log_spades\n    outputSource:\n      - spades/all_log\n    type: 'File[]'\n\n#  - id: all_script\n#    outputSource:\n#      - spades/all_script\n#    type: 'File[]'\n\n  - id: assembly_image_spades\n    outputSource:\n      - bandage_image_spades/image\n\n\n    type: File\n\n  - id: assembly_info_spades\n    outputSource:\n      - bandage_info_spades/assembly_graph_info\n    type: File\n\n\n  - id: assembly_graph_unicycler\n    outputSource:\n      - unicycler/assembly_graph\n    type: File\n \n  - id: assembly_unicycler\n    outputSource:\n      - unicycler/assembly\n    type: File\n \n\n#  - id: exec_script2\n#    outputSource:\n#      - unicycler/exec_script\n#    type: File\n\n\n  - id: assembly_image_unicycler\n    outputSource:\n      - bandage_image_unicycler/image\n    type: File\n\n  - id: assembly_info_unicycler\n    outputSource:\n      - bandage_info_unicycler/assembly_graph_info\n    type: File\n\n\n\n\n\n\n\n\n\n\nsteps:\n\n  - id: unicycler\n    in:\n      - id: fastq1_type\n        source: fastq1_type\n      - id: fastq1\n        source: fastq1\n      - id: fastq2_type\n        source: fastq2_type\n      - id: fastq2\n        source: fastq2\n      - id: mode\n        source: mode\n      - id: fastq_file_type\n        source: fastq_file_type\n\n\n    out:\n#      - id: exec_script\n      - id: assembly_graph\n      - id: assembly\n \n    run: ../../bio-cwl-tools/unicycler/unicycler.cwl\n \n\n\n  - id: spades\n    in:\n\n      - id: nanopore_reads\n        source: nanopore_reads\n      - id: pacbio_reads\n        source: pacbio_reads\n      - id: sanger_reads\n        source: sanger_reads\n      - id: libraries_metadata\n        source: libraries_metadata\n      - id: libraries_fwd_rev\n        source: libraries_fwd_rev\n      - id: libraries_mono\n        source: libraries_mono\n      - id: trusted_contigs\n        source: trusted_contigs\n      - id: untrusted_contigs\n        source: untrusted_contigs\n      - id: cov_state\n        source: cov_state\n      - id: cov_cutoff\n        source: cov_cutoff\n      - id: iontorrent\n        source: iontorrent\n      - id: sc\n        source: sc\n      - id: onlyassembler\n        source: onlyassembler\n      - id: careful\n        source: careful\n\n      - id: auto_kmer_choice\n        source: auto_kmer_choice\n\n      - id: kmers\n        source: kmers\n \n    out:\n\n      - id: out_contigs\n      - id: out_scaffolds\n\n      - id: out_contig_stats\n      - id: out_scaffold_stats\n\n      - id: assembly_graph\n      - id: assembly_graph_with_scaffolds\n\n      - id: all_log\n#      - id: all_script\n\n    run: ../../bio-cwl-tools/spades/spades.cwl\n \n \n  - id: bandage_image_unicycler\n    in:\n      - id: graph\n        source: unicycler/assembly_graph\n    out:\n      - id: image\n    run: ../../bio-cwl-tools/bandage/bandage-image.cwl\n \n  - id: bandage_info_unicycler\n    in:\n      - id: graph\n        source: unicycler/assembly_graph\n    out:\n      - id: assembly_graph_info\n    run: ../../bio-cwl-tools/bandage/bandage-info.cwl\n \n  - id: bandage_image_spades\n    in:\n      - id: graph\n        source: spades/assembly_graph\n    out:\n      - id: image\n    run: ../../bio-cwl-tools/bandage/bandage-image.cwl\n \n  - id: bandage_info_spades\n    in:\n      - id: graph\n        source: spades/assembly_graph\n    out:\n      - id: assembly_graph_info\n    run: ../../bio-cwl-tools/bandage/bandage-info.cwl\n\n\n    \nrequirements: []",
    "p_tag_content": "Virus genome assembly with Unicycler and Spades,\nThe 2 assemblers works in parallel. The graph  visualization is made with Bandage.\nworkflow git repository :https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/blob/master/Assembly/workflow/assembly-wf-virus.cwlBased onhttps://github.com/galaxyproject/SARS-CoV-2/blob/master/genomics/2-Assembly/as_wf.png Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/3?version=1 Added/updated 1 files Views:4231Downloads:690 Created: 10th Apr 2020 at 11:45 Last updated: 30th Jun 2020 at 09:05 None Teams:CWL workflow SARS-CoV-2 Organizations:IRISA The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 22,
    "discussion_links": [],
    "title": "CNV_pipeline",
    "license": "Apache-2.0",
    "description": "# StructuralVariants Workflow",
    "latest_version": 11,
    "tags": "['CODEX2', 'ExomeDepth', 'GRIDSS', 'TransBioNet', 'cancer', 'manta', 'structural variants', 'variant calling']",
    "versions": "[{'version': 1, 'revision_comments': \"Merge branch 'master' into 'master'\\r\\n\\r\\nUpdated abstracts\\r\\n\\r\\nSee merge request lrodrig1/structuralvariants_poc!3\", 'url': 'https://workflowhub.eu/workflows/278?version=1', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '27011e882ea07bfcac23faec299341ec6215312b', 'ref': 'refs/tags/1.0.1', 'tree': '/workflows/278/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'rename json and html reports of fastp CWL tool\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=2', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '13e8e651c7a46032f4642f6053d5dde6276ef3b0', 'ref': 'refs/tags/1.0.2', 'tree': '/workflows/278/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'update algoType parameter on bwa index process (CWL), updating abstract too\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=3', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '26ae4914651d5b3e188028d1e9d88a391b3f6730', 'ref': 'refs/tags/1.0.3', 'tree': '/workflows/278/git/3/tree', 'doi': None}, {'version': 4, 'revision_comments': 'read group param as default\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=4', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '9ac2d150a57d1996210ed6a44dd0c0404dab383c', 'ref': 'refs/tags/1.0.4', 'tree': '/workflows/278/git/4/tree', 'doi': None}, {'version': 5, 'revision_comments': 'added new steps to control optionality for reference fasta input\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=5', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'a4a3547b9790e99a58424a0dfcb4e467a7691d6a', 'ref': 'refs/tags/1.0.5', 'tree': '/workflows/278/git/5/tree', 'doi': None}, {'version': 6, 'revision_comments': 'update r-base container\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=6', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '32a040f94e9798bf91858da51598f0d68c35797d', 'ref': 'refs/tags/1.0.6', 'tree': '/workflows/278/git/6/tree', 'doi': None}, {'version': 7, 'revision_comments': 'add gunzip in bwa-index subworkflow\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=7', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '94bcf49c6f22055a359336d2e593f8289f1c5e48', 'ref': 'refs/tags/1.0.7', 'tree': '/workflows/278/git/7/tree', 'doi': None}, {'version': 8, 'revision_comments': 'add support for input BED to exomeDepth (CWL)\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=8', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'a4784466d994e47c361b63b2925c791625c98b4a', 'ref': 'refs/tags/1.0.8', 'tree': '/workflows/278/git/8/tree', 'doi': None}, {'version': 9, 'revision_comments': 'minor change in main of CWL workflow\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=9', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': 'b62c7bfcf5eb7ac3c1ed06879200fdf5db947e4b', 'ref': 'refs/tags/1.0.9', 'tree': '/workflows/278/git/9/tree', 'doi': None}, {'version': 10, 'revision_comments': 'minor changes in main.nf\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=10', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '6f16906b30adad5136b0c8135d1e7c07c5741763', 'ref': 'refs/tags/1.1.0', 'tree': '/workflows/278/git/10/tree', 'doi': None}, {'version': 11, 'revision_comments': 'deleted cnvChr channel\\r\\n', 'url': 'https://workflowhub.eu/workflows/278?version=11', 'remote': 'https://gitlab.bsc.es/lrodrig1/structuralvariants_poc.git', 'commit': '93fbc4e51770d953fc44104a7b09436f75719470', 'ref': 'refs/tags/1.1.3', 'tree': '/workflows/278/git/11/tree', 'doi': None}]",
    "version": 11,
    "revision_comments": "deleted cnvChr channel",
    "created_at": "2022-10-11T11:04:44.000Z",
    "updated_at": "2023-01-16T13:57:59.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS)', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "Daniel López-López",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq1', 'name': None, 'description': 'FASTQ 1 list of files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'fastq2', 'name': None, 'description': 'FASTQ 2 list of files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'generate_bwa_indexes', 'name': None, 'description': 'enable generation of reference genome indexes', 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'reference_fasta', 'name': None, 'description': 'reference genome', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reference_fai', 'name': None, 'description': 'fai index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_amb', 'name': None, 'description': 'amb index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_ann', 'name': None, 'description': 'ann index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_bwt', 'name': None, 'description': 'bwt index for reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_pac', 'name': None, 'description': 'pac index reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reference_sa', 'name': None, 'description': 'sa index reference genome', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bed', 'name': None, 'description': 'capture kit', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'samples', 'name': None, 'description': 'TXT file mapping cases ID, samples ID and batch', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'threads_fastqc', 'name': None, 'description': 'number of threads for fastqc', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_fastp', 'name': None, 'description': 'number of threads for fastp', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_bwa_mem', 'name': None, 'description': 'number of threads for bwa-mem', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_samtools', 'name': None, 'description': 'number of threads for samtools', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads_gridss', 'name': None, 'description': 'number of threads for GRIDSS', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'bwt_algorithm', 'name': None, 'description': 'BWT construction algorithm: bwtsw or is (Default: auto)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'read_group', 'name': None, 'description': 'FASTA read group (used to fix BAM files)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'min_mapping_quality', 'name': None, 'description': 'skip alignments with MAPQ smaller than this minimum', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'bits_set', 'name': None, 'description': 'skip output alignments with this bits set', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'manta_exome', 'name': None, 'description': 'provide appropriate settings for WES', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'manta_min_len', 'name': None, 'description': 'minimum CNV lenght for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'manta_max_len', 'name': None, 'description': 'maximum CNV lenght for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'manta_min_q', 'name': None, 'description': 'minimum CNV quality for MANTA', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'blacklist', 'name': None, 'description': 'BED file containing regions to ignore', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'gridss_min_len', 'name': None, 'description': 'minimum CNV lenght for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gridss_max_len', 'name': None, 'description': 'maximum CNV lenght for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gridss_min_q', 'name': None, 'description': 'minimum CNV quality for GRIDSS', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_min_len', 'name': None, 'description': 'minimum CNV lenght for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_max_len', 'name': None, 'description': 'maximum CNV lenght for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'exomeDepth_min_bf', 'name': None, 'description': 'minimum CNV Bayes factor for EXOME_DEPTH', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_min_len', 'name': None, 'description': 'minimum CNV lenght for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_max_len', 'name': None, 'description': 'maximum CNV lenght for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'codex_min_lratio', 'name': None, 'description': 'minimum CNV lratio for CODEX', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'enable_manta', 'name': None, 'description': 'execute MANTA predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_gridss', 'name': None, 'description': 'execute GRIDSS predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_exomeDepth', 'name': None, 'description': 'execute EXOME_DEPTH predictions', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'enable_codex', 'name': None, 'description': 'execute CODEX predictions', 'type': [{'type': 'boolean'}], 'default_value': None}], 'outputs': [{'id': 'fastqc_raw_zip', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_raw_zip']}, {'id': 'fastqc_raw_html', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_raw_html']}, {'id': 'html_report', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/html_report']}, {'id': 'json_report', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/json_report']}, {'id': 'fastqc_paired_zip', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_paired_zip']}, {'id': 'fastqc_paired_html', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trimmed_fastq/fastqc_paired_html']}, {'id': 'output_bam_filtering', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['bam_filtering/output']}, {'id': 'output_manta', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_manta/output']}, {'id': 'output_gridss', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_gridss/output']}, {'id': 'output_exomedepth', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_exomedepth/output']}, {'id': 'output_codex', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['cnv_codex/output']}, {'id': 'output_all', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['final_filtering/output']}], 'steps': [{'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'trimmed_fastq', 'name': None, 'description': None, 'sink_ids': ['trimmed_fastq/fastqc_raw_zip', 'trimmed_fastq/fastqc_raw_html', 'trimmed_fastq/paired_R1', 'trimmed_fastq/paired_R2', 'trimmed_fastq/unpaired_R1', 'trimmed_fastq/unpaired_R2', 'trimmed_fastq/html_report', 'trimmed_fastq/json_report', 'trimmed_fastq/fastqc_paired_zip', 'trimmed_fastq/fastqc_paired_html']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/output_paired', 'bwa_mem/output_unpairedR1', 'bwa_mem/output_unpairedR2']}, {'id': 'samtools_view_sam2bam', 'name': None, 'description': None, 'sink_ids': ['samtools_view_sam2bam/output_paired', 'samtools_view_sam2bam/output_unpairedR1', 'samtools_view_sam2bam/output_unpairedR2']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/output_paired', 'samtools_sort/output_unpairedR1', 'samtools_sort/output_unpairedR2']}, {'id': 'samtools_merge', 'name': None, 'description': None, 'sink_ids': ['samtools_merge/output']}, {'id': 'samtools_index', 'name': None, 'description': None, 'sink_ids': ['samtools_index/output']}, {'id': 'picard_markduplicates', 'name': None, 'description': None, 'sink_ids': ['picard_markduplicates/alignments', 'picard_markduplicates/metrics']}, {'id': 'bam_filtering', 'name': None, 'description': None, 'sink_ids': ['bam_filtering/output']}, {'id': 'cnv_manta', 'name': None, 'description': None, 'sink_ids': ['cnv_manta/output']}, {'id': 'cnv_gridss', 'name': None, 'description': None, 'sink_ids': ['cnv_gridss/output']}, {'id': 'cnv_exomedepth', 'name': None, 'description': None, 'sink_ids': ['cnv_exomedepth/output']}, {'id': 'cnv_codex', 'name': None, 'description': None, 'sink_ids': ['cnv_codex/output']}, {'id': 'final_filtering', 'name': None, 'description': None, 'sink_ids': ['final_filtering/output']}], 'links': [{'id': 'generate_bwa_indexes', 'source_id': 'generate_bwa_indexes', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'reference_fasta', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_fai', 'source_id': 'reference_fai', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_amb', 'source_id': 'reference_amb', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_ann', 'source_id': 'reference_ann', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_bwt', 'source_id': 'reference_bwt', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_pac', 'source_id': 'reference_pac', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'reference_sa', 'source_id': 'reference_sa', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'algoType', 'source_id': 'bwt_algorithm', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'fastq1', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'fastq2', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'threads_fastqc', 'source_id': 'threads_fastqc', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'threads_fastp', 'source_id': 'threads_fastp', 'sink_id': 'trimmed_fastq', 'name': None, 'default_value': None}, {'id': 'paired_R1', 'source_id': 'trimmed_fastq/paired_R1', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'paired_R2', 'source_id': 'trimmed_fastq/paired_R2', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'trimmed_fastq/unpaired_R1', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'trimmed_fastq/unpaired_R2', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_bwa_mem', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'read_group', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'bwa_mem/output_paired', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'bwa_mem/output_unpairedR1', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'bwa_mem/output_unpairedR2', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_view_sam2bam', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'samtools_view_sam2bam/output_paired', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'samtools_view_sam2bam/output_unpairedR1', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'samtools_view_sam2bam/output_unpairedR2', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': 'samtools_sort/output_paired', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'unpaired_R1', 'source_id': 'samtools_sort/output_unpairedR1', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'unpaired_R2', 'source_id': 'samtools_sort/output_unpairedR2', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'samtools_merge', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_merge/output', 'sink_id': 'samtools_index', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_index/output', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/alignments', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'min_mapping_quality', 'source_id': 'min_mapping_quality', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'bits_set', 'source_id': 'bits_set', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_samtools', 'sink_id': 'bam_filtering', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'exome', 'source_id': 'manta_exome', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'manta_min_len', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'manta_max_len', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'min_q', 'source_id': 'manta_min_q', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'enable_manta', 'source_id': 'enable_manta', 'sink_id': 'cnv_manta', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'blacklist', 'source_id': 'blacklist', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_gridss', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'gridss_min_len', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'gridss_max_len', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'min_q', 'source_id': 'gridss_min_q', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'enable_gridss', 'source_id': 'enable_gridss', 'sink_id': 'cnv_gridss', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'exomeDepth_min_len', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'exomeDepth_max_len', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'min_bf', 'source_id': 'exomeDepth_min_bf', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'enable_exomeDepth', 'source_id': 'enable_exomeDepth', 'sink_id': 'cnv_exomedepth', 'name': None, 'default_value': None}, {'id': 'bams', 'source_id': 'bam_filtering/output', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'samples', 'source_id': 'samples', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'min_len', 'source_id': 'codex_min_len', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'max_len', 'source_id': 'codex_max_len', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'min_lratio', 'source_id': 'codex_min_lratio', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'enable_codex', 'source_id': 'enable_codex', 'sink_id': 'cnv_codex', 'name': None, 'default_value': None}, {'id': 'manta_input', 'source_id': 'cnv_manta/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'gridss_input', 'source_id': 'cnv_gridss/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'exomeDepth_input', 'source_id': 'cnv_exomedepth/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}, {'id': 'codex_input', 'source_id': 'cnv_codex/output', 'sink_id': 'final_filtering', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 278,
    "text_field": "['structuralvariants', 'cwl', 'abstract_operations', 'subworkflows', 'abstract_workflow', 'subworkflows', 'tools', 'docs', 'nextflow', 'modules', 'subworkflows', 'templates', '.gitignore', 'INSTALL.md', 'LICENSE', 'README.md', 'constraints.txt', 'requirements.txt', '.gitignore', 'README.md', 'batch_parser.cwl', 'bedops_union.cwl', 'bgzip.cwl', 'bundle_secondaryfiles.cwl', 'bwa_index.cwl', 'bwa_mem_paired.cwl', 'bwa_mem_unpaired.cwl', 'codex.cwl', 'codex_filter.cwl', 'collapse.cwl', 'exome_depth.cwl', 'exome_depth_filter.cwl', 'fastp.cwl', 'fastqc.cwl', 'gridss.cwl', 'gridss_filter.cwl', 'gunzip.cwl', 'manta.cwl', 'manta_filter.cwl', 'merge_all.cwl', 'picard_markduplicates.cwl', 'samtools_faidx.cwl', 'samtools_index.cwl', 'samtools_merge.cwl', 'samtools_sort.cwl', 'samtools_view.cwl', 'samtools_view_sam2bam.cwl', 'structural_variants.cwl', 'bam_filtering.cwl', 'bwa_index.cwl', 'bwa_mem.cwl', 'cnv_codex.cwl', 'cnv_exome_depth.cwl', 'cnv_gridss.cwl', 'cnv_manta.cwl', 'final_filtering.cwl', 'indexing_bed.cwl', 'picard_markduplicates.cwl', 'samtools_sort.cwl', 'samtools_view_sam2bam.cwl', 'trimmed_fastq.cwl', 'svtools.cwl', 'tabix.cwl', 'abstract_workflow.cwl', 'bam_filtering.cwl', 'bwa_index.cwl', 'bwa_mem.cwl', 'cnv_codex.cwl', 'cnv_exome_depth.cwl', 'cnv_gridss.cwl', 'cnv_manta.cwl', 'final_filtering.cwl', 'indexing_bed.cwl', 'indexing_bed.yaml', 'picard_markduplicates.cwl', 'samtools_sort.cwl', 'samtools_view_sam2bam.cwl', 'trimmed_fastq.cwl', 'batch_parser.cwl', 'bedops_union.cwl', 'bgzip.cwl', 'bundle_secondaryfiles.cwl', 'bwa_index.cwl', 'bwa_mem_paired.cwl', 'bwa_mem_unpaired.cwl', 'codex.cwl', 'codex_filter.cwl', 'collapse.cwl', 'exome_depth.cwl', 'exome_depth_filter.cwl', 'fastp.cwl', 'fastqc.cwl', 'gridss.cwl', 'gridss_filter.cwl', 'gunzip.cwl', 'manta.cwl', 'manta_filter.cwl', 'merge_all.cwl', 'picard_markduplicates.cwl', 'samtools_faidx.cwl', 'samtools_index.cwl', 'samtools_merge.cwl', 'samtools_sort.cwl', 'samtools_view.cwl', 'samtools_view_sam2bam.cwl', 'structural_variants.cwl', 'svtools.cwl', 'tabix.cwl', 'tools_list.txt', 'workflow.cwl', 'workflow.yaml', 'workflow_idxs.yaml', 'CNV_pipeline-cwlviewer.svg', '.gitignore', 'main.nf', 'batch_parser.nf', 'bedops_union.nf', 'bwa_index.nf', 'bwa_mem_paired.nf', 'bwa_mem_unpaired.nf', 'codex.nf', 'codex_filter.nf', 'collapse.nf', 'exome_depth.nf', 'exomedepth_filter.nf', 'fastp.nf', 'fastqc.nf', 'gridss.nf', 'gridss_filter.nf', 'gunzip.nf', 'manta.nf', 'manta_filter.nf', 'merge_all.nf', 'picard_markduplicates.nf', 'samtools_faidx.nf', 'samtools_index.nf', 'samtools_merge.nf', 'samtools_sort.nf', 'samtools_view.nf', 'samtools_view_sam2bam.nf', 'structural_variants.nf', 'svtools.nf', 'nextflow.config', 'bam_filtering.nf', 'bwa_index.nf', 'bwa_mem.nf', 'cnv_codex.nf', 'cnv_exomedepth.nf', 'cnv_gridss.nf', 'cnv_manta.nf', 'final_filtering.nf', 'picard_markduplicates.nf', 'samtools_sort.nf', 'samtools_view_sam2bam.nf', 'trimmed_fastq.nf', 'batch_parser.R', 'codex.R', 'codex_filter.sh', 'collapse.sh', 'exomeDepth.R', 'exomedepth_filter.sh', 'gridss_filter.sh', 'manta_filter.sh', 'merge_all.sh', 'structural_variants.R', 'workflow.pdf']",
    "raw_text_content": "",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/278?version=11 deleted cnvChr channel minor changes in main.nf minor change in main of CWL workflow add support for input BED to exomeDepth (CWL) add gunzip in bwa-index subworkflow update r-base container added new steps to control optionality for reference fasta input read group param as default update algoType parameter on bwa index process (CWL), updating abstract too rename json and html reports of fastp CWL tool Merge branch 'master' into 'master' Updated abstracts See merge request lrodrig1/structuralvariants_poc!3 Daniel López-López Views:6289Downloads:1359 Created: 14th Mar 2022 at 12:07 Last updated: 30th Jun 2022 at 13:00 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TransBioNet is the Translational Bioinformatics Network impulsed and coordinated by the Spanish National Bioinformatics Institute (INB) as a reference network of 35+ bioinformatics support units working at health care settings including Health Research Institutes (IIS) certified by the Carlos III Health Institute (ISCIII), and bioinformatics core facilities from biomedical research institutions. TransBioNet is an Excellence Thematic Network (Red de Excelencia Temática) recognized by the Spanish\n... Space:Independent Teams Public web page:https://inb-elixir.es/transbionet Organisms:Not specified"
  },
  {
    "": 23,
    "discussion_links": "[{'id': '291', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '292', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb-dev/biobb/public/workflows/tutorials/md_setup'}, {'id': '293', 'label': 'Documentation', 'url': 'https://biobb-wf-md-setup.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# Protein MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Lysozyme** protein (PDB code 1AKI).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/279?version=1', 'commit': 'd3361b30078399fc01abf17e67b8037fc1a46295', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/279/git/1/tree', 'doi': '10.48546/workflowhub.workflow.279.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/279?version=2', 'commit': '60d6af282b0fcf406b926b668cc89137a8ed2fb8', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/279/git/2/tree', 'doi': '10.48546/workflowhub.workflow.279.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T10:04:37.000Z",
    "updated_at": "2023-06-07T10:16:23.000Z",
    "doi": "10.48546/workflowhub.workflow.279.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_reduce_remove_hydrogens_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step00_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_fix_side_chain_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_reduce_remove_hydrogens_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb_out1', 'name': 'output_structure_path', 'description': 'Output protein file path', 'type': [{'type': 'File'}], 'source_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path', 'type': [{'type': 'File'}], 'source_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'step4_pdb2gmx_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step4_pdb2gmx/output_gro_path']}, {'id': 'step4_pdb2gmx_out2', 'name': 'output_top_zip_path', 'description': 'Path the output TOP topology in zip format', 'type': [{'type': 'File'}], 'source_ids': ['step4_pdb2gmx/output_top_zip_path']}, {'id': 'step5_editconf_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step5_editconf/output_gro_path']}, {'id': 'step6_solvate_out1', 'name': 'output_gro_path', 'description': 'Path to the output GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step6_solvate/output_gro_path']}, {'id': 'step6_solvate_out2', 'name': 'output_top_zip_path', 'description': 'Path the output topology in zip format', 'type': [{'type': 'File'}], 'source_ids': ['step6_solvate/output_top_zip_path']}, {'id': 'step7_grompp_genion_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step7_grompp_genion/output_tpr_path']}, {'id': 'step8_genion_out1', 'name': 'output_gro_path', 'description': 'Path to the input structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step8_genion/output_gro_path']}, {'id': 'step8_genion_out2', 'name': 'output_top_zip_path', 'description': 'Path the output topology TOP and ITP files zipball', 'type': [{'type': 'File'}], 'source_ids': ['step8_genion/output_top_zip_path']}, {'id': 'step9_grompp_min_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step9_grompp_min/output_tpr_path']}, {'id': 'step10_mdrun_min_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_trr_path']}, {'id': 'step10_mdrun_min_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_gro_path']}, {'id': 'step10_mdrun_min_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_edr_path']}, {'id': 'step10_mdrun_min_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step10_mdrun_min/output_log_path']}, {'id': 'step100_make_ndx_out1', 'name': 'output_ndx_path', 'description': 'Path to the output index NDX file', 'type': [{'type': 'File'}], 'source_ids': ['step100_make_ndx/output_ndx_path']}, {'id': 'step11_grompp_nvt_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step11_grompp_nvt/output_tpr_path']}, {'id': 'step12_mdrun_nvt_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_trr_path']}, {'id': 'step12_mdrun_nvt_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_gro_path']}, {'id': 'step12_mdrun_nvt_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_edr_path']}, {'id': 'step12_mdrun_nvt_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_log_path']}, {'id': 'step12_mdrun_nvt_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step12_mdrun_nvt/output_cpt_path']}, {'id': 'step13_grompp_npt_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step13_grompp_npt/output_tpr_path']}, {'id': 'step14_mdrun_npt_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_trr_path']}, {'id': 'step14_mdrun_npt_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_gro_path']}, {'id': 'step14_mdrun_npt_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_edr_path']}, {'id': 'step14_mdrun_npt_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_log_path']}, {'id': 'step14_mdrun_npt_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step14_mdrun_npt/output_cpt_path']}, {'id': 'step15_grompp_md_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step15_grompp_md/output_tpr_path']}, {'id': 'step16_mdrun_md_out1', 'name': 'output_trr_path', 'description': 'Path to the GROMACS uncompressed raw trajectory file TRR', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_trr_path']}, {'id': 'step16_mdrun_md_out2', 'name': 'output_gro_path', 'description': 'Path to the output GROMACS structure GRO file', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_gro_path']}, {'id': 'step16_mdrun_md_out3', 'name': 'output_edr_path', 'description': 'Path to the output GROMACS portable energy file EDR', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_edr_path']}, {'id': 'step16_mdrun_md_out4', 'name': 'output_log_path', 'description': 'Path to the output GROMACS trajectory log file LOG', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_log_path']}, {'id': 'step16_mdrun_md_out5', 'name': 'output_cpt_path', 'description': 'Path to the output GROMACS checkpoint file CPT', 'type': [{'type': 'File'}], 'source_ids': ['step16_mdrun_md/output_cpt_path']}, {'id': 'step17_gmx_image1_out1', 'name': 'output_traj_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step17_gmx_image1/output_traj_path']}, {'id': 'step18_gmx_image2_out1', 'name': 'output_traj_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step18_gmx_image2/output_traj_path']}, {'id': 'step19_gmx_trjconv_str_out1', 'name': 'output_str_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step19_gmx_trjconv_str/output_str_path']}, {'id': 'step20_gmx_energy_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step20_gmx_energy/output_xvg_path']}, {'id': 'step21_gmx_rgyr_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step21_gmx_rgyr/output_xvg_path']}, {'id': 'step22_rmsd_first_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step22_rmsd_first/output_xvg_path']}, {'id': 'step23_rmsd_exp_out1', 'name': 'output_xvg_path', 'description': 'Path to the XVG output file', 'type': [{'type': 'File'}], 'source_ids': ['step23_rmsd_exp/output_xvg_path']}, {'id': 'step24_grompp_md_out1', 'name': 'output_tpr_path', 'description': 'Path to the output portable binary run file TPR', 'type': [{'type': 'File'}], 'source_ids': ['step24_grompp_md/output_tpr_path']}], 'steps': [{'id': 'step0_reduce_remove_hydrogens', 'name': 'ReduceRemoveHydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain', 'name': 'FixSideChain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'step4_pdb2gmx', 'name': 'Pdb2gmx', 'description': 'Creates a compressed (ZIP) GROMACS topology (TOP and ITP files) from a given PDB file.', 'sink_ids': ['step4_pdb2gmx/output_gro_path', 'step4_pdb2gmx/output_top_zip_path']}, {'id': 'step5_editconf', 'name': 'Editconf', 'description': 'Creates a GROMACS structure file (GRO) adding the information of the solvent box to the input structure file.', 'sink_ids': ['step5_editconf/output_gro_path']}, {'id': 'step6_solvate', 'name': 'Solvate', 'description': 'Creates a new compressed GROMACS topology file adding solvent molecules to a given input compressed GROMACS topology file.', 'sink_ids': ['step6_solvate/output_gro_path', 'step6_solvate/output_top_zip_path']}, {'id': 'step7_grompp_genion', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step7_grompp_genion/output_tpr_path']}, {'id': 'step8_genion', 'name': 'Genion', 'description': 'Creates a new compressed GROMACS topology adding ions until reaching the desired concentration to the input compressed GROMACS topology. ', 'sink_ids': ['step8_genion/output_gro_path', 'step8_genion/output_top_zip_path']}, {'id': 'step9_grompp_min', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step9_grompp_min/output_tpr_path']}, {'id': 'step10_mdrun_min', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step10_mdrun_min/output_trr_path', 'step10_mdrun_min/output_gro_path', 'step10_mdrun_min/output_edr_path', 'step10_mdrun_min/output_log_path']}, {'id': 'step100_make_ndx', 'name': 'MakeNdx', 'description': 'Creates a GROMACS index file (NDX) from an input selection and an input GROMACS structure file.', 'sink_ids': ['step100_make_ndx/output_ndx_path']}, {'id': 'step11_grompp_nvt', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step11_grompp_nvt/output_tpr_path']}, {'id': 'step12_mdrun_nvt', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step12_mdrun_nvt/output_trr_path', 'step12_mdrun_nvt/output_gro_path', 'step12_mdrun_nvt/output_edr_path', 'step12_mdrun_nvt/output_log_path', 'step12_mdrun_nvt/output_cpt_path']}, {'id': 'step13_grompp_npt', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step13_grompp_npt/output_tpr_path']}, {'id': 'step14_mdrun_npt', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step14_mdrun_npt/output_trr_path', 'step14_mdrun_npt/output_gro_path', 'step14_mdrun_npt/output_edr_path', 'step14_mdrun_npt/output_log_path', 'step14_mdrun_npt/output_cpt_path']}, {'id': 'step15_grompp_md', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step15_grompp_md/output_tpr_path']}, {'id': 'step16_mdrun_md', 'name': 'Mdrun', 'description': 'Performs molecular dynamics simulations from an input GROMACS TPR file.', 'sink_ids': ['step16_mdrun_md/output_trr_path', 'step16_mdrun_md/output_gro_path', 'step16_mdrun_md/output_edr_path', 'step16_mdrun_md/output_log_path', 'step16_mdrun_md/output_cpt_path']}, {'id': 'step17_gmx_image1', 'name': 'GMXImage', 'description': 'Wrapper of the GROMACS trjconv module for correcting periodicity (image) from a given GROMACS compatible trajectory file.', 'sink_ids': ['step17_gmx_image1/output_traj_path']}, {'id': 'step18_gmx_image2', 'name': 'GMXImage', 'description': 'Wrapper of the GROMACS trjconv module for correcting periodicity (image) from a given GROMACS compatible trajectory file.', 'sink_ids': ['step18_gmx_image2/output_traj_path']}, {'id': 'step19_gmx_trjconv_str', 'name': 'GMXTrjconvStr', 'description': 'Wrapper of the GROMACS trjconv module for converting between GROMACS compatible structure file formats and/or extracting a selection of atoms.', 'sink_ids': ['step19_gmx_trjconv_str/output_str_path']}, {'id': 'step20_gmx_energy', 'name': 'GMXEnergy', 'description': 'Wrapper of the GROMACS energy module for extracting energy components from a given GROMACS energy file.', 'sink_ids': ['step20_gmx_energy/output_xvg_path']}, {'id': 'step21_gmx_rgyr', 'name': 'GMXRgyr', 'description': 'Wrapper of the GROMACS gyrate module for computing the radius of gyration (Rgyr) of a molecule about the x-, y- and z-axes, as a function of time, from a given GROMACS compatible trajectory.', 'sink_ids': ['step21_gmx_rgyr/output_xvg_path']}, {'id': 'step22_rmsd_first', 'name': 'GMXRms', 'description': 'Wrapper of the GROMACS module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step22_rmsd_first/output_xvg_path']}, {'id': 'step23_rmsd_exp', 'name': 'GMXRms', 'description': 'Wrapper of the GROMACS module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step23_rmsd_exp/output_xvg_path']}, {'id': 'step24_grompp_md', 'name': 'Grompp', 'description': 'Creates a GROMACS portable binary run input file (TPR) applying the desired properties from the input compressed GROMACS topology.', 'sink_ids': ['step24_grompp_md/output_tpr_path']}], 'links': [{'id': 'input_path', 'source_id': 'step0_reduce_remove_hydrogens_input_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step0_reduce_remove_hydrogens_output_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_reduce_remove_hydrogens/output_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step1_extract_molecule_output_molecule_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step1_extract_molecule/output_molecule_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step00_cat_pdb_input_structure2', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step00_cat_pdb_output_structure_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step00_cat_pdb/output_structure_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_fix_side_chain_output_pdb_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_pdb2gmx_config', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_fix_side_chain/output_pdb_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step4_pdb2gmx_output_gro_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step4_pdb2gmx_output_top_zip_path', 'sink_id': 'step4_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_editconf_config', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step4_pdb2gmx/output_gro_path', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step5_editconf_output_gro_path', 'sink_id': 'step5_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step5_editconf/output_gro_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step6_solvate_output_gro_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step4_pdb2gmx/output_top_zip_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step6_solvate_output_top_zip_path', 'sink_id': 'step6_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_grompp_genion_config', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step6_solvate/output_gro_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step6_solvate/output_top_zip_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step7_grompp_genion_output_tpr_path', 'sink_id': 'step7_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_genion_config', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step7_grompp_genion/output_tpr_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step8_genion_output_gro_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step6_solvate/output_top_zip_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'output_top_zip_path', 'source_id': 'step8_genion_output_top_zip_path', 'sink_id': 'step8_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_min_config', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step8_genion/output_gro_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step9_grompp_min_output_tpr_path', 'sink_id': 'step9_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_min/output_tpr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step10_mdrun_min_output_trr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step10_mdrun_min_output_gro_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step10_mdrun_min_output_edr_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step10_mdrun_min_output_log_path', 'sink_id': 'step10_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step100_make_ndx_config', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step10_mdrun_min/output_gro_path', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'output_ndx_path', 'source_id': 'step100_make_ndx_output_ndx_path', 'sink_id': 'step100_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_nvt_config', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_min/output_gro_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step100_make_ndx/output_ndx_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step11_grompp_nvt_output_tpr_path', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_nvt/output_tpr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step12_mdrun_nvt_output_trr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step12_mdrun_nvt_output_gro_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step12_mdrun_nvt_output_edr_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step12_mdrun_nvt_output_log_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'output_cpt_path', 'source_id': 'step12_mdrun_nvt_output_cpt_path', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_npt_config', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_nvt/output_gro_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step100_make_ndx/output_ndx_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step8_genion/output_top_zip_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'output_tpr_path', 'source_id': 'step13_grompp_npt_output_tpr_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_nvt/output_cpt_path', 'sink_id': 'step13_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_npt/output_tpr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_trr_path', 'source_id': 'step14_mdrun_npt_output_trr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_gro_path', 'source_id': 'step14_mdrun_npt_output_gro_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_edr_path', 'source_id': 'step14_mdrun_npt_output_edr_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step14_mdrun_npt_output_log_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'output_cpt_path', 'source_id': 'step14_mdrun_npt_output_cpt_path', 'sink_id': 'step14_mdrun_npt', 'name': None, 'de",
    "tools": [],
    "id": 279,
    "text_field": "['biobb_adapters', 'README.md', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theLysozymeprotein (PDB code 1AKI). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/279?version=2 DOI:10.48546/workflowhub.workflow.279.2 Updated workflow descriptors Initial commit Views:2236Downloads:501 Created: 17th Mar 2022 at 09:18 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 32,
    "discussion_links": "[{'id': '334', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}]",
    "title": "CWL Protein MD Setup tutorial with mutations",
    "license": "Apache-2.0",
    "description": "# Mutations Protein MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Lysozyme** protein (PDB code 1AKI).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/289?version=1', 'commit': '70fda2af9a458dd693bce5aba2f0dd8e1a4ffd7c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/289/git/1/tree', 'doi': '10.48546/workflowhub.workflow.289.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/289?version=2', 'commit': 'ecea2aa4272161babf375516aa463ca01ea616b5', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/289/git/2/tree', 'doi': '10.48546/workflowhub.workflow.289.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T12:22:06.000Z",
    "updated_at": "2023-06-07T12:30:54.000Z",
    "doi": "10.48546/workflowhub.workflow.289.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'mutations_list', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'string'}]}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_reduce_remove_hydrogens_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step00_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_fix_side_chain_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_mutate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'top_dir', 'name': 'Collected Simulation Data', 'description': 'Assorted data files output by the workflow\\n', 'type': [{'type': 'array', 'items': [{'type': 'Directory'}]}], 'source_ids': ['subworkflow_mutate/outdir']}], 'steps': [{'id': 'step0_reduce_remove_hydrogens', 'name': 'ReduceRemoveHydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step0_reduce_remove_hydrogens/output_path']}, {'id': 'step1_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step1_extract_molecule/output_molecule_path']}, {'id': 'step00_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step00_cat_pdb/output_structure_path']}, {'id': 'step2_fix_side_chain', 'name': 'FixSideChain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step2_fix_side_chain/output_pdb_path']}, {'id': 'subworkflow_mutate', 'name': None, 'description': None, 'sink_ids': ['subworkflow_mutate/outdir']}], 'links': [{'id': 'input_path', 'source_id': 'step0_reduce_remove_hydrogens_input_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step0_reduce_remove_hydrogens_output_path', 'sink_id': 'step0_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_reduce_remove_hydrogens/output_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step1_extract_molecule_output_molecule_path', 'sink_id': 'step1_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step1_extract_molecule/output_molecule_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step00_cat_pdb_input_structure2', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step00_cat_pdb_output_structure_path', 'sink_id': 'step00_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step00_cat_pdb/output_structure_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_fix_side_chain_output_pdb_path', 'sink_id': 'step2_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'step2_output_pdb_path', 'source_id': 'step2_fix_side_chain/output_pdb_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'mutation', 'source_id': 'mutations_list', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step3_mutate_output_pdb_path', 'source_id': 'step3_mutate_output_pdb_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_config', 'source_id': 'step4_pdb2gmx_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_output_gro_path', 'source_id': 'step4_pdb2gmx_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step4_pdb2gmx_output_top_zip_path', 'source_id': 'step4_pdb2gmx_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step5_editconf_config', 'source_id': 'step5_editconf_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step5_editconf_output_gro_path', 'source_id': 'step5_editconf_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step6_solvate_output_gro_path', 'source_id': 'step6_solvate_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step6_solvate_output_top_zip_path', 'source_id': 'step6_solvate_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step7_grompp_genion_config', 'source_id': 'step7_grompp_genion_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step7_grompp_genion_output_tpr_path', 'source_id': 'step7_grompp_genion_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_config', 'source_id': 'step8_genion_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_output_gro_path', 'source_id': 'step8_genion_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step8_genion_output_top_zip_path', 'source_id': 'step8_genion_output_top_zip_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step9_grompp_min_config', 'source_id': 'step9_grompp_min_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step9_grompp_min_output_tpr_path', 'source_id': 'step9_grompp_min_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_trr_path', 'source_id': 'step10_mdrun_min_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_gro_path', 'source_id': 'step10_mdrun_min_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_edr_path', 'source_id': 'step10_mdrun_min_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step10_mdrun_min_output_log_path', 'source_id': 'step10_mdrun_min_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step100_make_ndx_config', 'source_id': 'step100_make_ndx_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step100_make_ndx_output_ndx_path', 'source_id': 'step100_make_ndx_output_ndx_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step11_grompp_nvt_config', 'source_id': 'step11_grompp_nvt_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step11_grompp_nvt_output_tpr_path', 'source_id': 'step11_grompp_nvt_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_trr_path', 'source_id': 'step12_mdrun_nvt_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_gro_path', 'source_id': 'step12_mdrun_nvt_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_edr_path', 'source_id': 'step12_mdrun_nvt_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_log_path', 'source_id': 'step12_mdrun_nvt_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step12_mdrun_nvt_output_cpt_path', 'source_id': 'step12_mdrun_nvt_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step13_grompp_npt_config', 'source_id': 'step13_grompp_npt_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step13_grompp_npt_output_tpr_path', 'source_id': 'step13_grompp_npt_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_trr_path', 'source_id': 'step14_mdrun_npt_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_gro_path', 'source_id': 'step14_mdrun_npt_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_edr_path', 'source_id': 'step14_mdrun_npt_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_log_path', 'source_id': 'step14_mdrun_npt_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step14_mdrun_npt_output_cpt_path', 'source_id': 'step14_mdrun_npt_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step15_grompp_md_config', 'source_id': 'step15_grompp_md_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step15_grompp_md_output_tpr_path', 'source_id': 'step15_grompp_md_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_trr_path', 'source_id': 'step16_mdrun_md_output_trr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_gro_path', 'source_id': 'step16_mdrun_md_output_gro_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_edr_path', 'source_id': 'step16_mdrun_md_output_edr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_log_path', 'source_id': 'step16_mdrun_md_output_log_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step16_mdrun_md_output_cpt_path', 'source_id': 'step16_mdrun_md_output_cpt_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step17_gmx_image1_config', 'source_id': 'step17_gmx_image1_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step17_gmx_image1_output_traj_path', 'source_id': 'step17_gmx_image1_output_traj_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step18_gmx_image2_config', 'source_id': 'step18_gmx_image2_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step18_gmx_image2_output_traj_path', 'source_id': 'step18_gmx_image2_output_traj_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step19_gmx_trjconv_str_config', 'source_id': 'step19_gmx_trjconv_str_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step19_gmx_trjconv_str_output_str_path', 'source_id': 'step19_gmx_trjconv_str_output_str_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step20_gmx_energy_config', 'source_id': 'step20_gmx_energy_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step20_gmx_energy_output_xvg_path', 'source_id': 'step20_gmx_energy_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step21_gmx_rgyr_config', 'source_id': 'step21_gmx_rgyr_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step21_gmx_rgyr_output_xvg_path', 'source_id': 'step21_gmx_rgyr_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step22_rmsd_first_config', 'source_id': 'step22_rmsd_first_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step22_rmsd_first_output_xvg_path', 'source_id': 'step22_rmsd_first_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step23_rmsd_exp_config', 'source_id': 'step23_rmsd_exp_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step23_rmsd_exp_output_xvg_path', 'source_id': 'step23_rmsd_exp_output_xvg_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step24_grompp_md_config', 'source_id': 'step24_grompp_md_config', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}, {'id': 'step24_grompp_md_output_tpr_path', 'source_id': 'step24_grompp_md_output_tpr_path', 'sink_id': 'subworkflow_mutate', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 289,
    "text_field": "['biobb_adapters', 'README.md', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'mutate.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_gather.cwl', 'workflow_input_descriptions.yml', 'workflow_list.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theLysozymeprotein (PDB code 1AKI). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/289?version=2 DOI:10.48546/workflowhub.workflow.289.2 Updated workflow descriptors Initial commit Views:1736Downloads:394 Created: 17th Mar 2022 at 13:22 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 45,
    "discussion_links": [],
    "title": "seurat scRNA-seq",
    "license": "Apache-2.0",
    "description": "",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/303?version=1', 'commit': '476cc3235f4bea31276f7446e9b1e597b27fe327', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/303/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': '\"test\"\\r\\n', 'url': 'https://workflowhub.eu/workflows/303?version=2', 'remote': 'https://github.com/DimitraPanou/scRNAseq-cwl.git', 'commit': 'f44e9e11a65a7a04400f963467f249054c95a92d', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/303/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "test",
    "created_at": "2022-04-14T13:28:34.000Z",
    "updated_at": "2023-01-16T13:59:13.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'running_step', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'loadDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'barcodes', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'features', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'matrix', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'minCells', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minFeatures', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'projectName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'filterDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'nFeatureRNAmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nFeatureRNAmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nCountRNAmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nCountRNAmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'percentMTmin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'percentMTmax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'normalizeDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'normalization_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'scale_factor', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'margin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'block_size', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'verbose', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'featureSelectionDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'selection_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'loess_span', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clip_max', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'num_bin', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'binning_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'num_features', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'scaleDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runPCAR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'findNeighborsR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'neighbors_method', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'k', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clusterDataR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runUmapR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'runTSNER', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'find_markersR', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'loadDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['loadData/loaded_data']}, {'id': 'loadDataPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['loadData/data_plot']}, {'id': 'filterDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['filterData/filtered_data']}, {'id': 'filterDataPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['filterData/filtered_data_plot']}, {'id': 'normalizeDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['normalizeData/normalized_data']}, {'id': 'findFeaturesOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findFeatures/find_features_data']}, {'id': 'findFeaturesPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findFeatures/features_data_plot']}, {'id': 'scaleDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['scaleData/scaling_data']}, {'id': 'runPCAOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_data']}, {'id': 'runPCAPlot1', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_1_plot']}, {'id': 'runPCAPlot2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_2_plot']}, {'id': 'runPCAPlot3', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runPCA/pca_3_plot']}, {'id': 'findNeighborsOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findNeighbors/find_neighbors']}, {'id': 'clusterDataOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['clusterData/cluster_data']}, {'id': 'runUMAPOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runUMAP/run_umap_data']}, {'id': 'runUMAPOutputPlot', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runUMAP/run_umap_data_plot']}, {'id': 'runTSNEOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['runTSNE/run_tsne_data']}, {'id': 'findMarkersOutput', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['findAllMarkers/find_markers']}], 'steps': [{'id': 'loadData', 'name': None, 'description': None, 'sink_ids': ['loadData/loaded_data', 'loadData/data_plot']}, {'id': 'filterData', 'name': None, 'description': None, 'sink_ids': ['filterData/filtered_data', 'filterData/filtered_data_plot']}, {'id': 'normalizeData', 'name': None, 'description': None, 'sink_ids': ['normalizeData/normalized_data']}, {'id': 'findFeatures', 'name': None, 'description': None, 'sink_ids': ['findFeatures/find_features_data', 'findFeatures/features_data_plot']}, {'id': 'scaleData', 'name': None, 'description': None, 'sink_ids': ['scaleData/scaling_data']}, {'id': 'runPCA', 'name': None, 'description': None, 'sink_ids': ['runPCA/pca_data', 'runPCA/pca_1_plot', 'runPCA/pca_2_plot', 'runPCA/pca_3_plot']}, {'id': 'findNeighbors', 'name': None, 'description': None, 'sink_ids': ['findNeighbors/find_neighbors']}, {'id': 'clusterData', 'name': None, 'description': None, 'sink_ids': ['clusterData/cluster_data']}, {'id': 'runUMAP', 'name': None, 'description': None, 'sink_ids': ['runUMAP/run_umap_data', 'runUMAP/run_umap_data_plot']}, {'id': 'runTSNE', 'name': None, 'description': None, 'sink_ids': ['runTSNE/run_tsne_data']}, {'id': 'findAllMarkers', 'name': None, 'description': None, 'sink_ids': ['findAllMarkers/find_markers']}], 'links': [{'id': 'script', 'source_id': 'loadDataR', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'barcodes', 'source_id': 'barcodes', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'features', 'source_id': 'features', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'matrix', 'source_id': 'matrix', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'minCells', 'source_id': 'minCells', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'minFeatures', 'source_id': 'minFeatures', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'projectName', 'source_id': 'projectName', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'pattern', 'source_id': 'pattern', 'sink_id': 'loadData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'filterDataR', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'loadData/loaded_data', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nFeatureRNAmin', 'source_id': 'nFeatureRNAmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nFeatureRNAmax', 'source_id': 'nFeatureRNAmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nCountRNAmin', 'source_id': 'nCountRNAmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'nCountRNAmax', 'source_id': 'nCountRNAmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'percentMTmin', 'source_id': 'percentMTmin', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'percentMTmax', 'source_id': 'percentMTmax', 'sink_id': 'filterData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'normalizeDataR', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'filterData/filtered_data', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'normalization_method', 'source_id': 'normalization_method', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'scale_factor', 'source_id': 'scale_factor', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'margin', 'source_id': 'margin', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'block_size', 'source_id': 'block_size', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'verbose', 'source_id': 'verbose', 'sink_id': 'normalizeData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'featureSelectionDataR', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'normalizeData/normalized_data', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'selection_method', 'source_id': 'selection_method', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'loess_span', 'source_id': 'loess_span', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'clip_max', 'source_id': 'clip_max', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'num_bin', 'source_id': 'num_bin', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'binning_method', 'source_id': 'binning_method', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'nfeatures', 'source_id': 'num_features', 'sink_id': 'findFeatures', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'scaleDataR', 'sink_id': 'scaleData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findFeatures/find_features_data', 'sink_id': 'scaleData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runPCAR', 'sink_id': 'runPCA', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'scaleData/scaling_data', 'sink_id': 'runPCA', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'findNeighborsR', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runPCA/pca_data', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'neighbors_method', 'source_id': 'neighbors_method', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'k', 'source_id': 'k', 'sink_id': 'findNeighbors', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'clusterDataR', 'sink_id': 'clusterData', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findNeighbors/find_neighbors', 'sink_id': 'clusterData', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runUmapR', 'sink_id': 'runUMAP', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'findNeighbors/find_neighbors', 'sink_id': 'runUMAP', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'runTSNER', 'sink_id': 'runTSNE', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runUMAP/run_umap_data', 'sink_id': 'runTSNE', 'name': None, 'default_value': None}, {'id': 'script', 'source_id': 'find_markersR', 'sink_id': 'findAllMarkers', 'name': None, 'default_value': None}, {'id': 'dataFile', 'source_id': 'runTSNE/run_tsne_data', 'sink_id': 'findAllMarkers', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 303,
    "text_field": "['subworkflows', 'tools', 'Dockerfile', 'Rseurat.R', 'barcodes.tsv.gz', 'features.tsv.gz', 'libs.R', 'matrix.mtx.gz', 'steps.cwl', 'steps.cwl', 'yml.yml', '10_runTSNE.R', '10_runTSNE.cwl', '11_findMarkers.R', '11_findMarkers.cwl', '1_loadData.R', '1_loadData.cwl', '2_filter.R', '2_filter.cwl', '2yml.yml', '3_normalization.R', '3_normalization.cwl', '4_featureSelection.R', '4_featureSelection.cwl', '5_Scaling.R', '5_Scaling.cwl', '6_PCA.R', '6_PCA.cwl', '7_findNeighbors.R', '7_findNeighbors.cwl', '8_clusterData.R', '8_clusterData.cwl', '9_runUMAP.R', '9_runUMAP.cwl', 'yml.yml']",
    "raw_text_content": "",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/303?version=2 \"test\" Initial commit Views:2055Downloads:291 Created: 4th Apr 2022 at 05:43 Last updated: 14th Apr 2022 at 14:28 This item has not yet been tagged. None Teams:Single Cell Unit Organizations:BSRC Alexander Fleming A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified Creator:panou@fleming.gr Panou Submitter:panou@fleming.gr Panou"
  },
  {
    "": 57,
    "discussion_links": [],
    "title": "Assemblosis",
    "license": "BSD-3-Clause",
    "description": "## CWL based workflow to assemble haploid/diploid eukaryote genomes of non-model organisms\nThe workflow is designed to use both PacBio long-reads and Illumina short-reads. The workflow first extracts, corrects, trims and decontaminates the long reads. Decontaminated trimmed reads are then used to assemble the genome and raw reads are used to polish it. Next, Illumina reads are cleaned and used to further polish the resultant assembly. Finally, the polished assembly is masked using inferred repeats and haplotypes are eliminated. The workflow uses BioConda and DockerHub to install required software and is therefore fully automated. In addition to final assembly, the workflow produces intermediate assemblies before and after polishing steps. The workflow follows the syntax for CWL v1.0.\n\n### Dependencies\n# Programs\nThe pipeline can be run either using [Cromwell](https://cromwell.readthedocs.io/en/stable) or [cwltool reference](https://github.com/common-workflow-language/cwltool) implementation and docker containers can be run either using [Singularity](https://singularity.lbl.gov) or [udocker](https://singularity.lbl.gov).\n\nCromwell implementation\n* [cromwell v44](https://github.com/broadinstitute/cromwell/releases/tag/44)\n* [java-jdk v8.0.112](https://www.java.com/en)\n\nReference implementation\n* [cwltool v1.0.20181012180214](https://github.com/common-workflow-language/cwltool)\n* [nodejs v10.4.1 required by cwltool](https://nodejs.org/en)\n* [Python library galaxy-lib v18.5.7](https://pypi.org/project/galaxy-lib)\n\nSingularity software packages have to be installed server-wide by administrator\n* [Singularity v3.2.1](https://singularity.lbl.gov)\n* [squashfs-tools v4.3.0](https://github.com/plougher/squashfs-tools)\n\nUdocker software package can be installed locally\n* [udocker v1.1.2](https://github.com/indigo-dc/udocker)\n\n# Data\n* [Illumina adapters converted to FASTA format](http://sapac.support.illumina.com/downloads/illumina-adapter-sequences-document-1000000002694.html)\n* [NCBI nucleotide non-redundant sequences for decontamination with Centrifuge](http://www.ccb.jhu.edu/software/centrifuge)\n* [RepBase v17.02 file RMRBSeqs.embl](https://www.girinst.org/repbase)\n\n### Installation\nInstall miniconda using installation script ```installConda.sh```.\nTo install CWL, use either installation script ```installCromwell.sh``` or ```installCwltool.sh```.\nTo install udocker, use installation script ```installUdocker.sh```.\nTo install singularity, ask your system administrator.\n\n```\n# First confirm that you have the program 'git' installed in your system\n> cd\n> git clone -b 'v0.1.3-beta' --single-branch --depth 1 https://github.com/vetscience/Assemblosis\n> cd Assemblosis\n> bash installConda.sh\n> bash installCromwell.sh # or bash installCwltool.sh\n> bash installUdocker.sh # if singularity cannot be installed or does not run\n\n```\nFor data dependencies: download and extract [RepBase database](https://www.girinst.org/repbase), download Centrifuge version of [NCBI nt database](http://www.ccb.jhu.edu/software/centrifuge) and create [Illumina adapter FASTA file](http://sapac.support.illumina.com/downloads/illumina-adapter-sequences-document-1000000002694.html) to your preferred locations. If your reads are clean from adapters, the adapter FASTA file can be empty.\nGive the location of these data in the configuration (.yml) file (see **Usage**).\n\n### Usage\nYou have to create a YAML (.yml) file for each assembly. This file defines the required parameters and the location for both PacBio and Illumina raw-reads.\n```\n> cd\n> export PATH=~/miniconda3/bin:$PATH\n> cd Assemblosis/Run\n> cp ../Examples/assemblyCele.yml .\n\n\"Edit assemblyCele.yml to fit your computing environment and to define the location for the read files, databases and Illumina adapters\"\n\n\"Running docker images using Cromwell and singularity:\"\n> java -Dconfig.file=cromwell.udocker.conf -jar cromwell-44.jar run -t CWL -v v1.0 assembly.cwl -i assemblyCele.yml\n\n\"Running docker images using Cromwell and udocker:\"\n> java -Dconfig.file=cromwell.singularity.conf -jar cromwell-44.jar run -t CWL -v v1.0 assembly.cwl -i assemblyCele.yml\n\n\"Running docker images using Cwltool and singularity:\"\n> cwltool --tmpdir-prefix /home/<username>/Tmp --beta-conda-dependencies --cachedir /home/<username>/Cache --singularity --leave-tmpdir assembly.cwl assemblyCele.yml\n\n\"Running docker images using Cwltool and udocker:\"\n> cwltool --tmpdir-prefix /home/<username>/Tmp --beta-conda-dependencies --cachedir /home/<username>/Cache --user-space-docker-cmd udocker --leave-tmpdir assembly.cwl assemblyCele.yml\n```\n\nAn annotated example of the YAML file for Caenorhabditis elegans assembly.\n```\n## Directory, which contains the PacBio raw data\n# NOTE! The software looks for all .h5 file (or bam files if bacBioInBam below is defined true) in given directory\npacBioDataDir:\n  class: Directory\n  location: /home/<username>/Dna\n\n## PacBio files are in bam format as returned from Sequel platform\npacBioInBam: true\n\n## Prefix for the resultant assembly files\nprefix: cele\n\n## Maximum number of threads used in the pipeline\nthreads: 24\n\n## Minimum number of threads per job used in canu assembler\nminThreads: 4\n\n## Number of concurrent jobs in canu assembler (recommended to use threads / minThreads)\ncanuConcurrency: 6\n\n### Parameters for the program Canu are described in https://canu.readthedocs.io/en/latest/parameter-reference.html\n## Expected genome size. This parameter is forwarded to Canu assembler.\ngenomeSize: 100m\n\n## Minimum length for the PacBio reads used for the assembly. This parameter is forwarded to Canu assembler.\n# The maximum resolvable repeat regions becomes 2 x minReadLength\nminReadLen: 6000\n\n## Parameter for Canu assembler to adjust to GC-content. Should be 0.15 for high or low GC content.\ncorMaxEvidenceErate: 0.20\n\n### Parameters for the program Trimmomatic are described in http://www.usadellab.org/cms/?page=trimmomatic\n## Paired-end (PE) reads of Illumina raw data. These files are given to the program Trimmomatic.\n# NOTE! Data for two paired libraries is given below.\nreadsPe1:\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598966_1.fastq.gz\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598967_1.fastq.gz\nreadsPe2:\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598966_2.fastq.gz\n  - class: File\n    format: edam:format_1930  # fastq\n    path: /home/<username>/Dna/SRR2598967_2.fastq.gz\n\n## Phred coding of Illumina data. This parameter is forwarded to Trimmomatic.\n# NOTE! Each read-pair needs one phred value.\nphredsPe: ['33','33']\n\n## Sliding window and illuminaClip parameters for Trimmomatic\nslidingWindow:\n    windowSize: 4\n    requiredQuality: 25\nilluminaClip:\n    adapters:\n        class: File\n        path: <path to Illumina adapter file>\n    seedMismatches: 2\n    palindromeClipThreshold: 30\n    simpleClipThreshold: 10\n    minAdapterLength: 20\n    keepBothReads: true\n## Further parameters for Trimmomatic\n# Required phred-quality for leading 5 nucleotides\nleading: 25\n# Required phred-quality for trailing 5 nucleotides\ntrailing: 25\n# Minimum accepted read-length to keep the read after trimming\nminlen: 40\n\n### Parameters for the program bowtie2 are described in http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml\n## Illumina PE fragment length. Program bowtie2 parameter -X.\n# NOTE! Each read-pair needs one phred value.\nmaxFragmentLens: [500, 600]\n# Orientation of pair-end reads e.g. 'fr', 'rf', 'ff': Program bowtie2 parameters --fr, --rf or --ff\norientation: 'fr'\n\n### Parameters for the program Pilon are described in https://github.com/broadinstitute/pilon/wiki/Requirements-&-Usage\n# Prefix for the resultant pilon polished assembly. Pilon parameter --output\npolishedAssembly: celePilon\n# This is set 'true' for an organism with diploid genome: Pilon parameter --diploid\ndiploidOrganism: true\n# Value 'bases' fixes snps and indels: Pilon parameter --fix\nfix: bases\n\n### Parameters for the program centrifuge are described in http://www.ccb.jhu.edu/software/centrifuge/manual.shtml\n# Path to the directory, that contains NCBI nt database in nt.?.cf files. Centrifuge parameter -x\ndatabase:\n  class: Directory\n  path:  /home/<username>/ntDatabase\n# Lenght of the identical match in nucleotides required to infer a read as contaminant. Centrifuge parameter --min-hitlen\npartialMatch: 100\n# NCBI taxon root identifers for the species considered contaminants: e.g. bacteria (=2), viruses (=10239), fungi (=4751), mammals (=40674), artificial seqs (=81077). Pipeline specific parameter.\ntaxons: [2,10239,4751,40674,81077]\n\n## Parameters for the RepeatModeler and RepeatMasker are described in http://www.repeatmasker.org\nrepBaseLibrary:\n  class: File\n  # This is the RepBase file from https://www.girinst.org/repbase. RepeatMasker parameter -lib\n  path: /home/<username>/RepBaseLibrary/RMRBSeqs.embl\n# Constant true and false values for repeat masker\ntrueValue: true\nfalseValue: false\n\n```\n### Runtimes and hardware requirements\nThe workflow was tested in Linux environment (CentOS Linux release 7.2.1511) in a server with 24 physical CPUs (48 hyperthreaded CPUs) and 512 GB RAM.\n\n| Assembly | Runtime in CPU hours | RAM usage (GB) |\n| --- | --- | --- |\n| *Caenorhabditis elegans* | 1537 | 134.1 |\n| *Drosophila melanogaster* | 6501 | 134.1 |\n| *Plasmodium falciparum* | 424 | 134.1 |\n\nMaximum memory usage of 134.1 GB was claimed by the program Centrifuge for each assembly.\n\n### Software tools used in this pipeline\n* [Dextractor v1.0](https://github.com/thegenemyers/DEXTRACTOR)\n* [Trimmomatic v0.36](http://www.usadellab.org/cms/?page=trimmomatic)\n* [Centrifuge v1.0.3](http://www.ccb.jhu.edu/software/centrifuge)\n* [Canu v1.8](http://canu.readthedocs.io/en/latest/index.html)\n* [Arrow in SmrtLink v7.0.1](https://www.pacb.com/support/software-downloads)\n* [Bowtie 2 v2.2.8](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)\n* [SAMtools v1.6](http://samtools.sourceforge.net)\n* [Pilon v1.22](https://github.com/broadinstitute/pilon)\n* [RepeatMasker v4.0.6](http://www.repeatmasker.org)\n* [RepeatModeler v1.0.11](http://www.repeatmasker.org)\n* [RepBase v17.02](https://www.girinst.org/repbase)\n* [HaploMerger2 build_20160512](https://github.com/mapleforest/HaploMerger2)\n\n### Cite\nIf you use the pipeline, please cite:\nKorhonen, Pasi K., Ross S. Hall, Neil D. Young, and Robin B. Gasser. \"Common Workflow Language (CWL)-based software pipeline for de novo genome assembly from long-and short-read data.\" GigaScience 8, no. 4 (2019): giz014.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Preparing support for Cromwell\\r\\n', 'url': 'https://workflowhub.eu/workflows/334?version=1', 'remote': 'https://github.com/vetscience/Assemblosis.git', 'commit': 'c498607f21124d2f3787a21c0d554375799170a7', 'ref': 'refs/tags/v0.1.3-beta', 'tree': '/workflows/334/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Preparing support for Cromwell",
    "created_at": "2022-04-20T23:10:26.000Z",
    "updated_at": "2023-01-16T13:59:43.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/261', 'family_name': 'Korhonen', 'given_name': 'Pasi', 'affiliation': 'The University of Melbourne', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'pacBioDataDir', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'pacBioTmpDir', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pacBioInBam', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'prefix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'genomeSize', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'minReadLen', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'corMaxEvidenceErate', 'name': None, 'description': None, 'type': [{'type': 'float'}], 'default_value': None}, {'id': 'readsPe1', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'readsPe2', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'phredsPe', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'slidingWindow', 'name': None, 'description': None, 'type': [{'type': 'assembly-typedef.yml#slidingWindow'}], 'default_value': None}, {'id': 'illuminaClip', 'name': None, 'description': None, 'type': [{'type': 'assembly-typedef.yml#illuminaClipping?'}], 'default_value': None}, {'id': 'leading', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'trailing', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minlen', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'threads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'minThreads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'canuConcurrency', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'orientation', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'maxFragmentLens', 'name': None, 'description': None, 'type': [{'type': 'int[]'}], 'default_value': None}, {'id': 'polishedAssembly', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diploidOrganism', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'fix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'database', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'taxons', 'name': None, 'description': None, 'type': [{'type': 'int[]'}], 'default_value': None}, {'id': 'partialMatch', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'repBaseLibrary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'trueValue', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'falseValue', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}], 'outputs': [{'id': 'correctedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['correct/correctedReads']}, {'id': 'trimmedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['assemble/trimmedReads']}, {'id': 'canuAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['assemble/assembly']}, {'id': 'arrowAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['arrow/arrowPolishedAssembly']}, {'id': 'pilonAssembly', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pilon/pilonPolishedAssembly']}, {'id': 'trimmedReadFiles1', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['cleanIlluminaReads/trimmedPe1']}, {'id': 'trimmedReadFiles2', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['cleanIlluminaReads/trimmedPe2']}, {'id': 'sortedBamIndexFileOut', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['expressionToolBam/hybridFile']}, {'id': 'deconReport', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['classifyReads/report']}, {'id': 'deconClassification', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['classifyReads/classification']}, {'id': 'decontaminatedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['decontaminate/deconReads']}, {'id': 'contaminatedReads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['decontaminate/conReads']}, {'id': 'assemblyMasked', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['combineCatFiles/maskedAssembly']}, {'id': 'assemblyMerged', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['haploMerge/mergedAssembly']}], 'steps': [{'id': 'cleanIlluminaReads', 'name': None, 'description': None, 'sink_ids': ['cleanIlluminaReads/trimmedPe1', 'cleanIlluminaReads/trimmedPe2', 'cleanIlluminaReads/trimmedUnpe1', 'cleanIlluminaReads/trimmedUnpe2', 'cleanIlluminaReads/trimLogFile']}, {'id': 'hdf5check', 'name': None, 'description': None, 'sink_ids': ['hdf5check/pbFastqReads']}, {'id': 'correct', 'name': None, 'description': None, 'sink_ids': ['correct/correctedReads']}, {'id': 'renameReads', 'name': None, 'description': None, 'sink_ids': ['renameReads/renamedReads', 'renameReads/mappedIds']}, {'id': 'classifyReads', 'name': None, 'description': None, 'sink_ids': ['classifyReads/report', 'classifyReads/classification']}, {'id': 'decontaminate', 'name': None, 'description': None, 'sink_ids': ['decontaminate/deconReads', 'decontaminate/conReads']}, {'id': 'assemble', 'name': None, 'description': None, 'sink_ids': ['assemble/trimmedReads', 'assemble/assembly']}, {'id': 'arrow', 'name': None, 'description': None, 'sink_ids': ['arrow/arrowPolishedAssembly']}, {'id': 'indexReference', 'name': None, 'description': None, 'sink_ids': ['indexReference/referenceAssembly', 'indexReference/bt2_1', 'indexReference/bt2_2', 'indexReference/bt2_3', 'indexReference/bt2_4', 'indexReference/bt2rev1', 'indexReference/bt2rev2']}, {'id': 'expressionToolBowtie', 'name': None, 'description': None, 'sink_ids': ['expressionToolBowtie/hybridFile']}, {'id': 'mapIlluminaReads', 'name': None, 'description': None, 'sink_ids': ['mapIlluminaReads/samFile']}, {'id': 'sortMappedReads', 'name': None, 'description': None, 'sink_ids': ['sortMappedReads/sortedBamFile']}, {'id': 'indexBamFile', 'name': None, 'description': None, 'sink_ids': ['indexBamFile/sortedBamFile', 'indexBamFile/bamIndexFile']}, {'id': 'expressionToolBam', 'name': None, 'description': None, 'sink_ids': ['expressionToolBam/hybridFile']}, {'id': 'pilon', 'name': None, 'description': None, 'sink_ids': ['pilon/pilonPolishedAssembly', 'pilon/pilonPolishedAssemblyChanges']}, {'id': 'indexAssembly', 'name': None, 'description': None, 'sink_ids': ['indexAssembly/pilonPolishedAssembly', 'indexAssembly/translation', 'indexAssembly/nsq', 'indexAssembly/nin', 'indexAssembly/nhr', 'indexAssembly/nog', 'indexAssembly/nni', 'indexAssembly/nnd']}, {'id': 'expressionToolRepeatModeler', 'name': None, 'description': None, 'sink_ids': ['expressionToolRepeatModeler/hybridFile']}, {'id': 'inferRepeats', 'name': None, 'description': None, 'sink_ids': ['inferRepeats/repeatFastaFile', 'inferRepeats/repeatLibrary']}, {'id': 'maskCustomRepeats', 'name': None, 'description': None, 'sink_ids': ['maskCustomRepeats/categoryFile']}, {'id': 'maskTranspRepeats', 'name': None, 'description': None, 'sink_ids': ['maskTranspRepeats/categoryFile']}, {'id': 'maskSimpleRepeats', 'name': None, 'description': None, 'sink_ids': ['maskSimpleRepeats/categoryFile']}, {'id': 'combineCatFiles', 'name': None, 'description': None, 'sink_ids': ['combineCatFiles/maskedAssembly']}, {'id': 'haploMerge', 'name': None, 'description': None, 'sink_ids': ['haploMerge/mergedAssembly', 'haploMerge/scoreMatrix']}], 'links': [{'id': 'phred', 'source_id': 'phredsPe', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads1', 'source_id': 'readsPe1', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads2', 'source_id': 'readsPe2', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'slidingWindow', 'source_id': 'slidingWindow', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'illuminaClip', 'source_id': 'illuminaClip', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'leading', 'source_id': 'leading', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'trailing', 'source_id': 'trailing', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'minlen', 'source_id': 'minlen', 'sink_id': 'cleanIlluminaReads', 'name': None, 'default_value': None}, {'id': 'directory', 'source_id': 'pacBioDataDir', 'sink_id': 'hdf5check', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'pacBioInBam', 'sink_id': 'hdf5check', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'genomeSize', 'source_id': 'genomeSize', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'pacbio-raw', 'source_id': 'hdf5check/pbFastqReads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'corMaxEvidenceErate', 'source_id': 'corMaxEvidenceErate', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'minThreads', 'source_id': 'minThreads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'maxThreads', 'source_id': 'threads', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'corConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'correct', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'correct/correctedReads', 'sink_id': 'renameReads', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'database', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'renameReads/renamedReads', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'partialMatch', 'source_id': 'partialMatch', 'sink_id': 'classifyReads', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'renameReads/renamedReads', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'taxons', 'source_id': 'taxons', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'classificationFile', 'source_id': 'classifyReads/classification', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'mappedIds', 'source_id': 'renameReads/mappedIds', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'partialMatch', 'source_id': 'partialMatch', 'sink_id': 'decontaminate', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'genomeSize', 'source_id': 'genomeSize', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'minReadLen', 'source_id': 'minReadLen', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'pacbio-corrected', 'source_id': 'decontaminate/deconReads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'corMaxEvidenceErate', 'source_id': 'corMaxEvidenceErate', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'minThreads', 'source_id': 'minThreads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'maxThreads', 'source_id': 'threads', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtmhapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgmhapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtmmapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgmmapConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'obtovlConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'utgovlConcurrency', 'source_id': 'canuConcurrency', 'sink_id': 'assemble', 'name': None, 'default_value': None}, {'id': 'dataDir', 'source_id': 'pacBioDataDir', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'tmpDir', 'source_id': 'pacBioTmpDir', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assemble/assembly', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'pacBioInBam', 'sink_id': 'arrow', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'arrow/arrowPolishedAssembly', 'sink_id': 'indexReference', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexReference/referenceAssembly', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_1', 'source_id': 'indexReference/bt2_1', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_2', 'source_id': 'indexReference/bt2_2', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_3', 'source_id': 'indexReference/bt2_3', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2_4', 'source_id': 'indexReference/bt2_4', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2rev1', 'source_id': 'indexReference/bt2rev1', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'bt2rev2', 'source_id': 'indexReference/bt2rev2', 'sink_id': 'expressionToolBowtie', 'name': None, 'default_value': None}, {'id': 'phred', 'source_id': 'phredsPe', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'orientation', 'source_id': 'orientation', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'maxFragmentLen', 'source_id': 'maxFragmentLens', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'expressionToolBowtie/hybridFile', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads1', 'source_id': 'cleanIlluminaReads/trimmedPe1', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'reads2', 'source_id': 'cleanIlluminaReads/trimmedPe2', 'sink_id': 'mapIlluminaReads', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sortMappedReads', 'name': None, 'default_value': None}, {'id': 'inputSamFile', 'source_id': 'mapIlluminaReads/samFile', 'sink_id': 'sortMappedReads', 'name': None, 'default_value': None}, {'id': 'inputBamFile', 'source_id': 'sortMappedReads/sortedBamFile', 'sink_id': 'indexBamFile', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexBamFile/sortedBamFile', 'sink_id': 'expressionToolBam', 'name': None, 'default_value': None}, {'id': 'bai', 'source_id': 'indexBamFile/bamIndexFile', 'sink_id': 'expressionToolBam', 'name': None, 'default_value': None}, {'id': 'bamPe', 'source_id': 'expressionToolBam/hybridFile', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'arrow/arrowPolishedAssembly', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'output', 'source_id': 'polishedAssembly', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'diploidOrganism', 'source_id': 'diploidOrganism', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'fix', 'source_id': 'fix', 'sink_id': 'pilon', 'name': None, 'default_value': None}, {'id': 'scaffolds', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'indexAssembly', 'name': None, 'default_value': None}, {'id': 'masterFile', 'source_id': 'indexAssembly/pilonPolishedAssembly', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'translation', 'source_id': 'indexAssembly/translation', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nsq', 'source_id': 'indexAssembly/nsq', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nin', 'source_id': 'indexAssembly/nin', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nhr', 'source_id': 'indexAssembly/nhr', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nog', 'source_id': 'indexAssembly/nog', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nni', 'source_id': 'indexAssembly/nni', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'nnd', 'source_id': 'indexAssembly/nnd', 'sink_id': 'expressionToolRepeatModeler', 'name': None, 'default_value': None}, {'id': 'repBaseLibrary', 'source_id': 'repBaseLibrary', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'expressionToolRepeatModeler/hybridFile', 'sink_id': 'inferRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'falseValue', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'trueValue', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatFastaFile', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskCustomRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'falseValue', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'trueValue', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatLibrary', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskTranspRepeats', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'noInterspersed', 'source_id': 'trueValue', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'noLowComplexity', 'source_id': 'falseValue', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'repeatLibrary', 'source_id': 'inferRepeats/repeatLibrary', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'maskSimpleRepeats', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskCustomRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskTranspRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'categories', 'source_id': 'maskSimpleRepeats/categoryFile', 'sink_id': 'combineCatFiles', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'pilon/pilonPolishedAssembly', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'maskedAssembly', 'source_id': 'combineCatFiles/maskedAssembly', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'trimmedReads', 'source_id': 'decontaminate/deconReads', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'haploMerge', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 334,
    "text_field": "['Examples', 'Metrics', 'collect', 'Run', 'arrow', 'combinecats', 'decon', 'haplomerger', 'hdf5check', 'renamereads', 'repeatmodeler', 'RepeatMaskerConf', 'util', 'RepeatModelerConf', 'util', 'assemblyCele.yml', 'assemblyDmel.yml', 'assemblyPfal.yml', 'metricsCele.yml', 'metricsDmel.yml', 'metricsPfal.yml', 'LICENSE', 'busco.cwl', 'collect.cwl', 'Dockerfile', 'base.py', 'compileIndelsToRef.py', 'compileSnpsToRef.py', 'countDiffs.py', 'createTables.py', 'fasta.py', 'fastaToUpper.py', 'genomeInfo.py', 'gff.py', 'rmSpliceVars.py', 'snpCoding.py', 'tree.py', 'wbtree.py', 'window.py', 'colocations.sh', 'metrics.cwl', 'quast.cwl', 'README.md', 'arrow.cwl', 'Dockerfile', 'createFofn.py', 'preset.xml', 'referenceset.xml', 'smrtpipe.sh', 'assembly-typedef.yml', 'assembly.cwl', 'bowtie2-build.cwl', 'bowtie2.cwl', 'canuAssemble.cwl', 'canuCorrect.cwl', 'centrifuge.cwl', 'combinecats.cwl', 'Dockerfile', 'combine.sh', 'cromwell.singularity.conf', 'cromwell.udocker.conf', 'decon.cwl', 'Dockerfile', 'base.py', 'convertFasta.py', 'decon.sh', 'fasta.py', 'mapFasta.py', 'taxtreelabel.pl', 'expressiontoolbam.cwl', 'expressiontoolbowtie.cwl', 'expressiontoolrepeats.cwl', 'haplomerger.cwl', 'Dockerfile', 'base.py', 'fasta.py', 'haploMerger.py', 'haploMerger.sh', 'hdf5check.cwl', 'Dockerfile', 'base.py', 'hdf5Check.py', 'indexassembly.cwl', 'pilon.cwl', 'renameReads.cwl', 'Dockerfile', 'base.py', 'renameFasta.py', 'renamereads.sh', 'repeatmasker.cwl', 'repeatmodeler.cwl', 'Dockerfile', 'Dockerfile.docker', 'Dockerfile.udocker', 'DateRepeats', 'DupMasker', 'ProcessRepeats', 'RepeatMasker', 'RepeatMaskerConfig.pm', 'RepeatProteinMask', 'buildRMLibFromEMBL.pl', 'buildSummary.pl', 'calcDivergenceFromAlign.pl', 'createRepeatLandscape.pl', 'dupliconToSVG.pl', 'getRepeatMaskerBatch.pl', 'queryRepeatDatabase.pl', 'queryTaxonomyDatabase.pl', 'rmOut2Fasta.pl', 'rmOutToGFF3.pl', 'rmToUCSCTables.pl', 'trfMask', 'wublastToCrossmatch.pl', 'BuildDatabase', 'Refiner', 'RepModelConfig.pm', 'RepeatClassifier', 'RepeatModeler', 'TRFMask', 'Linup', 'dfamConsensusTool.pl', 'renameIds.pl', 'viewMSA.pl', 'initReps.sh', 'initReps.sh.docker', 'initReps.sh.udocker', 'inputJson', 'inputRepeatMasker', 'inputRepeatModeler', 'repeatModeler.sh', 'samindex.cwl', 'samsort.cwl', 'trimmomaticpe.cwl', 'install.sh', 'installConda.sh', 'installCromwell.sh', 'installCwltool.sh', 'installUdocker.sh']",
    "raw_text_content": "",
    "p_tag_content": "The workflow is designed to use both PacBio long-reads and Illumina short-reads. The workflow first extracts, corrects, trims and decontaminates the long reads. Decontaminated trimmed reads are then used to assemble the genome and raw reads are used to polish it. Next, Illumina reads are cleaned and used to further polish the resultant assembly. Finally, the polished assembly is masked using inferred repeats and haplotypes are eliminated. The workflow uses BioConda and DockerHub to install required software and is therefore fully automated. In addition to final assembly, the workflow produces intermediate assemblies before and after polishing steps. The workflow follows the syntax for CWL v1.0. The pipeline can be run either usingCromwellorcwltool referenceimplementation and docker containers can be run either usingSingularityorudocker. Cromwell implementation Reference implementation Singularity software packages have to be installed server-wide by administrator Udocker software package can be installed locally Install miniconda using installation scriptinstallConda.sh.\nTo install CWL, use either installation scriptinstallCromwell.shorinstallCwltool.sh.\nTo install udocker, use installation scriptinstallUdocker.sh.\nTo install singularity, ask your system administrator. For data dependencies: download and extractRepBase database, download Centrifuge version ofNCBI nt databaseand createIllumina adapter FASTA fileto your preferred locations. If your reads are clean from adapters, the adapter FASTA file can be empty.\nGive the location of these data in the configuration (.yml) file (seeUsage). You have to create a YAML (.yml) file for each assembly. This file defines the required parameters and the location for both PacBio and Illumina raw-reads. An annotated example of the YAML file for Caenorhabditis elegans assembly. The workflow was tested in Linux environment (CentOS Linux release 7.2.1511) in a server with 24 physical CPUs (48 hyperthreaded CPUs) and 512 GB RAM. Maximum memory usage of 134.1 GB was claimed by the program Centrifuge for each assembly. If you use the pipeline, please cite:\nKorhonen, Pasi K., Ross S. Hall, Neil D. Young, and Robin B. Gasser. \"Common Workflow Language (CWL)-based software pipeline for de novo genome assembly from long-and short-read data.\" GigaScience 8, no. 4 (2019): giz014. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/334?version=1 Preparing support for Cromwell Views:1679Downloads:172 Created: 20th Apr 2022 at 00:10 Last updated: 20th Apr 2022 at 00:23 This item has not yet been tagged. None Teams:Workflows Australia Organizations:The University of Melbourne A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 59,
    "discussion_links": "[{'id': '422', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Workflow for Illumina Quality Control and Filtering",
    "license": "Apache-2.0",
    "description": "### Workflow for Illumina Quality Control and Filtering\n_Multiple paired datasets will be merged into single paired dataset._\n\n**Summary:**\n- FastQC on raw data files<br />\n- fastp for read quality trimming<br />\n- BBduk for phiX and (optional) rRNA filtering<br />\n- Kraken2 for taxonomic classification of reads (optional)<br />\n- BBmap for (contamination) filtering using given references (optional)<br />\n- FastQC on filtered (merged) data<br />\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Classification', 'Genomics', 'Transcriptomics', 'filtering', 'illumina', 'quality']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/336?version=1', 'commit': '5c2e0e56ef8c080385dc359c5e94231eda0ea385', 'ref': 'refs/heads/master', 'tree': '/workflows/336/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-04-21T13:00:34.000Z",
    "updated_at": "2023-04-07T14:04:28.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence contamination filtering', 'identifier': 'http://edamontology.org/operation_3187'}, {'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}, {'label': 'Taxonomic classification', 'identifier': 'http://edamontology.org/operation_3460'}]",
    "topic_annotations": "[{'label': 'Data quality management', 'identifier': 'http://edamontology.org/topic_3572'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in MegaBytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': 'filter rRNA', 'description': 'Optionally remove rRNA sequences from the reads.', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence fastq file(s) locally', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence fastq file(s) locally', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Filter reference file(s)', 'description': 'References fasta file(s) for filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Kraken2 database location, multiple databases is possible', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'keep_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Keep with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'step', 'name': 'Output Step number', 'description': 'Step number for output folder numbering', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'reports_folder', 'name': 'Filtering reports folder', 'description': 'Folder containing all reports of filtering and quality control', 'type': [{'type': 'Directory'}], 'source_ids': ['reports_files_to_folder/results']}, {'id': 'QC_forward_reads', 'name': 'Filtered forward read', 'description': 'Filtered forward read', 'type': [{'type': 'File'}], 'source_ids': ['phix_filter/out_forward_reads']}, {'id': 'QC_reverse_reads', 'name': 'Filtered reverse read', 'description': 'Filtered reverse read', 'type': [{'type': 'File'}], 'source_ids': ['phix_filter/out_reverse_reads']}], 'steps': [{'id': 'fastqc_illumina_before', 'name': 'FastQC before', 'description': 'Quality assessment and report of reads', 'sink_ids': ['fastqc_illumina_before/html_files', 'fastqc_illumina_before/zip_files']}, {'id': 'fastq_merge_fwd', 'name': 'Merge forward reads', 'description': 'Merge multiple forward fastq reads to a single file', 'sink_ids': ['fastq_merge_fwd/output']}, {'id': 'fastq_merge_rev', 'name': 'Merge reverse reads', 'description': 'Merge multiple reverse fastq reads to a single file', 'sink_ids': ['fastq_merge_rev/output']}, {'id': 'fastp', 'name': 'fastp', 'description': 'Read quality filtering and (barcode) trimming.', 'sink_ids': ['fastp/out_forward_reads', 'fastp/out_reverse_reads', 'fastp/html_report', 'fastp/json_report']}, {'id': 'rrna_filter', 'name': 'rRNA filter (bbduk)', 'description': 'Filters rRNA sequences from reads using bbduk', 'sink_ids': ['rrna_filter/out_forward_reads', 'rrna_filter/out_reverse_reads', 'rrna_filter/summary', 'rrna_filter/stats_file']}, {'id': 'phix_filter', 'name': 'PhiX filter (bbduk)', 'description': 'Filters illumina spike-in PhiX sequences from reads using bbduk', 'sink_ids': ['phix_filter/out_forward_reads', 'phix_filter/out_reverse_reads', 'phix_filter/summary', 'phix_filter/stats_file']}, {'id': 'illumina_quality_kraken2', 'name': 'Kraken2', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['illumina_quality_kraken2/sample_report']}, {'id': 'illumina_quality_kraken2_krona', 'name': 'Krona', 'description': 'Visualization of Kraken2 classification with Krona', 'sink_ids': ['illumina_quality_kraken2_krona/krona_html']}, {'id': 'prepare_bbmap_db', 'name': 'Prepare references', 'description': 'Prepare references to a single fasta file and unique headers', 'sink_ids': ['prepare_bbmap_db/fasta_db']}, {'id': 'reference_filter_illumina', 'name': 'Reference read mapping', 'description': 'Map reads against references using BBMap', 'sink_ids': ['reference_filter_illumina/out_forward_reads', 'reference_filter_illumina/out_reverse_reads', 'reference_filter_illumina/log', 'reference_filter_illumina/stats', 'reference_filter_illumina/covstats']}, {'id': 'fastqc_illumina_after', 'name': 'FastQC after', 'description': 'Quality assessment and report of reads', 'sink_ids': ['fastqc_illumina_after/html_files', 'fastqc_illumina_after/zip_files']}, {'id': 'reports_files_to_folder', 'name': 'Reports to folder', 'description': 'Preparation of fastp output files to a specific output folder', 'sink_ids': ['reports_files_to_folder/results']}], 'links': [{'id': 'fastq', 'source_id': 'forward_reads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'reverse_reads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_illumina_before', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'forward_reads', 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'fastq_merge_fwd', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'reverse_reads', 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'fastq_merge_rev', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastq_merge_fwd/output', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastq_merge_rev/output', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': None, 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'rrna_filter', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'rrna_filter/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'reference_filter_illumina/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'rrna_filter/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reference_filter_illumina/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': None, 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'phix_filter', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'phix_filter/out_forward_reads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'phix_filter/out_reverse_reads', 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_quality_kraken2', 'name': None, 'default_value': True}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'illumina_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_quality_kraken2/sample_report', 'sink_id': 'illumina_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'output_file_name', 'source_id': None, 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'fastp/out_forward_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'fastp/out_reverse_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'prepare_bbmap_db/fasta_db', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'output_mapped', 'source_id': 'keep_reference_mapped_reads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'reference_filter_illumina', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'phix_filter/out_forward_reads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'fastq', 'source_id': 'phix_filter/out_reverse_reads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_illumina_after', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_before/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_before/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_after/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_illumina_after/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastp/html_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastp/json_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/stats', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/covstats', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_illumina/log', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_quality_kraken2/sample_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_quality_kraken2_krona/krona_html', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'phix_filter/summary', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'phix_filter/stats_file', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'rrna_filter/summary', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'rrna_filter/stats_file', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': 'step', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 336,
    "text_field": "['workflow_illumina_quality.cwl', 'workflow_illumina_quality_packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Multiple paired datasets will be merged into single paired dataset. Summary: Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/336?version=1 Initial commit Views:2472Downloads:238 Created: 21st Apr 2022 at 14:00 Last updated: 7th Apr 2023 at 15:02 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified Creator:Jasper Koehorst Submitter:Jasper Koehorst"
  },
  {
    "": 60,
    "discussion_links": "[{'id': '425', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "LongRead Quality Control and Filtering",
    "license": "Apache-2.0",
    "description": "### Workflow for LongRead Quality Control and Filtering\n\n- NanoPlot  (read quality control) before and after filtering\n- Filtlong  (read trimming)\n- Kraken2 taxonomic read classification before and after filtering\n- Minimap2 read filtering based on given references<br><br>\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Assembly', 'CWL', 'Genomics', 'nanopore']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/337?version=1', 'commit': 'ae127fa2dd74e696bd179f52025a845a173a3ed2', 'ref': 'refs/heads/master', 'tree': '/workflows/337/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-04-21T16:19:59.000Z",
    "updated_at": "2023-04-07T14:07:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}]",
    "topic_annotations": "[{'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence analysis', 'identifier': 'http://edamontology.org/topic_0080'}, {'label': 'Sequencing', 'identifier': 'http://edamontology.org/topic_3168'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'nanopore_reads', 'name': 'Nanopore reads', 'description': 'Nanopore sequence file locally fastq format', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Contamination reference file', 'description': 'Contamination references fasta file for contamination filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Keep with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Kraken2 database location, multiple databases is possible', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'step', 'name': 'CWL base step number', 'description': 'Step number for order of steps', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'reports_folder', 'name': 'Filtering reports folder', 'description': 'Folder containing all reports of filtering and quality control', 'type': [{'type': 'Directory'}], 'source_ids': ['reports_files_to_folder/results']}, {'id': 'filtered_reads', 'name': 'Filtered nanopore reads', 'description': 'Filtered nanopore reads', 'type': [{'type': 'File'}], 'source_ids': ['reference_filter_nanopore/fastq', 'merge_nanopore_fastq/output', 'nanopore_array_to_file/file']}], 'steps': [{'id': 'merge_nanopore_fastq', 'name': 'Merge fastq files', 'description': None, 'sink_ids': ['merge_nanopore_fastq/output']}, {'id': 'fastqc_nanopore_before', 'name': 'FastQC before', 'description': 'Quality assessment and report of reads before filter', 'sink_ids': ['fastqc_nanopore_before/html_files', 'fastqc_nanopore_before/zip_files']}, {'id': 'prepare_bbmap_db', 'name': 'Prepare references', 'description': 'Prepare BBMap references to a single fasta file and unique headers', 'sink_ids': ['prepare_bbmap_db/fasta_db']}, {'id': 'nanopore_array_to_file', 'name': 'array to file', 'description': 'Converts the file array to a single file object', 'sink_ids': ['nanopore_array_to_file/file']}, {'id': 'nanopore_quality_kraken2', 'name': 'Kraken2', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['nanopore_quality_kraken2/sample_report']}, {'id': 'nanopore_quality_kraken2_krona', 'name': 'Krona', 'description': 'Visualization of Kraken2 classification with Krona', 'sink_ids': ['nanopore_quality_kraken2_krona/krona_html']}, {'id': 'reference_filter_nanopore', 'name': 'Reference mapping', 'description': 'Removal of contaminated reads using minimap2 mapping', 'sink_ids': ['reference_filter_nanopore/fastq', 'reference_filter_nanopore/log']}, {'id': 'fastqc_nanopore_after', 'name': 'FastQC after', 'description': 'Quality assessment and report of reads before filter', 'sink_ids': ['fastqc_nanopore_after/html_files', 'fastqc_nanopore_after/zip_files']}, {'id': 'reports_files_to_folder', 'name': 'Reports to folder', 'description': 'Preparation of fastp output files to a specific output folder', 'sink_ids': ['reports_files_to_folder/results']}], 'links': [{'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'infiles', 'source_id': 'nanopore_reads', 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'outname', 'source_id': None, 'sink_id': 'merge_nanopore_fastq', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_nanopore_before', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'filter_references', 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'output_file_name', 'source_id': None, 'sink_id': 'prepare_bbmap_db', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'nanopore_array_to_file', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_reads', 'sink_id': 'nanopore_array_to_file', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'nanopore_quality_kraken2', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_quality_kraken2/sample_report', 'sink_id': 'nanopore_quality_kraken2_krona', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'prepare_bbmap_db/fasta_db', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'merge_nanopore_fastq/output', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'nanopore_array_to_file/file', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'output_mapped', 'source_id': 'keep_reference_mapped_reads', 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': None}, {'id': 'preset', 'source_id': None, 'sink_id': 'reference_filter_nanopore', 'name': None, 'default_value': 'map-ont'}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'reference_filter_nanopore/fastq', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastqc_nanopore_after', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_before/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_before/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_after/html_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc_nanopore_after/zip_files', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_quality_kraken2/sample_report', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_quality_kraken2_krona/krona_html', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reference_filter_nanopore/log', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': 'step', 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reports_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 337,
    "text_field": "['workflow_longread_quality.cwl', 'workflow_longread_quality_packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/337?version=1 Initial commit Views:2066Downloads:218 Created: 21st Apr 2022 at 17:19 Last updated: 7th Apr 2023 at 15:07 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 65,
    "discussion_links": "[{'id': '412', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Kallisto RNAseq Workflow",
    "license": "Apache-2.0",
    "description": "### Workflow Kallisto RNAseq \n**(pseudoalignment on transcripts)**\n  - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n  - kallisto\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/344?version=1', 'commit': 'c7adcded3921cc80cd2f24a8810e9cc00a0258ed', 'ref': 'refs/heads/master', 'tree': '/workflows/344/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-05-20T10:10:26.000Z",
    "updated_at": "2023-01-16T13:59:53.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 40000}, {'id': 'filter_rrna', 'name': 'Filter rRNA', 'description': 'Optionally remove rRNA sequences from the reads.', 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence file locally', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence file locally', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'kallisto_index', 'name': 'kallisto index file', 'description': 'kallisto index file location', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'contamination_references', 'name': 'Reference filters files', 'description': 'Reference fasta file(s) for filtering (optional)', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'destination', 'name': 'Output Destination', 'description': 'Optional Output destination used for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'illumina_quality_stats', 'name': 'Filtered statistics', 'description': 'Statistics on quality and preprocessing of the reads', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality/reports_folder']}, {'id': 'kallisto_output', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['workflow_quality/QC_reverse_reads', 'workflow_quality/QC_forward_reads', 'workflow_quality/reports_folder']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'kallisto_files_to_folder', 'name': 'kallisto output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'contamination_references', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'workflow_quality', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality', 'name': None, 'default_value': 1}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'index', 'source_id': 'kallisto_index', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 344,
    "text_field": "['workflow_RNAseq_kallisto.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Kallisto RNAseq Workflow\ndoc: | \n  Workflow Kallisto RNAseq (pseudoalignment on transcripts)\n    - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n    - kallisto\n\n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n    Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>\n\n  The dependencies are either accessible from https://unlock-icat.irods.surfsara.nl (anonymous,anonymous)<br>\n  and/or<br>\n  By using the conda / pip environments as shown in https://git.wur.nl/unlock/docker/-/blob/master/kubernetes/scripts/setup.sh<br>\n\noutputs:\n  illumina_quality_stats:\n    label: Filtered statistics\n    doc: Statistics on quality and preprocessing of the reads\n    type: Directory\n    outputSource: workflow_quality/reports_folder\n  kallisto_output:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: Identifier\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes\n    label: Threads\n    default: 2\n  memory:\n    type: int?\n    doc: Maximum memory usage in megabytes\n    label: Maximum memory in MB\n    default: 40000\n  filter_rrna:\n    type: boolean    \n    doc: Optionally remove rRNA sequences from the reads.\n    label: Filter rRNA\n  forward_reads:\n    type: string[]\n    doc: Forward sequence file locally\n    label: Forward reads\n  reverse_reads:\n    type: string[]\n    doc: Reverse sequence file locally\n    label: Reverse reads\n  kallisto_index:\n    type: string\n    doc: kallisto index file location\n    label: kallisto index file\n  contamination_references:\n    type: string[]?\n    doc: Reference fasta file(s) for filtering (optional)\n    label: Reference filters files\n\n  destination:\n    type: string?\n    label: Output Destination\n    doc: Optional Output destination used for cwl-prov reporting.\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering of raw reads\n  workflow_quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    run: workflow_illumina_quality.cwl\n    in:\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      filter_references: contamination_references\n      memory: memory\n      threads: threads\n      identifier: identifier\n      filter_rrna: filter_rrna\n      step:\n        default: 1\n    out: [QC_reverse_reads, QC_forward_reads, reports_folder]\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    in:\n      identifier: identifier\n      forward_reads: workflow_quality/QC_forward_reads\n      reverse_reads: workflow_quality/QC_reverse_reads\n      index: kallisto_index\n      threads: threads\n    out:\n      [abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  kallisto_files_to_folder:\n    label: kallisto output\n    doc: Preparation of kallisto output files to a specific output folder\n    in:\n      identifier: identifier\n      files:\n        source: [kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(inputs.identifier+\"_kallisto\")\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2022-05-00\"\ns:dateModified: \"2022-06-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/",
    "p_tag_content": "(pseudoalignment on transcripts) All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/344?version=1 Initial commit Views:1880Downloads:184 Created: 20th May 2022 at 11:10 Last updated: 2nd Nov 2022 at 15:26 This item has not yet been tagged. None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 79,
    "discussion_links": "[{'id': '435', 'label': 'Gitter', 'url': 'https://gitter.im/microbiome-informatics/community?utm_source=share-link&utm_medium=link&utm_campaign=share-link'}]",
    "title": "MGnify - assembly analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#assembly-analysis-pipeline",
    "latest_version": 2,
    "tags": "['Annotation', 'CWL', 'Metagenomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/360?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/360/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/360?version=2', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/360/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:03:35.000Z",
    "updated_at": "2023-04-28T10:09:02.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'contigs', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'contig_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'other_ncrna_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_postfixes', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'cgc_chunk_size', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_eggnog', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'func_ann_names_ips', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'func_ann_names_hmmer', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_omit_alignment', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_name_database', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hmmsearch_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_db', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_diamond_db', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_data_dir', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_databases', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_applications', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'InterProScan_outputFormat', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ips_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ko_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'Uniref90_db_txt', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diamond_maxTargetSeqs', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'diamond_databaseFile', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'diamond_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'go_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'graphs', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pathways_names', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pathways_classes', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'gp_flatfiles_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'clusters_glossary', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'hashsum_input', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/hashsum_input']}, {'id': 'qc-statistics_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics_folder']}, {'id': 'compressed_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/compressed_files']}, {'id': 'index_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/index_fasta_file']}, {'id': 'bgzip_index', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/bgzip_index']}, {'id': 'bgzip_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/bgzip_fasta_file']}, {'id': 'chunking_nucleotides', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_nucleotides']}, {'id': 'chunking_proteins', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_proteins']}, {'id': 'functional_annotation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/functional_annotation_folder']}, {'id': 'stats', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/stats']}, {'id': 'pathways_systems_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder']}, {'id': 'pathways_systems_folder_antismash', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder_antismash']}, {'id': 'pathways_systems_folder_antismash_summary', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/pathways_systems_folder_antismash_summary']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence-categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_cds_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_no_cds_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/qc-status', 'before-qc/qc_summary', 'before-qc/qc-statistics_folder', 'before-qc/filtered_fasta', 'before-qc/hashsum_input']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/compressed_files', 'after-qc/index_fasta_file', 'after-qc/bgzip_fasta_file', 'after-qc/bgzip_index', 'after-qc/chunking_nucleotides', 'after-qc/chunking_proteins', 'after-qc/functional_annotation_folder', 'after-qc/stats', 'after-qc/pathways_systems_folder', 'after-qc/pathways_systems_folder_antismash', 'after-qc/pathways_systems_folder_antismash_summary', 'after-qc/sequence-categorisation_folder', 'after-qc/rna-count', 'after-qc/taxonomy-summary_folder', 'after-qc/count_CDS', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}, {'id': 'touch_no_cds_flag', 'name': None, 'description': None, 'sink_ids': ['touch_no_cds_flag/created_file']}], 'links': [{'id': 'contigs', 'source_id': 'contigs', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'contig_min_length', 'source_id': 'contig_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'other_ncrna_models', 'source_id': 'other_ncrna_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_config', 'source_id': 'CGC_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_postfixes', 'source_id': 'CGC_postfixes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'cgc_chunk_size', 'source_id': 'cgc_chunk_size', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_eggnog', 'source_id': 'protein_chunk_size_eggnog', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'source_id': 'protein_chunk_size_hmm', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'source_id': 'protein_chunk_size_IPS', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_ips', 'source_id': 'func_ann_names_ips', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_hmmer', 'source_id': 'func_ann_names_hmmer', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'source_id': 'HMM_gathering_bit_score', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_omit_alignment', 'source_id': 'HMM_omit_alignment', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_name_database', 'source_id': 'HMM_name_database', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'hmmsearch_header', 'source_id': 'hmmsearch_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_db', 'source_id': 'EggNOG_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_diamond_db', 'source_id': 'EggNOG_diamond_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_data_dir', 'source_id': 'EggNOG_data_dir', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_databases', 'source_id': 'InterProScan_databases', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_applications', 'source_id': 'InterProScan_applications', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_outputFormat', 'source_id': 'InterProScan_outputFormat', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ips_header', 'source_id': 'ips_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'Uniref90_db_txt', 'source_id': 'Uniref90_db_txt', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_maxTargetSeqs', 'source_id': 'diamond_maxTargetSeqs', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_databaseFile', 'source_id': 'diamond_databaseFile', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'diamond_header', 'source_id': 'diamond_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'go_config', 'source_id': 'go_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'graphs', 'source_id': 'graphs', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'pathways_names', 'source_id': 'pathways_names', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'pathways_classes', 'source_id': 'pathways_classes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'gp_flatfiles_path', 'source_id': 'gp_flatfiles_path', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'clusters_glossary', 'source_id': 'clusters_glossary', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ko_file', 'source_id': 'ko_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}, {'id': 'value', 'source_id': 'after-qc/count_CDS', 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': 'no-cds'}]}",
    "tools": [],
    "id": 360,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#assembly-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/360?version=2 Fix collect_scripts.py Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:3230Downloads:404 Created: 7th Jun 2022 at 08:41 Last updated: 7th Jun 2022 at 09:04 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI HoloFood is a 'hologenomic' approach that will improve the efficiency of food production systems by understanding the biomolecular and physiological processes affected by incorporating feed additives and novel sustainable feeds in farmed animals. The HoloFood consortium will showcase the potential of an innovative solution that holds enormous potential for optimising modern food production. Specifically, HoloFood is a framework that integrates a suite of recent analytical and technological\n... Teams:HoloFood at MGnify Web page:https://www.holofood.eu MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified MGnify is EMBL-EBI's metagenomics resource. EMBL-EBI are one of the 11 HoloFood partners, and are responsible for the analysis of metagenomic and microbial datasets from the project. Space:HoloFood Public web page:https://www.ebi.ac.uk/metagenomics Start date: 1st Jan 2020 End date: 30th Apr 2023 Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 81,
    "discussion_links": [],
    "title": "CroMaSt: A workflow for assessing protein domain classification by cross-mapping of structural instances between domain databases and structural alignment",
    "license": "MIT",
    "description": "# CroMaSt: A workflow for assessing protein domain classification by cross-mapping of structural instances between domain databases and structural alignment\n\nCroMaSt (<span style=\"color:red\">**Cro**</span>ss <span style=\"color:red\">**Ma**</span>pper of domain <span style=\"color:red\">**St**</span>ructural instances) is an automated iterative workflow to clarify  the assignment of protein domains to a given domain type of interest, based on their 3D structure and by cross-mapping of domain structural instances between domain databases. CroMaSt (for Cross-Mapper of domain Structural instances) will classify all structural instances of a given domain type into 4 different categories (**Core**, **True**, **Domain-like**, and **Failed**). \n\n\n## Requirements\n1. [Conda](https://docs.conda.io/projects/conda/en/latest/) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html)\n2. [Kpax](http://kpax.loria.fr/download.php)  \nDownload and install conda (or Miniconda) and Kpax by following the instructions from their official site.\n\n\n## Get it running \n(Considering the requirements are already met)\n\n1. Clone the repository and change the directory\n\n```\ngit clone https://gitlab.inria.fr/capsid.public_codes/CroMaSt.git\ncd CroMaSt\n```\n\n2. Create the conda environment for the workflow\n```\nconda env create --file yml/environment.yml\nconda activate CroMaSt\n```\n\n3. Change the path of variables in paramter file\n```\nsed -i 's/\\/home\\/hdhondge\\/CroMaSt\\//\\/YOUR\\/PATH\\/TO_CroMaSt\\//g' yml/CroMaSt_input.yml \n```\n\n4. Create the directory to store files from PDB and SIFTS (if not already)\n```\nmkdir PDB_files SIFTS\n```\n\n5. Download the source input data\n```\ncwl-runner Tools/download_data.cwl yml/download_data.yml\n```\n\n## Basic example\n\n### 1. First, we will run the workflow for the KH domain with family identifiers `RRM_1` and `RRM` in Pfam and CATH, respectively.\nRun the workflow -\n\n```\ncwl-runner --parallel  --outdir=Results/  CroMaSt.cwl yml/CroMaSt_input.yml\n```\n\n### 2.  Once the iteration is complete, check the `new_param.yml` file from the `outputdir` (Results), if there is any family identifier in either `pfam` or `cath`; run the next iteration using following command (Until there is no new families explored by workflow) -\n\n```\ncwl-runner --parallel  --outdir=Results/  CroMaSt.cwl Results/new_param.yml\n```\n  \n### **Extra:** Start the workflow with multiple families from one or both databases  \nIf you would like to start the workflow with multiple families from one or both databases, then simply add a comma in between two family identifiers. \n```\npfam: ['PF00076', 'PF08777']\ncath: ['3.30.70.330']\n```\n\n- **Pro Tip**: Don't forget to give different path to `--outdir` option while running the workflow multiple times or at least move the results to some other location after first run.\n\n## Run the workflow for protein domain of your choice  \n### 1. You can run the workflow for the domain of your choice by simply changing the family identifers in `yml/CroMaSt_input.yml` file.\n\nSimply replace the following values of family identifiers (for pfam and cath) with the family identifiers of your choice in `yml/CroMaSt_input.yml` file. \n```\npfam: ['PF00076']\ncath: ['3.30.70.330']\n```\n\n\n\n## Data files used in current version are as follows:\n**Files in Data directory can be downloaded as follows**:\n\n1. File used from Pfam database: [pdbmap.gz](http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam35.0/pdbmap.gz)\n\n2. File used from CATH database: [cath-domain-description-file.txt](ftp://orengoftp.biochem.ucl.ac.uk:21/cath/releases/latest-release/cath-classification-data/cath-domain-description-file.txt)  \n\n3. Obsolete entries from RCSB PDB\n[obsolete_PDB_entry_ids.txt](https://data.rcsb.org/rest/v1/holdings/removed/entry_ids)  \n\n\nCATH Version - 4.3.0 (Ver_Date - 11-Sep-2019) [FTP site](ftp://orengoftp.biochem.ucl.ac.uk/cath/releases/latest-release/cath-classification-data/)\nPfam Version - 35.0 (Ver_Date - November-2021) [FTP site](http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam35.0/)\n\n## Reference\n```\nPoster - \n1. Hrishikesh Dhondge, Isaure Chauvot de Beauchêne, Marie-Dominique Devignes. CroMaSt: A workflow for domain family curation through cross-mapping of structural instances between protein domain databases. 21st European Conference on Computational Biology, Sep 2022, Sitges, Spain. ⟨hal-03789541⟩\n\n```\n\n## Acknowledgements\nThis  project  has  received  funding  from  the  Marie  Skłodowska-Curie Innovative Training Network (MSCA-ITN) RNAct supported by European Union’s Horizon 2020 research and innovation programme under granta greement No 813239.",
    "latest_version": 2,
    "tags": "['CATH', 'Pfam', 'Protein domains', 'data integration']",
    "versions": "[{'version': 1, 'revision_comments': 'Updated input parameter file\\r\\n', 'url': 'https://workflowhub.eu/workflows/390?version=1', 'remote': 'https://github.com/HrishiDhondge/CroMaSt.git', 'commit': '9f3832867eab6c7a6363f8ca594a4bcf2ff7e96f', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/390/git/1/tree', 'doi': '10.48546/workflowhub.workflow.390.1'}, {'version': 2, 'revision_comments': 'Pfam v35.0 and Results_archive for publication\\r\\n', 'url': 'https://workflowhub.eu/workflows/390?version=2', 'remote': 'https://github.com/HrishiDhondge/CroMaSt.git', 'commit': 'b5a9d4b025ec8e065bae97eeb96f10db2dd8e1e6', 'ref': 'refs/tags/v1.1', 'tree': '/workflows/390/git/2/tree', 'doi': '10.48546/workflowhub.workflow.390.2'}]",
    "version": 2,
    "revision_comments": "Pfam v35.0 and Results_archive for publication",
    "created_at": "2023-06-20T12:06:49.000Z",
    "updated_at": "2023-06-20T12:08:47.000Z",
    "doi": "10.48546/workflowhub.workflow.390.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/256', 'family_name': 'Dhondge', 'given_name': 'Hrishikesh', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-7025-2241'}, {'profile': None, 'family_name': 'Chauvot de Beauchêne', 'given_name': 'Isaure', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-7035-3042'}, {'profile': '/people/321', 'family_name': 'Devignes', 'given_name': 'Marie-Dominique', 'affiliation': 'CNRS - Centre Est', 'orcid': 'https://orcid.org/0000-0002-0399-8713'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'ID mapping', 'identifier': 'http://edamontology.org/operation_3282'}]",
    "topic_annotations": "[{'label': 'Biological databases', 'identifier': 'http://edamontology.org/topic_3071'}, {'label': 'Data integration and warehousing', 'identifier': 'http://edamontology.org/topic_3366'}, {'label': 'Protein folds and structural domains', 'identifier': 'http://edamontology.org/topic_0736'}]",
    "internals": "{'inputs': [{'id': 'pfam', 'name': 'Pfam family ids', 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'cath', 'name': 'CATH family ids', 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'iteration', 'name': 'Iteration number starting from 0', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'filename', 'name': 'Filename to store family ids per iteration', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'true_domain_file', 'name': 'To store all the true domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'siftsDir', 'name': 'Directory for storing all SIFTS files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'paramfile', 'name': 'Parameter file for current iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'db_for_core', 'name': 'Database to select to compute core average structure', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'core_domain_struct', 'name': 'Core domain structure (.pdb)', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'prev_crossMapped_pfam', 'name': 'Pfam cross-mapped domain StIs from previous iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'prev_crossMapped_cath', 'name': 'CATH cross-mapped domain StIs from previous iteration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unmapped_analysis_file', 'name': 'Filename with alignment scores for unmapped instances', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pdbDir', 'name': 'The directory for storing all PDB files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'cath_resmap', 'name': 'Filename for residue-mapped CATH domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'cath_lost', 'name': 'Obsolete and inconsistent CATH domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pfam_resmap', 'name': 'Filename for residue-mapped Pfam domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'pfam_lost', 'name': 'Obsolete and inconsistent Pfam domain StIs', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'domain_like', 'name': 'To store all the domain-like StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'failed_domain', 'name': 'To store all failed domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'string'}], 'default_value': None}, {'id': 'min_domain_length', 'name': 'Threshold for minimum domain length', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'alignment_score', 'name': 'Alignment score from Kpax to analyse structures', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'score_threshold', 'name': 'Score threshold for given alignment score from Kpax', 'description': None, 'type': [{'type': 'float'}], 'default_value': None}, {'id': 'unmap_pfam_pass', 'name': 'Filename to store unmapped but structurally well aligned instances from Pfam', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_pfam_fail', 'name': 'Filename to store unmapped and not properly aligned instances from Pfam', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_cath_pass', 'name': 'Filename to store unmapped but structurally well aligned instances from CATH', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unmap_cath_fail', 'name': 'Filename to store unmapped and not properly aligned instances from CATH', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'family_ids_x', 'name': 'Family ids per iteration', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['get_family_ids/family_ids']}, {'id': 'resmapped_pfam', 'name': 'All Pfam residue-mapped domain StIs with domain labels', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pfam_domain_instances/pfam_domain_posi_file']}, {'id': 'reslost_pfam', 'name': 'Obsolete and inconsistent domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['pfam_domain_instances/pfam_total_lost_structures']}, {'id': 'resmapped_cath', 'name': 'All CATH residue-mapped domain StIs with domain labels', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['cath_domain_instances/cath_domain_posi_file']}, {'id': 'reslost_cath', 'name': 'Obsolete and inconsistent domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['cath_domain_instances/cath_total_lost_structures']}, {'id': 'true_domains', 'name': 'True domain StIs per iteration', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['compare_instances_CATH_Pfam/common_domains']}, {'id': 'core_domains_list', 'name': 'Core domain StIs', 'description': None, 'type': [{'type': 'File'}, {'type': 'null'}], 'source_ids': ['format_core_list/coredomains_list']}, {'id': 'core_structure', 'name': 'Core domain structure (.pdb)', 'description': None, 'type': [{'type': 'File'}, {'type': 'null'}], 'source_ids': ['chop_and_avg_for_core/averaged_structs']}, {'id': 'all_domain_like', 'name': 'Domain-like StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['gather_domain_like/unmapped_list']}, {'id': 'all_failed_domains', 'name': 'Failed domain StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['gather_failed_domains/unmapped_list']}, {'id': 'crossmapped_pfam_passed', 'name': 'Cross-mapped families with Pfam domain StIs passing the threshold', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['check_alignment_scores/pfam_crossmap_passed']}, {'id': 'crossmapped_cath_passed', 'name': 'Cross-mapped families with CATH domain StIs passing the threshold', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['check_alignment_scores/cath_crossmap_passed']}, {'id': 'crossres_mappedpfam', 'name': 'Merged cross-mapped and residue-mapped domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['add_crossmapped_to_resmapped/pfam_structs']}, {'id': 'crossres_mappedcath', 'name': 'Merged cross-mapped and residue-mapped domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['add_crossmapped_to_resmapped/cath_structs']}, {'id': 'unmap_pfam', 'name': 'All Pfam un-mapped domin StIs', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_Pfam2CATH/pfam_unmapped']}, {'id': 'allmap_pfam', 'name': 'All Pfam domain StIs cross-mapped to CATH family-wise', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_Pfam2CATH/allcrossmap_pfam']}, {'id': 'unmap_cath', 'name': 'All un-mapped domin StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_CATH2Pfam/cath_unmapped']}, {'id': 'allmap_cath', 'name': 'All CATH cross-mapped domin StIs family-wise together', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['crossmapping_CATH2Pfam/allcrossmap_cath']}, {'id': 'pfam_crossmap_cath_avg', 'name': 'Average structures per cross-mapped CATH family for Pfam StIs at family level', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['chop_and_avg_for_Pfam2CATH/averaged_structs']}, {'id': 'cath_crossmap_pfam_avg', 'name': 'Average structures per cross-mapped Pfam family for CATH StIs at family level', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['chop_and_avg_for_CATH2Pfam/averaged_structs']}, {'id': 'avg_alignment_result', 'name': 'Alignment results from Kpax for all cross-mapped families', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['align_avg_structs_pairwise/alignment_out']}, {'id': 'next_parmfile', 'name': 'Parameter file for next iteration of the workflow', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['create_new_parameters/next_parmfile']}, {'id': 'align_unmap_pfam', 'name': 'Alignment results for Pfam unmapped instances', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/unmapped_aligned_results']}, {'id': 'unmap_pfam_passed', 'name': 'Domain-like StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/domain_like_list']}, {'id': 'unmap_pfam_failed', 'name': 'Failed domain StIs from Pfam', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_pfam/failed_domains_list']}, {'id': 'align_unmap_cath', 'name': 'Alignment results for CATH unmapped instances', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/unmapped_aligned_results']}, {'id': 'unmap_cath_passed', 'name': 'Domain-like StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/domain_like_list']}, {'id': 'unmap_cath_failed', 'name': 'Failed domain StIs from CATH', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['unmapped_from_cath/failed_domains_list']}, {'id': 'crossmap_pfam', 'name': 'Pfam domin StIs cross-mapped to CATH family-wise', 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['crossmapping_Pfam2CATH/pfam_crossmapped']}, {'id': 'crossmap_cath', 'name': 'CATH domain StIs cross-mapped to Pfam family-wise', 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['crossmapping_CATH2Pfam/cath_crossmapped']}], 'steps': [{'id': 'get_family_ids', 'name': 'Get domain family ids', 'description': 'Get domain family ids from CATH and Pfam databases from parameter file provided by user\\n', 'sink_ids': ['get_family_ids/family_ids']}, {'id': 'pfam_domain_instances', 'name': 'Produce a list of residue-mapped domain StIs from Pfam ids', 'description': 'Retrieve and process the PDB structures corresponding to the Pfam family ids resulting in a list of residue-mapped\\nstructural domain instances along with lost structural instances\\n(requires Data/pdbmap downloaded from Pfam and uses SIFTS resource for UniProt to PDB residue Mapping) \\n', 'sink_ids': ['pfam_domain_instances/pfam_domain_posi_file', 'pfam_domain_instances/pfam_total_lost_structures']}, {'id': 'cath_domain_instances', 'name': 'Produce a list of residue-mapped domain StIs from CATH ids', 'description': 'Retrieve and process the PDB structures corresponding to the CATH superfamily ids resulting in a list of residue-mapped\\nstructural domain instances along with lost structural instances\\n(requires Data/cath_domain_description_file.txt downloaded from CATH and uses SIFTS resource for PDB to UniProt residue Mapping) \\n', 'sink_ids': ['cath_domain_instances/cath_domain_posi_file', 'cath_domain_instances/cath_total_lost_structures']}, {'id': 'add_crossmapped_to_resmapped', 'name': 'Add cross-mapped to residue-mapped domain StIs', 'description': 'Add crossmapped domain instances from last iteration to current list of residue mapped domain instances.\\n', 'sink_ids': ['add_crossmapped_to_resmapped/pfam_structs', 'add_crossmapped_to_resmapped/cath_structs']}, {'id': 'compare_instances_CATH_Pfam', 'name': 'Compare residue-mapped domain StIs', 'description': 'Find the intersection between residue-mapped domain StIs of Pfam and CATH lists. \\nAllows variable domain boundaries in a certain range +/- 30aa. Produces three files: common domain instances, \\nand unique domain instances to each Pfam and CATH.\\n', 'sink_ids': ['compare_instances_CATH_Pfam/common_domains', 'compare_instances_CATH_Pfam/pfam_unique', 'compare_instances_CATH_Pfam/cath_unique']}, {'id': 'crossmapping_Pfam2CATH', 'name': 'Map unique Pfam domain StIs to CATH db', 'description': 'Maps the unique domain StIs from Pfam to the whole CATH database \\n(using residue numbering from PDB allowing variable domain boundaries +/-30aa)\\n', 'sink_ids': ['crossmapping_Pfam2CATH/pfam_crossmapped', 'crossmapping_Pfam2CATH/allcrossmap_pfam', 'crossmapping_Pfam2CATH/pfam_unmapped']}, {'id': 'crossmapping_CATH2Pfam', 'name': 'Map unique CATH domain StIs to Pfam db', 'description': 'Maps the unique domain StIs from CATH to the whole Pfam database \\n(using residue numbering from UniProt allowing variable domain boundaries +/-30aa)\\n', 'sink_ids': ['crossmapping_CATH2Pfam/cath_crossmapped', 'crossmapping_CATH2Pfam/allcrossmap_cath', 'crossmapping_CATH2Pfam/cath_unmapped']}, {'id': 'format_core_list', 'name': 'Format core domain StIs list', 'description': 'Fornat core domain instances list from the common instances list identified at first iteration; \\nPreparing input for average structure computation\\n', 'sink_ids': ['format_core_list/coredomains_list']}, {'id': 'chop_and_avg_for_core', 'name': 'Compute average of average for core domain instances', 'description': 'Compute average structure for all averaged structures corresponding to core UniProt domain instances.\\nFirst computes average per UniProt domain instance and then average all averaged structures.\\n', 'sink_ids': ['chop_and_avg_for_core/averaged_structs']}, {'id': 'chop_and_avg_for_CATH2Pfam', 'name': 'Compute average of average per cross-mapped Pfam', 'description': 'Compute average structure for all averaged structures corresponding to UniProt domain instances cross-mapped \\nfrom CATH to a Pfam family.\\nFirst computes average per UniProt domain instance and then average all averaged structures per Pfam family. \\n', 'sink_ids': ['chop_and_avg_for_CATH2Pfam/averaged_structs']}, {'id': 'chop_and_avg_for_Pfam2CATH', 'name': 'Compute average of average per cross-mapped CATH', 'description': 'Compute average structure for all averaged structures corresponding to UniProt domain instances cross-mapped \\nfrom Pfam to a CATH superfamily.\\nFirst computes average per UniProt domain instance and then average all averaged structures per CATH superfamily. \\n', 'sink_ids': ['chop_and_avg_for_Pfam2CATH/averaged_structs']}, {'id': 'align_avg_structs_pairwise', 'name': 'Pairwise alignemnt with core average structure', 'description': 'Align crossmapped averaged structures against core average domain structure pairwise using Kpax\\nOutputs a csv file with all the scores from pairwise alignments\\n', 'sink_ids': ['align_avg_structs_pairwise/alignment_out']}, {'id': 'check_alignment_scores', 'name': 'Checks the alignment score for given threshold', 'description': 'Checks the alignment score for each aligned structure based on the given threshold\\nOutputs the structural instances passing and failing the threshold in separate files \\n', 'sink_ids': ['check_alignment_scores/pfam_crossmap_passed', 'check_alignment_scores/pfam_crossmap_failed', 'check_alignment_scores/cath_crossmap_passed', 'check_alignment_scores/cath_crossmap_failed']}, {'id': 'unmapped_from_pfam', 'name': 'Averages and aligns the unampped instances from Pfam', 'description': 'First computes average per UniProt domain instance and then aligns all the average structures against core average structure.\\nOutputs the alignment results along with the structures passing and failing the threshold for given Kpax score.      \\n', 'sink_ids': ['unmapped_from_pfam/unmapped_aligned_results', 'unmapped_from_pfam/domain_like_list', 'unmapped_from_pfam/failed_domains_list']}, {'id': 'unmapped_from_cath', 'name': 'Averages and aligns the unampped instances from CATH', 'description': 'First computes average per UniProt domain instance and then aligns all the average structures against core average structure.\\nOutputs the alignment results along with the structures passing and failing the threshold for given Kpax score.      \\n', 'sink_ids': ['unmapped_from_cath/unmapped_aligned_results', 'unmapped_from_cath/domain_like_list', 'unmapped_from_cath/failed_domains_list']}, {'id': 'gather_domain_like', 'name': 'Collects all domain-like structural instances', 'description': 'Collects all domain-like structural instances from Pfam and CATH\\nOutputs the list with all domain-like structural instances together.\\n', 'sink_ids': ['gather_domain_like/unmapped_list']}, {'id': 'gather_failed_domains', 'name': 'Collects all failed domain instances', 'description': 'Collects all domain instances failed to pass the criteria from both Pfam and CATH\\nOutputs the list with all failed domain instances together.\\n', 'sink_ids': ['gather_failed_domains/unmapped_list']}, {'id': 'create_new_parameters', 'name': 'Create parameter file for next iteration', 'description': 'Create parameter file for next iteration from previous parameter file\\nFilter the pairwise alignments to retrieve family ids passing the threshold for a given Kpax score type       \\n', 'sink_ids': ['create_new_parameters/next_parmfile']}], 'links': [{'id': 'pfam_ids', 'source_id': 'pfam', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'cath_ids', 'source_id': 'cath', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'iteration_no', 'source_id': 'iteration', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'filename', 'sink_id': 'get_family_ids', 'name': None, 'default_value': None}, {'id': 'family_idsfile', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'siftsdir', 'source_id': 'siftsDir', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'resmapped_file', 'source_id': 'pfam_resmap', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'lost_merged', 'source_id': 'pfam_lost', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'min_dom_size', 'source_id': 'min_domain_length', 'sink_id': 'pfam_domain_instances', 'name': None, 'default_value': None}, {'id': 'family_idsfile', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'siftsdir', 'source_id': 'siftsDir', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'resmapped_file', 'source_id': 'cath_resmap', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'lost_merged', 'source_id': 'cath_lost', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'min_dom_size', 'source_id': 'min_domain_length', 'sink_id': 'cath_domain_instances', 'name': None, 'default_value': None}, {'id': 'pfam_resmapped', 'source_id': 'pfam_domain_instances/pfam_domain_posi_file', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'cath_resmapped', 'source_id': 'cath_domain_instances/cath_domain_posi_file', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'pfam_crossmapped', 'source_id': 'prev_crossMapped_pfam', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'cath_crossmapped', 'source_id': 'prev_crossMapped_cath', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'add_crossmapped_to_resmapped', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_cath', 'source_id': 'cath_domain_instances/cath_domain_posi_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_cath', 'source_id': 'add_crossmapped_to_resmapped/cath_structs', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_pfam', 'source_id': 'pfam_domain_instances/pfam_domain_posi_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'resmapped_pfam', 'source_id': 'add_crossmapped_to_resmapped/pfam_structs', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'truedomains_file', 'source_id': 'true_domain_file', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'compare_instances_CATH_Pfam', 'name': None, 'default_value': None}, {'id': 'pfam_unq', 'source_id': 'compare_instances_CATH_Pfam/pfam_unique', 'sink_id': 'crossmapping_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'crossmapping_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'cath_unq', 'source_id': 'compare_instances_CATH_Pfam/cath_unique', 'sink_id': 'crossmapping_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'min_dom_len', 'source_id': 'min_domain_length', 'sink_id': 'crossmapping_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'infile', 'source_id': 'compare_instances_CATH_Pfam/common_domains', 'sink_id': 'format_core_list', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'db_for_core', 'sink_id': 'format_core_list', 'name': None, 'default_value': None}, {'id': 'core_list', 'source_id': 'format_core_list/coredomains_list', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'chop_and_avg_for_core', 'name': None, 'default_value': None}, {'id': 'crossmap_file', 'source_id': 'crossmapping_CATH2Pfam/cath_crossmapped', 'sink_id': 'chop_and_avg_for_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_CATH2Pfam', 'name': None, 'default_value': None}, {'id': 'crossmap_file', 'source_id': 'crossmapping_Pfam2CATH/pfam_crossmapped', 'sink_id': 'chop_and_avg_for_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'chop_and_avg_for_Pfam2CATH', 'name': None, 'default_value': None}, {'id': 'cath_fam_avg', 'source_id': 'chop_and_avg_for_CATH2Pfam/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'pfam_fam_avg', 'source_id': 'chop_and_avg_for_Pfam2CATH/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'core_avg', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'core_avg', 'source_id': 'core_domain_struct', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'align_avg_structs_pairwise', 'name': None, 'default_value': None}, {'id': 'aln_res_file', 'source_id': 'align_avg_structs_pairwise/alignment_out', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'pfam_crossmap', 'source_id': 'crossmapping_Pfam2CATH/allcrossmap_pfam', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'cath_crossmap', 'source_id': 'crossmapping_CATH2Pfam/allcrossmap_cath', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'aln_score', 'source_id': 'alignment_score', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'threshold_val', 'source_id': 'score_threshold', 'sink_id': 'check_alignment_scores', 'name': None, 'default_value': None}, {'id': 'unmapped_list', 'source_id': 'crossmapping_Pfam2CATH/pfam_unmapped', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'core_domain_struct', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'alignment_score', 'source_id': 'alignment_score', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'score_threshold', 'source_id': 'score_threshold', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'passed_name', 'source_id': 'unmap_pfam_pass', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'failed_name', 'source_id': 'unmap_pfam_fail', 'sink_id': 'unmapped_from_pfam', 'name': None, 'default_value': None}, {'id': 'unmapped_list', 'source_id': 'crossmapping_CATH2Pfam/cath_unmapped', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'pdb_dir', 'source_id': 'pdbDir', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'core_struct', 'source_id': 'core_domain_struct', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'alignment_score', 'source_id': 'alignment_score', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'score_threshold', 'source_id': 'score_threshold', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'passed_name', 'source_id': 'unmap_cath_pass', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'failed_name', 'source_id': 'unmap_cath_fail', 'sink_id': 'unmapped_from_cath', 'name': None, 'default_value': None}, {'id': 'pfam_unmapped', 'source_id': 'unmapped_from_pfam/domain_like_list', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'cath_unmapped', 'source_id': 'unmapped_from_cath/domain_like_list', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'unmapped_out', 'source_id': 'domain_like', 'sink_id': 'gather_domain_like', 'name': None, 'default_value': None}, {'id': 'pfam_unmapped', 'source_id': 'unmapped_from_pfam/failed_domains_list', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'cath_unmapped', 'source_id': 'unmapped_from_cath/failed_domains_list', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'pfam_crossmapped', 'source_id': 'check_alignment_scores/pfam_crossmap_failed', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'cath_crossmapped', 'source_id': 'check_alignment_scores/cath_crossmap_failed', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'unmapped_out', 'source_id': 'failed_domain', 'sink_id': 'gather_failed_domains', 'name': None, 'default_value': None}, {'id': 'in_paramfile', 'source_id': 'paramfile', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'fam_tracker', 'source_id': 'get_family_ids/family_ids', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'true_domains', 'source_id': 'compare_instances_CATH_Pfam/common_domains', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'core_domain_struct', 'source_id': 'chop_and_avg_for_core/averaged_structs', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'core_domain_struct', 'source_id': 'core_domain_struct', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'crossmap_pfam', 'source_id': 'check_alignment_scores/pfam_crossmap_passed', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'crossmap_cath', 'source_id': 'check_alignment_scores/cath_crossmap_passed', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'domain_like', 'source_id': 'gather_domain_like/unmapped_list', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'failed_domains', 'source_id': 'gather_failed_domains/unmapped_list', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}, {'id': 'iteration', 'source_id': 'iteration', 'sink_id': 'create_new_parameters', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 390,
    "text_field": "['Tools', 'Python', 'yml', 'CONTRIBUTING.md', 'CroMaSt.cwl', 'CroMaSt_Results_archive.zip', 'LICENSE', 'README.md', 'add_crossmapped2resmapped.py', 'add_domain_num.py', 'align_compute_avg.py', 'check_threshold.py', 'chop_struct2domains.py', 'compare_cath_pfam.py', 'create_param.py', 'crossmapped_per_unp_dom.py', 'filter_align_scores.py', 'get_family_ids.py', 'map_unique_struct_cath2pfam.py', 'map_unique_struct_pfam2cath.py', 'merge_df2json.py', 'pairwise_aligner.py', 'residue_mapping.py', 'resmapping_cath2up.py', 'resmapping_pfam2pdb.py', 'separate_cath.py', 'separate_pfam.py', 'add_crossmapped2resmapped.cwl', 'add_domain_num.cwl', 'align_compute_avg.cwl', 'check_threshold.cwl', 'chop_struct2domains.cwl', 'compare_cath_pfam.cwl', 'core_avg_subwf.cwl', 'create_param.cwl', 'crossmapped_per_unp_dom.cwl', 'download_data.cwl', 'filter_align_scores.cwl', 'gather_lost_resmap.cwl', 'get_family_ids.cwl', 'list_true_domains.cwl', 'map_unique_struct_cath2pfam.cwl', 'map_unique_struct_pfam2cath.cwl', 'merge_df2json.cwl', 'move_files.cwl', 'other_avg_subwf.cwl', 'pairwise_aligner.cwl', 'resmapping_cath2up.cwl', 'resmapping_cath_instances_subwf.cwl', 'resmapping_pfam2pdb.cwl', 'resmapping_pfam_instances_subwf.cwl', 'separate_cath.cwl', 'separate_pfam.cwl', 'unmapped_unp_avg_align.cwl', 'CroMaSt_input.yml', 'download_data.yml', 'environment.yml']",
    "raw_text_content": "",
    "p_tag_content": "CroMaSt (CrossMapper of domainStructural instances) is an automated iterative workflow to clarify  the assignment of protein domains to a given domain type of interest, based on their 3D structure and by cross-mapping of domain structural instances between domain databases. CroMaSt (for Cross-Mapper of domain Structural instances) will classify all structural instances of a given domain type into 4 different categories (Core,True,Domain-like, andFailed). (Considering the requirements are already met) Run the workflow - If you would like to start the workflow with multiple families from one or both databases, then simply add a comma in between two family identifiers. Simply replace the following values of family identifiers (for pfam and cath) with the family identifiers of your choice inyml/CroMaSt_input.ymlfile. Files in Data directory can be downloaded as follows: File used from Pfam database:pdbmap.gz File used from CATH database:cath-domain-description-file.txt Obsolete entries from RCSB PDBobsolete_PDB_entry_ids.txt CATH Version - 4.3.0 (Ver_Date - 11-Sep-2019)FTP sitePfam Version - 35.0 (Ver_Date - November-2021)FTP site This  project  has  received  funding  from  the  Marie  Skłodowska-Curie Innovative Training Network (MSCA-ITN) RNAct supported by European Union’s Horizon 2020 research and innovation programme under granta greement No 813239. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/390?version=2 DOI:10.48546/workflowhub.workflow.390.2 Pfam v35.0 and Results_archive for publication Updated input parameter file Views:2966Downloads:294 Created: 28th Sep 2022 at 12:34 Last updated: 20th Jun 2023 at 13:06 None Teams:CAPSID Organizations:CNRS - Centre Est Teams:CAPSID Organizations:CNRS - Centre Est Expertise:Bioinformatics,Molecular Modelling,Biomolecular Dynamics Simulations,Database Development,Protein Structural Alignment A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Computational Algorithms for Protein Structures and Interactions - Inria, CNRS, University of Lorraine The CAPSID team develops algorithms and software to help study biological systems and phenomena from a structural point of view. In particular, the team aims to develop algorithms to facilitate and improve the 3D modeling of large multi-component bio-molecular machines. Space:Independent Teams Public web page:https://capsid.loria.fr/ Organisms:Not specified Protein domains can be viewed as building blocks, essential for understanding structure-function relationships in proteins. However, each domain database classifies protein domains using its own methodology. Thus, in many cases, boundaries between different domains or families differ from one domain database to the other, raising the question of domain definition and enumeration. The answer to this question cannot be found in a single database. Rather, expert integration and curation of various\n... Creators:Hrishikesh Dhondge,Isaure Chauvot de Beauchêne,Marie-Dominique Devignes Submitter:Hrishikesh Dhondge"
  },
  {
    "": 101,
    "discussion_links": [],
    "title": "Gravitational Wave source Cone Search",
    "license": "CC-BY-4.0",
    "description": "",
    "latest_version": 1,
    "tags": "['FAIR workflows', 'Gravitational Waves', 'astronomy']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/415?version=1', 'commit': '43d629f622c65165f7515f676d8c476a1a27a394', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/415/git/1/tree', 'doi': '10.48546/workflowhub.workflow.415.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-01-11T12:22:37.000Z",
    "updated_at": "2023-01-16T14:05:00.000Z",
    "doi": "10.48546/workflowhub.workflow.415.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Savchenko', 'given_name': 'Denys', 'affiliation': 'UPC', 'orcid': 'https://orcid.org/0000-0002-7664-8490'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 't1', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': '2017-08-16T12:00:00'}, {'id': 't2', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': '2017-08-18T12:00:00'}, {'id': 'do_cone_search', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'ra', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 250}, {'id': 'dec', 'name': None, 'description': None, 'type': [{'type': 'float'}], 'default_value': -30.0}, {'id': 'radius', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 10}, {'id': 'level_threshold', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': 10}, {'id': 'contour_levels', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': 5090}], 'outputs': [{'id': 'asciicat', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'skymap_files', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'image', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}, {'id': 'contours', 'name': None, 'description': 'lines found with the pattern', 'type': [{'type': 'string'}], 'source_ids': []}], 'steps': [], 'links': []}",
    "tools": [],
    "id": 415,
    "text_field": "['conesearch.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\narguments:\n- -m\n- nb2workflow.nbadapter\n- https://renkulab.io/gitlab/dsavchenko/gw-backend/-/raw/master/notebooks/conesearch.ipynb\nbaseCommand: python\nclass: CommandLineTool\ncwlVersion: v1.0\nid: conesearch\ninputs:\n- default: '2017-08-16T12:00:00'\n  id: t1\n  inputBinding:\n    prefix: --inp-t1=\n    separate: false\n  type: string\n- default: '2017-08-18T12:00:00'\n  id: t2\n  inputBinding:\n    prefix: --inp-t2=\n    separate: false\n  type: string\n- default: false\n  id: do_cone_search\n  inputBinding:\n    prefix: --inp-do_cone_search=\n    separate: false\n  type: boolean\n- default: 250\n  id: ra\n  inputBinding:\n    prefix: --inp-ra=\n    separate: false\n  type: int\n- default: -30.0\n  id: dec\n  inputBinding:\n    prefix: --inp-dec=\n    separate: false\n  type: float\n- default: 10\n  id: radius\n  inputBinding:\n    prefix: --inp-radius=\n    separate: false\n  type: int\n- default: 10\n  id: level_threshold\n  inputBinding:\n    prefix: --inp-level_threshold=\n    separate: false\n  type: int\n- default: 50,90\n  id: contour_levels\n  inputBinding:\n    prefix: --inp-contour_levels=\n    separate: false\n  type: string\noutputs:\n- doc: lines found with the pattern\n  id: asciicat\n  type: string\n- doc: lines found with the pattern\n  id: skymap_files\n  type: string\n- doc: lines found with the pattern\n  id: image\n  type: string\n- doc: lines found with the pattern\n  id: contours\n  type: string",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/415?version=1 DOI:10.48546/workflowhub.workflow.415.1 Initial commit Views:1261Downloads:199 Created: 11th Jan 2023 at 12:22 None Teams:ODA,EuroScienceGateway Organizations:MMODA,EPFL Expertise:astronomy,Data Management,high-performance computing,image analysis,Scientific workflow developement,Software Engineering Tools:CWL,Machine Learning,Workflows,Python,Snakemake,Databases A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://github.com/oda-hub Organisms:Not specified Collection of workflows used or developed by the EuroScienceGateway project. Maintainers:Stian Soiland-Reyes,Paul De Geest Number of items: 10 Tags:Not specified"
  },
  {
    "": 126,
    "discussion_links": [],
    "title": "WRF / EMEP Linear Workflow",
    "license": "MIT",
    "description": "# WRF/EMEP Linear Workflow\n\nExample Common Workflow Language (CWL) workflow and tool descriptors for running the \nWeather Research and Forecase (WRF) and EMEP models.\n\nThis workflow is designed for a single model domain. Example datasets for testing this \nworkflow can be downloaded from Zenodo.\n\n\n## Requirements:\n\n* docker or singularity\n* conda\n* cwltool\n* Toil - optional, useful for running on HPC or distributed computing systems\n\n### CWL / Toil Installation:\n\nThe workflow runner (either cwltool, or Toil) can be installed using either conda or pip.\nEnvironment files for conda are included, and can be used as shown below:\n* cwltool only:\n  * `conda env create --file install/env_cwlrunner.yml --name cwl`\n* Toil & cwltool:\n  * `conda env create --file install/env_toil.yml --name toil`\n\n### Setup for Example Workflow\n\n* Download the example dataset from Zenodo: https://doi.org/10.5281/zenodo.7817216\n* Extract into the `input_files` directory:\n  * `tar -zxvf wrf_emep_UK_example_inputs.tar.gz -C input_files --strip-components=1`\n\n## Running the Workflow\n\nThe full workflow is broken into several logical steps:\n1. ERA5 download\n2. WPS 1st step: Geogrid geography file creation\n3. WPS process: ungribbing of ERA5 data, and running of metgrid to produce meteorology files.\n4. WRF process: generation of WRF input files by REAL, and running of WRF model\n5. EMEP model: running of EMEP chemistry and transport model\n\nSteps 1 and 3 require you to register with the CDS service, in order to download ERA5 data\nbefore using in the WPS process.\nSteps 2 and 5 require you to download extra input data - the instructions on how to do this\nare included in the README.txt files in the relevant input data directories.\n\nA full workflow for all steps is provided here. But each separate step can by run on it's \nown too, following the instructions given below. We recommend running step 4 first, to \nexplore how the REAL & WRF workflow works, before trying the other steps.\n\n### 1. ERA5 download.\n\nBefore running the ERA5 download tool, ensure that you have reqistered for the CDS service, \nsigned the ERA5 licensing agreement, and saved the CDS API key (`.cdsapirc`) in your \nworking directory.\n\nTo run the ERA5 download tool use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/era5_workflow.cwl example_workflow_configurations/era5_download_settings.yaml\n```\nNote that the `--cachedir CACHE` option sets the working directory cache, which enables the\nreuse of any steps previously run (and the restarting of the workflow from this point).\nThe `--singularity` option is needed if you are using singularity instead of docker.\n\n### 2. WPS: Geogrid geography file creation\n\nBefore running the geogrid tool you will need to download the geography data from the\n[UCAR website](https://www2.mmm.ucar.edu/wrf/users/download/get_sources_wps_geog.html).\nThese should be extracted into the `input_files/geogrid_geog_input` directory.\n\nTo run the geogrid program use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/geogrid_workflow.cwl example_workflow_configurations/wps_geogrid_cwl_settings.yaml\n```\n\n### 3. WPS: Creation of meteorology input files\n\nBefore running the WPS process you will have to download the ERA5 datafiles (which will be\ncalled `preslev_[YYYYMMDD].grib` and `surface_[YYYYMMDD].grib`) and copy these to the directory\n`input_files/wps_era5_input`. If you have also run geogrid in step 2 you can replace the \n`geo_em.d01.nc` file in the `input_files/wps_geogrid_input` directory with the file that \ngeogrid created.\n\nTo run the wps metgrid process use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/wps_workflow.cwl example_workflow_configurations/wps_metgrid_cwl_settings.yaml\n```\n\n### 4. WRF: Creation of WRF input files, and running WRF model\n\nThe WRF model can be run without any prepreparation, except for the downloading of the \ninput data from Zenodo. However, if you have created new meteorology files (`met_em*`) using\nWPS you can replace the files in the `input_files/wrf_met_input` directory with these.\n\nTo run the WRF process (including REAL) use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/wrf_workflow.cwl example_workflow_configurations/wrf_real_cwl_settings.yaml\n``` \n\n### 5. EMEP: Running EMEP chemistry and transport model\n\nBefore running the EMEP model you will need to download the EMEP input dataset. This can be\ndone using the `catalog.py` tool, following the instructions in the `input_files/emep_input/README.txt`\nfile. If you have run WRF you can also replace the `wrfout*` data files in the \n`input_Files/emep_wrf_input` directory with those you have created.\n\nTo run the EMEP model use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] workflows/emep_workflow.cwl example_workflow_configurations/emep_cwl_settings.yaml\n```\n\n### Full Workflow\n\nBefore running the full workflow make sure you have carried out the setup tasks described\nabove.\n\nTo run the full workflow use the following command:\n```\ncwltool [--cachdir CACHE] [--singularity] wrf_emep_full_workflow.cwl example_workflow_configurations/wrf_emep_full_workflow_cwl_settings.yaml\n```\n\n## Notes\n\n### WRF filenames\n\nIn order to work with singularity, all filenames need to exclude special characters.\nTo ensure that all WRF filenames comply with this requirement, you will need to add the \n`nocolons = .true.` option to your WPS, REAL and WRF namelists to ensure this.\n\n### MPI parallel processing\n\nThe WPS processes all run in single thread mode. REAL, WRF and EMEP have been compiled with\nMPI support. The default cores for each of these is 2, 9 and 9, respectively. The \nsettings file can be edited to modify these requirements.\n\n### Caching intermediate workflow steps\n\nTo cache the data from individual steps you can use the `--cachedir <cache-dir>` optional flag.\n\n\n## License and Copyright \n\nThese workflow scripts have been developed by the [Research IT](https://research-it.manchester.ac.uk/) \nat the [University of Manchester](https://www.manchester.ac.uk/).\n\nCopyright 2023 [University of Manchester, UK](https://www.manchester.ac.uk/).\n\nLicensed under the MIT license, see the LICENSE file for details.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'add full workflow to readme\\r\\n', 'url': 'https://workflowhub.eu/workflows/455?version=1', 'remote': 'https://github.com/UoMResearchIT/wrf_emep_cwl_linear_workflow.git', 'commit': '70c6a6016eeb4434a3ad82af7908b83d4ea37ce7', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/455/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "add full workflow to readme",
    "created_at": "2023-04-12T12:04:44.000Z",
    "updated_at": "2023-04-12T12:45:16.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/37', 'family_name': 'Lowe', 'given_name': 'Douglas', 'affiliation': 'The University of Manchester, university of manchester', 'orcid': 'https://orcid.org/0000-0002-1248-3594'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'start_year', 'name': 'Year for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'start_month', 'name': 'Month for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'start_day', 'name': 'Day for starting date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_year', 'name': 'Year for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_month', 'name': 'Month for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'end_day', 'name': 'Day for end date', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'north_latitude', 'name': 'Latitude for top of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'south_latitude', 'name': 'Latitude for bottom of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'west_longitude', 'name': 'Longitude for left-edge of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'east_longitude', 'name': 'Longitude for right-edge of domain', 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'cdskey', 'name': 'API key for CDS service', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'https_proxy', 'name': 'HTTPS proxy information, if needed', 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'geodir', 'name': 'Geographic inputs for geogrid', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'namelist_geogrid', 'name': 'Geogrid namelist', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'geotable', 'name': 'Geogrid data table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'namelist_ungrib_atm', 'name': 'Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'vtable_atm', 'name': 'grib variable table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'outname_atm', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'namelist_ungrib_sfc', 'name': 'Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'vtable_sfc', 'name': 'grib variable table', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'outname_sfc', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'namelist_metgrid', 'name': 'metgrid configuration', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'generate_metdir', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'namelist_real', 'name': 'Real preprocessor Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'namelist_wrf', 'name': 'WRF Configuration File', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'realcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'wrfcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'generate_rundir', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'namelist_emep', 'name': 'EMEP configuration file', 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'inputdir_emep', 'name': 'EMEP Input Files', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'runlabel_emep', 'name': \"EMEP run label, for output files, should match 'runlabel1' in namelist\", 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'metdir_name', 'name': \"Directory name for WRF input Files, should match 'meteo' base-directory in namelist\", 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'emepcores', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}], 'outputs': [{'id': 'wrfout', 'name': 'output files', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['step4_wrf_workflow/wrfout']}, {'id': 'emepout', 'name': 'output files', 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['step5_emep_workflow/emepout']}], 'steps': [{'id': 'step1_era5_workflow', 'name': None, 'description': None, 'sink_ids': ['step1_era5_workflow/gribfiles_atm', 'step1_era5_workflow/gribfiles_sfc']}, {'id': 'step2_geogrid_workflow', 'name': None, 'description': None, 'sink_ids': ['step2_geogrid_workflow/geofiles']}, {'id': 'step3_wps_workflow', 'name': None, 'description': None, 'sink_ids': ['step3_wps_workflow/metfiles']}, {'id': 'step4_wrf_workflow', 'name': None, 'description': None, 'sink_ids': ['step4_wrf_workflow/wrfout']}, {'id': 'step5_emep_workflow', 'name': None, 'description': None, 'sink_ids': ['step5_emep_workflow/emepout']}], 'links': [{'id': 'start_year', 'source_id': 'start_year', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'start_month', 'source_id': 'start_month', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'start_day', 'source_id': 'start_day', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_year', 'source_id': 'end_year', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_month', 'source_id': 'end_month', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'end_day', 'source_id': 'end_day', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'north_latitude', 'source_id': 'north_latitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'south_latitude', 'source_id': 'south_latitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'west_longitude', 'source_id': 'west_longitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'east_longitude', 'source_id': 'east_longitude', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'cdskey', 'source_id': 'cdskey', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'https_proxy', 'source_id': 'https_proxy', 'sink_id': 'step1_era5_workflow', 'name': None, 'default_value': None}, {'id': 'geodir', 'source_id': 'geodir', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'namelist', 'source_id': 'namelist_geogrid', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'geotable', 'source_id': 'geotable', 'sink_id': 'step2_geogrid_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_ungrib_atm', 'source_id': 'namelist_ungrib_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'vtable_atm', 'source_id': 'vtable_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'grib_files_atm', 'source_id': 'step1_era5_workflow/gribfiles_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'outname_atm', 'source_id': 'outname_atm', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_ungrib_sfc', 'source_id': 'namelist_ungrib_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'vtable_sfc', 'source_id': 'vtable_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'grib_files_sfc', 'source_id': 'step1_era5_workflow/gribfiles_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'outname_sfc', 'source_id': 'outname_sfc', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_metgrid', 'source_id': 'namelist_metgrid', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'geo_files', 'source_id': 'step2_geogrid_workflow/geofiles', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'generate_metdir', 'source_id': 'generate_metdir', 'sink_id': 'step3_wps_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_real', 'source_id': 'namelist_real', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_wrf', 'source_id': 'namelist_wrf', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'metfiles', 'source_id': 'step3_wps_workflow/metfiles', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'realcores', 'source_id': 'realcores', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'wrfcores', 'source_id': 'wrfcores', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'generate_rundir', 'source_id': 'generate_rundir', 'sink_id': 'step4_wrf_workflow', 'name': None, 'default_value': None}, {'id': 'namelist_emep', 'source_id': 'namelist_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'metfiles_emep', 'source_id': 'step4_wrf_workflow/wrfout', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'metdir_name', 'source_id': 'metdir_name', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'inputdir_emep', 'source_id': 'inputdir_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'runlabel_emep', 'source_id': 'runlabel_emep', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}, {'id': 'emepcores', 'source_id': 'emepcores', 'sink_id': 'step5_emep_workflow', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 455,
    "text_field": "['example_workflow_configurations', 'input_files', 'install', 'workflows', '.gitignore', 'LICENSE', 'README.md', 'emep_cwl_settings.yaml', 'era5_download_settings.yaml', 'wps_geogrid_cwl_settings.yaml', 'wps_metgrid_cwl_settings.yaml', 'wrf_emep_full_workflow_cwl_settings.yaml', 'wrf_real_cwl_settings.yaml', 'README.txt', 'env_cwlrunner.yml', 'env_toil.yml', 'emep_workflow.cwl', 'era5_workflow.cwl', 'geogrid_workflow.cwl', 'wps_workflow.cwl', 'wrf_workflow.cwl', 'wrf_emep_full_workflow.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Example Common Workflow Language (CWL) workflow and tool descriptors for running the\nWeather Research and Forecase (WRF) and EMEP models. This workflow is designed for a single model domain. Example datasets for testing this\nworkflow can be downloaded from Zenodo. The workflow runner (either cwltool, or Toil) can be installed using either conda or pip.\nEnvironment files for conda are included, and can be used as shown below: The full workflow is broken into several logical steps: Steps 1 and 3 require you to register with the CDS service, in order to download ERA5 data\nbefore using in the WPS process.\nSteps 2 and 5 require you to download extra input data - the instructions on how to do this\nare included in the README.txt files in the relevant input data directories. A full workflow for all steps is provided here. But each separate step can by run on it's\nown too, following the instructions given below. We recommend running step 4 first, to\nexplore how the REAL & WRF workflow works, before trying the other steps. Before running the ERA5 download tool, ensure that you have reqistered for the CDS service,\nsigned the ERA5 licensing agreement, and saved the CDS API key (.cdsapirc) in your\nworking directory. To run the ERA5 download tool use the following command: Note that the--cachedir CACHEoption sets the working directory cache, which enables the\nreuse of any steps previously run (and the restarting of the workflow from this point).\nThe--singularityoption is needed if you are using singularity instead of docker. Before running the geogrid tool you will need to download the geography data from theUCAR website.\nThese should be extracted into theinput_files/geogrid_geog_inputdirectory. To run the geogrid program use the following command: Before running the WPS process you will have to download the ERA5 datafiles (which will be\ncalledpreslev_[YYYYMMDD].gribandsurface_[YYYYMMDD].grib) and copy these to the directoryinput_files/wps_era5_input. If you have also run geogrid in step 2 you can replace thegeo_em.d01.ncfile in theinput_files/wps_geogrid_inputdirectory with the file that\ngeogrid created. To run the wps metgrid process use the following command: The WRF model can be run without any prepreparation, except for the downloading of the\ninput data from Zenodo. However, if you have created new meteorology files (met_em*) using\nWPS you can replace the files in theinput_files/wrf_met_inputdirectory with these. To run the WRF process (including REAL) use the following command: Before running the EMEP model you will need to download the EMEP input dataset. This can be\ndone using thecatalog.pytool, following the instructions in theinput_files/emep_input/README.txtfile. If you have run WRF you can also replace thewrfout*data files in theinput_Files/emep_wrf_inputdirectory with those you have created. To run the EMEP model use the following command: Before running the full workflow make sure you have carried out the setup tasks described\nabove. To run the full workflow use the following command: In order to work with singularity, all filenames need to exclude special characters.\nTo ensure that all WRF filenames comply with this requirement, you will need to add thenocolons = .true.option to your WPS, REAL and WRF namelists to ensure this. The WPS processes all run in single thread mode. REAL, WRF and EMEP have been compiled with\nMPI support. The default cores for each of these is 2, 9 and 9, respectively. The\nsettings file can be edited to modify these requirements. To cache the data from individual steps you can use the--cachediroptional flag. These workflow scripts have been developed by theResearch ITat theUniversity of Manchester. Copyright 2023University of Manchester, UK. Licensed under the MIT license, see the LICENSE file for details. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/455?version=1 add full workflow to readme Views:987Downloads:162 Created: 12th Apr 2023 at 13:04 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A collection of workflows related to air quality predictions, with a focus on the UK. The principle models used are WRF and EMEP. Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 138,
    "discussion_links": [],
    "title": "rquest-omop-worker-workflow",
    "license": "MIT",
    "description": "# rquest-omop-worker-workflows\n\nSource for workflow definitions for the open source RQuest OMOP Worker tool developed for Hutch/TRE-FX\n\nNote: ARM workflows are currently broken. x86 ones work.\n\n## Inputs\n\n### Body\nSample input payload:\n\n```json\n{\n  \"task_id\": \"job-2023-01-13-14: 20: 38-<project>\",\n  \"project\": \"<project>\",\n  \"owner\": \"<owner>\",\n  \"cohort\": {\n    \"groups\": [\n      {\n        \"rules\": [\n          {\n            \"varname\": \"OMOP\",\n            \"varcat\": \"Person\",\n            \"type\": \"TEXT\",\n            \"oper\": \"=\",\n            \"value\": \"8507\"\n          }\n        ],\n        \"rules_oper\": \"AND\"\n      }\n    ],\n    \"groups_oper\": \"OR\"\n  },\n  \"collection\": \"<collection>\",\n  \"protocol_version\": \"<version>\",\n  \"char_salt\": \"<char_salt>\",\n  \"uuid\": \"<uuid>\"\n}\n```\n\n### Database access\n\nCurrently this workflow requires inputs for connecting to the database it will run queries against.\n\nIn future this may be moved to environment variables.",
    "latest_version": 3,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'AB105814: Create scope in HostedService for WfexsJobService (#194)\\r\\n\\r\\n', 'url': 'https://workflowhub.eu/workflows/471?version=1', 'remote': 'https://github.com/HDRUK/hutch.git', 'commit': 'b916ecf79b686c06d3d6336807b7435ff0653ceb', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/1/tree', 'doi': '10.48546/workflowhub.workflow.471.1'}, {'version': 2, 'revision_comments': 'adding cwl files\\r\\n', 'url': 'https://workflowhub.eu/workflows/471?version=2', 'remote': 'https://github.com/HDRUK/rquest-omop-worker-workflows', 'commit': '8a4c8c16bd77c772155fecce68c4c64ee3aacfea', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/2/tree', 'doi': '10.48546/workflowhub.workflow.471.2'}, {'version': 3, 'revision_comments': 'Merge pull request #1 from HDRUK/env_variables\\r\\n\\r\\nRemove db parameters from workflows', 'url': 'https://workflowhub.eu/workflows/471?version=3', 'remote': 'https://github.com/HDRUK/rquest-omop-worker-workflows', 'commit': '724775ab48bff4ae6da6c39da4ad1619abcf8518', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/471/git/3/tree', 'doi': None}]",
    "version": 3,
    "revision_comments": "Merge pull request #1 from HDRUK/env_variables\n\nRemove db parameters from workflows",
    "created_at": "2023-10-23T13:58:11.000Z",
    "updated_at": "2023-10-23T13:58:11.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/476', 'family_name': 'Panagi', 'given_name': 'Vasiliki', 'affiliation': '', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'body', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'result_modifiers', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'is_availability', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'results', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'output_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['run_query/output_file']}], 'steps': [{'id': 'run_query', 'name': None, 'description': None, 'sink_ids': ['run_query/output_file']}], 'links': [{'id': 'body', 'source_id': 'body', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'result_modifiers', 'source_id': 'result_modifiers', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'is_availability', 'source_id': 'is_availability', 'sink_id': 'run_query', 'name': None, 'default_value': None}, {'id': 'results', 'source_id': 'results', 'sink_id': 'run_query', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 471,
    "text_field": "['arm', 'x86', 'LICENSE', 'README.md', 'rquest-omop-worker.cwl', 'workflow-entrypoint.cwl', 'rquest-omop-worker.cwl', 'workflow-entrypoint.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Source for workflow definitions for the open source RQuest OMOP Worker tool developed for Hutch/TRE-FX Note: ARM workflows are currently broken. x86 ones work. ### Body\nSample input payload: Currently this workflow requires inputs for connecting to the database it will run queries against. In future this may be moved to environment variables. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/471?version=3 Merge pull request #1 from HDRUK/env_variables Remove db parameters from workflows adding cwl files AB105814: Create scope in HostedService for WfexsJobService (#194) Views:2286Downloads:963 Created: 15th May 2023 at 17:15 Last updated: 23rd Oct 2023 at 14:58 This item has not yet been tagged. None Teams:TRE-FX Organizations:University of Nottingham Teams:TRE-FX Organizations:University of Nottingham Teams:IBISBA Workflows,GalaxyProject SARS-CoV-2,BioBB Building Blocks,Common Workflow Language (CWL) community,BioExcel Best Practice Guides,Specimen Data Refinery,FAIR Computational Workflows,Vertebrate Genomes Pipelines in Galaxy,TRE-FX,EuroScienceGateway,Biodiversity Genomics Europe (general),BY-COVID Baseline Use Case: SARS-CoV-2 Vaccine(s) effectiveness in preventing SARS-CoV-2 infection,BY-COVID (general),BioDT additional pipelines,BioDT Use Case 4.1.1.1 Biodiversity dynamics,BioDT Use Case 4.1.2.2 DNA detected biodiversity, poorly known habitats,BioDT Use Case 4.1.2.1 Crop wild relatives and genetic resources for food security,BioDT Use Case 4.1.3.1 Invasive species,BioDT Use Case 4.1.3.2 Endangered species,BioDT Use Case 4.1.4.1 Disease outbreaks,BioDT Use Case 4.1.4.2 Pollinators,BioDT Use Case 4.1.1.2 Ecosystem services,ELIXIR Training,ELIXIR Tools platform Organizations:The University of Manchester,ELIXIR-UK A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TRE-FX is assembling leading technology providers from ELIXIR-UK and HDR UK, with three TRE providers and two leading analysis platforms to show through a real reference implementation how we can use secure Research Objects to move between TREs while still supporting the Five Safes principles that govern and protect patient data; all overseen by patient representatives. Space:Independent Teams Public web page:https://trefx.uk/ Start date: 1st Mar 2023 End date: 31st Oct 2023 Organisms:Not specified"
  },
  {
    "": 141,
    "discussion_links": [],
    "title": "Metagenome and metatranscriptome assembly in CWL",
    "license": "CC-BY-4.0",
    "description": "# CWL-assembly\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/684724bbc0134960ab41748f4a4b732f)](https://www.codacy.com/app/mb1069/CWL-assembly?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=EBI-Metagenomics/CWL-assembly&amp;utm_campaign=Badge_Grade)\n[![Build Status](https://travis-ci.org/EBI-Metagenomics/CWL-assembly.svg?branch=develop)](https://travis-ci.org/EBI-Metagenomics/CWL-assembly)\n\n## Description\n\nThis repository contains two workflows for metagenome and metatranscriptome assembly of short read data. MetaSPAdes is used as default for paired-end data, and MEGAHIT for single-end data and co-assemblies. MEGAHIT can be specified as the default assembler in the yaml file if preferred. Steps include:\n\n  * _QC_: removal of short reads, low quality regions, adapters and host decontamination\n  * _Assembly_: with metaSPADES or MEGAHIT\n  * _Post-assembly_: Host and PhiX decontamination, contig length filter (500bp), stats generation\n\n## Requirements - How to install\n\nThis pipeline requires a conda environment with cwltool, blastn, and metaspades. If created with `requirements.yml`, the environment will be called `cwl_assembly`. \n\n```\nconda env create -f requirements.yml\nconda activate cwl_assembly\npip install cwltool==3.1.20230601100705\n```\n\n## Databases\n\nYou will need to pre-download fasta files for host decontamination and generate the following databases accordingly:\n  * bwa index\n  * blast index\n    \nSpecify the locations in the yaml file when running the pipeline.\n\n## Main pipeline executables\n\n  * `src/workflows/metagenome_pipeline.cwl`\n  * `src/workflows/metatranscriptome_pipeline.cwl`\n\n## Example command\n\n```cwltool --singularity --outdir ${OUTDIR} ${CWL} ${YML}```\n\n`$CWL` is going to be one of the executables mentioned above\n`$YML` should be a config yaml file including entries among what follows. \nYou can find a yml template in the `examples` folder.\n\n## Example output directory structure\n```\nRoot directory\n    ├── megahit\n    │   └── 001 -------------------------------- Assembly root directory\n    │       ├── assembly_stats.json ------------ Human-readable assembly stats file\n    │       ├── coverage.tab ------------------- Coverage file\n    │       ├── log ---------------------------- CwlToil+megahit output log\n    |       ├── options.json ------------------- Megahit input options\n    │       ├── SRR6257420.fasta.gz ------------ Archived and trimmed assembly\n    │       └── SRR6257420.fasta.gz.md5 -------- MD5 hash of above archive\n    ├── metaspades\n    │   └── 001 -------------------------------- Assembly root directory\n    │       ├── assembly_graph.fastg ----------- Assembly graph\n    │       ├── assembly_stats.json ------------ Human-readable assembly stats file\n    │       ├── coverage.tab ------------------- Coverage file\n    |       ├── params.txt --------------------- Metaspades input options\n    │       ├── spades.log --------------------- Metaspades output log\n    │       ├── SRR6257420.fasta.gz ------------ Archived and trimmed assembly\n    │       └── SRR6257420.fasta.gz.md5 -------- MD5 hash of above archive\n    │ \n    └── raw ------------------------------------ Raw data directory\n        ├── SRR6257420.fastq.qc_stats.tsv ------ Stats for cleaned fastq\n        ├── SRR6257420_fastp_clean_1.fastq.gz -- Cleaned paired-end file_1\n        └── SRR6257420_fastp_clean_2.fastq.gz -- Cleaned paired-end file_2\n```",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/474?version=1', 'remote': 'https://github.com/EBI-Metagenomics/CWL-assembly.git', 'commit': 'b269a55c0b45f86f3b5373972688ee1d78bec660', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/474/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #8 from EBI-Metagenomics/readme_requirements\\r\\n\\r\\nUpdate of README, examples, and installation requirements', 'url': 'https://workflowhub.eu/workflows/474?version=2', 'remote': 'https://github.com/EBI-Metagenomics/CWL-assembly.git', 'commit': '39efebc161b7022163094e5a73a51a08a968e9c7', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/474/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Merge pull request #8 from EBI-Metagenomics/readme_requirements\n\nUpdate of README, examples, and installation requirements",
    "created_at": "2023-06-21T10:41:38.000Z",
    "updated_at": "2023-06-21T10:41:38.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 474,
    "text_field": "['.github', 'workflows', 'examples', 'src', 'tools', 'assembly-qc', 'bwa', 'fastp', 'megahit', 'metaspades', 'stats', 'upload', 'utils', 'workflows', 'tests', 'in', 'blastdb', 'bwa_index', 'metaspades_out', 'metaspades', '001', 'raw', 'tools', 'assembly-qc', 'bwa', 'fastp', 'megahit', 'metaspades', 'stats', 'workflows', 'workflows', 'test.yml', '.gitignore', '.pre-commit-config.yaml', '.travis.yml', 'LICENSE', 'MANIFEST.in', 'README.md', 'template.yml', 'requirements.yml', '__init__.py', 'blast.cwl', 'fasta-trimming.cwl', 'trim_fasta.py', 'bwa.cwl', 'map_host.sh', 'fastp.cwl', 'megahit_paired.cwl', 'megahit_single.cwl', 'metaspades.cwl', 'base_count.cwl', 'bwa-index.cwl', 'bwa-mem.cwl', 'gen_stats_report.py', 'metabat-jgi-summarise.cwl', 'samtools-sort.cwl', 'samtools-view.cwl', 'stats-report.cwl', 'create_manifest.py', 'get_coverage.py', 'cat.cwl', 'cat.yml', 'count_fastq.cwl', 'count_fastq.sh', 'count_fastq.yml', 'detect_assembler.cwl', 'fill_reads2.cwl', 'restore_reads2.cwl', 'return_directory.cwl', 'return_directory.yml', 'assembly.cwl', 'assembly_stats.json', 'coassembly.cwl', 'metagenome_multiplereads_qc.cwl', 'metagenome_pipeline.cwl', 'metagenome_qc.cwl', 'metatranscriptome_pipeline.cwl', 'metatranscriptome_qc.cwl', 'post_assembly.cwl', 'post_assembly.yml', 'post_assembly_qc.cwl', 'post_assembly_qc.yml', 'rna-prediction.cwl', 'stats.cwl', 'stats.yml', 'cwl-validation.sh', 'cwltest.sh', 'aln-se.sam', 'assembly_stats.json', 'base_counts', 'phiX.nhr', 'phiX.nin', 'phiX.nsq', 'GRCh38_chr10.fasta', 'GRCh38_chr10.fasta.0123', 'GRCh38_chr10.fasta.amb', 'GRCh38_chr10.fasta.ann', 'GRCh38_chr10.fasta.bwt.2bit.64', 'GRCh38_chr10.fasta.pac', 'contigs_phixcont.fasta', 'coverage.tab', 'filtered_contigs.fasta', 'filtered_contigs.fasta.0123', 'filtered_contigs.fasta.amb', 'filtered_contigs.fasta.ann', 'filtered_contigs.fasta.bwt.2bit.64', 'filtered_contigs.fasta.pac', 'mgtest_1.fastq.gz', 'mgtest_2.fastq.gz', 'mgtest_fastp_1.fastq.gz', 'mgtest_fastp_2.fastq.gz', 'mgtest_fastp_clean_1.fastq.gz', 'mgtest_fastp_clean_2.fastq.gz', 'sorted.bam', 'unsorted.bam', 'assembly_graph.fastg', 'assembly_stats.json', 'coverage.tab', 'mgtest.fasta.gz', 'mgtest.fasta.gz.md5', 'params.txt', 'mgtest_fastp_clean_1.fastq.gz', 'mgtest_fastp_clean_2.fastq.gz', 'qc_stats.tsv', 'tests.yml', 'blast.yml', 'fasta-trimming.yml', 'bwa.yml', 'fastp.yml', 'megahit_paired.yml', 'megahit_single.yml', 'metaspades.yml', 'base_count.yml', 'bwa-index.yml', 'bwa-mem.yml', 'metabat-jgi-summarise.yml', 'samtools-sort.yml', 'samtools-view.yml', 'stats-report.yml', 'metagenome_pipeline.yml', 'metagenome_pipeline_megahit.yml', 'metagenome_pipeline_single.yml', 'test.yml']",
    "raw_text_content": "",
    "p_tag_content": "This repository contains two workflows for metagenome and metatranscriptome assembly of short read data. MetaSPAdes is used as default for paired-end data, and MEGAHIT for single-end data and co-assemblies. MEGAHIT can be specified as the default assembler in the yaml file if preferred. Steps include: This pipeline requires a conda environment with cwltool, blastn, and metaspades. If created withrequirements.yml, the environment will be calledcwl_assembly. You will need to pre-download fasta files for host decontamination and generate the following databases accordingly: Specify the locations in the yaml file when running the pipeline. cwltool --singularity --outdir ${OUTDIR} ${CWL} ${YML} $CWLis going to be one of the executables mentioned above$YMLshould be a config yaml file including entries among what follows.\nYou can find a yml template in theexamplesfolder. SEEK ID:https://workflowhub.eu/workflows/474?version=2 Merge pull request #8 from EBI-Metagenomics/readme_requirements Update of README, examples, and installation requirements Update README.md Views:2378Downloads:281 Created: 19th May 2023 at 14:59 Last updated: 21st Jun 2023 at 11:41 This item has not yet been tagged. None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI HoloFood is a 'hologenomic' approach that will improve the efficiency of food production systems by understanding the biomolecular and physiological processes affected by incorporating feed additives and novel sustainable feeds in farmed animals. The HoloFood consortium will showcase the potential of an innovative solution that holds enormous potential for optimising modern food production. Specifically, HoloFood is a framework that integrates a suite of recent analytical and technological\n... Teams:HoloFood at MGnify Web page:https://www.holofood.eu MGnify is EMBL-EBI's metagenomics resource. EMBL-EBI are one of the 11 HoloFood partners, and are responsible for the analysis of metagenomic and microbial datasets from the project. Space:HoloFood Public web page:https://www.ebi.ac.uk/metagenomics Start date: 1st Jan 2020 End date: 30th Apr 2023 Organisms:Not specified"
  },
  {
    "": 155,
    "discussion_links": "[{'id': '568', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '569', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb-dev/biobb/public/workflows/tutorials/flexdyn'}, {'id': '570', 'label': 'Documentation', 'url': 'https://biobb-wf-flexdyn.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein conformational ensembles generation",
    "license": "other-open",
    "description": "# Protein Conformational ensembles generation\n\n## Workflow included in the [ELIXIR 3D-Bioinfo](https://elixir-europe.org/communities/3d-bioinfo) Implementation Study:\n\n### Building on PDBe-KB to chart and characterize the conformation landscape of native proteins\n\nThis tutorial aims to illustrate the process of generating **protein conformational ensembles** from** 3D structures **and analysing its **molecular flexibility**, step by step, using the **BioExcel Building Blocks library (biobb)**.\n\n## Conformational landscape of native proteins\n**Proteins** are **dynamic** systems that adopt multiple **conformational states**, a property essential for many **biological processes** (e.g. binding other proteins, nucleic acids, small molecule ligands, or switching between functionaly active and inactive states). Characterizing the different **conformational states** of proteins and the transitions between them is therefore critical for gaining insight into their **biological function** and can help explain the effects of genetic variants in **health** and **disease** and the action of drugs.\n\n**Structural biology** has become increasingly efficient in sampling the different **conformational states** of proteins. The **PDB** has currently archived more than **170,000 individual structures**, but over two thirds of these structures represent **multiple conformations** of the same or related protein, observed in different crystal forms, when interacting with other proteins or other macromolecules, or upon binding small molecule ligands. Charting this conformational diversity across the PDB can therefore be employed to build a useful approximation of the **conformational landscape** of native proteins.\n\nA number of resources and **tools** describing and characterizing various often complementary aspects of protein **conformational diversity** in known structures have been developed, notably by groups in Europe. These tools include algorithms with varying degree of sophistication, for aligning the 3D structures of individual protein chains or domains, of protein assemblies, and evaluating their degree of **structural similarity**. Using such tools one can **align structures pairwise**, compute the corresponding **similarity matrix**, and identify ensembles of **structures/conformations** with a defined **similarity level** that tend to recur in different PDB entries, an operation typically performed using **clustering** methods. Such workflows are at the basis of resources such as **CATH, Contemplate, or PDBflex** that offer access to **conformational ensembles** comprised of similar **conformations** clustered according to various criteria. Other types of tools focus on differences between **protein conformations**, identifying regions of proteins that undergo large **collective displacements** in different PDB entries, those that act as **hinges or linkers**, or regions that are inherently **flexible**.\n\nTo build a meaningful approximation of the **conformational landscape** of native proteins, the **conformational ensembles** (and the differences between them), identified on the basis of **structural similarity/dissimilarity** measures alone, need to be **biophysically characterized**. This may be approached at **two different levels**. \n- At the **biological level**, it is important to link observed **conformational ensembles**, to their **functional roles** by evaluating the correspondence with **protein family classifications** based on sequence information and **functional annotations** in public databases e.g. Uniprot, PDKe-Knowledge Base (KB). These links should provide valuable mechanistic insights into how the **conformational and dynamic properties** of proteins are exploited by evolution to regulate their **biological function**. <br><br>\n\n- At the **physical level** one needs to introduce **energetic consideration** to evaluate the likelihood that the identified **conformational ensembles** represent **conformational states** that the protein (or domain under study) samples in isolation. Such evaluation is notoriously **challenging** and can only be roughly approximated by using **computational methods** to evaluate the extent to which the observed **conformational ensembles** can be reproduced by algorithms that simulate the **dynamic behavior** of protein systems. These algorithms include the computationally expensive **classical molecular dynamics (MD) simulations** to sample local thermal fluctuations but also faster more approximate methods such as **Elastic Network Models** and **Normal Node Analysis** (NMA) to model low energy **collective motions**. Alternatively, **enhanced sampling molecular dynamics** can be used to model complex types of **conformational changes** but at a very high computational cost. \n\nThe **ELIXIR 3D-Bioinfo Implementation Study** *Building on PDBe-KB to chart and characterize the conformation landscape of native proteins* focuses on:\n\n1. Mapping the **conformational diversity** of proteins and their homologs across the PDB. \n2. Characterize the different **flexibility properties** of protein regions, and link this information to sequence and functional annotation.\n3. Benchmark **computational methods** that can predict a biophysical description of protein motions.\n\nThis notebook is part of the third objective, where a list of **computational resources** that are able to predict **protein flexibility** and **conformational ensembles** have been collected, evaluated, and integrated in reproducible and interoperable workflows using the **BioExcel Building Blocks library**. Note that the list is not meant to be exhaustive, it is built following the expertise of the implementation study partners.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/488?version=1', 'commit': 'ab62bfd0ece2e3afcf76b45a6fc08fc9d423c792', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/488/git/1/tree', 'doi': '10.48546/workflowhub.workflow.488.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/488?version=2', 'commit': '70eb3d2d531277c64dc8aeebdaee3295286267b9', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/488/git/2/tree', 'doi': '10.48546/workflowhub.workflow.488.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T10:10:37.000Z",
    "updated_at": "2024-04-22T10:41:26.000Z",
    "doi": "10.48546/workflowhub.workflow.488.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 488,
    "text_field": "['biobb_adapters', 'README.md', 'bd_run.cwl', 'concoord_disco.cwl', 'concoord_dist.cwl', 'cpptraj_convert.cwl', 'cpptraj_mask.cwl', 'cpptraj_rms.cwl', 'dmd_run.cwl', 'extract_chain.cwl', 'extract_model.cwl', 'gmx_cluster.cwl', 'imod_imc.cwl', 'imod_imode.cwl', 'make_ndx.cwl', 'nma_run.cwl', 'nolb_nma.cwl', 'pcz_animate.cwl', 'pcz_bfactor.cwl', 'pcz_collectivity.cwl', 'pcz_evecs.cwl', 'pcz_hinges.cwl', 'pcz_info.cwl', 'pcz_stiffness.cwl', 'pcz_zip.cwl', 'prody_anm.cwl', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of generatingprotein conformational ensemblesfrom** 3D structures **and analysing itsmolecular flexibility, step by step, using theBioExcel Building Blocks library (biobb). Proteinsaredynamicsystems that adopt multipleconformational states, a property essential for manybiological processes(e.g. binding other proteins, nucleic acids, small molecule ligands, or switching between functionaly active and inactive states). Characterizing the differentconformational statesof proteins and the transitions between them is therefore critical for gaining insight into theirbiological functionand can help explain the effects of genetic variants inhealthanddiseaseand the action of drugs. Structural biologyhas become increasingly efficient in sampling the differentconformational statesof proteins. ThePDBhas currently archived more than170,000 individual structures, but over two thirds of these structures representmultiple conformationsof the same or related protein, observed in different crystal forms, when interacting with other proteins or other macromolecules, or upon binding small molecule ligands. Charting this conformational diversity across the PDB can therefore be employed to build a useful approximation of theconformational landscapeof native proteins. A number of resources andtoolsdescribing and characterizing various often complementary aspects of proteinconformational diversityin known structures have been developed, notably by groups in Europe. These tools include algorithms with varying degree of sophistication, for aligning the 3D structures of individual protein chains or domains, of protein assemblies, and evaluating their degree ofstructural similarity. Using such tools one canalign structures pairwise, compute the correspondingsimilarity matrix, and identify ensembles ofstructures/conformationswith a definedsimilarity levelthat tend to recur in different PDB entries, an operation typically performed usingclusteringmethods. Such workflows are at the basis of resources such asCATH, Contemplate, or PDBflexthat offer access toconformational ensemblescomprised of similarconformationsclustered according to various criteria. Other types of tools focus on differences betweenprotein conformations, identifying regions of proteins that undergo largecollective displacementsin different PDB entries, those that act ashinges or linkers, or regions that are inherentlyflexible. To build a meaningful approximation of theconformational landscapeof native proteins, theconformational ensembles(and the differences between them), identified on the basis ofstructural similarity/dissimilaritymeasures alone, need to bebiophysically characterized. This may be approached attwo different levels. At thebiological level, it is important to link observedconformational ensembles, to theirfunctional rolesby evaluating the correspondence withprotein family classificationsbased on sequence information andfunctional annotationsin public databases e.g. Uniprot, PDKe-Knowledge Base (KB). These links should provide valuable mechanistic insights into how theconformational and dynamic propertiesof proteins are exploited by evolution to regulate theirbiological function. At thephysical levelone needs to introduceenergetic considerationto evaluate the likelihood that the identifiedconformational ensemblesrepresentconformational statesthat the protein (or domain under study) samples in isolation. Such evaluation is notoriouslychallengingand can only be roughly approximated by usingcomputational methodsto evaluate the extent to which the observedconformational ensemblescan be reproduced by algorithms that simulate thedynamic behaviorof protein systems. These algorithms include the computationally expensiveclassical molecular dynamics (MD) simulationsto sample local thermal fluctuations but also faster more approximate methods such asElastic Network ModelsandNormal Node Analysis(NMA) to model low energycollective motions. Alternatively,enhanced sampling molecular dynamicscan be used to model complex types ofconformational changesbut at a very high computational cost. TheELIXIR 3D-Bioinfo Implementation StudyBuilding on PDBe-KB to chart and characterize the conformation landscape of native proteinsfocuses on: This notebook is part of the third objective, where a list ofcomputational resourcesthat are able to predictprotein flexibilityandconformational ensembleshave been collected, evaluated, and integrated in reproducible and interoperable workflows using theBioExcel Building Blocks library. Note that the list is not meant to be exhaustive, it is built following the expertise of the implementation study partners. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/488?version=2 DOI:10.48546/workflowhub.workflow.488.2 Updated workflow descriptors Initial commit Views:2521Downloads:463 Created: 31st May 2023 at 14:51 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 165,
    "discussion_links": [],
    "title": "Metabolome Annotation Workflow (MAW)",
    "license": "MIT",
    "description": "This repository hosts Metabolome Annotation Workflow (MAW). The workflow takes MS2 .mzML format data files as an input in R. It performs spectral database dereplication using R Package Spectra and compound database dereplication using SIRIUS OR MetFrag . Final candidate selection is done in Python using RDKit and PubChemPy.",
    "latest_version": 2,
    "tags": "['Annotation', 'Bioinformatics', 'Cheminformatics', 'FAIR workflows', 'Metabolomics', 'gnps', 'hmdb', 'identification', 'mass-spectrometry', 'massbank', 'rdkit', 'spectra', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'use docker to run MAW\\r\\n', 'url': 'https://workflowhub.eu/workflows/510?version=1', 'remote': 'https://github.com/zmahnoor14/MAW.git', 'commit': '1be2bd37215a2437f0e6f1bb5bc75aa9199193b6', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/510/git/1/tree', 'doi': '10.48546/workflowhub.workflow.510.1'}, {'version': 2, 'revision_comments': 'updated with all versions information\\r\\n', 'url': 'https://workflowhub.eu/workflows/510?version=2', 'remote': 'https://github.com/zmahnoor14/MAW.git', 'commit': '2da7fbaab0e2e4ebbff3f36d631336690fb318b0', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/510/git/2/tree', 'doi': '10.48546/workflowhub.workflow.510.2'}]",
    "version": 2,
    "revision_comments": "updated with all versions information",
    "created_at": "2023-08-01T14:21:50.000Z",
    "updated_at": "2023-08-01T14:22:09.000Z",
    "doi": "10.48546/workflowhub.workflow.510.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/423', 'family_name': 'Zulfiqar', 'given_name': 'Mahnoor', 'affiliation': 'Friedrich Schiller University', 'orcid': 'https://orcid.org/0000-0002-8330-4071'}, {'profile': '/people/70', 'family_name': 'Crusoe', 'given_name': 'Michael R.', 'affiliation': 'VU Amsterdam, ELIXIR', 'orcid': 'https://orcid.org/0000-0002-2961-9670'}, {'profile': '/people/469', 'family_name': 'Gadelha', 'given_name': 'Luiz', 'affiliation': 'German Cancer Research Center (DKFZ)', 'orcid': 'https://orcid.org/0000-0002-8122-9522'}, {'profile': None, 'family_name': 'Steinbeck', 'given_name': 'Christoph ', 'affiliation': 'Friedrich Schiller University Jena', 'orcid': 'https://orcid.org/0000-0001-6966-0814'}, {'profile': None, 'family_name': 'Sorokina', 'given_name': 'Maria', 'affiliation': 'Data Science and Artificial Intelligence, Research and Development, Bayer Pharmaceuticals, 13353, Berlin, Germany', 'orcid': 'https://orcid.org/0000-0001-9359-7149'}, {'profile': None, 'family_name': 'Peters', 'given_name': 'Kristian', 'affiliation': 'Leibniz Institute of Plant Biochemistry, 06120 Halle, Germany', 'orcid': 'https://orcid.org/0000-0002-4321-0257'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'python_script', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': {'class': 'File', 'path': 'Workflow_Python_Script_all.py'}}, {'id': 'r_script', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': {'class': 'File', 'path': 'Workflow_R_Script_all.r'}}, {'id': 'mzml_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'gnps_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'hmdb_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'mbank_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ppmx', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'collision_info', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'db_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'db_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'candidate_files', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'array', 'items': [{'type': 'File'}]}]}], 'source_ids': ['analysis/candidate_files']}, {'id': 'result', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['analysis/result']}], 'steps': [{'id': 'analysis', 'name': None, 'description': None, 'sink_ids': ['analysis/candidate_files', 'analysis/result']}], 'links': [{'id': 'python_script', 'source_id': 'python_script', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'r_script', 'source_id': 'r_script', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'mzml_file', 'source_id': 'mzml_files', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'gnps_file', 'source_id': 'gnps_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'hmdb_file', 'source_id': 'hmdb_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'mbank_file', 'source_id': 'mbank_file', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'ppmx', 'source_id': 'ppmx', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'collision_info', 'source_id': 'collision_info', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'db_name', 'source_id': 'db_name', 'sink_id': 'analysis', 'name': None, 'default_value': None}, {'id': 'db_path', 'source_id': 'db_path', 'sink_id': 'analysis', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 510,
    "text_field": "['Docker', 'MetFrag', 'SIRIUS5', 'Notebooks', 'Python_notebook', 'R_notebook', 'Python', 'Modules_Python', 'docs', '_static', 'R', 'Modules_R', 'cwl', 'provenance', 'maw-run-1-crate-trunc', '2ee9c8bd964a97bbbdfbc57aef497099d1ec2fef', '22a868547e58910de90da963c68f306292a7aac5', '0dbab83bd089e8f41337052cf3e7fcc538021eb7', '26052de672fdad2bd7c86015405eb721e6958ded', '317f7451c1ea9352659d49ebb4757a11c43ad09a', '6428564c3cc58b7a7f057aa9ce42b4093dee8d8d', '3a7247b565022eeba30738686800e0ddaac06d1f', 'f6da6c22f5c2b774ed499bf7c74d41a132a1be34', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '74d5450707676b379d911aeec24bc197811c77ac', '5db9c60f33e14ef5a65bc8733901075ec6219a2f', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '74d5450707676b379d911aeec24bc197811c77ac', 'a7da6c55b37c9f6c534373381d01fb90c95ef1bc', 'f6da6c22f5c2b774ed499bf7c74d41a132a1be34', 'f711b31215d02862c30dbd17b8c728044fa71228', 'b1b64b86d8823ac45ca249d5902e409a11527434', '843fa858eabfbc56c5957dd4ac76bb8467275033', 'c055ec61f0a96c4ffec7044103ed24716f11bd77', '73d54a785d257aa6a618797d530933d6db1d29e2', '74d5450707676b379d911aeec24bc197811c77ac', '8484b38fc0ffdef6e3307d6361fc315ae07a858d', '89e1b1edf3073d927fa409ba432725b70364b153', 'bf3b41b500db42a4cdd9f2ee25b276a79e4c78d3', '2a4579893026330d112f5351b356e27213b0ac94', '4fa4a5b5d07bf5e685d6377d6208a3f1608d32a4', '54df04a75ba6f5f7650f9edf4fae3246f24924e2', 'b433b663fecc0e8a8dd10e1e9596cdae71af6c3c', 'baf6ab125b7c2a162b5c9851c96c06194bed6b79', 'c367eb63a482ecf6eea1b45c588e5064cda9ad90', 'da321835c55943b391091e99d7ab024e92bb4d5e', '.gitignore', 'CITATION.cff', 'Dockerfile', 'Workflow_Python_Script_all_MetFrag.py', 'Workflow_R_Script_all_MetFrag.r', 'Run_Sirius.r', 'Workflow_Python_Script_all_SIRIUS.py', 'Workflow_R_Script_all_SIRIUS.r', 'Workflow_Python_Script_all_docker.py', 'Workflow_R_Script_all_MetFrag.r', 'MAW_functions.md', 'Workflow_Python_Functions.ipynb', 'Workflow_Python_Script.ipynb', 'Workflow_R_Functions.ipynb', 'Workflow_R_Script.ipynb', 'Dockerfile', 'MAW-PY_SList.ipynb', 'MN.ipynb', 'SMILESscreening.py', 'checkSMILES_validity.py', 'classification.py', 'combineSM.py', 'combine_CuratedR.py', 'combine_allspec.py', 'combine_insilico.py', 'combine_specdb.py', 'metfrag_curation.py', 'metfrag_postproc.py', 'scoring_spec.py', 'sirius_curation.py', 'sirius_postProc2.py', 'slist_metfrag.py', 'slist_sirius.py', 'specDB_Curation.py', 'spec_postproc.py', 'suspectListScreening.py', 'SMILES_Postprocess.ipynb', 'Workflow_Python_Functions.py', 'Workflow_Python_Script.py', 'Makefile', 'SMILESscreening.rst', 'MAW.png', 'checkSMILES_validity.rst', 'classification.rst', 'combineSM.rst', 'combine_CuratedR.rst', 'combine_allspec.rst', 'combine_insilico.rst', 'combine_specdb.rst', 'conf.py', 'demo_cache_pybatch.sqlite', 'index.rst', 'make.bat', 'metfrag_curation.rst', 'metfrag_postproc.rst', 'modules.rst', 'scoring_spec.rst', 'sirius_curation.rst', 'sirius_postProc2.rst', 'slist_metfrag.rst', 'slist_sirius.rst', 'specDB_Curation.rst', 'spec_postproc.rst', 'suspectListScreening.rst', 'requirements.txt', 'sirius_sl.ipynb', 'Dockerfile', 'Example_Tyrosine.mzML', 'cam_func.r', 'cam_funcMode.r', 'download_specDB.r', 'exampleCWL.ipynb', 'exampleCWL.r', 'merge_qc.r', 'metfrag_param.r', 'ms1_peaks.r', 'ms2_peaks.r', 'ms2_rfilename.ipynb', 'ms2_rfilename.r', 'run_metfrag.r', 'run_sirius.r', 'sirius_param.r', 'sirius_postprocess.r', 'spec_Processing.ipynb', 'spec_Processing.r', 'spec_dereplication.r', 'Workflow_R_Functions.r', 'Workflow_R_Script.r', 'install_packages.R', 'install_packages_devtools.R', 'README.md', 'Example_Tyrosine.mzML', 'README_cwl.md', 'Run_MetFrag.r', 'Run_Sirius.r', 'Workflow_Python_Script_all.py', 'Workflow_Python_Script_all_SIRIUS.py', 'Workflow_R_Script_all.r', 'example_output.json', 'maw-inputs-mutiple_ara.yaml', 'maw-metfrag-param.cwl', 'maw-metfrag.cwl', 'maw-py.cwl', 'maw-r.cwl', 'maw-sirius.cwl', 'maw.cwl', 'maw_inputs.yaml', 'maw_r_old.cwl', 'maw_single.cwl', 'mawr_slurm.sh', 'provenance_config.yaml', 'sirius-new.cwl', 'summary.py', 'template_maw.yaml', 'README.md', '173275ea0ffb1261ea721992334fcc28f3658dbd', '20b40ff2624a56b681d03737e2cfea7ed545726b', '6755bf86903f41988995893b036bb94676f492cb', '4dd46dd5a42269feb7cf82d2dc01606c0f333d8e', 'd711cf7a1a3f548a8a1ca8d62a37900d466073da', '316df4fca6e66be3910790c1b68b27883ec36de2', '0ac77dc45fdfd9d442989b330e6ef2e4ae828c87', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '5e02499f715f3e970c3dc14fe25bb7eebd9e8e7a', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'fb1412b65be97d3a6ae264b2fc616f6513af05d5', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '092f456b600148981938377202cce31c4e7dd734', '896081109a12f20863c06376260ede8803b89055', 'b176cb9720b357d6885c00670760328163a6a965', 'cbfbd133030a0ff1c1a42fc3618bebdff4db39cf', 'd41b00c2073d86c4ef48de33422810b81e272fa8', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '173275ea0ffb1261ea721992334fcc28f3658dbd', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', 'b176cb9720b357d6885c00670760328163a6a965', '20b40ff2624a56b681d03737e2cfea7ed545726b', 'd711cf7a1a3f548a8a1ca8d62a37900d466073da', 'f345f093209f54c0bee0e4dc7bb8514920960863', '6e2086f2b5b889ee7d27f7d5b65b4619c24e87b6', '092f456b600148981938377202cce31c4e7dd734', '04e84d5809c9dc31a14b2714b9f7d6c66f48399c', '173275ea0ffb1261ea721992334fcc28f3658dbd', '4bf7c18a30714cb1d124b03a15934b8358de8d8d', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', '9cf0704f2a283ce1de111cace3e8176a58f012bd', 'c155ab3ef1603d147130c7c548d2050ff4f5c2af', 'dfbe2215e673c60d0872c034cbc3e784a6a70b64', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f345f093209f54c0bee0e4dc7bb8514920960863', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'ebb09d32edd19d9769c264a89ef0a7ed3748df32', '1ab41355bfe5dfe64ea86444cbe704379dcf6eeb', '24bafa390af1f63e2409aee3629a0961dcda21b3', '4696f3a6f30bdce9475997f35fb1ae5b126d9765', '528c66f445917f7945f116924b91af0a5aeff814', '7970f54175730829f64233638b9dd09d69df2636', 'afc5794875d9d40525ef2589f1c60b8ad5fb82c9', '19828e64dd913dda0f6cf4e84ad50124939a513d', '1aa2c73c686d318d1464f5fcf1e36896c6fd0618', '50ae172a6da553e1c724e5159ae39fc3ad437321', '68adca59aa95cd781b2f88c62dbabf601fd3c851', '7134df14f5dd3b9bea9a8d94cbeba91008e12d35', '722685d2c8b17e080ed9318bc349c9ce336c3e8c', '80ddd3d2dea1a79e41413af70a7416ddde933953', '959b71b1b3391522c75deecb9061457465856790', 'a65b40000151f78f37f6bc71afb824307b788cdb', 'ae14416d359fe88b6cb12d2a2549bb22a05a7f16', 'cf94802d858a81cac066b4a3b5871c32c94904f8', '3c04b3942086354710ec77df9226969699dc3ae6', '0744d3def51a7d04d9e110280612da380725c960', '10987fa25c3c59386b32e6fbbe24a3d8c1a1a752', 'a2693cdffb32ca2c8b5ca0b61165c41eb22e4ca3', '7bf6b1b2bc1faa4aefd10fae00db4a4fe5e53ab0', 'b7a1342433f51a7b8952d819e2d6912a743329f8', '00441472f4fc6d8b7261a71e370fe55cce509a56', '0e1a20ec563a0286823a71570d46893f8186bb3d', '4efe618bb35b21cc8e4aeb99f24ccc5a1a85b855', '6cf21f132f6a00f9240606b964b69c02065b76fc', 'ad0e019e5592773b4eea27cacaf05db7ee8256b1', 'd2e1f9e14bc69e867cff0a2d6b7d0cd2497c874a', 'd77f45a0658bafb413efe4490805ed4baac99db4', 'dbc75c9e2e449c05038a5bacb3acff95f37f65a4', 'de2592e9625981ee1bf3d7e33be9685aa574f27f', 'e09e533495e416f0735b19761655edede64eec4c', 'f63c33970d3576890cae2f41e8077e85b930de9d', '65631abc7dfb2a2f4cf2cafdf5b1bcf855ed6810', '7f210f6500d84aa5b00c18564570fd2069927473', '068d29d4e2f20f1a0ba351897d92e869c653c98e', '12a1c1b1672499bea2393e7ab14beb2e0fd53c98', '38097f8a0df2fd6097b7c77bfee5c5f43da0a4db', '4e0e02031026e486d9d0e3681fe93faf7a5b0a54', '51c02e50604994697a4f208e115072227b0b3e09', '52ea11f50008899ebe3057a1c701a8c2be94d0a7', '92aa9257ab13164838677f8065b094cc92d83181', '9d374657c62a3d0c0094907a12caf8e963b2384e', 'db75a8a8541cfbacf3a29f93071701de791585df', 'dc37f6698ef815d517eee1e5c3d7039cb41e1686', 'ea50134a7e3da56f911a06dfd00c76e53f7b8aad', 'e4031fb93576780177808c215e7bc7bb8403cc4c', 'fd7234709f7066c39992a9e987edd0966d54ba6f', 'da9e6944845c4d273f37464e2a2c021c95ce0b91', 'dc2090fb573210c53d263aae26b934a88ea142d7', 'ed75361928b2a04aac7162e2ae0ee5ca4eb12825', '8dc910ef9fe5208a3a036747cb5f37ed26f45a2e', 'd3e8f203e88cc6750fb3bb04d772934de404f930', 'd406d999f4b0b07581ea028d3ae8c21167ca0724', 'eea49673cee69bdb7cbb895ed07332d0e455ca05', 'f90a8208bc3578fbd9019d7b90f49f0e5c310405', 'packed.cwl', 'ro-crate-metadata.json']",
    "raw_text_content": "",
    "p_tag_content": "This repository hosts Metabolome Annotation Workflow (MAW). The workflow takes MS2 .mzML format data files as an input in R. It performs spectral database dereplication using R Package Spectra and compound database dereplication using SIRIUS OR MetFrag . Final candidate selection is done in Python using RDKit and PubChemPy. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/510?version=2 DOI:10.48546/workflowhub.workflow.510.2 updated with all versions information use docker to run MAW Views:2428Downloads:312 Created: 19th Jun 2023 at 21:09 Last updated: 1st Aug 2023 at 15:21 None Teams:COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,Common Workflow Language (CWL) community,MGnify,Metabolomics-Reproducibility Organizations:VU Amsterdam,ELIXIR Teams:Metabolomics-Reproducibility Organizations:German Cancer Research Center (DKFZ) Teams:Metabolomics-Reproducibility Organizations:Friedrich Schiller University A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:Not specified Organisms:Not specified In the age of high-throughput data, computational workflows have made data processing tasks flexible, manageable, and automated. To administer different computational activities in a workflow, different workflow management systems (WMS) are used that necessitate a sophisticated level of standardisation. Standardisation and reproducibility can be achieved by using standard formats for specifying workflows, such as Common Workflow Language (CWL), and provenance gathering with the standard W3C PROV\n... Creator:Mahnoor Zulfiqar Submitter:Mahnoor Zulfiqar"
  },
  {
    "": 177,
    "discussion_links": [],
    "title": "CWL-based RNA-Seq workflow",
    "license": "MIT",
    "description": "A CWL-based pipeline for processing RNA-Seq data (FASTQ format) and performing differential gene/transcript expression analysis. \n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n- A table of metadata (``mrna_cll_subsets_phenotypes.csv``), based on the same validation analysis, to serve as an input example for the design of comparisons during differential expression analysis\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. (Optional)  custom processing of the reads using FASTA/Q Trimmer (part of the FASTX-toolkit) \n4. Mapping to reference genome (HISAT2)\n5. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n6. Sorting mapped reads based on chromosomal coordinates (samtools)\n\nSubsequently, two independent workflows are implemented for differential expression analysis at the transcript and gene level. \n\n**First**, following the [reference protocol](https://doi.org/10.1038/nprot.2016.095) for HISAT, StringTie and Ballgown transcript expression analysis, StringTie along with a reference transcript annotation GTF (Gene Transfer Format) file (if one is available) is used to:\n\n- Assemble transcripts for each RNA-Seq sample using the previous read alignments (BAM files)\n- Generate a global, non-redundant set of transcripts observed in any of the RNA-Seq samples\n- Estimate transcript abundances and generate read coverage tables for each RNA-Seq sample, based on the global, merged set of transcripts (rather than the reference) which is observed across all samples\n\nBallgown program is then used to load the coverage tables generated in the previous step and perform statistical analyses for differential expression at the transcript level. Notably, the StringTie - Ballgown protocol applied here was selected to include potentially novel transcripts in the analysis. \n\n**Second**, featureCounts is used to count reads that are mapped to selected genomic features, in this case genes by default, and generate a table of read counts per gene and sample. This table is passed as input to DESeq2 to perform differential expression analysis at the gene level. Both Ballgown and DESeq2 R scripts, along with their respective CWL wrappers, were designed to receive as input various parameters, such as experimental design, contrasts of interest, numeric thresholds, and hidden batch effects.",
    "latest_version": 1,
    "tags": "['CWL', 'RNASEQ', 'Transcriptomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/524?version=1', 'commit': 'a80a6c7a268fd71886a255fc45afa882d80bda0c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/524/git/1/tree', 'doi': '10.48546/workflowhub.workflow.524.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T08:44:44.000Z",
    "updated_at": "2023-07-05T09:16:36.000Z",
    "doi": "10.48546/workflowhub.workflow.524.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'RNA-Seq analysis', 'identifier': 'http://edamontology.org/operation_3680'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "{'inputs': [{'id': 'raw_files_directory', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'input_file_split', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': '_R'}, {'id': 'input_file_split_fwd_single', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': 'R1'}, {'id': 'input_file_split_rev', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': 'R2'}, {'id': 'input_qc_check', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'input_trimming_check', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'premapping_input_check', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'tg_quality', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'tg_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'tg_compression', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'tg_do_not_compress', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'tg_trim_suffix', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'tg_strigency', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'fastx_first_base_to_keep', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'fastx_last_base_to_keep', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'hisat2_num_of_threads', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'hisat2_alignments_tailored_trans_assemb', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'hisat2_idx_directory', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'hisat2_idx_basename', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hisat2_known_splicesite_infile', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'samtools_view_isbam', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'samtools_view_collapsecigar', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_uncompressed', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_fastcompression', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_samheader', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_count', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_readswithoutbits', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_readsingroup', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_view_readtagtostrip', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'samtools_view_readsquality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_readswithbits', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_cigar', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_iscram', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'samtools_view_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_view_randomseed', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'samtools_view_region', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_view_readsinlibrary', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_sort_compression_level', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_sort_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'samtools_sort_memory', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samtools_sort_sort_by_name', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'stringtie_guide_gff', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'stringtie_transcript_merge_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_out_gtf', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'stringtie_expression_estimation_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_ballgown_table_files', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'stringtie_cpus', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'stringtie_verbose', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'stringtie_min_isoform_abundance', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_junction_coverage', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_min_read_coverage', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'stringtie_conservative_mode', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'bg_phenotype_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bg_phenotype', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bg_samples', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bg_timecourse', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bg_feature', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_measure', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_confounders', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_custom_model', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bg_mod', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'bg_mod0', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'featureCounts_number_of_threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': 16}, {'id': 'featureCounts_annotation_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'featureCounts_output_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'featureCounts_read_meta_feature_overlap', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_metadata', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'deseq2_design', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'deseq2_samples', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'deseq2_min_sum_of_reads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_reference_level', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_phenotype', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_contrast', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_numerator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_denominator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_lfcThreshold', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'deseq2_pAdjustMethod', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_alpha', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'deseq2_parallelization', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_cores', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_transformation', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_blind', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_hypothesis', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_reduced', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_effects', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_row_means', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'deseq2_hidden_batch_method', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'deseq2_variables', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'o_trim_galore_single_fq', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_single/trim_galore']}, {'id': 'o_trim_galore_single_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_single/trim_galore_report']}, {'id': 'o_trim_galore_paired_fq', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_paired/trim_galore']}, {'id': 'o_trim_galore_paired_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['trim_galore_paired/trim_galore_report']}, {'id': 'o_fastqc_raw_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_raw_html/renamed_file']}, {'id': 'o_fastqc_single_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_single_html/renamed_file']}, {'id': 'o_fastqc_paired_html', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['rename_fastqc_paired_html/renamed_file']}, {'id': 'o_fastqc_raw_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_raw_zip/output_dir']}, {'id': 'o_fastqc_single_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_single_zip/output_dir']}, {'id': 'o_fastqc_paired_zip', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['cp_fastqc_paired_zip/output_dir']}, {'id': 'o_fastx_trimmer_single', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fastx_trimmer_single/output']}, {'id': 'o_fastx_trimmer_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fastx_trimmer_paired/output']}, {'id': 'o_hisat2_for_single_reads_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['hisat2_for_single_reads/output_stderr']}, {'id': 'o_hisat2_for_paired_reads_reports', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['hisat2_for_paired_reads/output_stderr']}, {'id': 'o_collect_hisat2_sam_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['collect_hisat2_sam_files/total_sam_files']}, {'id': 'o_samtools_view', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_view/output']}, {'id': 'o_samtools_sort', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_sort/sorted']}, {'id': 'o_stringtie_transcript_assembly_gtf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['stringtie_transcript_assembly/output_gtf']}, {'id': 'o_stringtie_merge', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['stringtie_merge/output_gtf']}, {'id': 'o_stringtie_expression_gtf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['stringtie_expression/output_gtf']}, {'id': 'o_stringtie_expression_outdir', 'name': None, 'description': None, 'type': [{'type': 'Directory[]'}], 'source_ids': ['stringtie_expression/outdir']}, {'id': 'o_ballgown_de_results', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['ballgown_de/ballgown_de_results']}, {'id': 'o_ballgown_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['ballgown_de/ballgown_object']}, {'id': 'o_ballgown_de_custom_model', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['ballgown_de/ballgown_de_custom_model']}, {'id': 'o_featureCounts', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['featureCounts/output']}, {'id': 'o_deseq2_de_results', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_de_results']}, {'id': 'o_deseq2_dds_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_dds_object']}, {'id': 'o_deseq2_res_lfcShrink_object', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['DESeq2_analysis/deseq2_res_lfcShrink_object']}, {'id': 'o_deseq2_transformed_object', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['DESeq2_analysis/deseq2_transformed_object']}], 'steps': [{'id': 'get_raw_files', 'name': None, 'description': None, 'sink_ids': ['get_raw_files/raw_files']}, {'id': 'split_single_paired', 'name': None, 'description': None, 'sink_ids': ['split_single_paired/single_files', 'split_single_paired/paired_files', 'split_single_paired/trim_galore_for_single', 'split_single_paired/trim_galore_for_paired', 'split_single_paired/fastqc_for_raw', 'split_single_paired/fastqc_for_single', 'split_single_paired/fastqc_for_paired', 'split_single_paired/cp_command_raw', 'split_single_paired/cp_command_single', 'split_single_paired/cp_command_paired', 'split_single_paired/fastx_command_single', 'split_single_paired/fastx_command_paired']}, {'id': 'trim_galore_single', 'name': None, 'description': None, 'sink_ids': ['trim_galore_single/trim_galore', 'trim_galore_single/trim_galore_report']}, {'id': 'trim_galore_paired', 'name': None, 'description': None, 'sink_ids': ['trim_galore_paired/trim_galore', 'trim_galore_paired/trim_galore_report']}, {'id': 'fastqc_raw', 'name': None, 'description': None, 'sink_ids': ['fastqc_raw/html_file', 'fastqc_raw/zipped_file']}, {'id': 'fastqc_single_trimmed', 'name': None, 'description': None, 'sink_ids': ['fastqc_single_trimmed/html_file', 'fastqc_single_trimmed/zipped_file']}, {'id': 'fastqc_paired_trimmed', 'name': None, 'description': None, 'sink_ids': ['fastqc_paired_trimmed/html_file', 'fastqc_paired_trimmed/zipped_file']}, {'id': 'cp_fastqc_raw_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_raw_zip/output_dir']}, {'id': 'cp_fastqc_single_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_single_zip/output_dir']}, {'id': 'cp_fastqc_paired_zip', 'name': None, 'description': None, 'sink_ids': ['cp_fastqc_paired_zip/output_dir']}, {'id': 'rename_fastqc_raw_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_raw_html/renamed_file']}, {'id': 'rename_fastqc_single_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_single_html/renamed_file']}, {'id': 'rename_fastqc_paired_html', 'name': None, 'description': None, 'sink_ids': ['rename_fastqc_paired_html/renamed_file']}, {'id': 'fastx_trimmer_single', 'name': None, 'description': None, 'sink_ids': ['fastx_trimmer_single/output']}, {'id': 'fastx_trimmer_paired', 'name': None, 'description': None, 'sink_ids': ['fastx_trimmer_paired/output']}, {'id': 'check_for_fastx_and_produce_names', 'name': None, 'description': None, 'sink_ids': ['check_for_fastx_and_produce_names/single_trim', 'check_for_fastx_and_produce_names/single_hisat2_sam', 'check_for_fastx_and_produce_names/paired_trim_1', 'check_for_fastx_and_produce_names/paired_trim_2', 'check_for_fastx_and_produce_names/paired_hisat2_sam']}, {'id': 'hisat2_for_single_reads', 'name': None, 'description': None, 'sink_ids': ['hisat2_for_single_reads/output', 'hisat2_for_single_reads/output_stderr']}, {'id': 'hisat2_for_paired_reads', 'name': None, 'description': None, 'sink_ids': ['hisat2_for_paired_reads/output', 'hisat2_for_paired_reads/output_stderr']}, {'id': 'collect_hisat2_sam_files', 'name': None, 'description': None, 'sink_ids': ['collect_hisat2_sam_files/total_sam_files']}, {'id': 'samtools_view', 'name': None, 'description': None, 'sink_ids': ['samtools_view/output']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/sorted']}, {'id': 'stringtie_transcript_assembly', 'name': None, 'description': None, 'sink_ids': ['stringtie_transcript_assembly/output_gtf']}, {'id': 'stringtie_merge', 'name': None, 'description': None, 'sink_ids': ['stringtie_merge/output_gtf']}, {'id': 'stringtie_expression', 'name': None, 'description': None, 'sink_ids': ['stringtie_expression/output_gtf', 'stringtie_expression/outdir']}, {'id': 'ballgown_de', 'name': None, 'description': None, 'sink_ids': ['ballgown_de/ballgown_de_results', 'ballgown_de/ballgown_object', 'ballgown_de/ballgown_de_custom_model']}, {'id': 'featureCounts', 'name': None, 'description': None, 'sink_ids': ['featureCounts/output']}, {'id': 'DESeq2_analysis', 'name': None, 'description': None, 'sink_ids': ['DESeq2_analysis/deseq2_de_results', 'DESeq2_analysis/deseq2_dds_object', 'DESeq2_analysis/deseq2_res_lfcShrink_object', 'DESeq2_analysis/deseq2_transformed_object']}], 'links': [{'id': 'DIRECTORY', 'source_id': 'raw_files_directory', 'sink_id': 'get_raw_files', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'get_raw_files/raw_files', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split', 'source_id': 'input_file_split', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split_fwd_single', 'source_id': 'input_file_split_fwd_single', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'file_split_rev', 'source_id': 'input_file_split_rev', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'qc_check', 'source_id': 'input_qc_check', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'trimming_check', 'source_id': 'input_trimming_check', 'sink_id': 'split_single_paired', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/trim_galore_for_single', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'fq_files', 'source_id': 'split_single_paired/single_files', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': 'tg_length', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'quality', 'source_id': 'tg_quality', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'compression', 'source_id': 'tg_compression', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'do_not_compress', 'source_id': 'tg_do_not_compress', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'trim_suffix', 'source_id': 'tg_trim_suffix', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'strigency', 'source_id': 'tg_strigency', 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': None, 'sink_id': 'trim_galore_single', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/trim_galore_for_paired', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'fq_files', 'source_id': 'split_single_paired/paired_files', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': 'tg_length', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'quality', 'source_id': 'tg_quality', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'compression', 'source_id': 'tg_compression', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'do_not_compress', 'source_id': 'tg_do_not_compress', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'trim_suffix', 'source_id': 'tg_trim_suffix', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'strigency', 'source_id': 'tg_strigency', 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'paired', 'source_id': None, 'sink_id': 'trim_galore_paired', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_raw', 'sink_id': 'fastqc_raw', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'get_raw_files/raw_files', 'sink_id': 'fastqc_raw', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_single', 'sink_id': 'fastqc_single_trimmed', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'fastqc_single_trimmed', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastqc_for_paired', 'sink_id': 'fastqc_paired_trimmed', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'fastqc_paired_trimmed', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_raw', 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_raw/zipped_file', 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_raw_zip', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_single', 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_single_trimmed/zipped_file', 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_single_zip', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/cp_command_paired', 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'input_files', 'source_id': 'fastqc_paired_trimmed/zipped_file', 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'outputdir', 'source_id': None, 'sink_id': 'cp_fastqc_paired_zip', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_raw/html_file', 'sink_id': 'rename_fastqc_raw_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_raw_html', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_single_trimmed/html_file', 'sink_id': 'rename_fastqc_single_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_single_html', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'fastqc_paired_trimmed/html_file', 'sink_id': 'rename_fastqc_paired_html', 'name': None, 'default_value': None}, {'id': 'run_type', 'source_id': None, 'sink_id': 'rename_fastqc_paired_html', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastx_command_single', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'first_base_to_keep', 'source_id': 'fastx_first_base_to_keep', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'last_base_to_keep', 'source_id': 'fastx_last_base_to_keep', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'fastx_trimmer_single', 'name': None, 'default_value': None}, {'id': 'command', 'source_id': 'split_single_paired/fastx_command_paired', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'first_base_to_keep', 'source_id': 'fastx_first_base_to_keep', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'last_base_to_keep', 'source_id': 'fastx_last_base_to_keep', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'fastx_trimmer_paired', 'name': None, 'default_value': None}, {'id': 'input_check', 'source_id': 'premapping_input_check', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'single_files', 'source_id': 'split_single_paired/single_files', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'paired_files', 'source_id': 'split_single_paired/paired_files', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'trim_galore_single', 'source_id': 'trim_galore_single/trim_galore', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'trim_galore_paired', 'source_id': 'trim_galore_paired/trim_galore', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'fastx_trimmer_single', 'source_id': 'fastx_trimmer_single/output', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'fastx_trimmer_paired', 'source_id': 'fastx_trimmer_paired/output', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split', 'source_id': 'input_file_split', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split_fwd_single', 'source_id': 'input_file_split_fwd_single', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'file_split_rev', 'source_id': 'input_file_split_rev', 'sink_id': 'check_for_fastx_and_produce_names', 'name': None, 'default_value': None}, {'id': 'num_of_threads', 'source_id': 'hisat2_num_of_threads', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'alignments_tailored_trans_assemb', 'source_id': 'hisat2_alignments_tailored_trans_assemb', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'idx_directory', 'source_id': 'hisat2_idx_directory', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'idx_basename', 'source_id': 'hisat2_idx_basename', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'files_with_unpaired_reads', 'source_id': 'check_for_fastx_and_produce_names/single_trim', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'SAM_output', 'source_id': 'check_for_fastx_and_produce_names/single_hisat2_sam', 'sink_id': 'hisat2_for_single_reads', 'name': None, 'default_value': None}, {'id': 'num_of_threads', 'source_id': 'hisat2_num_of_threads', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'known_splicesite_infile', 'source_id': 'hisat2_known_splicesite_infile', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'alignments_tailored_trans_assemb', 'source_id': 'hisat2_alignments_tailored_trans_assemb', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'idx_directory', 'source_id': 'hisat2_idx_directory', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'idx_basename', 'source_id': 'hisat2_idx_basename', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'files_with_first_mates', 'source_id': 'check_for_fastx_and_produce_names/paired_trim_1', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'files_with_second_mates', 'source_id': 'check_for_fastx_and_produce_names/paired_trim_2', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'SAM_output', 'source_id': 'check_for_fastx_and_produce_names/paired_hisat2_sam', 'sink_id': 'hisat2_for_paired_reads', 'name': None, 'default_value': None}, {'id': 'single_files', 'source_id': 'hisat2_for_single_reads/output', 'sink_id': 'collect_hisat2_sam_files', 'name': None, 'default_value': None}, {'id': 'paired_files', 'source_id': 'hisat2_for_paired_reads/output', 'sink_id': 'collect_hisat2_sam_files', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'collect_hisat2_sam_files/total_sam_files', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'output_name', 'source_id': None, 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'samtools_view_threads', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'isbam', 'source_id': 'samtools_view_isbam', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'collapsecigar', 'source_id': 'samtools_view_collapsecigar', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'uncompressed', 'source_id': 'samtools_view_uncompressed', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'fastcompression', 'source_id': 'samtools_view_fastcompression', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'samheader', 'source_id': 'samtools_view_samheader', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'samtools_view_count', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readswithoutbits', 'source_id': 'samtools_view_readswithoutbits', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readsingroup', 'source_id': 'samtools_view_readsingroup', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readtagtostrip', 'source_id': 'samtools_view_readtagtostrip', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readsquality', 'source_id': 'samtools_view_readsquality', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'readswithbits', 'source_id': 'samtools_view_readswithbits', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'cigar', 'source_id': 'samtools_view_cigar', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'iscram', 'source_id': 'samtools_view_iscram', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'randomseed', 'source_id': 'samtools_view_randomseed', 'sink_id': 'samtools_view', 'name': None, 'default_value': None}, {'id': 'region', 'source_id': 'samtools_view_region', 'sink_id': 'samtools_view', 'name': None, 'default_va",
    "tools": [],
    "id": 524,
    "text_field": "['RNA-Seq_workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\ninputs:\n    ### Directory with fastq(.gz) input files ###\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: false\n    input_trimming_check:\n        type: boolean?\n        default: false\n    premapping_input_check: \n        type: string\n    ### Trim galore ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_trim_suffix: string\n    tg_strigency: int\n    ### FASTA/Q Trimmer ###\n    fastx_first_base_to_keep:\n        type: int?\n    fastx_last_base_to_keep:\n        type: int?\n    ### HISAT2 - mapping ###\n    hisat2_num_of_threads:\n        type: int\n    hisat2_alignments_tailored_trans_assemb:\n        type: boolean\n    hisat2_idx_directory:\n        type: Directory\n    hisat2_idx_basename:\n        type: string\n    hisat2_known_splicesite_infile:\n        type: File?\n    ### samtools view ###\n    samtools_view_isbam:\n        type: boolean\n        default: true\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readswithoutbits: \n        type: int?\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?\n    ### samtools sort ###\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n    samtools_sort_memory:\n        type: string?\n    samtools_sort_sort_by_name:\n        type: boolean?\n        default: false\n    ### Stringtie assembly of RNA-Seq alignments to transcripts ###\n    stringtie_guide_gff:\n        type: File\n    stringtie_transcript_merge_mode:\n        type: boolean\n    stringtie_out_gtf:\n        type: string\n    stringtie_expression_estimation_mode:\n        type: boolean\n    stringtie_ballgown_table_files:\n        type: boolean\n    stringtie_cpus:\n        type: int?\n    stringtie_verbose:\n        type: boolean?\n        default: true\n    stringtie_min_isoform_abundance:\n        type: float?\n    stringtie_junction_coverage:\n        type: float?\n    stringtie_min_read_coverage:\n        type: float?\n    stringtie_conservative_mode:\n        default: false\n        type: boolean?\n    ### Ballgown - differential transcript expression analysis ###\n    bg_phenotype_file:\n        type: File\n    bg_phenotype: \n        type: string\n    bg_samples:\n        type: string\n    bg_timecourse:\n        type: boolean?\n    bg_feature:\n        type: string?\n    bg_measure:\n        type: string?\n    bg_confounders:\n        type: string?\n    bg_custom_model:\n        type: boolean?\n    bg_mod: \n        type: string?\n    bg_mod0:\n        type: string?\n    ### featureCounts - counting reads ###\n    featureCounts_number_of_threads:\n        type: int?\n        default: 16\n    featureCounts_annotation_file:\n        type: File\n    featureCounts_output_file:\n        type: string\n    featureCounts_read_meta_feature_overlap:\n        type: boolean?\n    ### DESeq2 - differential gene expression analysis ###\n    deseq2_metadata: \n        type: File\n    deseq2_design:\n        type: string\n    deseq2_samples:\n        type: string\n    deseq2_min_sum_of_reads:\n        type: int?\n    deseq2_reference_level:\n        type: string?\n    deseq2_phenotype:\n        type: string?\n    deseq2_contrast: \n        type: boolean?\n    deseq2_numerator: \n        type: string?\n    deseq2_denominator:\n        type: string?\n    deseq2_lfcThreshold:\n        type: float?\n    deseq2_pAdjustMethod:\n        type: string?\n    deseq2_alpha:\n        type: float?\n    deseq2_parallelization:\n        type: boolean?\n    deseq2_cores:\n        type: int?\n    deseq2_transformation:\n        type: string?\n    deseq2_blind:\n        type: boolean?\n    deseq2_hypothesis:\n        type: string?\n    deseq2_reduced:\n        type: string?\n    deseq2_hidden_batch_effects:\n        type: boolean?\n    deseq2_hidden_batch_row_means:\n        type: int?\n    deseq2_hidden_batch_method:\n        type: string?\n    deseq2_variables:\n        type: int?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir \n    ### FASTA/Q Trimmer outputs ###\n    o_fastx_trimmer_single:\n        type: File[]\n        outputSource: fastx_trimmer_single/output\n    o_fastx_trimmer_paired:\n        type: File[]\n        outputSource: fastx_trimmer_paired/output\n    ### HISAT2 outputs ###\n    o_hisat2_for_single_reads_reports:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output_stderr\n    o_hisat2_for_paired_reads_reports:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output_stderr\n    o_collect_hisat2_sam_files:\n        type: File[]\n        outputSource: collect_hisat2_sam_files/total_sam_files\n    ### Samtools outputs ###\n    o_samtools_view:\n        type: File[]\n        outputSource: samtools_view/output  \n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    ### Stringtie outputs ###\n    o_stringtie_transcript_assembly_gtf:\n        type: File[]\n        outputSource: stringtie_transcript_assembly/output_gtf\n    o_stringtie_merge:\n        type: File\n        outputSource: stringtie_merge/output_gtf\n    o_stringtie_expression_gtf:\n        type: File[]\n        outputSource: stringtie_expression/output_gtf\n    o_stringtie_expression_outdir:\n        type: Directory[]\n        outputSource: stringtie_expression/outdir\n    ### Ballgown outputs ###\n    o_ballgown_de_results:\n        type: File\n        outputSource: ballgown_de/ballgown_de_results\n    o_ballgown_object:\n        type: File\n        outputSource: ballgown_de/ballgown_object\n    o_ballgown_de_custom_model:\n        type: File?\n        outputSource: ballgown_de/ballgown_de_custom_model\n    ### featureCounts outputs ###\n    o_featureCounts:\n        type: File\n        outputSource: featureCounts/output\n    ### DESeq2 outputs ###\n    o_deseq2_de_results:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_de_results\n    o_deseq2_dds_object:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_dds_object\n    o_deseq2_res_lfcShrink_object:\n        type: File\n        outputSource: DESeq2_analysis/deseq2_res_lfcShrink_object\n    o_deseq2_transformed_object:\n        type: File?\n        outputSource: DESeq2_analysis/deseq2_transformed_object\n\nsteps:\n    ### Retrieve FASTQ files from target directory (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired.cwl\n        in:\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n            - fastx_command_single\n            - fastx_command_paired\n    ### Trim_galore - FASTQ file trimming ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC - FASTQ file quality control ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    ### FASTA/Q Trimmer - optional read processing ###\n    fastx_trimmer_single:\n        run: ../wrappers/fastx-trimmer.cwl\n        scatter:\n        - input_file\n        in: \n            command: split_single_paired/fastx_command_single\n            first_base_to_keep: fastx_first_base_to_keep\n            last_base_to_keep: fastx_last_base_to_keep\n            input_file: trim_galore_single/trim_galore \n        out: \n            - output\n    fastx_trimmer_paired:\n        run: ../wrappers/fastx-trimmer.cwl\n        scatter:\n        - input_file\n        in: \n            command: split_single_paired/fastx_command_paired\n            first_base_to_keep: fastx_first_base_to_keep\n            last_base_to_keep: fastx_last_base_to_keep\n            input_file: trim_galore_paired/trim_galore\n        out: \n            - output\n    ### Check inputs from selected steps and output file names for the next steps (ExpressionTool) ###\n    check_for_fastx_and_produce_names:\n        run: ../wrappers/check-selected-steps.cwl\n        in: \n            input_check: premapping_input_check\n            single_files: split_single_paired/single_files\n            paired_files: split_single_paired/paired_files\n            trim_galore_single: trim_galore_single/trim_galore\n            trim_galore_paired: trim_galore_paired/trim_galore\n            fastx_trimmer_single: fastx_trimmer_single/output\n            fastx_trimmer_paired: fastx_trimmer_paired/output\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_trim\n            - single_hisat2_sam\n            - paired_trim_1\n            - paired_trim_2 \n            - paired_hisat2_sam\n    ### HISAT2 - Mapping to reference genome ###\n    hisat2_for_single_reads:\n        run: ../wrappers/hisat2.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - files_with_unpaired_reads\n        - SAM_output\n        in:\n            num_of_threads: hisat2_num_of_threads\n            alignments_tailored_trans_assemb: hisat2_alignments_tailored_trans_assemb\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_unpaired_reads: check_for_fastx_and_produce_names/single_trim\n            SAM_output: check_for_fastx_and_produce_names/single_hisat2_sam\n        out: [output, output_stderr]\n    hisat2_for_paired_reads:\n        run: ../wrappers/hisat2.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - files_with_first_mates\n        - files_with_second_mates\n        - SAM_output\n        in:\n            num_of_threads: hisat2_num_of_threads\n            known_splicesite_infile: hisat2_known_splicesite_infile\n            alignments_tailored_trans_assemb: hisat2_alignments_tailored_trans_assemb\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_first_mates: check_for_fastx_and_produce_names/paired_trim_1\n            files_with_second_mates: check_for_fastx_and_produce_names/paired_trim_2\n            SAM_output: check_for_fastx_and_produce_names/paired_hisat2_sam\n        out: [output, output_stderr]\n    ### Collect HISAT2 SAM files & create output file names for the remaining workflow steps (ExpressionTool) ###\n    collect_hisat2_sam_files:\n        run: ../wrappers/collect-hisat2-sam-files.cwl\n        in:\n            single_files: hisat2_for_single_reads/output\n            paired_files: hisat2_for_paired_reads/output\n        out: [total_sam_files]\n    ### SAMtools ### \n    # SAM-to-BAM convertion\n    samtools_view:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            input: collect_hisat2_sam_files/total_sam_files\n            output_name:\n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\"_unsorted.bam\") )\n            threads: samtools_view_threads\n            isbam: samtools_view_isbam\n            collapsecigar: samtools_view_collapsecigar\n            uncompressed: samtools_view_uncompressed\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            readswithoutbits: samtools_view_readswithoutbits\n            readsingroup: samtools_view_readsingroup\n            readtagtostrip: samtools_view_readtagtostrip\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n        out: [output]\n    # Sorting based on chromosomal coordinates\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            input: samtools_view/output\n            compression_level: samtools_sort_compression_level\n            threads: samtools_sort_threads\n            memory: samtools_sort_memory\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\"_unsorted.bam\")[0].concat(\"_sorted.bam\") )\n            sort_by_name: samtools_sort_sort_by_name\n        out: [sorted]\n    ### Stringtie ### \n    # Transcript assembly\n    stringtie_transcript_assembly:\n        run: ../wrappers/stringtie.cwl\n        scatter:\n        - input_bam\n        in:\n            input_bam: samtools_sort/sorted\n            guide_gff: stringtie_guide_gff\n            sample_label: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            cpus: stringtie_cpus\n            out_gtf: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0].concat(\".gtf\") )\n            verbose: stringtie_verbose\n            min_isoform_abundance: stringtie_min_isoform_abundance\n            junction_coverage: stringtie_junction_coverage\n            min_read_coverage: stringtie_min_read_coverage\n            conservative_mode: stringtie_conservative_mode\n        out: \n            - output_gtf    \n    # Merge assembled transcripts\n    stringtie_merge:\n        run: ../wrappers/stringtie.cwl\n        scatterMethod: dotproduct\n        in:\n            input_gtfs: stringtie_transcript_assembly/output_gtf\n            transcript_merge_mode: stringtie_transcript_merge_mode\n            guide_gff: stringtie_guide_gff\n            cpus: stringtie_cpus\n            verbose: stringtie_verbose\n            out_gtf: stringtie_out_gtf\n        out: \n            - output_gtf \n    # Generate transcript expression values\n    stringtie_expression:\n        run: ../wrappers/stringtie-for-ballgown.cwl\n        scatter:\n        - input_bam\n        in:\n            input_bam: samtools_sort/sorted\n            guide_gff: stringtie_merge/output_gtf\n            sample_label: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            cpus: stringtie_cpus\n            out_gtf: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0].concat(\"_exprs.gtf\") )\n            verbose: stringtie_verbose\n            min_isoform_abundance: stringtie_min_isoform_abundance\n            junction_coverage: stringtie_junction_coverage\n            min_read_coverage: stringtie_min_read_coverage\n            conservative_mode: stringtie_conservative_mode\n            outputdir: \n                valueFrom: $( inputs.input_bam.basename.split(\"_sorted.bam\")[0] )\n            expression_estimation_mode: stringtie_expression_estimation_mode\n            ballgown_table_files: stringtie_ballgown_table_files\n        out: \n            - output_gtf\n            - outdir\n    ### Ballgown - Differential transcript expression ###\n    ballgown_de:\n        run: ../wrappers/ballgown.cwl\n        in: \n            stringtie_dirs: stringtie_expression/outdir\n            phenotype_file: bg_phenotype_file\n            phenotype: bg_phenotype\n            samples: bg_samples\n            timecourse: bg_timecourse\n            feature: bg_feature\n            measure: bg_measure\n            confounders: bg_confounders\n            custom_model: bg_custom_model\n            mod: bg_mod\n            mod0: bg_mod0\n        out:\n            - ballgown_de_results\n            - ballgown_object\n            - ballgown_de_custom_model\n    ### featureCounts - Generation of read counts table ###\n    featureCounts:\n        run: ../wrappers/featureCounts.cwl\n        in: \n            number_of_threads: featureCounts_number_of_threads\n            annotation_file: featureCounts_annotation_file\n            output_file: featureCounts_output_file\n            inputFiles: samtools_sort/sorted\n            read_meta_feature_overlap: featureCounts_read_meta_feature_overlap\n        out: [output]\n    ### DESeq2 - Differential gene expression ###\n    DESeq2_analysis:\n        run: ../wrappers/DESeq2.cwl\n        in: \n            count_matrix: featureCounts/output\n            metadata: deseq2_metadata\n            samples: deseq2_samples\n            design: deseq2_design\n            min_sum_of_reads: deseq2_min_sum_of_reads\n            reference_level: deseq2_reference_level\n            phenotype: deseq2_phenotype\n            contrast: deseq2_contrast\n            numerator: deseq2_numerator\n            denominator: deseq2_denominator\n            lfcThreshold: deseq2_lfcThreshold\n            pAdjustMethod: deseq2_pAdjustMethod\n            alpha: deseq2_alpha\n            parallelization: deseq2_parallelization\n            cores: deseq2_cores\n            transformation: deseq2_transformation\n            blind: deseq2_blind\n            hypothesis: deseq2_hypothesis\n            reduced: deseq2_reduced\n            hidden_batch_effects: deseq2_hidden_batch_effects\n            hidden_batch_row_means: deseq2_hidden_batch_row_means\n            hidden_batch_method: deseq2_hidden_batch_method\n            variables: deseq2_variables\n        out:\n            - deseq2_de_results\n            - deseq2_dds_object\n            - deseq2_res_lfcShrink_object\n            - deseq2_transformed_object",
    "p_tag_content": "A CWL-based pipeline for processing RNA-Seq data (FASTQ format) and performing differential gene/transcript expression analysis. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: Subsequently, two independent workflows are implemented for differential expression analysis at the transcript and gene level. First, following thereference protocolfor HISAT, StringTie and Ballgown transcript expression analysis, StringTie along with a reference transcript annotation GTF (Gene Transfer Format) file (if one is available) is used to: Ballgown program is then used to load the coverage tables generated in the previous step and perform statistical analyses for differential expression at the transcript level. Notably, the StringTie - Ballgown protocol applied here was selected to include potentially novel transcripts in the analysis. Second, featureCounts is used to count reads that are mapped to selected genomic features, in this case genes by default, and generate a table of read counts per gene and sample. This table is passed as input to DESeq2 to perform differential expression analysis at the gene level. Both Ballgown and DESeq2 R scripts, along with their respective CWL wrappers, were designed to receive as input various parameters, such as experimental design, contrasts of interest, numeric thresholds, and hidden batch effects. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/524?version=1 DOI:10.48546/workflowhub.workflow.524.1 Initial commit Views:1562Downloads:214 Created: 5th Jul 2023 at 09:44 Last updated: 5th Jul 2023 at 10:15 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 178,
    "discussion_links": [],
    "title": "CWL-based ChIP-Seq workflow",
    "license": "MIT",
    "description": "A CWL-based pipeline for processing ChIP-Seq data (FASTQ format) and performing: \n\n- Peak calling\n- Consensus peak count table generation\n- Detection of super-enhancer regions\n- Differential binding analysis\n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n- Tables of metadata (``EZH2_metadata_CLL.csv`` and ``H3K27me3_metadata_CLL.csv``), based on the same validation analysis, to serve as input examples for the design of comparisons during differential binding analysis\n- A list of ChIP-Seq blacklisted regions (human genome version 38; hg38) from the ENCODE project, which is can be used as input for the workflow, is provided in BED format (``hg38-blacklist.v2.bed``)\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of short reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trimmomatic)\n3. Mapping to reference genome (HISAT2)\n5. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n6. Sorting mapped reads based on chromosomal coordinates (samtools)\n7. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n8. Re-sorting based on chromosomal coordinates (samtools)\n9. Removal of duplicate reads (samtools)\n10. Index creation for coordinate-sorted BAM files to enable fast random access (samtools)\n11. Production of quality metrics and files for the inspection of the mapped ChIP-Seq reads, taking into consideration the experimental design (deeptools2):\n - Read coverages for genomic regions of two or more BAM files are computed (multiBamSummary). The results are produced in compressed numpy array (NPZ) format and are used to calculate and visualize pairwise correlation values between the read coverages (plotCorrelation). \n - Estimation of sequencing depth, through genomic position (base pair) sampling, and visualization is performed for multiple BAM files (plotCoverage).\n - Cumulative read coverages for each indexed BAM file are plotted by counting and sorting all reads overlapping a “window” of specified length (plotFingerprint).\n - Production of coverage track files (bigWig), with the coverage calculated as the number of reads per consecutive windows of predefined size (bamCoverage), and normalized through various available methods (e.g., Reads Per Kilobase per Million mapped reads; RPKM). The coverage track files are used to calculate scores per selected genomic regions (computeMatrix), typically genes, and a heatmap, based on the scores associated with these genomic regions, is produced (plotHeatmap).\n12. Calling potential binding positions (peaks) to the genome (peak calling) (MACS2)\n13. Generation of consensus peak count table for the application of custom analyses on MACS2 peak calling results (bedtools)\n14. Detection of super-enhancer regions (Rank Ordering of Super-Enhancers; ROSE)\n15. Differential binding analyses (DiffBind) for:\n - MACS2 peak calling results\n - ROSE-detected super-enhancer regions",
    "latest_version": 1,
    "tags": "['CWL', 'ChIP-seq', 'Epigenomics', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/525?version=1', 'commit': 'c05e17555013f6fcf302c55d83caca378e391b11', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/525/git/1/tree', 'doi': '10.48546/workflowhub.workflow.525.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:39:05.000Z",
    "updated_at": "2023-07-05T09:39:32.000Z",
    "doi": "10.48546/workflowhub.workflow.525.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 525,
    "text_field": "['ChIP-Seq_workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\ninputs:\n    # Directory with fastq(.gz) input files\n    raw_files_directory: \n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Treatment & Control sample options ###\n    input_treatment_samples:\n        type: string[]\n    input_control_samples:\n        type: string[]?\n    ### Trimmomatic ###\n    # SE\n    trimmomatic_se_threads: \n        type: int?\n    trimmomatic_se_illuminaClip:\n        type: string?\n    trimmomatic_se_slidingWindow:\n        type: string?\n    trimmomatic_se_leading:\n        type: int?\n    trimmomatic_se_trailing:\n        type: int?\n    trimmomatic_se_minlen:\n        type: int?\n    # PE\n    trimmomatic_pe_threads: \n        type: int?\n    trimmomatic_pe_illuminaClip:\n        type: string?\n    trimmomatic_pe_slidingWindow:\n        type: string?\n    trimmomatic_pe_leading:\n        type: int?\n    trimmomatic_pe_trailing:\n        type: int?\n    trimmomatic_pe_minlen:\n        type: int?\n    ### HISAT2 - mapping ###\n    hisat2_num_of_threads: \n        type: int?\n    hisat2_idx_directory:\n        type: Directory\n    hisat2_idx_basename:\n        type: string\n    ### Samtools ###\n    samtools_readswithoutbits: \n        type: int\n        default: 4\n    samtools_view_threads: \n        type: int?\n    samtools_fixmate_threads:\n        type: int?\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int\n    samtools_sort_memory:\n        type: string?\n    samtools_markdup_threads: \n        type: int?    \n    ### Deeptools ###\n    # blacklist file\n    blackListFile: \n        type: File?\n    # multiBamSummary\n    multiBamSummary_threads:\n        type: int?\n    # plotCorrelation\n    plotCorrelation_numbers:\n        type: boolean?\n        default: true\n    plotCorrelation_method:\n        type: string?\n    plotCorrelation_color:\n        type: string?\n    plotCorrelation_title:\n        type: string?\n    plotCorrelation_plotType:\n        type: string?\n    plotCorrelation_outFileName:\n        type: string?\n    # plotCoverage\n    plotCoverage_threads:\n        type: int?\n    plotCoverage_plotFileFormat: \n        type: string?\n    plotCoverage_outFileName: \n        type: string?\n    # plotFingerprint\n    plotFingerprint_plotFileFormat: \n        type: string?\n    plotFingerprint_threads:\n        type: int?\n    plotFingerprint_outFileName: \n        type: string?\n    # bamCoverage\n    bamCoverage_normalizeUsing:\n        type: string?\n    bamCoverage_effective_genome_size: \n        type: long?\n    bamCoverage_extendReads: \n        type: int?\n    bamCoverage_threads:\n        type: int?  \n    # computeMatrix  \n    computeMatrix_regions:\n        type: File\n    computeMatrix_threads: \n        type: int?\n    computeMatrix_upstream:\n        type: int?\n    computeMatrix_downstream:\n        type: int?\n    computeMatrix_outputFile:\n        type: string?\n    computeMatrix_outFileSortedRegions:\n        type: string?\n    # plotHeatmap\n    plotHeatmap_plotFileFormat: \n        type: string?\n    plotHeatmap_outputFile: \n        type: string?\n    ### MACS2 ###\n    macs2_callpeak_bdg: \n        type: boolean?\n    macs2_callpeak_gsize:\n        type: string?\n    macs2_callpeak_format:\n        type: string?\n    macs2_callpeak_broad:\n        type: boolean?\n    # --nomodel, --shift, --extsize\n    macs2_callpeak_nomodel:\n        type: boolean?\n    macs2_shift: \n        type: int?\n    macs2_extsize:  \n        type: int?\n    # p-/q-values\n    macs2_pvalue: \n        type: float? \n    macs2_qvalue: \n        type: float?\n    ### Differential binding ###\n    ### ChIPQC & DiffBind ###\n    metadata_table: \n        type: File\n    ### ChIPQC ###\n    ChIPQC_blacklist: \n        type: File?\n    ChIPQC_annotation:\n        type: string?\n    ChIPQC_consensus:\n        type: boolean?\n    ChIPQC_bCount: \n        type: boolean? \n    ChIPQC_facetBy:\n        type: string[]?\n    ### DiffBind ###\n    DiffBind_consensus: \n        type: string[]?\n    DiffBind_minOverlap:\n        type: \n        - int\n        - float\n        default: 2\n    DiffBind_blacklist: \n        type: \n        - string\n        - boolean\n        - File\n        default: true\n    DiffBind_greylist: \n        type: \n        - string\n        - boolean\n        - File\n        default: false\n    DiffBind_cores:\n        type: int?\n    DiffBind_bParallel:\n        type: boolean?\n    DiffBind_normalization:\n        type: string?\n    DiffBind_library:\n        type: string?\n    DiffBind_background:\n        type: boolean?\n    DiffBind_design:\n        type: string\n        default: \"~Condition\"\n    DiffBind_reorderMeta_factor:\n        type: string[]?\n    DiffBind_reorderMeta_value:\n        type: string[]?\n    DiffBind_retrieve_consensus: \n        type: boolean?\n        default: true\n    DiffBind_low_read_count_filter:\n        type: int?\n    DiffBind_filterFun:\n        type: string?    \n    ### ROSE ###\n    rose_genome_build: \n        type: string\n    rose_stitch_distance:\n        type: int?\n    rose_tss_distance:\n        type: int?\n\noutputs:\n    ### Trimmomatic outputs ###\n    o_trimmomatic_single_end_stderr:\n        type: File[]\n        outputSource: trimmomatic_single_end/stderr_log\n    o_trimmomatic_single_end_fastq:\n        type: File[]\n        outputSource: trimmomatic_single_end/outFastq\n    o_trimmomatic_paired_end_stderr:\n        type: File[]\n        outputSource: trimmomatic_paired_end/stderr_log\n    o_trimmomatic_paired_end_fwd_paired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_fwd_paired\n    o_trimmomatic_paired_end_fwd_unpaired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_fwd_unpaired\n    o_trimmomatic_paired_end_rev_paired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_rev_paired\n    o_trimmomatic_paired_end_rev_unpaired:\n        type: File[]\n        outputSource: trimmomatic_paired_end/outFastq_rev_unpaired\n   ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html_fwd:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html_fwd/renamed_file\n    o_fastqc_paired_html_rev:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html_rev/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### HISAT2 outputs ###\n    o_hisat2_for_single_reads_sam:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output\n    o_hisat2_for_single_reads_stderr:\n        type: File[]\n        outputSource: hisat2_for_single_reads/output_stderr\n    o_hisat2_for_paired_reads_sam:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output\n    o_hisat2_for_paired_reads_stderr:\n        type: File[]\n        outputSource: hisat2_for_paired_reads/output_stderr\n    ### samtools outputs ###\n    o_samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    # Add ms (mate score) tags\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    # Sort by coordinates\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    # Remove duplicates (samtools markdup)\n    o_samtools_markdup:\n        type: File[]\n        outputSource: samtools_markdup/output\n    # Index bam\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    ### Deeptools outputs ###\n    # Multibam file\n    o_multiBamSummary_file:\n        type: File\n        outputSource: multiBamSummary_file/outNpz\n    # plotCorrelation image file\n    o_plotCorrelation_file:\n        type: File\n        outputSource: plotCorrelation_file/outImage\n    # plotCoverage image files\n    o_plotCoverage_file:\n        type: File\n        outputSource: plotCoverage_file/outImage\n    # plotFingerprint image files\n    o_plotFingerprint_file:\n        type: File\n        outputSource: plotFingerprint_file/outImage\n    # bamCoverage normalization\n    o_bamCoverage_norm:\n        type: File[]\n        outputSource: bamCoverage_norm/bigwig\n    o_computeMatrix_matrix:\n        type: File\n        outputSource: computeMatrix/outMatrix\n    o_computeMatrix_regions:\n        type: File\n        outputSource: computeMatrix/outRegions\n    o_plotHeatmap:\n        type: File\n        outputSource: plotHeatmap/outHeatmap\n    ### MACS2 outputs ### \n    o_macs2_call_peaks_narrowPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/narrowPeak\n    o_macs2_call_peaks_xls:\n        type: File[]?\n        outputSource: macs2_call_peaks/xls\n    o_macs2_call_peaks_bed:\n        type: File[]?\n        outputSource: macs2_call_peaks/bed\n    o_macs2_call_peaks_lambda:\n        type: File[]?\n        outputSource: macs2_call_peaks/lambda\n    o_macs2_call_peaks_pileup:\n        type: File[]?\n        outputSource: macs2_call_peaks/pileup\n    o_macs2_call_peaks_broadPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/broadPeak\n    o_macs2_call_peaks_gappedPeak:\n        type: File[]?\n        outputSource: macs2_call_peaks/gappedPeak\n    o_macs2_call_peaks_model_r:\n        type: File[]?\n        outputSource: macs2_call_peaks/model_r\n    o_macs2_call_peaks_cutoff:\n        type: File[]?\n        outputSource: macs2_call_peaks/cutoff\n    ### Consensus peaks and table with counts ###\n    o_total_peaks_table:\n        type: File\n        outputSource: total_peaks_table/output\n    o_sort_peaks_table:\n        type: File\n        outputSource: sort_peaks_table/output\n    o_bedtools_merge:\n        type: File\n        outputSource: bedtools_merge/output\n    o_bedtools_intersect:\n        type: File\n        outputSource: bedtools_merge/output\n    o_exclude_black_list_regions:\n        type: File\n        outputSource: exclude_black_list_regions/output\n    o_bedtools_coverage:\n        type: File[]\n        outputSource: bedtools_coverage/output\n    o_printf_header_samples:\n        type: File\n        outputSource: printf_header_samples/output\n    o_paste_content_1:\n        type: File\n        outputSource: paste_content_1/output\n    o_paste_content_2:\n        type: File\n        outputSource: paste_content_2/output\n    o_append_files:\n        type: File\n        outputSource: append_files/output\n    ### ChIPQC MACS output ###\n    o_ChIPQC_macs_ChIPQCexperiment:\n        type: File\n        outputSource: ChIPQC_macs/ChIPQCexperiment\n    o_ChIPQC_macs_outdir:\n        type: Directory\n        outputSource: ChIPQC_macs/outdir\n    o_ChIPQC_macs_ChIPQCreport:\n        type: File?\n        outputSource: ChIPQC_macs/ChIPQCreport\n    ### DiffBind MACS output ###\n    o_DiffBind_macs_diffbind_results:\n        type: File\n        outputSource: DiffBind_macs/diffbind_results\n    o_DiffBind_macs_correlation_heatmap:\n        type: File\n        outputSource: DiffBind_macs/correlation_heatmap\n    o_DiffBind_macs_diffbind_consensus:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_consensus\n    o_DiffBind_macs_diffbind_normalized_counts:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_normalized_counts\n    o_DiffBind_macs_diffbind_dba_object:\n        type: File?\n        outputSource: DiffBind_macs/diffbind_dba_object\n    ### ROSE-related outputs ###\n    # exclude_black_list_regions_narrowPeak\n    o_exclude_black_list_regions_narrowPeak:\n        type: File[]\n        outputSource: exclude_black_list_regions_narrowPeak/output\n    # bed to rose-compatible gff\n    o_bed_to_rose_gff_conversion:\n        type: File[]\n        outputSource: bed_to_rose_gff_conversion/output \n    # ROSE Super-Enhancers output  \n    o_rose_main_gff_dir_outputs:\n        type: {\n            \"type\": \"array\",\n            \"items\": {\"type\" : \"array\", \"items\" : \"File\"}\n        }\n        outputSource: rose_main/gff_dir_outputs\n    o_rose_main_mappedGFF_dir_outputs:\n        type: {\n            \"type\": \"array\",\n            \"items\": {\"type\" : \"array\", \"items\" : \"File\"}\n        }\n        outputSource: rose_main/mappedGFF_dir_outputs\n    o_rose_main_STITCHED_ENHANCER_REGION_MAP:\n        type: File[]?\n        outputSource: rose_main/STITCHED_ENHANCER_REGION_MAP\n    o_rose_main_AllEnhancers_table:\n        type: File[]?\n        outputSource: rose_main/AllEnhancers_table\n    o_rose_main_SuperEnhancers_table:\n        type: File[]?\n        outputSource: rose_main/SuperEnhancers_table\n    o_rose_main_Plot_points:\n        type: File[]?\n        outputSource: rose_main/Plot_points\n    o_rose_main_Enhancers_withSuper:\n        type: File[]?\n        outputSource: rose_main/Enhancers_withSuper\n    # enhancer_bed_processing\n    o_enhancer_bed_processing:\n        type: File[]?\n        outputSource: enhancer_bed_processing/output\n    # ChIPQC ROSE output\n    o_ChIPQC_rose_ChIPQCexperiment:\n        type: File\n        outputSource: ChIPQC_rose/ChIPQCexperiment\n    o_ChIPQC_rose_outdir:\n        type: Directory?\n        outputSource: ChIPQC_rose/outdir\n    o_ChIPQC_rose_ChIPQCreport:\n        type: File\n        outputSource: ChIPQC_rose/ChIPQCreport\n    # DiffBind ROSE output\n    o_DiffBind_rose_diffbind_results:\n        type: File\n        outputSource: DiffBind_rose/diffbind_results\n    o_DiffBind_rose_correlation_heatmap:\n        type: File\n        outputSource: DiffBind_rose/correlation_heatmap\n    o_DiffBind_rose_diffbind_consensus:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_consensus\n    o_DiffBind_rose_diffbind_normalized_counts:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_normalized_counts\n    o_DiffBind_rose_diffbind_dba_object:\n        type: File?\n        outputSource: DiffBind_rose/diffbind_dba_object\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files_fwd\n            - paired_files_rev\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - single_files_basenames\n            - paired_files_basenames\n            - single_files_sam\n            - paired_files_sam\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n            - trimmomatic_command_single\n            - trimmomatic_command_paired\n    ### Trimmomatic - trimming ###\n    trimmomatic_single_end:\n        run: ../wrappers/Trimmomatic_SE.cwl\n        # scatterMethod: dotproduct\n        scatter:\n            - input_fastq\n        in: \n            input_fastq: split_single_paired/single_files\n            trimm_se_threads: trimmomatic_se_threads\n            command: split_single_paired/trimmomatic_command_single\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            illuminaClip: trimmomatic_se_illuminaClip\n            slidingWindow: trimmomatic_se_slidingWindow\n            leading: trimmomatic_se_leading\n            trailing: trimmomatic_se_trailing\n            minlen: trimmomatic_se_minlen\n        out:\n            - stderr_log\n            - outFastq\n    trimmomatic_paired_end:\n        run: ../wrappers/Trimmomatic_PE.cwl\n        scatter:\n            - input_fastq_fwd\n            - input_fastq_rev\n        scatterMethod: dotproduct\n        in: \n            input_fastq_fwd: split_single_paired/paired_files_fwd\n            input_fastq_rev: split_single_paired/paired_files_rev\n            trimm_pe_threads: trimmomatic_pe_threads\n            command: split_single_paired/trimmomatic_command_paired\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            illuminaClip: trimmomatic_pe_illuminaClip\n            slidingWindow: trimmomatic_pe_slidingWindow\n            leading: trimmomatic_pe_leading\n            trailing: trimmomatic_pe_trailing\n            minlen: trimmomatic_pe_minlen\n        out:\n            - stderr_log\n            - outFastq_fwd_paired\n            - outFastq_fwd_unpaired\n            - outFastq_rev_paired\n            - outFastq_rev_unpaired\n    ### FASTQC - Quality control ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trimmomatic_single_end/outFastq\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed_fwd:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trimmomatic_paired_end/outFastq_fwd_paired\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed_rev:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trimmomatic_paired_end/outFastq_rev_paired\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files to directory - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp_paired.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files_fwd: fastqc_paired_trimmed_fwd/zipped_file\n            input_files_rev: fastqc_paired_trimmed_rev/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html_fwd:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed_fwd/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file   \n    rename_fastqc_paired_html_rev:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed_rev/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file   \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired_fwd: split_single_paired/paired_files_fwd\n            input_paired_rev: split_single_paired/paired_files_rev\n            trimming_single: trimmomatic_single_end/outFastq\n            trimming_paired_fwd: trimmomatic_paired_end/outFastq_fwd_paired\n            trimming_paired_rev: trimmomatic_paired_end/outFastq_rev_paired\n        out:\n        - single_files\n        - paired_files_fwd\n        - paired_files_rev\n    ### HISAT2 ###\n    hisat2_for_single_reads:\n        run: ../wrappers/hisat2_v2.cwl \n        scatterMethod: dotproduct\n        scatter:\n            - files_with_unpaired_reads\n            - SAM_output\n            - stderr_report\n        in:\n            num_of_threads: hisat2_num_of_threads\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_unpaired_reads: check_trimming/single_files\n            SAM_output: split_single_paired/single_files_sam\n            stderr_report: split_single_paired/single_files_basenames\n        out: \n            - output\n            - output_stderr\n    hisat2_for_paired_reads:\n        run: ../wrappers/hisat2_v2.cwl\n        scatterMethod: dotproduct\n        scatter:\n            - files_with_first_mates\n            - files_with_second_mates\n            - SAM_output\n            - stderr_report\n        in:\n            num_of_threads: hisat2_num_of_threads\n            idx_directory: hisat2_idx_directory\n            idx_basename: hisat2_idx_basename\n            files_with_first_mates: check_trimming/paired_files_fwd\n            files_with_second_mates: check_trimming/paired_files_rev\n            SAM_output: split_single_paired/paired_files_sam\n            stderr_report: split_single_paired/paired_files_basenames\n        out: \n            - output\n            - output_stderr\n    ### Collect HISAT2 SAM files ###\n    collect_hisat2_sam_files:\n        run: ../wrappers/collect-hisat2-sam-files.cwl\n        in:\n            single_files: hisat2_for_single_reads/output\n            paired_files: hisat2_for_paired_reads/output           \n        out:\n            - total_sam_files\n    ### Samtools view ###\n    samtools_view:\n        run: ../wrappers/samtools-view.cwl\n        scatter: \n        - input\n        in: \n            input: collect_hisat2_sam_files/total_sam_files \n            output_name:\n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\".bam.tmp\") )\n            readswithoutbits: samtools_readswithoutbits\n            samheader:  \n                valueFrom: $( true )\n            threads: samtools_view_threads\n        out: [output]\n    ### Samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam.tmp\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n                valueFrom: $( true )\n        out: [sorted]\n    ### Samtools fixmate ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted\n            output_file_name: \n                valueFrom: $( inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\"_unsorted.bam\") )\n        out: [output]\n    ### sort BAM by CHR coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n            - input\n        in:\n            compression_level: samtools_sort_compression_level\n            threads: samtools_sort_threads\n            memory: samtools_sort_memory\n            input: samtools_fixmate/output\n            output_name:\n                valueFrom: $( inputs.input.basename.split(\"_unsorted.bam\")[0].concat(\"_sorted.bam\") )\n        out: [sorted]\n    ### Remove duplicates ###\n    samtools_markdup:\n        run: ../wrappers/samtools-markdup.cwl\n        scatter: \n            - input\n        in: \n            threads: samtools_markdup_threads\n            remove_duplicates: \n                valueFrom: $( true )\n            input: samtools_sort/sorted\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\"_sorted.bam\")[0].concat(\"_markdup.bam\") )\n        out: [output]\n    ### Index BAM files ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n            - alignments\n        in: \n            alignments: samtools_markdup/output\n        out: [alignments_with_index]\n    \n    ### Deeptools analyses ###\n    ### Create multibam file ###\n    multiBamSummary_file:\n        run: ../wrappers/multiBamSummary.cwl\n        in: \n            bam: samtools_index/alignments_with_index\n            threads: multiBamSummary_threads\n            blackListFileName: blackListFile\n        out: [outNpz]\n    ### Plot heatmap ###\n    plotCorrelation_file:\n        run: ../wrappers/plotCorrelation.cwl\n        in: \n            input: multiBamSummary_file/outNpz\n            numbers: plotCorrelation_numbers\n            method: plotCorrelation_method\n            color: plotCorrelation_color\n            title: plotCorrelation_title\n            plotType: plotCorrelation_plotType\n            outFileName: plotCorrelation_outFileName\n        out: [outImage]\n    ## Plot read coverage ###\n    plotCoverage_file:\n        run: ../wrappers/plotCoverage.cwl\n        in:\n            bam: samtools_index/alignments_with_index\n            threads: plotCoverage_threads\n            skipZeros: \n                valueFrom: $( true )\n            plotFileFormat: plotCoverage_plotFileFormat\n            outFileName: plotCoverage_outFileName\n            blackListFileName: blackListFile\n        out: [outImage]\n    ### Plot fingerprint ###\n    plotFingerprint_file:\n        run: ../wrappers/plotFingerprint.cwl\n        in:\n            bam: samtools_index/alignments_with_index\n            threads: plotFingerprint_threads\n            plotFileFormat: plotFingerprint_plotFileFormat\n            outFileName: plotFingerprint_outFileName\n            blackListFileName: blackListFile\n        out: [outImage]\n    ### Convert bam to bigwig and normalize ###\n    # Normalize using BPM (bins per million mapped reads) OR\n    # Normalize using RPGC (reads per genome coverage, effective genome size MM10) OR\n    # Normalize using RPKM (reads Per Kilobase per Million mapped reads)\n    bamCoverage_norm:\n        run: ../wrappers/bamCoverage.cwl\n        scatter: \n            - bam\n        in: \n            bam: samtools_index/alignments_with_index\n            effective_genome_size: bamCoverage_effective_genome_size\n            normalizeUsing: bamCoverage_normalizeUsing\n            extendReads: bamCoverage_extendReads\n            threads: bamCoverage_threads\n            blackListFileName: blackListFile\n        out: [bigwig]\n    ### Computematrix ###\n    computeMatrix:\n        run: ../wrappers/computeMatrix.cwl\n        in: \n            bw: bamCoverage_norm/bigwig\n            regions: computeMatrix_regions\n            threads: computeMatrix_threads\n            upstream: computeMatrix_upstream\n            downstream: computeMatrix_downstream\n            outputFile: computeMatrix_outputFile\n            outFileSortedRegions: computeMatrix_outFileSortedRegions\n            blackListFileName: blackListFile\n        out: [outMatrix, outRegions]\n    ### Plot heatmap ###\n    plotHeatmap:\n        run: ../wrappers/plotHeatmap.cwl\n        in:\n            matrix: computeMatrix/outMatrix\n            plotFileFormat: plotHeatmap_plotFileFormat\n            outputFile: plotHeatmap_outputFile\n        out: [outHeatmap]\n    \n    ### PEAK CALLING ###\n    ### Separate control and treatment samples for MACS2 ###\n    separate_control_treatment_files:\n        run: ../wrappers/separate_control_treatment_files.cwl\n        in: \n            treatment_samples: input_treatment_samples\n            control_samples: input_control_samples\n            aligned_files: samtools_index/alignments_with_index\n        out:\n        - treatment_files\n        - control_files\n    ### Call peaks ###\n    macs2_call_peaks:\n        run: ../wrappers/macs2-callpeak.cwl\n        in:\n            bdg: macs2_callpeak_bdg\n            treatment: separate_control_treatment_files/treatment_files\n            control: separate_control_treatment_files/control_files\n            f: macs2_callpeak_format\n            gsize: macs2_callpeak_gsize\n            broad: macs2_callpeak_broad\n            # --nomodel, --shift, --extsize\n            nomodel: macs2_callpeak_nomodel\n            shift: macs2_shift\n            extsize: macs2_extsize\n            # p-/q-values\n            p: macs2_pvalue\n            q: macs2_qvalue\n        scatter:\n        - treatment\n        - control\n        scatterMethod: dotproduct\n        out:\n        - narrowPeak\n        - xls\n        - bed\n        - lambda\n        - pileup\n        - broadPeak\n        - gappedPeak\n        - model_r\n        - cutoff\n    \n    ### Create consensus peaks and table with counts for custom analyses ###\n    ### Create table with total peaks ###\n    total_peaks_table:\n        run: ../wrappers/table_total_peaks.cwl\n        in: \n            input: macs2_call_peaks/narrowPeak\n            consensus_bed:\n                valueFrom: $( \"narrowPeaks_consensus.bed\" )\n        out: [output]\n    ### Sort peaks ###\n    sort_peaks_table:\n        run: ../wrappers/sort.cwl\n        in: \n            input: total_peaks_table/output\n            key1: \n                valueFrom: $(\"1,1\")\n            key2: \n                valueFrom: $(\"2,2n\")\n            output_name:\n                valueFrom: $( \"narrowPeaks_consensus_sorted.bed\" )\n        out: [output]\n    ### Intersect peaks to consensus ###\n    bedtools_merge:\n        run: ../wrappers/bedtools-merge.cwl\n        in: \n            input: sort_peaks_table/output\n            output_name:\n                valueFrom: $( \"narrowPeaks_consensus_merged.bed\" )\n        out: [output]\n    ### Exclude blacklisted regions ###\n    exclude_black_list_regions:\n        run: ../wrappers/bedtools-intersect.cwl\n        in:\n            feature_a: bedtools_merge/output\n            feature_b: blackListFile\n            no_overlap: \n                valueFrom: $( true )\n            outputFile:\n                valueFrom: $( \"narrowPeaks_consensus_filtered.bed\" )\n        out: [output]\n    ### Calculate read coverage for every peak on the consensus ###\n    bedtools_coverage:\n        run: ../wrappers/bedtools-coverage.cwl\n        scatter: \n        - input_file\n        in: \n            reference_file: exclude_black_list_regions/output\n            input_file: separate_control_treatment_files/treatment_files\n            count_of_overlaps: \n                valueFrom: $( true )\n        out: [output]\n    extract_counts: \n        run: ../wrappers/awk.cwl\n        scatter: \n         - input_file\n        in: \n            print: \n                valueFrom: '{print $4}'\n            input_file: bedtools_coverage/output\n            split_string: \n                valueFrom: $(\"_markdup_counts.bed\")\n            output_suffix: \n                valueFrom: $(\".count\")\n        out: [output]\n    extract_peaks:\n        run: ../wrappers/awk.cwl\n        in:",
    "p_tag_content": "A CWL-based pipeline for processing ChIP-Seq data (FASTQ format) and performing: On the respective GitHub folder are available: Briefly, the workflow performs the following steps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/525?version=1 DOI:10.48546/workflowhub.workflow.525.1 Initial commit Views:1462Downloads:219 Created: 5th Jul 2023 at 10:39 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 179,
    "discussion_links": [],
    "title": "CWL-based (multi-sample) workflow for germline variant calling",
    "license": "MIT",
    "description": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. \n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers and subworkflows for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. Mapping to reference genome (BWA-MEM)\n4. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n5. Sorting mapped reads based on read names (samtools)\n6. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n7. Re-sorting mapped reads based on chromosomal coordinates (samtools)\n8. Adding basic Read-Group information regarding sample name, platform unit, platform (e.g., ILLUMINA), library and identifier (picard AddOrReplaceReadGroups)\n9. Marking PCR and/or optical duplicate reads (picard MarkDuplicates)\n10. Collection of summary statistics (samtools) \n11. Creation of indexes for coordinate-sorted BAM files to enable fast random access (samtools)\n12. Splitting the reference genome into a predefined number of intervals for parallel processing (GATK SplitIntervals)\n\nAt this point the application of multi-sample workflow follows, during which multiple samples are concatenated into a single, unified VCF (Variant Calling Format) file, which contains the variant information for all samples:\n\n13. Application of Base Quality Score Recalibration (BQSR) (GATK BaseRecalibrator and ApplyBQSR tools)\n14. Variant calling in gVCF (genomic VCF) mode (-ERC GVCF) (GATK HaplotypeCaller)  \n15. Merging of all genomic interval-split gVCF files for each sample (GATK MergeVCFs)\n16. Generation of the unified VCF file (GATK CombineGVCFs and GenotypeGVCFs tools)\n17. Separate annotation for SNP and INDEL variants, using the Variant Quality Score Recalibration (VQSR) method (GATK VariantRecalibrator and ApplyVQSR tools)\n18. Variant filtering based on the information added during VQSR and/or custom filters (bcftools)\n19. Normalization of INDELs (split multiallelic sites) (bcftools)\n20. Annotation of the final dataset of filtered variants with genomic, population-related and/or clinical information (ANNOVAR)",
    "latest_version": 1,
    "tags": "['CWL', 'Genomics', 'Germline', 'variant calling', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/526?version=1', 'commit': 'aceb8de8d16de7b17acdd51a11c61939b4216068', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/526/git/1/tree', 'doi': '10.48546/workflowhub.workflow.526.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:44:42.000Z",
    "updated_at": "2023-07-05T09:45:12.000Z",
    "doi": "10.48546/workflowhub.workflow.526.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Variant calling', 'identifier': 'http://edamontology.org/operation_3227'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 526,
    "text_field": "['gatk_multi-sample_bqsr_vqsr.cwl']",
    "raw_text_content": "class: Workflow\n\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n  - class: SubworkflowFeatureRequirement\n\ninputs:\n    ### Directory with fastq(.gz) input files ###\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Trim galore inputs ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_strigency: int\n    tg_trim_suffix: string\n    ### Reference genome inputs ###\n    reference_genome:\n        type: File\n        secondaryFiles:\n            - .amb\n            - .ann\n            - .bwt\n            - .pac\n            - .sa\n            - .fai\n            - ^.dict\n    ### BWA MEM inputs ###\n    bwa_mem_sec_shorter_split_hits:\n        type: boolean\n        default: true\n    bwa_mem_num_threads:\n        type: int\n        default: 16\n    ### SAMtools inputs ###\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_readswithoutbits:\n        type: int\n        default: 0 # 2308\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?\n    samtools_view_target_bed_file: \n        type: File?\n    samtools_fixmate_threads:\n        type: int\n        default: 16\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n        default: 16\n    samtools_sort_memory:\n        type: string?\n    samtools_flagstat_threads:\n        type: int?\n        default: 16\n    ### Picard AddOrReplaceReadGroups inputs ###\n    # picard_addorreplacereadgroups_rglb:\n    #     type: string?\n    picard_addorreplacereadgroups_rgpl:\n        type: string?\n    ### GATK - SplitIntervals inputs ###\n    gatk_splitintervals_include_intervalList:\n        type: File?\n    gatk_splitintervals_exclude_intervalList: \n        type: File?\n    gatk_splitintervals_scatter_count:\n        type: int\n    ### GATK - BQSR inputs ###\n    # files associated to known variations\n    sub_bqsr_known_sites_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_interval_padding:\n        type: int?\n    sub_bqsr_hc_native_pairHMM_threads:\n        type: int?\n    sub_bqsr_hc_java_options: \n        type: string?\n    ### GATK - VariantRecalibrator inputs ###\n    VariantRecalibrator_use_annotation: \n        type: string[]\n    VariantRecalibrator_trust_all_polymorphic:\n        type: boolean?\n    # INDELs\n    VariantRecalibrator_truth_sensitivity_trance_indels:\n        type: float[]?\n    vqsr_arguments_indels_1:\n        type: string\n    vqsr_known_sites_indels_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_indels_2:\n        type: string?\n    vqsr_known_sites_indels_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_indels_3:\n        type: string?\n    vqsr_known_sites_indels_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    # SNPs\n    VariantRecalibrator_truth_sensitivity_trance_snps:\n        type: float[]?\n    vqsr_arguments_snps_1:\n        type: string\n    vqsr_known_sites_snps_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_2:\n        type: string?\n    vqsr_known_sites_snps_2:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_3:\n        type: string?\n    vqsr_known_sites_snps_3:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    vqsr_arguments_snps_4:\n        type: string?\n    vqsr_known_sites_snps_4:\n        type: File?\n        secondaryFiles: \n            - .tbi\n    ### GATK - ApplyVQSR inputs ###\n    ApplyVQSR_ts_filter_level:\n        type: float?\n    ### bcftools view inputs ###\n    bcftools_view_include_VQSR_filters:\n        type: string\n    bcftools_view_threads:\n        type: int?\n    ### bcftools norm inputs ###\n    bcftools_norm_threads:\n        type: int?\n    bcftools_norm_multiallelics: \n        type: string\n        default: \"-both\"\n    ### ANNOVAR - table_annovar.pl inputs ###\n    table_annovar_database_location:\n        type: Directory\n    table_annovar_build_over:\n        type: string\n    table_annovar_remove:\n        type: boolean?\n    table_annovar_protocol:\n        type: string\n    table_annovar_operation:\n        type: string\n    table_annovar_na_string:\n        type: string?\n    table_annovar_vcfinput:\n        type: boolean\n    table_annovar_otherinfo:\n        type: boolean?\n    table_annovar_convert_arg:\n        type: string?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### BWA MEM outputs ###\n    o_bwa_mem_single:\n        type: File[]\n        outputSource: bwa_mem_single/output\n    o_bwa_mem_paired:\n        type: File[]\n        outputSource: bwa_mem_paired/output\n    o_gather_bwa_sam_files:\n        type: File[]\n        outputSource: gather_bwa_sam_files/total_sam_files\n    ### SAMtools outputs ###\n    o_samtools_view_conversion:\n        type: File[]\n        outputSource: samtools_view_conversion/output\n    samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    ### Picard tool outputs ###\n    o_picard_addorreplacereadgroups:\n        type: File[]\n        outputSource: picard_addorreplacereadgroups/output\n    o_picard_markduplicates:\n        type: File[]\n        outputSource: picard_markduplicates/output\n    o_picard_markduplicates_metrics:\n        type: File[]\n        outputSource: picard_markduplicates/output_report\n    ### SAMtools outputs ###\n    o_samtools_flagstat:\n        type: File[]\n        outputSource: samtools_flagstat/output\n    o_samtools_view_count_total:\n        type: File[]\n        outputSource: samtools_view_count_total/output\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    ### GATK SplitIntervals outputs ###\n    o_gatk_splitintervals:\n        type: File[]\n        outputSource: gatk_splitintervals/intervalfiles\n    ### GATK - BQSR outputs ###\n    o_gatk_bqsr_subworkflowbqsr_tables:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_baserecalibrator_table\n    o_gatk_bqsr_subworkflowbqsr_bqsr_bam:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_applybqsr\n    o_gatk_bqsr_subworkflowbqsr_hc:\n        type: {\n            \"type\": \"array\", \n            \"items\":{\"type\": \"array\", \"items\": \"File\"}\n            }\n        outputSource: gatk_bqsr_subworkflow/o_gatk_HaplotypeCaller\n    o_gatk_bqsr_subworkflowbqsr_mergevcfs:\n        type: File[]\n        outputSource: gatk_bqsr_subworkflow/o_gatk_MergeVCFs\n    ### GATK - CombineGVCFs outputs ###\n    o_gatk_CombineGVCFs:\n        type: File\n        outputSource: gatk_CombineGVCFs/output\n    ### GATK - GenotypeGVCFs outputs ###\n    o_gatk_GenotypeGVCFs:\n        type: File\n        outputSource: gatk_GenotypeGVCFs/output\n    ### GATK - MakeSitesOnlyVcf ###\n    o_gatk_MakeSitesOnlyVcf:\n        type: File\n        outputSource: gatk_MakeSitesOnlyVcf/output\n    ### GATK - VariantRecalibrator ###\n    o_gatk_VariantRecalibrator_indel_recal:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_indel/recal_table\n    o_gatk_VariantRecalibrator_indel_tranches:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_indel/tranches_file\n    o_gatk_VariantRecalibrator_snp_recal:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_snp/recal_table\n    o_gatk_VariantRecalibrator_snp_tranches:\n        type: File[]\n        outputSource: gatk_VariantRecalibrator_snp/tranches_file\n    ### GATK - ApplyVQSR ###\n    o_gatk_ApplyVQSR_indel:\n        type: File[]\n        outputSource: gatk_ApplyVQSR_indel/output\n    o_gatk_ApplyVQSR_snp:\n        type: File[]\n        outputSource: gatk_ApplyVQSR_snp/output\n    \n    ### MergeVCFs ###\n    o_gatk_VQSR_MergeVCFs:\n        type: File\n        outputSource: gatk_VQSR_MergeVCFs/output\n    # ### VQSR filtered VCF files - PASS only ###\n    o_bcftools_view_filter_vqsr:\n        type: File\n        outputSource: bcftools_view_filter_vqsr/output\n    ### bcftools norm for INDELs ###\n    o_bcftools_norm_vqsr:\n        type: File\n        outputSource: bcftools_norm_vqsr/output   \n    ### ANNOVAR outputs ###\n    o_table_annovar_filtered_multianno_vcf:\n        type: File\n        outputSource: table_annovar_filtered/multianno_vcf\n    o_table_annovar_filtered_multianno_txt:\n        type: File\n        outputSource: table_annovar_filtered/multianno_txt\n    o_table_annovar_filtered_avinput:\n        type: File\n        outputSource: table_annovar_filtered/avinput\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n    ### Trim_galore ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files to directory - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file    \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired: split_single_paired/paired_files\n            trimming_single: trim_galore_single/trim_galore\n            trimming_paired: trim_galore_paired/trim_galore\n        out:\n        - single_files\n        - paired_files\n    ### Collect flowcell ID and lane information - Single end ###\n    rg_extraction_single:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: check_trimming/single_files\n        out: [rg_information]\n    ### bwa mem - Single end ###\n    bwa_mem_single:\n        run: ../wrappers/bwa-mem.cwl\n        scatter:\n        - trimmed_fq_read1\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            trimmed_fq_read1: check_trimming/single_files\n        out: [output]\n    ### Split forward and reverse read files ###\n    split_paired_read1_read2:\n        run: ../wrappers/split-paired-read1-read2.cwl\n        in:\n            paired_files: check_trimming/paired_files\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: [reads_1, reads_2]\n    ### Collect flowcell ID and lane information - Paired end ###\n    rg_extraction_paired:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: split_paired_read1_read2/reads_1\n        out: [rg_information]\n    ### bwa mem - Paired end ###\n    bwa_mem_paired:\n        run: ../wrappers/bwa-mem.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        - trimmed_fq_read2\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            trimmed_fq_read1: split_paired_read1_read2/reads_1\n            trimmed_fq_read2: split_paired_read1_read2/reads_2\n        out: [output]\n    ### Collect and output all SAM files & generate filenames for next steps ###\n    gather_bwa_sam_files:\n        run: ../wrappers/gather-bwa-sam-files.cwl\n        in: \n            single_files: bwa_mem_single/output\n            paired_files: bwa_mem_paired/output\n            single_files_rg_info: rg_extraction_single/rg_information\n            paired_files_rg_info: rg_extraction_paired/rg_information\n        out: [total_sam_files,\n              names_rgids,\n              names_rgpus,\n              names_rgplbs]\n    ### samtools view - SAM to BAM conversion ###\n    # options for filtering out based on SAM FLAG fields:\n    # read unmapped (0x4)\n    # not primary alignment (0x100)\n    # supplementary alignment (0x800)\n    samtools_view_conversion:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            input: gather_bwa_sam_files/total_sam_files\n            isbam:\n                valueFrom: $( true )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            readsquality: samtools_view_readsquality\n            ### \n            # keep or remove reads based on SAM FLAG values:\n            readswithbits: samtools_view_readswithbits\n            readswithoutbits: samtools_view_readswithoutbits\n            ###\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".sam\")[0].concat(\".bam\") )\n            # (optional) filter also with genomics coordinates:\n            target_bed_file: samtools_view_target_bed_file\n        out: [output]\n    ### samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view_conversion/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n             valueFrom: $( true )\n        out: [sorted]\n    ### samtools fixmate – fills in mate coordinates and insert size fields ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted\n            output_file_name: \n                valueFrom: $( inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\".fixed.bam\") )\n        out: [output]\n    ### samtools sort by chromosomal coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_fixmate/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.bam\")[0].concat(\".fixed.sorted.bam\") )\n        out: [sorted]\n    ### Picard AddOrReplaceReadGroups ###\n    picard_addorreplacereadgroups:\n        run: ../wrappers/picard-AddOrReplaceReadGroups.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - INPUT\n        - rgid\n        - rgpu\n        - rglb\n        in: \n            INPUT: samtools_sort/sorted \n            OUTPUT: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0].concat(\".fixed.sorted.uniq.rg.bam\") )\n            rgid: gather_bwa_sam_files/names_rgids\n            rglb: gather_bwa_sam_files/names_rgplbs\n            rgpl: picard_addorreplacereadgroups_rgpl \n            rgpu: gather_bwa_sam_files/names_rgpus\n            rgsm: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0] )\n        out: [output]\n    ### Picard MarkDuplicates ###\n    picard_markduplicates:\n        run: ../wrappers/picard-MarkDuplicates.cwl\n        scatter: \n        - INPUT\n        in:\n            INPUT: picard_addorreplacereadgroups/output\n            OUTPUT: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".fixed.sorted.uniq.rg.md.bam\") )\n            METRICS_FILE: \n                valueFrom: $( inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".md_metrics.txt\") )\n        out: [output, output_report]\n    ### samtools flagstat – counts the number of alignments for each FLAG type ###\n    samtools_flagstat:\n        run: ../wrappers/samtools-flagstat.cwl\n        scatter:\n        - input\n        in:\n            threads: samtools_flagstat_threads\n            input: picard_markduplicates/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".align.stats.txt\") )\n        out: [output]\n    ### samtools view - print only alignment counts ###\n    samtools_view_count_total:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam: \n                valueFrom: $( false )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: picard_markduplicates/output\n            readsquality: samtools_view_readsquality\n            # readswithbits: samtools_view_readswithbits\n            # readswithoutbits: samtools_view_readswithoutbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: \n                default: true\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".count.total.txt\") )\n            # target_bed_file: samtools_view_target_bed_file\n        out: [output]\n    ### GATK SplitIntervals ###\n    gatk_splitintervals:\n        run: ../wrappers/gatk-SplitIntervals.cwl\n        in:\n            reference: reference_genome\n            include_intervalList: gatk_splitintervals_include_intervalList\n            exclude_intervalList: gatk_splitintervals_exclude_intervalList\n            scatter_count: gatk_splitintervals_scatter_count\n        out: [intervalfiles]\n    ### samtools index ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: picard_markduplicates/output\n        out: [alignments_with_index]\n    ### GATK BaseRecalibrator - subworkflow ###\n    gatk_bqsr_subworkflow:\n        run: ../workflows/gatk-bqsr-subworkflow_multiple.cwl\n        # scatterMethod: dotproduct\n        scatter: \n        - bqsr_INPUT\n        # - bqsr_OUTPUT\n        in: \n            bqsr_hc_java_options: sub_bqsr_hc_java_options \n            bqsr_INPUT: samtools_index/alignments_with_index \n            bqsr_OUTPUT: \n                valueFrom: $( inputs.bqsr_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0] )\n            bqsr_reference: reference_genome\n            bqsr_known_sites_1: sub_bqsr_known_sites_1\n            bqsr_known_sites_2: sub_bqsr_known_sites_2\n            bqsr_known_sites_3: sub_bqsr_known_sites_3\n            bqsr_intervals: gatk_splitintervals/intervalfiles\n            bqsr_interval_padding: sub_bqsr_interval_padding\n            bqsr_hc_native_pairHMM_threads: sub_bqsr_hc_native_pairHMM_threads\n        out: \n        - o_gatk_baserecalibrator_table\n        - o_gatk_applybqsr\n        - o_gatk_HaplotypeCaller\n        - o_gatk_MergeVCFs\n    ### GATK - CombineGVCFs ###\n    gatk_CombineGVCFs:\n        run: ../wrappers/gatk-CombineGVCFs.cwl\n        in: \n            reference: reference_genome\n            gvcf_files: gatk_bqsr_subworkflow/o_gatk_MergeVCFs\n            output_name:\n                valueFrom: $( \"cohort.g.vcf.gz\" )\n        out: [output]\n    ### GATK - GenotypeGVCFs ###\n    gatk_GenotypeGVCFs:\n        run: ../wrappers/gatk-GenotypeGVCFs.cwl \n        in:\n            reference: reference_genome\n            gvcf_input: gatk_CombineGVCFs/output\n            vcf_output: \n                valueFrom: $( \"cohort.genotyped.vcf.gz\" )\n        out: [output]\n    # GATK - VQSR\n    ### GATK - MakeSitesOnlyVcf ###\n    gatk_MakeSitesOnlyVcf:\n        run: ../wrappers/gatk-MakeSitesOnlyVcf.cwl \n        in: \n            INPUT: gatk_GenotypeGVCFs/output\n            OUTPUT: \n                valueFrom: $( \"cohort.genotyped.sitesonly.vcf.gz\" )\n        out: [output]\n    ### GATK - VariantRecalibrator - INDELs ###\n    gatk_VariantRecalibrator_indel:\n        run: ../wrappers/gatk-VariantRecalibrator.cwl\n        scatter: \n        - intervals\n        in: \n            truth_sensitivity_trance: VariantRecalibrator_truth_sensitivity_trance_indels\n            use_annotation: VariantRecalibrator_use_annotation\n            reference: reference_genome\n            variant: gatk_MakeSitesOnlyVcf/output\n            mode: \n                valueFrom: $( \"INDEL\" )\n            arguments_1: vqsr_arguments_indels_1\n            resource_1: vqsr_known_sites_indels_1\n            arguments_2: vqsr_arguments_indels_2\n            resource_2: vqsr_known_sites_indels_2\n            arguments_3: vqsr_arguments_indels_3\n            resource_3: vqsr_known_sites_indels_3\n            intervals: gatk_splitintervals/intervalfiles\n            trust_all_polymorphic: VariantRecalibrator_trust_all_polymorphic\n            output_name: \n                valueFrom: $( \"cohort.genotyped.indel\" )\n        out:\n        - recal_table\n        - tranches_file\n    ### GATK - VariantRecalibrator - SNPs ###\n    gatk_VariantRecalibrator_snp:\n        run: ../wrappers/gatk-VariantRecalibrator.cwl\n        scatter: \n        - intervals\n        in: \n            truth_sensitivity_trance: VariantRecalibrator_truth_sensitivity_trance_snps\n            use_annotation: VariantRecalibrator_use_annotation\n            reference: reference_genome\n            variant: gatk_MakeSitesOnlyVcf/output\n            mode: \n                valueFrom: $( \"SNP\" )\n            arguments_1: vqsr_arguments_snps_1\n            resource_1: vqsr_known_sites_snps_1\n            arguments_2: vqsr_arguments_snps_2\n            resource_2: vqsr_known_sites_snps_2\n            arguments_3: vqsr_arguments_snps_3\n            resource_3: vqsr_known_sites_snps_3\n            arguments_4: vqsr_arguments_snps_4\n            resource_4: vqsr_known_sites_snps_4\n            intervals: gatk_splitintervals/intervalfiles\n            trust_all_polymorphic: VariantRecalibrator_trust_all_polymorphic\n            output_name: \n                valueFrom: $( \"cohort.genotyped.snp\" )\n        out:\n        - recal_table\n        - tranches_file\n    ### GATK - ApplyVQSR - INDELs ###\n    gatk_ApplyVQSR_indel: \n        run: ../wrappers/gatk-ApplyVQSR.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - recal_file\n        - tranches_file\n        - intervals\n        in:\n            reference: reference_genome\n            variant: gatk_GenotypeGVCFs/output\n            ts_filter_level: ApplyVQSR_ts_filter_level\n            recal_file: gatk_VariantRecalibrator_indel/recal_table\n            tranches_file: gatk_VariantRecalibrator_indel/tranches_file\n            intervals: gatk_splitintervals/intervalfiles\n            mode:\n                valueFrom: $( \"INDEL\" )\n            output_name: \n                valueFrom: $( \"indel.recalibrated\" )\n        out: [output]\n    ### GATK - ApplyVQSR - SNPs ###\n    gatk_ApplyVQSR_snp: \n        run: ../wrappers/gatk-ApplyVQSR.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - variant\n        - recal_file\n        - tranches_file\n        - intervals\n        in:\n            reference: reference_genome\n            variant: gatk_ApplyVQSR_indel/output\n            ts_filter_level: ApplyVQSR_ts_filter_level\n            recal_file: gatk_VariantRecalibrator_snp/recal_table\n            tranches_file: gatk_VariantRecalibrator_snp/tranches_file\n            intervals: gatk_splitintervals/intervalfiles\n            mode:\n                valueFrom: $( \"SNP\" )\n            output_name: \n                valueFrom: $( \"snp.recalibrated\" )\n        out: [output]\n    gatk_VQSR_MergeVCFs:\n        run: ../wrappers/gatk-MergeVCFs_vqsr.cwl\n        in:\n            INPUT: gatk_ApplyVQSR_snp/output\n            OUTPUT: \n                valueFrom: $( \"cohort.snp.indel.vqsr.recalibrated\" )\n        out: [output]\n    ### bcftools view - filter variants ###\n    bcftools_view_filter_vqsr:\n        run: ../wrappers/bcftools-view.cwl\n        in: \n            input: gatk_VQSR_MergeVCFs/output\n            threads: bcftools_view_threads\n            include: bcftools_view_include_VQSR_filters\n            output_type: \n                valueFrom: $( \"z\" )\n            output_name:\n                valueFrom: $(\"cohort.snp.indel.vqsr.recalibrated.filtered.vcf.gz\")\n        out: [output]\n    ### bcftools norm ###\n    bcftools_norm_vqsr:\n        run: ../wrappers/bcftools-norm.cwl\n        in: \n            input: gatk_VQSR_MergeVCFs/output\n            threads: bcftools_norm_threads\n            reference: reference_genome\n            multiallelics: bcftools_norm_m",
    "p_tag_content": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: At this point the application of multi-sample workflow follows, during which multiple samples are concatenated into a single, unified VCF (Variant Calling Format) file, which contains the variant information for all samples: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/526?version=1 DOI:10.48546/workflowhub.workflow.526.1 Initial commit Views:1525Downloads:178 Created: 5th Jul 2023 at 10:44 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 180,
    "discussion_links": [],
    "title": "CWL-based (single-sample) workflow for germline variant calling",
    "license": "MIT",
    "description": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments.\n\nOn the respective GitHub folder are available:\n\n- The CWL wrappers and subworkflows for the workflow\n- A pre-configured YAML template, based on validation analysis of publicly available HTS data\n\nBriefly, the workflow performs the following steps:\n\n1. Quality control of Illumina reads (FastQC)\n2. Trimming of the reads (e.g., removal of adapter and/or low quality sequences) (Trim galore)\n3. Mapping to reference genome (BWA-MEM)\n4. Convertion of mapped reads from SAM (Sequence Alignment Map) to BAM (Binary Alignment Map) format (samtools)\n5. Sorting mapped reads based on read names (samtools)\n6. Adding information regarding paired end reads (e.g., CIGAR field information) (samtools)\n7. Re-sorting mapped reads based on chromosomal coordinates (samtools)\n8. Adding basic Read-Group information regarding sample name, platform unit, platform (e.g., ILLUMINA), library and identifier (picard AddOrReplaceReadGroups)\n9. Marking PCR and/or optical duplicate reads (picard MarkDuplicates)\n10. Collection of summary statistics (samtools) \n11. Creation of indexes for coordinate-sorted BAM files to enable fast random access (samtools)\n12. Splitting the reference genome into a predefined number of intervals for parallel processing (GATK SplitIntervals)\n\nAt this point the application of single-sample workflow follows, during which multiple samples are accepted as input and they are not merged into a unified VCF file but are rather processed separately in each step of the workflow, leading to the production of a VCF file for each sample:\n\n13. Application of Base Quality Score Recalibration (BQSR) (GATK BaseRecalibrator, GatherBQSRReports and ApplyBQSR tools)\n14. Variant calling (GATK HaplotypeCaller)  \n15. Merging of all genomic interval-split gVCF files for each sample (GATK MergeVCFs)\n16. Separate annotation of SNPs and INDELs based on pretrained Convolutional Neural Network (CNN) models (GATK SelectVariants, CNNScoreVariants and FilterVariantTranches tools)\n17. (Optional) Independent step of hard-filtering (GATK VariantFiltration)\n18. Variant filtering based on the information added during VQSR and/or custom filters (bcftools)\n19. Normalization of INDELs (split multiallelic sites) (bcftools)\n20. Annotation of the final dataset of filtered variants with genomic, population-related and/or clinical information (ANNOVAR)",
    "latest_version": 1,
    "tags": "['CWL', 'Genomics', 'Germline', 'variant calling', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/527?version=1', 'commit': 'be8c585e8676f30e2626c6b3ad92fc6f93648cf3', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/527/git/1/tree', 'doi': '10.48546/workflowhub.workflow.527.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-07-05T09:48:09.000Z",
    "updated_at": "2023-07-05T09:49:33.000Z",
    "doi": "10.48546/workflowhub.workflow.527.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/515', 'family_name': 'Kyritsis', 'given_name': 'Konstantinos', 'affiliation': 'Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH)', 'orcid': 'https://orcid.org/0000-0001-8035-341X'}, {'profile': None, 'family_name': 'Pechlivanis', 'given_name': 'Nikolaos', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0003-2502-612X'}, {'profile': None, 'family_name': 'Psomopoulos', 'given_name': 'Fotis', 'affiliation': 'Institute of Applied Biosciences (INAB), Centre for Research and Technology Hellas (CERTH)', 'orcid': 'https://orcid.org/0000-0002-0222-4273'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Variant calling', 'identifier': 'http://edamontology.org/operation_3227'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}]",
    "internals": "",
    "tools": [],
    "id": 527,
    "text_field": "['gatk_single-sample_bqsr_cnn_hard-filtering.cwl']",
    "raw_text_content": "class: Workflow\n\ncwlVersion: v1.0\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n  - class: SubworkflowFeatureRequirement\n\ninputs:\n    # Directory with fastq(.gz) input files\n    raw_files_directory:\n        type: Directory\n    ### FASTQ file split ###\n    input_file_split:\n        type: string?\n        default: \"_R\"\n    input_file_split_fwd_single:\n        type: string?\n        default: \"R1\"\n    input_file_split_rev:\n        type: string?\n        default: \"R2\"\n    ### QC and trimming options ###\n    input_qc_check: \n        type: boolean?\n        default: true\n    input_trimming_check:\n        type: boolean?\n        default: true\n    ### Trim galore inputs ###\n    tg_quality: int\n    tg_length: int\n    tg_compression: boolean\n    tg_do_not_compress: boolean\n    tg_strigency: int\n    tg_trim_suffix: string\n    ### Reference genome inputs ###\n    reference_genome:\n        type: File\n        secondaryFiles:\n            - .amb\n            - .ann\n            - .bwt\n            - .pac\n            - .sa\n            - .fai\n            - ^.dict\n    ### BWA MEM inputs ###\n    bwa_mem_sec_shorter_split_hits:\n        type: boolean\n        default: true\n    bwa_mem_num_threads:\n        type: int\n        default: 16\n    ### SAMtools inputs ###\n    samtools_view_uncompressed:\n        type: boolean\n        default: false\n    samtools_view_collapsecigar:\n        type: boolean\n        default: false\n    samtools_view_readswithoutbits:\n        type: int\n        default: 0x904\n    samtools_view_fastcompression:\n        type: boolean\n        default: false\n    samtools_view_samheader:\n        type: boolean\n        default: false\n    samtools_view_count:\n        type: boolean\n        default: false\n    samtools_view_readsingroup:\n        type: string?\n    samtools_view_readtagtostrip:\n        type: string[]?\n    samtools_view_readsquality:\n        type: int?\n    samtools_view_readswithbits:\n        type: int?\n    samtools_view_cigar:\n        type: int?\n    samtools_view_iscram:\n        type: boolean\n        default: false\n    samtools_view_threads:\n        type: int?\n    samtools_view_randomseed:\n        type: float?\n    samtools_view_region:\n        type: string?\n    samtools_view_readsinlibrary:\n        type: string?  \n    samtools_fixmate_threads:\n        type: int\n        default: 16\n    samtools_fixmate_output_format:\n        type: string\n        default: bam\n    samtools_sort_compression_level:\n        type: int?\n    samtools_sort_threads:\n        type: int?\n        default: 16\n    samtools_sort_memory:\n        type: string?\n    samtools_flagstat_threads:\n        type: int?\n        default: 16\n    ### Picard AddOrReplaceReadGroups inputs ###\n    # picard_addorreplacereadgroups_rglb:\n    #     type: string?\n    picard_addorreplacereadgroups_rgpl:\n        type: string?\n    ### GATK - SplitIntervals ###\n    gatk_splitintervals_include_intervalList:\n        type: File?\n    gatk_splitintervals_exclude_intervalList: \n        type: File?\n    gatk_splitintervals_scatter_count:\n        type: int\n    ### GATK - BQSR inputs ###\n    sub_bqsr_known_sites_1:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_2:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_known_sites_3:\n        type: File\n        secondaryFiles: \n            - .tbi\n    sub_bqsr_interval_padding:\n        type: int?\n    ### GATK - Apply-BQSR inputs ###\n    ### GATK HaplotypeCaller inputs ###\n    sub_hc_native_pairHMM_threads:\n        type: int?  \n    sub_hc_java_options:\n        type: string?\n    ### GATK SelectVariants inputs ###\n    ### GATK VariantFiltration inputs ###\n    VariantFiltration_window:\n        type: int\n        default: 0\n    VariantFiltration_cluster:\n        type: int\n        default: 3\n    # SNPs\n    VariantFiltration_filter_name_snp:\n        type:\n            type: array\n            items: string\n    VariantFiltration_filter_snp:\n        type:\n            type: array\n            items: string\n    # INDELs\n    VariantFiltration_filter_name_indel:\n        type:\n            type: array\n            items: string\n    VariantFiltration_filter_indel:\n        type:\n            type: array\n            items: string\n    ### GATK CNNScoreVariants inputs ###\n    ### GATK FilterVariantTranches inputs ###\n    FilterVariantTranches_resource_1:\n        type: File\n        secondaryFiles: \n        - .tbi\n    FilterVariantTranches_resource_2:\n        type: File?\n        secondaryFiles: \n        - .tbi\n    FilterVariantTranches_resource_3:\n        type: File?\n        secondaryFiles: \n        - .tbi\n    ### bcftools view inputs ###\n    bcftools_view_include_hard_filters:\n        type: string\n    bcftools_view_include_CNN_filters:\n        type: string\n    bcftools_view_threads:\n        type: int\n    ### bcftools norm inputs ###\n    bcftools_norm_threads:\n        type: int?\n    bcftoomls_norm_multiallelics: \n        type: string\n        default: \"-both\"\n    ### ANNOVAR table_annovar.pl inputs ###\n    table_annovar_database_location:\n        type: Directory\n    table_annovar_build_over:\n        type: string\n    table_annovar_remove:\n        type: boolean?\n    table_annovar_protocol:\n        type: string\n    table_annovar_operation:\n        type: string\n    table_annovar_na_string:\n        type: string?\n    table_annovar_vcfinput:\n        type: boolean\n    table_annovar_otherinfo:\n        type: boolean?\n    table_annovar_convert_arg:\n        type: string?\n\noutputs:\n    ### Trim_galore outputs ###\n    o_trim_galore_single_fq:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore\n    o_trim_galore_single_reports:\n        type: File[]\n        outputSource: trim_galore_single/trim_galore_report\n    o_trim_galore_paired_fq:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore\n    o_trim_galore_paired_reports:\n        type: File[]\n        outputSource: trim_galore_paired/trim_galore_report\n    ### FASTQC outputs ###\n    # HTML\n    o_fastqc_raw_html:\n        type: File[]?\n        outputSource: rename_fastqc_raw_html/renamed_file\n    o_fastqc_single_html:\n        type: File[]?\n        outputSource: rename_fastqc_single_html/renamed_file\n    o_fastqc_paired_html:\n        type: File[]?\n        outputSource: rename_fastqc_paired_html/renamed_file\n    # ZIP\n    o_fastqc_raw_zip:\n        type: Directory?\n        outputSource: cp_fastqc_raw_zip/output_dir\n    o_fastqc_single_zip:\n        type: Directory?\n        outputSource: cp_fastqc_single_zip/output_dir\n    o_fastqc_paired_zip:\n        type: Directory?\n        outputSource: cp_fastqc_paired_zip/output_dir\n    ### SAMtools outputs ###\n    o_gather_bwa_sam_files:\n        type: File[]\n        outputSource: gather_bwa_sam_files/total_sam_files\n    o_samtools_view_conversion:\n        type: File[]\n        outputSource: samtools_view_conversion/output\n    o_samtools_sort_by_name:\n        type: File[]\n        outputSource: samtools_sort_by_name/sorted\n    o_samtools_fixmate:\n        type: File[]\n        outputSource: samtools_fixmate/output\n    o_samtools_sort:\n        type: File[]\n        outputSource: samtools_sort/sorted\n    o_picard_addorreplacereadgroups:\n        type: File[]\n        outputSource: picard_addorreplacereadgroups/output\n    o_picard_markduplicates:\n        type: File[]\n        outputSource: picard_markduplicates/output\n    o_picard_markduplicates_metrics:\n        type: File[]\n        outputSource: picard_markduplicates/output_report\n    o_samtools_flagstat:\n        type: File[]\n        outputSource: samtools_flagstat/output\n    o_samtools_view_count_total:\n        type: File[]\n        outputSource: samtools_view_count_total/output\n    o_samtools_index:\n        type: File[]\n        outputSource: samtools_index/alignments_with_index\n    o_gatk_bqsr_subworkflow:\n        type: File[]\n        outputSource: gatk_bqsr_subworkflow/o_gatk_gatherbqsrreports\n    o_gatk_ApplyBQSR:\n        type: File[]\n        outputSource: gatk_applybqsr/output\n    o_samtools_index_2:\n        type: File[]\n        outputSource: samtools_index_2/alignments_with_index\n    # GATK SplitIntervals outputs\n    o_gatk_splitintervals:\n        type: File[]\n        outputSource: gatk_splitintervals/intervalfiles\n    ### VCF output files ###\n    # Raw VCF files\n    o_gatk_HaplotypeCaller:\n        type: File[]\n        outputSource: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n    # Hard-filtered SNP & INDEL VCF files\n    o_tabix_snps:\n        type: File[]\n        outputSource: tabix_snps/output\n    o_tabix_indels:\n        type: File[]\n        outputSource: tabix_indels/output\n    # Concatenated, hard-filtered VCF files with FILTER tags\n    o_bcftools_concat:\n        type: File[]\n        outputSource: bcftools_concat/output\n    # Concatenated, hard-filtered VCF files - PASS only\n    o_bcftools_view_hard_filter:\n        type: File[]\n        outputSource: bcftools_view_hard_filter/output\n    o_bcftools_norm_hard_filter:\n        type: File[]\n        outputSource: bcftools_norm_hard_filter/output\n    # CNNScoreVariants VCF files with scores\n    o_gatk_CNNScoreVariants:\n        type: File[]\n        outputSource: gatk_CNNScoreVariants/output\n    # FilterVariantTranches VCF files with FILTER tags\n    o_gatk_FilterVariantTranches:\n        type: File[]\n        outputSource: gatk_FilterVariantTranches/output\n    # CNN filtered VCF files - PASS only\n    o_bcftools_view_filter_cnn:\n        type: File[]\n        outputSource: bcftools_view_filter_cnn/output\n    o_bcftools_norm_cnn:\n        type: File[]\n        outputSource: bcftools_norm_cnn/output\n    ### ANNOVAR outputs ###\n    # CNN\n    o_table_annovar_cnn_filtered_multianno_vcf:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/multianno_vcf\n    o_table_annovar_cnn_filtered_multianno_txt:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/multianno_txt\n    o_table_annovar_cnn_filtered_avinput:\n        type: File[]\n        outputSource: table_annovar_cnn_filtered/avinput\n    # Hard filtering\n    o_table_annovar_hard_filtered_multianno_vcf:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/multianno_vcf\n    o_table_annovar_hard_filtered_multianno_txt:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/multianno_txt\n    o_table_annovar_hard_filtered_avinput:\n        type: File[]\n        outputSource: table_annovar_hard_filtered/avinput\n\nsteps:\n    ### Separate files - Generate file names (ExpressionTool) ###\n    get_raw_files:\n        run: ../wrappers/get-raw-files.cwl\n        in:\n            DIRECTORY: raw_files_directory\n        out: [raw_files]\n    ### Separate files - Generate file names (ExpressionTool) ###\n    split_single_paired:\n        run: ../wrappers/split-single-paired_v2.cwl\n        in:\n            qc_check: input_qc_check\n            trimming_check: input_trimming_check\n            input_files: get_raw_files/raw_files\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: \n            - single_files\n            - paired_files\n            - trim_galore_for_single\n            - trim_galore_for_paired\n            - fastqc_for_raw\n            - fastqc_for_single\n            - fastqc_for_paired\n            - cp_command_raw\n            - cp_command_single\n            - cp_command_paired\n    ### Trim_galore ###\n    trim_galore_single:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_single\n            fq_files: split_single_paired/single_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired: \n                valueFrom: $( false )\n        out:\n            - trim_galore\n            - trim_galore_report\n    trim_galore_paired:\n        run: ../wrappers/trim-galore.cwl\n        in:\n            command: split_single_paired/trim_galore_for_paired\n            fq_files: split_single_paired/paired_files\n            length: tg_length\n            quality: tg_quality\n            compression: tg_compression\n            do_not_compress: tg_do_not_compress\n            trim_suffix: tg_trim_suffix\n            strigency: tg_strigency\n            paired:\n                valueFrom: $( true )\n        out: \n            - trim_galore\n            - trim_galore_report\n    ### FASTQC ###\n    fastqc_raw:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_raw\n            input_files: get_raw_files/raw_files\n        out: \n            - html_file\n            - zipped_file \n    fastqc_single_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_single\n            input_files: trim_galore_single/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    fastqc_paired_trimmed:\n        run: ../wrappers/fastqc.cwl\n        in:\n            command: split_single_paired/fastqc_for_paired\n            input_files: trim_galore_paired/trim_galore\n        out:\n            - html_file\n            - zipped_file\n    ### Copy FASTQC output files - ZIP ###\n    cp_fastqc_raw_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_raw\n            input_files: fastqc_raw/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_raw_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_single_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_single\n            input_files: fastqc_single_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_single_trimmed_zip\" )\n        out:\n            - output_dir\n    cp_fastqc_paired_zip:\n        run: ../wrappers/cp.cwl\n        in:\n            command: split_single_paired/cp_command_paired\n            input_files: fastqc_paired_trimmed/zipped_file\n            outputdir:\n                valueFrom: $( \"fastqc_paired_trimmed_zip\" )\n        out:\n            - output_dir\n    ### Rename FASTQC output files - HTML ###\n    rename_fastqc_raw_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_raw/html_file\n            run_type:\n                valueFrom: $( \"fastqc_raw_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_single_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_single_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_single_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file\n    rename_fastqc_paired_html:\n        run: ../wrappers/rename.cwl\n        in:\n            input_file: fastqc_paired_trimmed/html_file\n            run_type:\n                valueFrom: $( \"fastqc_paired_trimmed_\" )\n        out:\n            - renamed_file\n        scatter:\n            - input_file    \n    ### Check for trimming option ###\n    check_trimming:\n        run: ../wrappers/check_trimming.cwl\n        in: \n            trimming_check: input_trimming_check\n            file_split: input_file_split\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n            input_single: split_single_paired/single_files\n            input_paired: split_single_paired/paired_files\n            trimming_single: trim_galore_single/trim_galore\n            trimming_paired: trim_galore_paired/trim_galore\n        out:\n        - single_files\n        - paired_files\n    ### Collect flowcell ID and lane information - Single end ###\n    rg_extraction_single:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: check_trimming/single_files\n        out: [rg_information]\n    ### BWA MEM - Single end ###\n    bwa_mem_single:\n        run: ../wrappers/bwa-mem.cwl\n        # scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            # R: \n            trimmed_fq_read1: check_trimming/single_files\n        out: [output]\n    ### Split forward and reverse read files ###\n    split_paired_read1_read2:\n        run: ../wrappers/split-paired-read1-read2.cwl\n        in:\n            paired_files: check_trimming/paired_files\n            file_split_fwd_single: input_file_split_fwd_single\n            file_split_rev: input_file_split_rev\n        out: [reads_1, reads_2]\n    ### Collect flowcell ID and lane information - Paired end ###\n    rg_extraction_paired:\n        run: ../wrappers/fastq_RG_extraction.cwl\n        scatter:\n            - input\n        in: \n            input: split_paired_read1_read2/reads_1\n        out: [rg_information]\n    ### BWA MEM - Paired end ###\n    bwa_mem_paired:\n        run: ../wrappers/bwa-mem.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - trimmed_fq_read1\n        - trimmed_fq_read2\n        in:\n            file_split: input_file_split\n            sec_shorter_split_hits: bwa_mem_sec_shorter_split_hits\n            num_threads: bwa_mem_num_threads\n            ref_genome: reference_genome\n            # R: \n            trimmed_fq_read1: split_paired_read1_read2/reads_1\n            trimmed_fq_read2: split_paired_read1_read2/reads_2\n        out: [output]\n    ### Collect and output all SAM files & generate filenames for next steps ###\n    gather_bwa_sam_files:\n        run: ../wrappers/gather-bwa-sam-files_single_v2.cwl\n        in: \n            single_files: bwa_mem_single/output\n            paired_files: bwa_mem_paired/output\n            single_files_rg_info: rg_extraction_single/rg_information\n            paired_files_rg_info: rg_extraction_paired/rg_information\n        out: [total_sam_files,\n              names_rgids,\n              names_rgpus,\n              names_rgplbs]\n    ### samtools view - SAM to BAM conversion ###\n    # options for filtering out based on SAM FLAG fields:\n    # read unmapped (0x4)\n    # not primary alignment (0x100)\n    # supplementary alignment (0x800)\n    samtools_view_conversion:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam:\n                valueFrom: $( true )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: gather_bwa_sam_files/total_sam_files\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            # filter out using SAM FLAG values:\n            readswithoutbits: samtools_view_readswithoutbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: samtools_view_count\n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: # gather_bwa_sam_files/names_bam_raw\n                valueFrom: $(inputs.input.basename.split(\".sam\")[0].concat(\".bam\"))\n        out: [output]\n    ### samtools sort by read names ###\n    samtools_sort_by_name:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_view_conversion/output\n            output_name: \n                valueFrom: $( inputs.input.basename.split(\".bam\")[0].concat(\".name.sorted.bam\") )\n            sort_by_name:\n                valueFrom: $( true )\n        out: [sorted]\n    ### samtools fixmate – fills in mate coordinates and insert size fields ###\n    samtools_fixmate:\n        run: ../wrappers/samtools-fixmate.cwl\n        scatter:\n        - input_file\n        in:\n            threads: samtools_fixmate_threads\n            output_format: samtools_fixmate_output_format\n            input_file: samtools_sort_by_name/sorted \n            output_file_name: \n                valueFrom: $(inputs.input_file.basename.split(\".name.sorted.bam\")[0].concat(\".fixed.bam\"))\n        out: [output]\n    ### samtools sort by chromosomal coordinates ###\n    samtools_sort:\n        run: ../wrappers/samtools-sort.cwl\n        scatter:\n        - input\n        in:\n            compression_level: samtools_sort_compression_level \n            threads: samtools_sort_threads \n            memory: samtools_sort_memory \n            input: samtools_fixmate/output\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.bam\")[0].concat(\".fixed.sorted.bam\"))\n        out: [sorted]\n    ### Picard AddOrReplaceReadGroups - Assigns all the reads in a file to a single new read-group ###\n    picard_addorreplacereadgroups:\n        run: ../wrappers/picard-AddOrReplaceReadGroups.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - INPUT\n        - rgid\n        - rgpu\n        - rglb\n        in: \n            INPUT: samtools_sort/sorted \n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0].concat(\".fixed.sorted.uniq.rg.bam\"))\n            rgid: gather_bwa_sam_files/names_rgids\n            rglb: gather_bwa_sam_files/names_rgplbs \n            rgpl: picard_addorreplacereadgroups_rgpl \n            rgpu: gather_bwa_sam_files/names_rgpus\n            rgsm: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.bam\")[0])\n        out: [output]\n    ### Picard MarkDuplicates ###\n    picard_markduplicates:\n        run: ../wrappers/picard-MarkDuplicates.cwl\n        scatter: \n        - INPUT\n        in:\n            INPUT: picard_addorreplacereadgroups/output\n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".fixed.sorted.uniq.rg.md.bam\"))\n            METRICS_FILE: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.bam\")[0].concat(\".md_metrics.txt\"))\n        out: [output, output_report]\n    ### samtools flagstat – counts the number of alignments for each FLAG type ###\n    samtools_flagstat:\n        run: ../wrappers/samtools-flagstat.cwl\n        scatter:\n        - input\n        in:\n            threads: samtools_flagstat_threads\n            input: picard_markduplicates/output\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".align.stats.txt\"))\n        out: [output]\n    ### samtools view - print only alignment counts ###\n    samtools_view_count_total:\n        run: ../wrappers/samtools-view.cwl\n        scatter:\n        - input\n        in:\n            isbam: \n                valueFrom: $( false )\n            collapsecigar: samtools_view_collapsecigar\n            readsingroup: samtools_view_readsingroup\n            uncompressed: samtools_view_uncompressed\n            readtagtostrip: samtools_view_readtagtostrip\n            input: picard_markduplicates/output\n            readsquality: samtools_view_readsquality\n            readswithbits: samtools_view_readswithbits\n            cigar: samtools_view_cigar\n            iscram: samtools_view_iscram\n            threads: samtools_view_threads\n            fastcompression: samtools_view_fastcompression\n            samheader: samtools_view_samheader\n            count: \n                default: true \n            randomseed: samtools_view_randomseed\n            region: samtools_view_region\n            readsinlibrary: samtools_view_readsinlibrary\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".count.total.txt\"))\n        out: [output]\n    ### GATK SplitIntervals ###\n    gatk_splitintervals:\n        run: ../wrappers/gatk-SplitIntervals.cwl\n        in:\n            reference: reference_genome\n            include_intervalList: gatk_splitintervals_include_intervalList\n            exclude_intervalList: gatk_splitintervals_exclude_intervalList\n            scatter_count: gatk_splitintervals_scatter_count\n        out: [intervalfiles]\n    # GATK BQSR\n    ### samtools index ###\n    samtools_index:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: picard_markduplicates/output\n        out: [alignments_with_index]\n    ### GATK BaseRecalibrator - GatherBQSRReports subworkflow ###\n    gatk_bqsr_subworkflow:\n        run: ../workflows/gatk-bqsr-subworkflow.cwl\n        scatter: \n        - bqsr_INPUT\n        in: \n            bqsr_INPUT: samtools_index/alignments_with_index\n            bqsr_OUTPUT: \n                valueFrom: $(inputs.bqsr_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0])\n            bqsr_reference: reference_genome\n            bqsr_known_sites_1: sub_bqsr_known_sites_1\n            bqsr_known_sites_2: sub_bqsr_known_sites_2\n            bqsr_known_sites_3: sub_bqsr_known_sites_3\n            bqsr_intervals: gatk_splitintervals/intervalfiles\n            bqsr_interval_padding: sub_bqsr_interval_padding\n        out: \n        - o_gatk_gatherbqsrreports\n    ### GATK ApplyBQSR ###\n    gatk_applybqsr:\n        run: ../wrappers/gatk-ApplyBQSR.cwl\n        scatterMethod: dotproduct\n        scatter: \n        - INPUT\n        - bqsr_recal_file\n        in: \n            INPUT: samtools_index/alignments_with_index \n            bqsr_recal_file: gatk_bqsr_subworkflow/o_gatk_gatherbqsrreports \n            OUTPUT: \n                valueFrom: $(inputs.INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0].concat(\".bqsr.bam\"))\n            reference: reference_genome\n        out: [output]\n    ### samtools index ###\n    samtools_index_2:\n        run: ../wrappers/samtools-index.cwl\n        scatter:\n        - alignments\n        in:\n            alignments: gatk_applybqsr/output\n        out: [alignments_with_index]\n    ### GATK HaplotypeCaller - Single-sample mode - without BQSR subworkflow ###\n    gatk_haplotypecaller_subworkflow:\n        run: ../workflows/gatk-haplotypecaller-subworkflow.cwl\n        scatter: \n        - hf_INPUT\n        in: \n            hf_INPUT: samtools_index/alignments_with_index\n            hf_OUTPUT: \n                valueFrom: $(inputs.hf_INPUT.basename.split(\".fixed.sorted.uniq.rg.md.bam\")[0])\n            hf_reference: reference_genome\n            hf_intervals: gatk_splitintervals/intervalfiles\n            hf_hc_native_pairHMM_threads: sub_hc_native_pairHMM_threads\n            hf_hc_java_options: sub_hc_java_options\n        out: \n        - o_gatk_MergeVCFs\n    # GATK Hard-filtering\n    ### GATK SelectVariants ###\n    # SNPs\n    gatk_SelectVariants_snps:\n        run: ../wrappers/gatk-SelectVariants.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            OUTPUT: \n              valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".snp.vcf\"))\n            variant_type: \n              valueFrom: $( \"SNP\" )\n        out: [output]\n    # INDELs\n    gatk_SelectVariants_indels:\n        run: ../wrappers/gatk-SelectVariants.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            OUTPUT: \n              valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".indel.vcf\"))\n            variant_type: \n              valueFrom: $( \"INDEL\" )\n        out: [output]\n    ### GATK VariantFiltration ###\n    # SNPs\n    gatk_VariantFiltration_snps:\n        run: ../wrappers/gatk-VariantFiltration.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_SelectVariants_snps/output\n            window: VariantFiltration_window\n            cluster: VariantFiltration_cluster\n            filter_name: VariantFiltration_filter_name_snp\n            filter: VariantFiltration_filter_snp\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".snp.vcf\")[0].concat(\".filtered.snp.vcf\"))\n        out: [output]\n    # INDELs\n    gatk_VariantFiltration_indels:\n        run: ../wrappers/gatk-VariantFiltration.cwl\n        scatter: \n        - variant\n        in:\n            reference: reference_genome\n            variant: gatk_SelectVariants_indels/output\n            window: VariantFiltration_window\n            cluster: VariantFiltration_cluster\n            filter_name: VariantFiltration_filter_name_indel\n            filter: VariantFiltration_filter_indel\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".indel.vcf\")[0].concat(\".filtered.indel.vcf\"))\n        out: [output]\n    ### bgzip - tabix ###\n    # SNPs\n    bgzip_snps:\n        run: ../wrappers/bgzip.cwl\n        scatter: \n        - input\n        in: \n            input: gatk_VariantFiltration_snps/output\n        out: [output]\n    tabix_snps:\n        run: ../wrappers/tabix.cwl\n        scatter: \n        - input\n        in: \n            input: bgzip_snps/output\n        out: [output]\n    # INDELs\n    bgzip_indels:\n        run: ../wrappers/bgzip.cwl\n        scatter: \n        - input\n        in: \n            input: gatk_VariantFiltration_snps/output\n        out: [output]\n    tabix_indels:\n        run: ../wrappers/tabix.cwl\n        scatter: \n        - input\n        in: \n            input: bgzip_indels/output\n        out: [output]\n    ### bcftools concat - concatenate SNP and INDEL VCF files ###\n    bcftools_concat:\n        run: ../wrappers/bcftools-concat.cwl\n        scatterMethod: dotproduct\n        scatter: \n        - input1\n        - input2\n        in: \n            input1: tabix_snps/output\n            input2: tabix_indels/output\n            threads: bcftools_view_threads\n            output_name: \n                valueFrom: $(inputs.input1.basename.split(\".filtered.snp.vcf\")[0].concat(\".concat.vcf\"))\n        out: [output]\n    ### bcftools view - filter variants ###\n    bcftools_view_hard_filter:\n        run: ../wrappers/bcftools-view.cwl\n        scatter: \n        - input\n        in: \n            input: bcftools_concat/output\n            threads: bcftools_view_threads\n            include: bcftools_view_include_hard_filters\n            output_name: \n                valueFrom: $(inputs.input.basename.split(\".concat.vcf\")[0].concat(\".bcftools.hard.filtered.vcf\"))\n        out: [output]\n    ### bcftools norm ###\n    bcftools_norm_hard_filter:\n        run: ../wrappers/bcftools-norm.cwl\n        scatter: \n        - input\n        in: \n            input: bcftools_view_hard_filter/output\n            threads: bcftools_norm_threads\n            reference: reference_genome\n            multiallelics: bcftoomls_norm_multiallelics\n            output_type: \n                valueFrom: $( \"v\" )\n        out: [output]\n    ### ANNOVAR - variant annotation - Hard filtering ###\n    table_annovar_hard_filtered:\n        run: ../wrappers/table-annovar.cwl\n        scatter: \n        - query_file\n        in:\n            query_file: bcftools_norm_hard_filter/output\n            database_location: table_annovar_database_location\n            build_over: table_annovar_build_over\n            remove: table_annovar_remove\n            protocol: table_annovar_protocol\n            operation: table_annovar_operation\n            na_string: table_annovar_na_string\n            vcfinput: table_annovar_vcfinput\n            otherinfo: table_annovar_otherinfo\n            convert_arg: table_annovar_convert_arg\n        out: [multianno_vcf, multianno_txt, avinput]\n\n    # GATK CNN-filtering\n    ### GATK CNNScoreVariants ###\n    gatk_CNNScoreVariants:\n        run: ../wrappers/gatk-CNNScoreVariants.cwl\n        scatterMethod: dotproduct\n        scatter:\n        - variant\n        - aligned_reads\n        in: \n            reference: reference_genome\n            variant: gatk_haplotypecaller_subworkflow/o_gatk_MergeVCFs\n            aligned_reads: samtools_index_2/alignments_with_index\n            OUTPUT: \n                valueFrom: $(inputs.variant.basename.split(\".vcf.gz\")[0].concat(\".cnn.vcf\"))",
    "p_tag_content": "A CWL-based pipeline for calling small germline variants, namely SNPs and small INDELs, by processing data from Whole-genome Sequencing (WGS) or Targeted Sequencing (e.g., Whole-exome sequencing; WES) experiments. On the respective GitHub folder are available: Briefly, the workflow performs the following steps: At this point the application of single-sample workflow follows, during which multiple samples are accepted as input and they are not merged into a unified VCF file but are rather processed separately in each step of the workflow, leading to the production of a VCF file for each sample: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/527?version=1 DOI:10.48546/workflowhub.workflow.527.1 Initial commit Views:1504Downloads:173 Created: 5th Jul 2023 at 10:48 None Teams:Biodata Analysis Group Organizations:Institute of Applied Biosciences, Centre of Research and Technology, Hellas (INAB|CERTH) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The Biodata Analysis Group (also known as the Bioinformatics Lab at the Institute of Applied Biosciences (INAB / CERTH)) is active in Bioinformatics research, focusing on the design of new algorithms and pipelines.We are a group of enthusiastic researchers, active in the following key fields:- Machine Learning and Data Mining- Multi-omics data integration- Training for Life Sciences Space:Independent Teams Public web page:https://biodataanalysisgroup.github.io/ Organisms:Not specified"
  },
  {
    "": 186,
    "discussion_links": "[{'id': '614', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '615', 'label': 'Tutorial', 'url': 'https://github.com/bioexcel/biobb_wf_godmd/'}, {'id': '616', 'label': 'Documentation', 'url': 'https://biobb-wf-godmd.readthedocs.io/en/latest/index.html'}]",
    "title": "CWL Protein Conformational Transitions calculations tutorial",
    "license": "Apache-2.0",
    "description": "# Protein Conformational Transitions calculations tutorial using BioExcel Building Blocks (biobb) and GOdMD\n\nThis tutorial aims to illustrate the process of computing a conformational transition between two known structural conformations of a protein, step by step, using the BioExcel Building Blocks library (biobb).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/549?version=1', 'commit': '36c8c93dccfe31decfbcfad930c72d9601f79a42', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/549/git/1/tree', 'doi': '10.48546/workflowhub.workflow.549.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-08-02T09:54:17.000Z",
    "updated_at": "2023-08-02T10:03:39.000Z",
    "doi": "10.48546/workflowhub.workflow.549.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_chain_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_chain_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_remove_molecules_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_remove_molecules_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_output_aln_orig_path', 'name': 'Output file', 'description': 'Output GOdMD alignment file corresponding to the origin structure of the conformational transition.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_output_aln_target_path', 'name': 'Output file', 'description': 'Output GOdMD alignment file corresponding to the target structure of the conformational transition.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_godmd_prep_config', 'name': 'Config file', 'description': 'Configuration file for biobb_godmd.godmd_prep tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_ene_path', 'name': 'Output file', 'description': 'Output energy file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_trj_path', 'name': 'Output file', 'description': 'Output trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_output_pdb_path', 'name': 'Output file', 'description': 'Output structure file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_godmd_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_godmd.godmd_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_convert_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_convert_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_convert tool.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_chain/output_structure_path']}, {'id': 'step1_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_chain/output_structure_path']}, {'id': 'step2_remove_molecules_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step2_remove_molecules/output_molecules_path']}, {'id': 'step4_godmd_prep_out1', 'name': 'output_aln_orig_path', 'description': 'Output GOdMD alignment file corresponding to the origin structure of the conformational transition.', 'type': [{'type': 'File'}], 'source_ids': ['step4_godmd_prep/output_aln_orig_path']}, {'id': 'step4_godmd_prep_out2', 'name': 'output_aln_target_path', 'description': 'Output GOdMD alignment file corresponding to the target structure of the conformational transition.', 'type': [{'type': 'File'}], 'source_ids': ['step4_godmd_prep/output_aln_target_path']}, {'id': 'step5_godmd_run_out1', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_log_path']}, {'id': 'step5_godmd_run_out2', 'name': 'output_ene_path', 'description': 'Output energy file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_ene_path']}, {'id': 'step5_godmd_run_out3', 'name': 'output_trj_path', 'description': 'Output trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_trj_path']}, {'id': 'step5_godmd_run_out4', 'name': 'output_pdb_path', 'description': 'Output structure file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_godmd_run/output_pdb_path']}, {'id': 'step6_cpptraj_convert_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_convert/output_cpptraj_path']}], 'steps': [{'id': 'step0_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step0_extract_chain/output_structure_path']}, {'id': 'step1_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step1_extract_chain/output_structure_path']}, {'id': 'step2_remove_molecules', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step2_remove_molecules/output_molecules_path']}, {'id': 'step4_godmd_prep', 'name': 'godmd_prep', 'description': 'Helper BioBB to prepare inputs for the GOdMD tool (protein conformational transitions).', 'sink_ids': ['step4_godmd_prep/output_aln_orig_path', 'step4_godmd_prep/output_aln_target_path']}, {'id': 'step5_godmd_run', 'name': 'godmd_run', 'description': 'Wrapper of the GOdMD tool to compute protein conformational transitions.', 'sink_ids': ['step5_godmd_run/output_log_path', 'step5_godmd_run/output_ene_path', 'step5_godmd_run/output_trj_path', 'step5_godmd_run/output_pdb_path']}, {'id': 'step6_cpptraj_convert', 'name': 'cpptraj_convert', 'description': 'Wrapper of the Ambertools Cpptraj module for converting between cpptraj compatible trajectory file formats and/or extracting a selection of atoms or frames.', 'sink_ids': ['step6_cpptraj_convert/output_cpptraj_path']}], 'links': [{'id': 'config', 'source_id': 'step0_extract_chain_config', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_chain_input_structure_path', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_extract_chain_output_structure_path', 'sink_id': 'step0_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_extract_chain_config', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_chain_input_structure_path', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step1_extract_chain_output_structure_path', 'sink_id': 'step1_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_remove_molecules_config', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_chain/output_structure_path', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step2_remove_molecules_output_molecules_path', 'sink_id': 'step2_remove_molecules', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_godmd_prep_config', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'input_pdb_orig_path', 'source_id': 'step2_remove_molecules/output_molecules_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'input_pdb_target_path', 'source_id': 'step1_extract_chain/output_structure_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'output_aln_orig_path', 'source_id': 'step4_godmd_prep_output_aln_orig_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'output_aln_target_path', 'source_id': 'step4_godmd_prep_output_aln_target_path', 'sink_id': 'step4_godmd_prep', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_godmd_run_config', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_orig_path', 'source_id': 'step2_remove_molecules/output_molecules_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_target_path', 'source_id': 'step1_extract_chain/output_structure_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_aln_orig_path', 'source_id': 'step4_godmd_prep/output_aln_orig_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'input_aln_target_path', 'source_id': 'step4_godmd_prep/output_aln_target_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_godmd_run_output_log_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_ene_path', 'source_id': 'step5_godmd_run_output_ene_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_trj_path', 'source_id': 'step5_godmd_run_output_trj_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step5_godmd_run_output_pdb_path', 'sink_id': 'step5_godmd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_cpptraj_convert_config', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step5_godmd_run/output_pdb_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step5_godmd_run/output_pdb_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step6_cpptraj_convert_output_cpptraj_path', 'sink_id': 'step6_cpptraj_convert', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 549,
    "text_field": "['biobb_adapters', 'README.md', 'cpptraj_convert.cwl', 'extract_chain.cwl', 'godmd_prep.cwl', 'godmd_run.cwl', 'remove_molecules.cwl', 'origin.pdb', 'target.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of computing a conformational transition between two known structural conformations of a protein, step by step, using the BioExcel Building Blocks library (biobb). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/549?version=1 DOI:10.48546/workflowhub.workflow.549.1 Initial commit Views:1601Downloads:355 Created: 2nd Aug 2023 at 10:54 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 189,
    "discussion_links": "[{'id': '627', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '628', 'label': 'Tutorial', 'url': 'https://github.com/bioexcel/biobb_wf_flexserv/'}, {'id': '629', 'label': 'Documentation', 'url': 'https://biobb-wf-flexserv.readthedocs.io/en/latest/index.html'}]",
    "title": "CWL Macromolecular Coarse-Grained Flexibility tutorial",
    "license": "Apache-2.0",
    "description": "# Macromolecular Coarse-Grained Flexibility (FlexServ) tutorial using BioExcel Building Blocks (biobb)\n\nThis tutorial aims to illustrate the process of generating protein conformational ensembles from 3D structures and analysing its molecular flexibility, step by step, using the BioExcel Building Blocks library (biobb).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/552?version=1', 'commit': '961878144503167de2e9fe7abeb4576d87d2b7b5', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/552/git/1/tree', 'doi': '10.48546/workflowhub.workflow.552.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2023-08-02T10:50:45.000Z",
    "updated_at": "2023-08-02T11:21:11.000Z",
    "doi": "10.48546/workflowhub.workflow.552.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_atoms_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_atoms_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_extract_atoms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_atoms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_bd_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.bd_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_dmd_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_dmd_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_output_crd_path', 'name': 'Output file', 'description': 'Output ensemble.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_nma_run_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.nma_run tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_pcz_zip_output_pcz_path', 'name': 'Output file', 'description': 'Output compressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_pcz_zip_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_zip tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_pcz_unzip_output_crd_path', 'name': 'Output file', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_output_traj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_cpptraj_rms_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_rms tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_pcz_info_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA info such as number of components, variance and dimensionality.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_pcz_evecs_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Eigen Vectors.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_pcz_evecs_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_evecs tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_pcz_animate_output_crd_path', 'name': 'Output file', 'description': 'Output PCA animated trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_pcz_animate_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_animate tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_cpptraj_convert_output_cpptraj_path', 'name': 'Output file', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_cpptraj_convert_config', 'name': 'Config file', 'description': 'Configuration file for biobb_analysis.cpptraj_convert tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_output_dat_path', 'name': 'Output file', 'description': 'Output Bfactor x residue x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB with Bfactor x residue x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_pcz_bfactor_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_bfactor tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_pcz_hinges_output_json_path', 'name': 'Output file', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_pcz_hinges_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_hinges tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_pcz_stiffness_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Stiffness.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step24_pcz_stiffness_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_stiffness tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step25_pcz_collectivity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Collectivity indexes per mode.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step25_pcz_collectivity_config', 'name': 'Config file', 'description': 'Configuration file for biobb_flexserv.pcz_collectivity tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step26_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step26_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step27_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step27_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step28_pcz_similarity_input_pcz_path2', 'name': 'Input file', 'description': 'Input compressed trajectory file 2.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step28_pcz_similarity_output_json_path', 'name': 'Output file', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_atoms_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_atoms/output_structure_path']}, {'id': 'step1_bd_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step1_bd_run/output_crd_path']}, {'id': 'step1_bd_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step1_bd_run/output_log_path']}, {'id': 'step2_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step2_cpptraj_rms/output_cpptraj_path']}, {'id': 'step2_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step2_cpptraj_rms/output_traj_path']}, {'id': 'step3_dmd_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step3_dmd_run/output_crd_path']}, {'id': 'step3_dmd_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step3_dmd_run/output_log_path']}, {'id': 'step4_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step4_cpptraj_rms/output_cpptraj_path']}, {'id': 'step4_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step4_cpptraj_rms/output_traj_path']}, {'id': 'step5_nma_run_out1', 'name': 'output_crd_path', 'description': 'Output ensemble.', 'type': [{'type': 'File'}], 'source_ids': ['step5_nma_run/output_crd_path']}, {'id': 'step5_nma_run_out2', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step5_nma_run/output_log_path']}, {'id': 'step6_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_rms/output_cpptraj_path']}, {'id': 'step6_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step6_cpptraj_rms/output_traj_path']}, {'id': 'step7_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step7_pcz_zip/output_pcz_path']}, {'id': 'step8_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step8_pcz_zip/output_pcz_path']}, {'id': 'step9_pcz_zip_out1', 'name': 'output_pcz_path', 'description': 'Output compressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step9_pcz_zip/output_pcz_path']}, {'id': 'step10_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step10_pcz_unzip/output_crd_path']}, {'id': 'step11_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step11_pcz_unzip/output_crd_path']}, {'id': 'step12_pcz_unzip_out1', 'name': 'output_crd_path', 'description': 'Output uncompressed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step12_pcz_unzip/output_crd_path']}, {'id': 'step13_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step13_cpptraj_rms/output_cpptraj_path']}, {'id': 'step13_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step13_cpptraj_rms/output_traj_path']}, {'id': 'step14_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step14_cpptraj_rms/output_cpptraj_path']}, {'id': 'step14_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step14_cpptraj_rms/output_traj_path']}, {'id': 'step15_cpptraj_rms_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis.', 'type': [{'type': 'File'}], 'source_ids': ['step15_cpptraj_rms/output_cpptraj_path']}, {'id': 'step15_cpptraj_rms_out2', 'name': 'output_traj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step15_cpptraj_rms/output_traj_path']}, {'id': 'step16_pcz_info_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA info such as number of components, variance and dimensionality.', 'type': [{'type': 'File'}], 'source_ids': ['step16_pcz_info/output_json_path']}, {'id': 'step17_pcz_evecs_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Eigen Vectors.', 'type': [{'type': 'File'}], 'source_ids': ['step17_pcz_evecs/output_json_path']}, {'id': 'step18_pcz_animate_out1', 'name': 'output_crd_path', 'description': 'Output PCA animated trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step18_pcz_animate/output_crd_path']}, {'id': 'step19_cpptraj_convert_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory.', 'type': [{'type': 'File'}], 'source_ids': ['step19_cpptraj_convert/output_cpptraj_path']}, {'id': 'step20_pcz_bfactor_out1', 'name': 'output_dat_path', 'description': 'Output Bfactor x residue x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step20_pcz_bfactor/output_dat_path']}, {'id': 'step20_pcz_bfactor_out2', 'name': 'output_pdb_path', 'description': 'Output PDB with Bfactor x residue x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step20_pcz_bfactor/output_pdb_path']}, {'id': 'step21_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step21_pcz_hinges/output_json_path']}, {'id': 'step22_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step22_pcz_hinges/output_json_path']}, {'id': 'step23_pcz_hinges_out1', 'name': 'output_json_path', 'description': 'Output hinge regions x PCA mode file.', 'type': [{'type': 'File'}], 'source_ids': ['step23_pcz_hinges/output_json_path']}, {'id': 'step24_pcz_stiffness_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Stiffness.', 'type': [{'type': 'File'}], 'source_ids': ['step24_pcz_stiffness/output_json_path']}, {'id': 'step25_pcz_collectivity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Collectivity indexes per mode.', 'type': [{'type': 'File'}], 'source_ids': ['step25_pcz_collectivity/output_json_path']}, {'id': 'step26_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step26_pcz_similarity/output_json_path']}, {'id': 'step27_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step27_pcz_similarity/output_json_path']}, {'id': 'step28_pcz_similarity_out1', 'name': 'output_json_path', 'description': 'Output json file with PCA Similarity results.', 'type': [{'type': 'File'}], 'source_ids': ['step28_pcz_similarity/output_json_path']}], 'steps': [{'id': 'step0_extract_atoms', 'name': 'extract_atoms', 'description': 'Class to extract atoms from a 3D structure.', 'sink_ids': ['step0_extract_atoms/output_structure_path']}, {'id': 'step1_bd_run', 'name': 'bd_run', 'description': 'Run Brownian Dynamics from FlexServ', 'sink_ids': ['step1_bd_run/output_crd_path', 'step1_bd_run/output_log_path']}, {'id': 'step2_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step2_cpptraj_rms/output_cpptraj_path', 'step2_cpptraj_rms/output_traj_path']}, {'id': 'step3_dmd_run', 'name': 'dmd_run', 'description': 'Run Discrete Molecular Dynamics from FlexServ', 'sink_ids': ['step3_dmd_run/output_crd_path', 'step3_dmd_run/output_log_path']}, {'id': 'step4_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step4_cpptraj_rms/output_cpptraj_path', 'step4_cpptraj_rms/output_traj_path']}, {'id': 'step5_nma_run', 'name': 'nma_run', 'description': 'Run Normal Mode Analysis from FlexServ', 'sink_ids': ['step5_nma_run/output_crd_path', 'step5_nma_run/output_log_path']}, {'id': 'step6_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step6_cpptraj_rms/output_cpptraj_path', 'step6_cpptraj_rms/output_traj_path']}, {'id': 'step7_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step7_pcz_zip/output_pcz_path']}, {'id': 'step8_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step8_pcz_zip/output_pcz_path']}, {'id': 'step9_pcz_zip', 'name': 'pcz_zip', 'description': 'Compress MD simulation trajectories with PCA suite', 'sink_ids': ['step9_pcz_zip/output_pcz_path']}, {'id': 'step10_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step10_pcz_unzip/output_crd_path']}, {'id': 'step11_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step11_pcz_unzip/output_crd_path']}, {'id': 'step12_pcz_unzip', 'name': 'pcz_unzip', 'description': 'Uncompress MD simulation trajectories with PCA suite', 'sink_ids': ['step12_pcz_unzip/output_crd_path']}, {'id': 'step13_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step13_cpptraj_rms/output_cpptraj_path', 'step13_cpptraj_rms/output_traj_path']}, {'id': 'step14_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step14_cpptraj_rms/output_cpptraj_path', 'step14_cpptraj_rms/output_traj_path']}, {'id': 'step15_cpptraj_rms', 'name': 'cpptraj_rms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step15_cpptraj_rms/output_cpptraj_path', 'step15_cpptraj_rms/output_traj_path']}, {'id': 'step16_pcz_info', 'name': 'pcz_info', 'description': 'Extract PCA info (variance, Dimensionality) from a compressed PCZ file', 'sink_ids': ['step16_pcz_info/output_json_path']}, {'id': 'step17_pcz_evecs', 'name': 'pcz_evecs', 'description': 'Extract PCA Eigen Vectors from a compressed PCZ file', 'sink_ids': ['step17_pcz_evecs/output_json_path']}, {'id': 'step18_pcz_animate', 'name': 'pcz_animate', 'description': 'Extract PCA animations from a compressed PCZ file', 'sink_ids': ['step18_pcz_animate/output_crd_path']}, {'id': 'step19_cpptraj_convert', 'name': 'cpptraj_convert', 'description': 'Wrapper of the Ambertools Cpptraj module for converting between cpptraj compatible trajectory file formats and/or extracting a selection of atoms or frames.', 'sink_ids': ['step19_cpptraj_convert/output_cpptraj_path']}, {'id': 'step20_pcz_bfactor', 'name': 'pcz_bfactor', 'description': 'Extract residue bfactors x PCA mode from a compressed PCZ file', 'sink_ids': ['step20_pcz_bfactor/output_dat_path', 'step20_pcz_bfactor/output_pdb_path']}, {'id': 'step21_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step21_pcz_hinges/output_json_path']}, {'id': 'step22_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step22_pcz_hinges/output_json_path']}, {'id': 'step23_pcz_hinges', 'name': 'pcz_hinges', 'description': 'Compute possible hinge regions (residues around which large protein movements are organized) of a molecule from a compressed PCZ file', 'sink_ids': ['step23_pcz_hinges/output_json_path']}, {'id': 'step24_pcz_stiffness', 'name': 'pcz_stiffness', 'description': 'Extract PCA stiffness from a compressed PCZ file', 'sink_ids': ['step24_pcz_stiffness/output_json_path']}, {'id': 'step25_pcz_collectivity', 'name': 'pcz_collectivity', 'description': 'Extract PCA collectivity (numerical measure of how many atoms are affected by a given mode) from a compressed PCZ file', 'sink_ids': ['step25_pcz_collectivity/output_json_path']}, {'id': 'step26_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step26_pcz_similarity/output_json_path']}, {'id': 'step27_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step27_pcz_similarity/output_json_path']}, {'id': 'step28_pcz_similarity', 'name': 'pcz_similarity', 'description': 'Compute PCA similarity between two given compressed PCZ files', 'sink_ids': ['step28_pcz_similarity/output_json_path']}], 'links': [{'id': 'config', 'source_id': 'step0_extract_atoms_config', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step0_extract_atoms_input_structure_path', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_extract_atoms_output_structure_path', 'sink_id': 'step0_extract_atoms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_bd_run_config', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step1_bd_run_output_crd_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step1_bd_run_output_log_path', 'sink_id': 'step1_bd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_cpptraj_rms_config', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step1_bd_run/output_crd_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step2_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step2_cpptraj_rms_output_traj_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step2_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step3_dmd_run_output_crd_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_dmd_run_output_log_path', 'sink_id': 'step3_dmd_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_cpptraj_rms_config', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step3_dmd_run/output_crd_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step4_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step4_cpptraj_rms_output_traj_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step4_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_nma_run_config', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step5_nma_run_output_crd_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_nma_run_output_log_path', 'sink_id': 'step5_nma_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_cpptraj_rms_config', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step5_nma_run/output_crd_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_cpptraj_path', 'source_id': 'step6_cpptraj_rms_output_cpptraj_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step6_cpptraj_rms_output_traj_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'input_exp_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step6_cpptraj_rms', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_pcz_zip_config', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step1_bd_run/output_crd_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step7_pcz_zip_output_pcz_path', 'sink_id': 'step7_pcz_zip', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_pcz_zip_config', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_dmd_run/output_crd_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step8_pcz_zip_output_pcz_path', 'sink_id': 'step8_pcz_zip', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_pcz_zip_config', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_atoms/output_structure_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step5_nma_run/output_crd_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'output_pcz_path', 'source_id': 'step9_pcz_zip_output_pcz_path', 'sink_id': 'step9_pcz_zip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step7_pcz_zip/output_pcz_path', 'sink_id': 'step10_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step10_pcz_unzip_output_crd_path', 'sink_id': 'step10_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step8_pcz_zip/output_pcz_path', 'sink_id': 'step11_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step11_pcz_unzip_output_crd_path', 'sink_id': 'step11_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'input_pcz_path', 'source_id': 'step9_pcz_zip/output_pcz_path', 'sink_id': 'step12_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step12_pcz_unzip_output_crd_path', 'sink_id': 'step12_pcz_unzip', 'name': None, 'default_value': None}, {'id': 'con",
    "tools": [],
    "id": 552,
    "text_field": "['biobb_adapters', '1a32.MoDEL.pcz', 'README.md', 'bd_run.cwl', 'cpptraj_convert.cwl', 'cpptraj_rms.cwl', 'dmd_run.cwl', 'extract_atoms.cwl', 'nma_run.cwl', 'pcz_animate.cwl', 'pcz_bfactor.cwl', 'pcz_collectivity.cwl', 'pcz_evecs.cwl', 'pcz_hinges.cwl', 'pcz_info.cwl', 'pcz_similarity.cwl', 'pcz_stiffness.cwl', 'pcz_unzip.cwl', 'pcz_zip.cwl', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process of generating protein conformational ensembles from 3D structures and analysing its molecular flexibility, step by step, using the BioExcel Building Blocks library (biobb). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/552?version=1 DOI:10.48546/workflowhub.workflow.552.1 Initial commit Views:1720Downloads:397 Created: 2nd Aug 2023 at 11:50 Last updated: 2nd Aug 2023 at 12:13 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 203,
    "discussion_links": [],
    "title": "VIRify",
    "license": "Apache-2.0",
    "description": "<p class=\"has-line-data\" data-line-start=\"0\" data-line-end=\"1\"><img src=\"https://img.shields.io/badge/CWL-1.2.0--dev2-green\" alt=\"\"> <img src=\"https://img.shields.io/badge/nextflow-20.01.0-brightgreen\" alt=\"\"> <img src=\"https://img.shields.io/badge/uses-docker-blue.svg\" alt=\"\"> <img src=\"https://img.shields.io/badge/uses-conda-yellow.svg\" alt=\"\"> <img src=\"https://api.travis-ci.org/EBI-Metagenomics/emg-viral-pipeline.svg\" alt=\"\"></p>\n<h1 class=\"code-line\" data-line-start=2 data-line-end=3 ><a id=\"VIRify_2\"></a>VIRify</h1>\n<p class=\"has-line-data\" data-line-start=\"4\" data-line-end=\"5\"><img width=\"500px\" src=\"https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/nextflow/figures/sankey.png\" alt=\"Sankey plot\"></p>\n<p class=\"has-line-data\" data-line-start=\"6\" data-line-end=\"7\">VIRify is a recently developed pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies. The pipeline is part of the repertoire of analysis services offered by <a href=\"https://www.ebi.ac.uk/metagenomics/\">MGnify</a>. VIRify’s taxonomic classification relies on the detection of taxon-specific profile hidden Markov models (HMMs), built upon a set of 22,014 orthologous protein domains and referred to as ViPhOGs.</p>\n<p class=\"has-line-data\" data-line-start=\"8\" data-line-end=\"9\">VIRify was implemented in CWL.</p>\n<h2 class=\"code-line\" data-line-start=10 data-line-end=11 ><a id=\"What_do_I_need_10\"></a>What do I need?</h2>\n<p class=\"has-line-data\" data-line-start=\"12\" data-line-end=\"13\">The current implementation uses CWL version 1.2 dev+2. It was tested using Toil version 4.10 as the workflow engine and conda to manage the software dependencies.</p>\n<h3 class=\"code-line\" data-line-start=14 data-line-end=15 ><a id=\"Docker__Singularity_support_14\"></a>Docker - Singularity support</h3>\n<p class=\"has-line-data\" data-line-start=\"16\" data-line-end=\"17\">Soon…</p>\n<h2 class=\"code-line\" data-line-start=18 data-line-end=19 ><a id=\"Setup_environment_18\"></a>Setup environment</h2>\n<pre><code class=\"has-line-data\" data-line-start=\"21\" data-line-end=\"24\" class=\"language-bash\">conda env create <span class=\"hljs-operator\">-f</span> cwl/requirements/conda_env.yml\nconda activate viral_pipeline\n</code></pre>\n<h2 class=\"code-line\" data-line-start=25 data-line-end=26 ><a id=\"Basic_execution_25\"></a>Basic execution</h2>\n<pre><code class=\"has-line-data\" data-line-start=\"28\" data-line-end=\"31\" class=\"language-bash\"><span class=\"hljs-built_in\">cd</span> cwl/\nvirify.sh -h\n</code></pre>\n<h1 class=\"code-line\" data-line-start=32 data-line-end=33 ><a id=\"A_note_about_metatranscriptomes_32\"></a>A note about metatranscriptomes</h1>\n<p class=\"has-line-data\" data-line-start=\"34\" data-line-end=\"36\">Although VIRify has been benchmarked and validated with metagenomic data in mind, it is also possible to use this tool to detect RNA viruses in metatranscriptome assemblies (e.g. SARS-CoV-2). However, some additional considerations for this purpose are outlined below:<br>\n<strong>1. Quality control:</strong> As for metagenomic data, a thorough quality control of the FASTQ sequence reads to remove low-quality bases, adapters and host contamination (if appropriate) is required prior to assembly. This is especially important for metatranscriptomes as small errors can further decrease the quality and contiguity of the assembly obtained. We have used <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/\">TrimGalore</a> for this purpose.</p>\n<p class=\"has-line-data\" data-line-start=\"37\" data-line-end=\"38\"><strong>2. Assembly:</strong> There are many assemblers available that are appropriate for either metagenomic or single-species transcriptomic data. However, to our knowledge, there is no assembler currently available specifically for metatranscriptomic data. From our preliminary investigations, we have found that transcriptome-specific assemblers (e.g. <a href=\"http://cab.spbu.ru/software/spades/\">rnaSPAdes</a>) generate more contiguous and complete metatranscriptome assemblies compared to metagenomic alternatives (e.g. <a href=\"https://github.com/voutcn/megahit/releases\">MEGAHIT</a> and <a href=\"http://cab.spbu.ru/software/spades/\">metaSPAdes</a>).</p>\n<p class=\"has-line-data\" data-line-start=\"39\" data-line-end=\"40\"><strong>3. Post-processing:</strong> Metatranscriptomes generate highly fragmented assemblies. Therefore, filtering contigs based on a set minimum length has a substantial impact in the number of contigs processed in VIRify. It has also been observed that the number of false-positive detections of <a href=\"https://github.com/jessieren/VirFinder/releases\">VirFinder</a> (one of the tools included in VIRify) is lower among larger contigs. The choice of a length threshold will depend on the complexity of the sample and the sequencing technology used, but in our experience any contigs &lt;2 kb should be analysed with caution.</p>\n<p class=\"has-line-data\" data-line-start=\"41\" data-line-end=\"42\"><strong>4. Classification:</strong> The classification module of VIRify depends on the presence of a minimum number and proportion of phylogenetically-informative genes within each contig in order to confidently assign a taxonomic lineage. Therefore, short contigs typically obtained from metatranscriptome assemblies remain generally unclassified. For targeted classification of RNA viruses (for instance, to search for Coronavirus-related sequences), alternative DNA- or protein-based classification methods can be used. Two of the possible options are: (i) using <a href=\"https://github.com/marbl/MashMap/releases\">MashMap</a> to screen the VIRify contigs against a database of RNA viruses (e.g. Coronaviridae) or (ii) using <a href=\"http://hmmer.org/download.html\">hmmsearch</a> to screen the proteins obtained in the VIRify contigs against marker genes of the taxon of interest.</p>\n<h2>Contact us</h2>\n<a href=\"https://www.ebi.ac.uk/support/metagenomics\">MGnify helpdesk</a>",
    "latest_version": 1,
    "tags": "['covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/26?version=1', 'commit': 'c714c538d5afa5eb81e4d696c202efcfca4acbdb', 'ref': 'refs/tags/v0.4.0', 'tree': '/workflows/26/git/1/tree', 'doi': '10.48546/workflowhub.workflow.26.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-08T10:21:08.000Z",
    "updated_at": "2023-01-16T13:41:53.000Z",
    "doi": "10.48546/workflowhub.workflow.26.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "Martin Hölzer, Alexandre Almeida, Guillermo Rangel-Pineros and Ekaterina Sakharova",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'input_fasta_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'virsorter_virome', 'name': None, 'description': 'Set this parameter if the input fasta is mostly viral.\\nSee: https://github.com/simroux/VirSorter/issues/50\\n', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'virsorter_data_dir', 'name': None, 'description': 'VirSorter supporting database files.\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'add_hmms_tsv', 'name': None, 'description': 'Additonal metadata tsv\\n', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'hmmscan_database_dir', 'name': None, 'description': 'HMMScan Viral HMM (databases/vpHMM/vpHMM_database).\\nNOTE: it needs to be a full path.\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'ncbi_tax_db_file', 'name': None, 'description': 'ete3 NCBITaxa db https://github.com/etetoolkit/ete/blob/master/ete3/ncbi_taxonomy/ncbiquery.py\\nhttp://etetoolkit.org/docs/latest/tutorial/tutorial_ncbitaxonomy.html\\nThis file was manually built and placed in the corresponding path (on databases)\\n', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'img_blast_database_dir', 'name': None, 'description': 'Downloaded from:\\nhttps://genome.jgi.doe.gov/portal/IMG_VR/IMG_VR.home.html\\n', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'mashmap_reference_file', 'name': None, 'description': 'MashMap Reference file. Use MashMap to \\n', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'pprmeta_simg', 'name': None, 'description': 'PPR-Meta singularity simg file\\n', 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'filtered_contigs', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['length_filter/filtered_contigs_fasta']}, {'id': 'virfinder_output', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['virfinder/virfinder_output']}, {'id': 'virsorter_output_fastas', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['virsorter/virsorter_fastas']}, {'id': 'high_confidence_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_hc/restored_fasta']}, {'id': 'low_confidence_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_lc/restored_fasta']}, {'id': 'parse_prophages_contigs', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['fasta_restore_name_pp/restored_fasta']}, {'id': 'high_confidence_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/high_confidence_contigs_genes']}, {'id': 'low_confidence_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/low_confidence_contigs_genes']}, {'id': 'prophages_faa', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['prodigal/prophages_contigs_genes']}, {'id': 'taxonomy_assignations', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['assign/assign_tables']}, {'id': 'krona_plots', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['krona/krona_htmls']}, {'id': 'krona_plot_all', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['krona/krona_all_html']}, {'id': 'blast_results', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/blast_results']}, {'id': 'blast_result_filtereds', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/blast_result_filtereds']}, {'id': 'blast_merged_tsvs', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['imgvr_blast/merged_tsvs']}, {'id': 'mashmap_hits', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'array', 'items': [{'type': 'File'}]}], 'source_ids': ['mashmap/output_table']}], 'steps': [{'id': 'fasta_rename', 'name': 'Filter contigs', 'description': None, 'sink_ids': ['fasta_rename/renamed_fasta', 'fasta_rename/name_map']}, {'id': 'length_filter', 'name': 'Filter contigs', 'description': 'Default lenght 1kb https://github.com/EBI-Metagenomics/emg-virify-scripts/issues/6', 'sink_ids': ['length_filter/filtered_contigs_fasta']}, {'id': 'virfinder', 'name': 'VirFinder', 'description': None, 'sink_ids': ['virfinder/virfinder_output']}, {'id': 'virsorter', 'name': 'VirSorter', 'description': None, 'sink_ids': ['virsorter/virsorter_fastas']}, {'id': 'pprmeta', 'name': 'PPR-Meta', 'description': None, 'sink_ids': ['pprmeta/pprmeta_output']}, {'id': 'parse_pred_contigs', 'name': 'Combine', 'description': None, 'sink_ids': ['parse_pred_contigs/high_confidence_contigs', 'parse_pred_contigs/low_confidence_contigs', 'parse_pred_contigs/prophages_contigs']}, {'id': 'prodigal', 'name': 'Prodigal', 'description': None, 'sink_ids': ['prodigal/high_confidence_contigs_genes', 'prodigal/low_confidence_contigs_genes', 'prodigal/prophages_contigs_genes']}, {'id': 'hmmscan', 'name': 'hmmscan', 'description': None, 'sink_ids': ['hmmscan/output_table']}, {'id': 'ratio_evalue', 'name': 'ratio evalue ViPhOG', 'description': None, 'sink_ids': ['ratio_evalue/informative_table']}, {'id': 'annotation', 'name': 'ViPhOG annotations', 'description': None, 'sink_ids': ['annotation/annotation_tables']}, {'id': 'assign', 'name': 'Taxonomic assign', 'description': None, 'sink_ids': ['assign/assign_tables']}, {'id': 'krona', 'name': 'krona plots', 'description': None, 'sink_ids': ['krona/krona_htmls', 'krona/krona_all_html']}, {'id': 'fasta_restore_name_hc', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_hc/restored_fasta']}, {'id': 'fasta_restore_name_lc', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_lc/restored_fasta']}, {'id': 'fasta_restore_name_pp', 'name': 'Restore fasta names', 'description': None, 'sink_ids': ['fasta_restore_name_pp/restored_fasta']}, {'id': 'imgvr_blast', 'name': 'Blast in a database of viral sequences including metagenomes', 'description': None, 'sink_ids': ['imgvr_blast/blast_results', 'imgvr_blast/blast_result_filtereds', 'imgvr_blast/merged_tsvs']}, {'id': 'mashmap', 'name': 'MashMap', 'description': None, 'sink_ids': ['mashmap/output_table']}], 'links': [{'id': 'input', 'source_id': 'input_fasta_file', 'sink_id': 'fasta_rename', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'fasta_rename/renamed_fasta', 'sink_id': 'length_filter', 'name': None, 'default_value': None}, {'id': 'length', 'source_id': None, 'sink_id': 'length_filter', 'name': None, 'default_value': 1.0}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'virfinder', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'data_dir', 'source_id': 'virsorter_data_dir', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'virome_decontamination_mode', 'source_id': 'virsorter_virome', 'sink_id': 'virsorter', 'name': None, 'default_value': None}, {'id': 'singularity_image', 'source_id': 'pprmeta_simg', 'sink_id': 'pprmeta', 'name': None, 'default_value': None}, {'id': 'fasta_file', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'pprmeta', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'length_filter/filtered_contigs_fasta', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'virfinder_tsv', 'source_id': 'virfinder/virfinder_output', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'virsorter_fastas', 'source_id': 'virsorter/virsorter_fastas', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'pprmeta_csv', 'source_id': 'pprmeta/pprmeta_output', 'sink_id': 'parse_pred_contigs', 'name': None, 'default_value': None}, {'id': 'high_confidence_contigs', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'low_confidence_contigs', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'prophages_contigs', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/high_confidence_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/low_confidence_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'aa_fasta_files', 'source_id': 'prodigal/prophages_contigs_genes', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'hmmscan_database_dir', 'sink_id': 'hmmscan', 'name': None, 'default_value': None}, {'id': 'hmmscan_table', 'source_id': 'hmmscan/output_table', 'sink_id': 'ratio_evalue', 'name': None, 'default_value': None}, {'id': 'hmms_tsv', 'source_id': 'add_hmms_tsv', 'sink_id': 'ratio_evalue', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/high_confidence_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/low_confidence_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'prodigal/prophages_contigs_genes', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'hmmer_table', 'source_id': 'ratio_evalue/informative_table', 'sink_id': 'annotation', 'name': None, 'default_value': None}, {'id': 'input_tables', 'source_id': 'annotation/annotation_tables', 'sink_id': 'assign', 'name': None, 'default_value': None}, {'id': 'ncbi_tax_db', 'source_id': 'ncbi_tax_db_file', 'sink_id': 'assign', 'name': None, 'default_value': None}, {'id': 'assign_tables', 'source_id': 'assign/assign_tables', 'sink_id': 'krona', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'fasta_restore_name_hc', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_hc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'fasta_restore_name_lc', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_lc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'fasta_restore_name_pp', 'name': None, 'default_value': None}, {'id': 'name_map', 'source_id': 'fasta_rename/name_map', 'sink_id': 'fasta_restore_name_pp', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'fasta_files', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'img_blast_database_dir', 'sink_id': 'imgvr_blast', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/high_confidence_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/low_confidence_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'input_fastas', 'source_id': 'parse_pred_contigs/prophages_contigs', 'sink_id': 'mashmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'mashmap_reference_file', 'sink_id': 'mashmap', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 26,
    "text_field": "['pipeline.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2.0-dev2\nclass: Workflow\nlabel: virify\n\nrequirements:\n  SubworkflowFeatureRequirement: {}  \n  MultipleInputFeatureRequirement: {}\n  StepInputExpressionRequirement: {}\n  ScatterFeatureRequirement: {}\n  InlineJavascriptRequirement: {}\n\ninputs:\n  input_fasta_file:  # input assembly\n    type: File\n    format: edam:format_1929\n  virsorter_virome:\n    type: boolean\n    default: false\n    doc: |\n      Set this parameter if the input fasta is mostly viral.\n      See: https://github.com/simroux/VirSorter/issues/50\n  # == Databases == #\n  virsorter_data_dir:\n    type: Directory\n    doc: |\n      VirSorter supporting database files.\n  add_hmms_tsv:\n    type: File\n    format: edam:format_3475\n    doc: |\n        Additonal metadata tsv\n  hmmscan_database_dir:\n    type: Directory\n    doc: |\n      HMMScan Viral HMM (databases/vpHMM/vpHMM_database).\n      NOTE: it needs to be a full path.\n  ncbi_tax_db_file:\n    type: File\n    doc: |\n      ete3 NCBITaxa db https://github.com/etetoolkit/ete/blob/master/ete3/ncbi_taxonomy/ncbiquery.py\n      http://etetoolkit.org/docs/latest/tutorial/tutorial_ncbitaxonomy.html\n      This file was manually built and placed in the corresponding path (on databases)\n  img_blast_database_dir:\n    type: Directory\n    doc: |\n      Downloaded from:\n      https://genome.jgi.doe.gov/portal/IMG_VR/IMG_VR.home.html\n  # optional steps\n  mashmap_reference_file:\n    type: File?\n    doc: |\n      MashMap Reference file. Use MashMap to \n  # == singularity containers == #\n  pprmeta_simg:\n    type: File\n    doc: |\n      PPR-Meta singularity simg file\n\nsteps:\n  fasta_rename:\n    label: Filter contigs\n    run: ./Tools/FastaRename/fasta_rename.cwl\n    in:\n      input: input_fasta_file\n    out:\n      - renamed_fasta\n      - name_map\n\n  length_filter:\n    label: Filter contigs\n    run: ./Tools/LengthFiltering/length_filtering.cwl\n    doc: Default lenght 1kb https://github.com/EBI-Metagenomics/emg-virify-scripts/issues/6\n    in:\n      fasta_file: fasta_rename/renamed_fasta\n      length:\n        default: 1.0\n    out:\n      - filtered_contigs_fasta\n\n  virfinder:\n    label: VirFinder\n    run: ./Tools/VirFinder/virfinder.cwl\n    in:\n      fasta_file: length_filter/filtered_contigs_fasta\n    out:\n      - virfinder_output\n\n  virsorter:\n    label: VirSorter\n    run: ./Tools/VirSorter/virsorter.cwl\n    in:\n      fasta_file: length_filter/filtered_contigs_fasta\n      data_dir: virsorter_data_dir\n      virome_decontamination_mode: virsorter_virome\n    out:\n      - virsorter_fastas \n\n  pprmeta:\n    label: PPR-Meta\n    run: ./Tools/PPRMeta/pprmeta.cwl\n    in:\n      singularity_image: pprmeta_simg\n      fasta_file: length_filter/filtered_contigs_fasta\n    out:\n      - pprmeta_output\n\n  parse_pred_contigs:\n    label: Combine\n    run: ./Tools/ParsingPredictions/parse_viral_pred.cwl\n    in:\n      assembly: length_filter/filtered_contigs_fasta\n      virfinder_tsv: virfinder/virfinder_output\n      virsorter_fastas: virsorter/virsorter_fastas\n      pprmeta_csv: pprmeta/pprmeta_output\n    out:\n      - high_confidence_contigs\n      - low_confidence_contigs\n      - prophages_contigs\n\n  prodigal:\n    label: Prodigal\n    run: ./Tools/Prodigal/prodigal_swf.cwl\n    in:\n      high_confidence_contigs: parse_pred_contigs/high_confidence_contigs\n      low_confidence_contigs: parse_pred_contigs/low_confidence_contigs\n      prophages_contigs: parse_pred_contigs/prophages_contigs\n    out:\n      - high_confidence_contigs_genes\n      - low_confidence_contigs_genes\n      - prophages_contigs_genes\n\n  hmmscan:\n    label: hmmscan\n    run: ./Tools/HMMScan/hmmscan_swf.cwl\n    in:\n      aa_fasta_files:\n        source: \n          - prodigal/high_confidence_contigs_genes\n          - prodigal/low_confidence_contigs_genes\n          - prodigal/prophages_contigs_genes\n        linkMerge: merge_flattened\n      database: hmmscan_database_dir\n    out:\n      # single concatenated table\n      - output_table\n\n  ratio_evalue:\n    label: ratio evalue ViPhOG\n    run: ./Tools/RatioEvalue/ratio_evalue.cwl\n    in:\n      hmmscan_table: hmmscan/output_table\n      hmms_tsv: add_hmms_tsv\n    out:\n      - informative_table\n\n  annotation:\n    label: ViPhOG annotations\n    run: ./Tools/Annotation/viral_annotation_swf.cwl\n    in:\n      input_fastas:\n        source:\n          - prodigal/high_confidence_contigs_genes\n          - prodigal/low_confidence_contigs_genes\n          - prodigal/prophages_contigs_genes\n        linkMerge: merge_flattened\n      hmmer_table: ratio_evalue/informative_table\n    out:\n      - annotation_tables\n\n  assign:\n    label: Taxonomic assign\n    run: ./Tools/Assign/assign_swf.cwl\n    in:\n      input_tables: annotation/annotation_tables\n      ncbi_tax_db: ncbi_tax_db_file\n    out:\n      - assign_tables\n\n  krona:\n    label: krona plots\n    run:  ./Tools/Krona/krona_swf.cwl\n    in:\n      assign_tables: assign/assign_tables\n    out:\n      - krona_htmls\n      - krona_all_html\n\n  fasta_restore_name_hc:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/high_confidence_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  fasta_restore_name_lc:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/low_confidence_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  fasta_restore_name_pp:\n    label: Restore fasta names\n    run: ./Tools/FastaRename/fasta_restore.cwl\n    in:\n      input: parse_pred_contigs/prophages_contigs\n      name_map: fasta_rename/name_map\n    out:\n      - restored_fasta\n\n  imgvr_blast:\n    label: Blast in a database of viral sequences including metagenomes\n    run: ./Tools/IMGvrBlast/imgvr_blast_swf.cwl\n    in:\n      fasta_files:\n        source:\n          - parse_pred_contigs/high_confidence_contigs\n          - parse_pred_contigs/low_confidence_contigs\n          - parse_pred_contigs/prophages_contigs\n        linkMerge: merge_flattened\n      database: img_blast_database_dir\n    out:\n      - blast_results\n      - blast_result_filtereds\n      - merged_tsvs\n  \n  mashmap:\n    label: MashMap\n    run: ./Tools/MashMap/mashmap_swf.cwl\n    when: $(inputs.reference !== undefined)\n    in:\n      input_fastas:\n        source:\n          - parse_pred_contigs/high_confidence_contigs\n          - parse_pred_contigs/low_confidence_contigs\n          - parse_pred_contigs/prophages_contigs\n        linkMerge: merge_flattened\n      reference: mashmap_reference_file\n    out:\n      # each table will have the input as prefix of the name\n      - output_table\n  \noutputs:\n  filtered_contigs:\n    outputSource: length_filter/filtered_contigs_fasta\n    type: File\n  virfinder_output:\n    outputSource: virfinder/virfinder_output\n    type: File\n  virsorter_output_fastas:\n    outputSource: virsorter/virsorter_fastas\n    type: File[]\n  high_confidence_contigs:\n    outputSource: fasta_restore_name_hc/restored_fasta\n    type: File?\n  low_confidence_contigs:\n    outputSource: fasta_restore_name_lc/restored_fasta\n    type: File?\n  parse_prophages_contigs:\n    outputSource: fasta_restore_name_pp/restored_fasta\n    type: File?\n  high_confidence_faa:\n    outputSource: prodigal/high_confidence_contigs_genes\n    type: File?\n  low_confidence_faa:\n    outputSource: prodigal/low_confidence_contigs_genes\n    type: File?\n  prophages_faa:\n    outputSource: prodigal/prophages_contigs_genes\n    type: File?\n  taxonomy_assignations:\n    outputSource: assign/assign_tables\n    type:\n      type: array\n      items: File\n  krona_plots:\n    outputSource: krona/krona_htmls\n    type:\n      type: array\n      items: File\n  krona_plot_all:\n    outputSource: krona/krona_all_html\n    type: File\n  blast_results:\n    outputSource: imgvr_blast/blast_results\n    type: File[]\n  blast_result_filtereds:\n    outputSource: imgvr_blast/blast_result_filtereds\n    type: File[]\n  blast_merged_tsvs:\n    outputSource: imgvr_blast/merged_tsvs\n    type: File[]\n  # optional \n  mashmap_hits:\n    outputSource: mashmap/output_table\n    type:\n      - \"null\"\n      - type: array\n        items: File\n\n$namespaces:\n edam: http://edamontology.org/\n s: http://schema.org/\n$schemas:\n - http://edamontology.org/EDAM_1.16.owl\n - https://schema.org/version/latest/schema.rdf\n\ns:license: \"https://www.apache.org/licenses/LICENSE-2.0\"\ns:copyrightHolder:\n    - name: \"EMBL - European Bioinformatics Institute\"\n    - url: \"https://www.ebi.ac.uk/",
    "p_tag_content": "VIRify is a recently developed pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies. The pipeline is part of the repertoire of analysis services offered byMGnify. VIRify’s taxonomic classification relies on the detection of taxon-specific profile hidden Markov models (HMMs), built upon a set of 22,014 orthologous protein domains and referred to as ViPhOGs. VIRify was implemented in CWL. The current implementation uses CWL version 1.2 dev+2. It was tested using Toil version 4.10 as the workflow engine and conda to manage the software dependencies. Soon… Although VIRify has been benchmarked and validated with metagenomic data in mind, it is also possible to use this tool to detect RNA viruses in metatranscriptome assemblies (e.g. SARS-CoV-2). However, some additional considerations for this purpose are outlined below:1. Quality control:As for metagenomic data, a thorough quality control of the FASTQ sequence reads to remove low-quality bases, adapters and host contamination (if appropriate) is required prior to assembly. This is especially important for metatranscriptomes as small errors can further decrease the quality and contiguity of the assembly obtained. We have usedTrimGalorefor this purpose. 2. Assembly:There are many assemblers available that are appropriate for either metagenomic or single-species transcriptomic data. However, to our knowledge, there is no assembler currently available specifically for metatranscriptomic data. From our preliminary investigations, we have found that transcriptome-specific assemblers (e.g.rnaSPAdes) generate more contiguous and complete metatranscriptome assemblies compared to metagenomic alternatives (e.g.MEGAHITandmetaSPAdes). 3. Post-processing:Metatranscriptomes generate highly fragmented assemblies. Therefore, filtering contigs based on a set minimum length has a substantial impact in the number of contigs processed in VIRify. It has also been observed that the number of false-positive detections ofVirFinder(one of the tools included in VIRify) is lower among larger contigs. The choice of a length threshold will depend on the complexity of the sample and the sequencing technology used, but in our experience any contigs <2 kb should be analysed with caution. 4. Classification:The classification module of VIRify depends on the presence of a minimum number and proportion of phylogenetically-informative genes within each contig in order to confidently assign a taxonomic lineage. Therefore, short contigs typically obtained from metatranscriptome assemblies remain generally unclassified. For targeted classification of RNA viruses (for instance, to search for Coronavirus-related sequences), alternative DNA- or protein-based classification methods can be used. Two of the possible options are: (i) usingMashMapto screen the VIRify contigs against a database of RNA viruses (e.g. Coronaviridae) or (ii) usinghmmsearchto screen the proteins obtained in the VIRify contigs against marker genes of the taxon of interest. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/26?version=1 DOI:10.48546/workflowhub.workflow.26.1 Martin Hölzer, Alexandre Almeida, Guillermo Rangel-Pineros and Ekaterina Sakharova Views:5232Downloads:685 Created: 8th Jun 2020 at 11:21 Last updated: 8th Mar 2021 at 21:38 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified"
  },
  {
    "": 205,
    "discussion_links": [],
    "title": "var-PE",
    "license": "Apache-2.0",
    "description": "Analysis of variation within individual COVID-19 samples \nusing bowtie2, bwa, fastp, multiqc , picard ,samtools, snpEff \nWorkflow, tools and data are available on https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/tree/master/Variation\nThis worklow was ported into CWL from a  Galaxy Workflow \n  ( https://github.com/galaxyproject/SARS-CoV-2/tree/master/genomics/4-Variation migrated to CWL).",
    "latest_version": 1,
    "tags": "['CWL', 'covid-19', 'variation']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/28?version=1', 'commit': 'b35522334420dde27958d697fd0a63ed0c94753a', 'ref': 'refs/heads/master', 'tree': '/workflows/28/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-08T14:57:04.000Z",
    "updated_at": "2023-01-16T13:41:56.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/15', 'family_name': 'Juigné', 'given_name': 'Camille', 'affiliation': 'IRISA', 'orcid': 'https://orcid.org/0000-0003-1157-9030'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'reads_reverse', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reads_forward', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_in', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unqualified_phred_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'threads', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'qualified_phred_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_length_required', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'force_polyg_tail_trimming', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'disable_trim_poly_g', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'base_correction', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'sort_order', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['queryname', 'coordinate', 'duplicate']}], 'default_value': None}, {'id': 'validation_stringency', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['STRICT', 'LENIENT', 'SILENT']}], 'default_value': None}, {'id': 'exclude_unmapped', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'count', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'alignments_are_sorted', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'remove_duplicates', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'validation_stringency_1', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['STRICT', 'LENIENT', 'SILENT']}], 'default_value': None}, {'id': 'comment', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'duplicate_scoring_strategy', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['SUM_OF_BASE_QUALITIES', 'TOTAL_MAPPED_REFERENCE_LENGTH', 'RANDOM']}], 'default_value': None}, {'id': 'optical_duplicate_pixel_distance', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'barcode_tag', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'keepflags', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'defqual', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'bq2_handling', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['keep', 'dynamic', 'fixed']}], 'default_value': None}, {'id': 'bed', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bonferroni', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'call_indels', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'def_alt_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'def_alt_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'del_baq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'enable_source_qual', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'ignore_vcf', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'illumina_1_3', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'max_depth_cov', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'max_mapping_quality', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_cov', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_mq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'use_orphan', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'threads_lf_call', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'replace_non_match', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'region', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'pvalue_cutoff', 'name': None, 'description': None, 'type': [{'type': 'float?'}], 'default_value': None}, {'id': 'only_indels', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_idaq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_default_filter', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_baq', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_mapping_quality', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_ext_base_alignment_quality', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'min_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_alt_jq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_alt_bq', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'genome_reference', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'udLength', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'transcripts', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'strict', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'spliceSiteSize', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionIntronMin', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionIntronMax', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'spliceRegionExonSize', 'name': None, 'description': None, 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'sequenceOntology', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'outputFormat', 'name': None, 'description': None, 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['vcf', 'bed', 'gatk', 'bedAnn']}], 'default_value': None}, {'id': 'onlyReg', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'onlyProtein', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'oicr', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noStats', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noShiftHgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noNextProt', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noMotif', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'bankfile', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'cancer', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'cancerSamples', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'canon', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'classic', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'csvFile', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'filterInterval', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'hgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'formatEff', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'html_report_1', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'importGenome', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'interval', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'lof', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'motif', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'nextProt', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_downstream', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_EffectType', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_intergenic', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_intron', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_upstream', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'no_utr', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noGenome', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noHgvs', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'noLof', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'geneId', 'name': None, 'description': None, 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'separator', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'empty_text', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'extractFields', 'name': None, 'description': None, 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'IndexName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'multiqc_fastp', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_fastp/multiqc_zip']}, {'id': 'stats_bam', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['samtools_stats/stats']}, {'id': 'multiqc_markdups', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_markdups/multiqc_zip']}, {'id': 'multiqc_samtoolsstats', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['multiqc_stats/multiqc_zip']}, {'id': 'statsFile_snpeff', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['snpeff_build_ann/statsFile']}, {'id': 'out_snpsift', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['snpsift_extract/out']}], 'steps': [{'id': 'fastp', 'name': None, 'description': None, 'sink_ids': ['fastp/html_report', 'fastp/json_report', 'fastp/out_fastq1', 'fastp/out_fastq2']}, {'id': 'multiqc_fastp', 'name': None, 'description': None, 'sink_ids': ['multiqc_fastp/multiqc_zip']}, {'id': 'samtools_view_filter', 'name': None, 'description': None, 'sink_ids': ['samtools_view_filter/bam_filtered']}, {'id': 'picard_sortsam', 'name': None, 'description': None, 'sink_ids': ['picard_sortsam/sorted_alignments']}, {'id': 'picard__mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['picard__mark_duplicates/alignments', 'picard__mark_duplicates/log', 'picard__mark_duplicates/metrics']}, {'id': 'multiqc_markdups', 'name': None, 'description': None, 'sink_ids': ['multiqc_markdups/multiqc_zip']}, {'id': 'lofreq_viterbi', 'name': None, 'description': None, 'sink_ids': ['lofreq_viterbi/realigned']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/bam_sorted']}, {'id': 'samtools_faidx', 'name': None, 'description': None, 'sink_ids': ['samtools_faidx/sequences_index', 'samtools_faidx/sequences_with_index']}, {'id': 'samtool_index', 'name': None, 'description': None, 'sink_ids': ['samtool_index/bam_sorted_indexed']}, {'id': 'bwa_index_cwl', 'name': None, 'description': None, 'sink_ids': ['bwa_index_cwl/index']}, {'id': 'get_secondaryfiles', 'name': None, 'description': None, 'sink_ids': ['get_secondaryfiles/sequences_with_index']}, {'id': 'get_tab', 'name': None, 'description': None, 'sink_ids': ['get_tab/tab']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/reads_stdout']}, {'id': 'samtools_stats', 'name': None, 'description': None, 'sink_ids': ['samtools_stats/stats']}, {'id': 'multiqc_stats', 'name': None, 'description': None, 'sink_ids': ['multiqc_stats/multiqc_zip']}, {'id': 'lofreq_call', 'name': 'LoFreq Call Variants', 'description': None, 'sink_ids': ['lofreq_call/vcf']}, {'id': 'snpeff_build_ann', 'name': None, 'description': None, 'sink_ids': ['snpeff_build_ann/snpeff_output', 'snpeff_build_ann/statsFile', 'snpeff_build_ann/csvFile', 'snpeff_build_ann/genes']}, {'id': 'snpsift_extract', 'name': None, 'description': None, 'sink_ids': ['snpsift_extract/out']}], 'links': [{'id': 'base_correction', 'source_id': 'base_correction', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'disable_trim_poly_g', 'source_id': 'disable_trim_poly_g', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'fastq1', 'source_id': 'reads_forward', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'fastq2', 'source_id': 'reads_reverse', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'force_polyg_tail_trimming', 'source_id': 'force_polyg_tail_trimming', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'min_length_required', 'source_id': 'min_length_required', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'qualified_phred_quality', 'source_id': 'qualified_phred_quality', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'unqualified_phred_quality', 'source_id': 'unqualified_phred_quality', 'sink_id': 'fastp', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_fastp', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'fastp/json_report', 'sink_id': 'multiqc_fastp', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'bwa_mem/reads_stdout', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'count', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'exclude_unmapped', 'source_id': 'exclude_unmapped', 'sink_id': 'samtools_view_filter', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'samtools_view_filter/bam_filtered', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'sort_order', 'source_id': 'sort_order', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'validation_stringency', 'source_id': 'validation_stringency', 'sink_id': 'picard_sortsam', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'picard_sortsam/sorted_alignments', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'alignments_are_sorted', 'source_id': 'alignments_are_sorted', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'barcode_tag', 'source_id': 'barcode_tag', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'comment', 'source_id': 'comment', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'duplicate_scoring_strategy', 'source_id': 'duplicate_scoring_strategy', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'optical_duplicate_pixel_distance', 'source_id': 'optical_duplicate_pixel_distance', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'remove_duplicates', 'source_id': 'remove_duplicates', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'validation_stringency', 'source_id': 'validation_stringency_1', 'sink_id': 'picard__mark_duplicates', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_markdups', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'picard__mark_duplicates/metrics', 'sink_id': 'multiqc_markdups', 'name': None, 'default_value': None}, {'id': 'defqual', 'source_id': 'defqual', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'keepflags', 'source_id': 'keepflags', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'picard__mark_duplicates/alignments', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'reference_in', 'sink_id': 'lofreq_viterbi', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'lofreq_viterbi/realigned', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'reference_in', 'sink_id': 'samtools_faidx', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'samtools_sort/bam_sorted', 'sink_id': 'samtool_index', 'name': None, 'default_value': None}, {'id': 'InputFile', 'source_id': 'reference_in', 'sink_id': 'bwa_index_cwl', 'name': None, 'default_value': None}, {'id': 'IndexName', 'source_id': 'IndexName', 'sink_id': 'bwa_index_cwl', 'name': None, 'default_value': None}, {'id': 'bwa_index', 'source_id': 'bwa_index_cwl/index', 'sink_id': 'get_secondaryfiles', 'name': None, 'default_value': None}, {'id': 'sequence', 'source_id': 'samtools_faidx/sequences_with_index', 'sink_id': 'get_secondaryfiles', 'name': None, 'default_value': None}, {'id': 'out_fastq1', 'source_id': 'fastp/out_fastq1', 'sink_id': 'get_tab', 'name': None, 'default_value': None}, {'id': 'out_fastq2', 'source_id': 'fastp/out_fastq2', 'sink_id': 'get_tab', 'name': None, 'default_value': None}, {'id': 'Index', 'source_id': 'get_secondaryfiles/sequences_with_index', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'InputFile', 'source_id': 'get_tab/tab', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'input_file', 'source_id': 'samtools_view_filter/bam_filtered', 'sink_id': 'samtools_stats', 'name': None, 'default_value': None}, {'id': 'report_name', 'source_id': None, 'sink_id': 'multiqc_stats', 'name': None, 'default_value': None}, {'id': 'qc_files_array', 'source_id': 'samtools_stats/stats', 'sink_id': 'multiqc_stats', 'name': None, 'default_value': None}, {'id': 'bed', 'source_id': 'bed', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'bonferroni', 'source_id': 'bonferroni', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'call_indels', 'source_id': 'call_indels', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'def_alt_bq', 'source_id': 'def_alt_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'def_alt_jq', 'source_id': 'def_alt_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'del_baq', 'source_id': 'del_baq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'enable_source_qual', 'source_id': 'enable_source_qual', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'ignore_vcf', 'source_id': 'ignore_vcf', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'illumina_1_3', 'source_id': 'illumina_1_3', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'max_depth_cov', 'source_id': 'max_depth_cov', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'max_mapping_quality', 'source_id': 'max_mapping_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_alt_bq', 'source_id': 'min_alt_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_alt_jq', 'source_id': 'min_alt_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_bq', 'source_id': 'min_bq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_cov', 'source_id': 'min_cov', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_jq', 'source_id': 'min_jq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'min_mq', 'source_id': 'min_mq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_baq', 'source_id': 'no_baq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_default_filter', 'source_id': 'no_default_filter', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_ext_base_alignment_quality', 'source_id': 'no_ext_base_alignment_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_idaq', 'source_id': 'no_idaq', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'no_mapping_quality', 'source_id': 'no_mapping_quality', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'only_indels', 'source_id': 'only_indels', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'pvalue_cutoff', 'source_id': 'pvalue_cutoff', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reads_align', 'source_id': 'samtools_sort/bam_sorted', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reads_index', 'source_id': 'samtool_index/bam_sorted_indexed', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reference_fasta', 'source_id': 'samtools_faidx/sequences_with_index', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'reference_index', 'source_id': 'samtools_faidx/sequences_index', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'region', 'source_id': 'region', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'replace_non_match', 'source_id': 'replace_non_match', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads_lf_call', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'use_orphan', 'source_id': 'use_orphan', 'sink_id': 'lofreq_call', 'name': None, 'default_value': None}, {'id': 'importGenome', 'source_id': 'importGenome', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'genome_reference', 'source_id': 'genome_reference', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'bankfile', 'source_id': 'bankfile', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'sequence', 'source_id': 'lofreq_call/vcf', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'outputFormat', 'source_id': 'outputFormat', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'udLength', 'source_id': 'udLength', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'html_report', 'source_id': 'html_report_1', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'csvFile', 'source_id': 'csvFile', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noStats', 'source_id': 'noStats', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'formatEff', 'source_id': 'formatEff', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'classic', 'source_id': 'classic', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'sequenceOntology', 'source_id': 'sequenceOntology', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'hgvs', 'source_id': 'hgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noShiftHgvs', 'source_id': 'noShiftHgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noHgvs', 'source_id': 'noHgvs', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'geneId', 'source_id': 'geneId', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'lof', 'source_id': 'lof', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noLof', 'source_id': 'noLof', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'cancer', 'source_id': 'cancer', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'cancerSamples', 'source_id': 'cancerSamples', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'oicr', 'source_id': 'oicr', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'canon', 'source_id': 'canon', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'motif', 'source_id': 'motif', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noMotif', 'source_id': 'noMotif', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noNextProt', 'source_id': 'noNextProt', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'nextProt', 'source_id': 'nextProt', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'noGenome', 'source_id': 'noGenome', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'onlyProtein', 'source_id': 'onlyProtein', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'transcripts', 'source_id': 'transcripts', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'interval', 'source_id': 'interval', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionExonSize', 'source_id': 'spliceRegionExonSize', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionIntronMax', 'source_id': 'spliceRegionIntronMax', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceRegionIntronMin', 'source_id': 'spliceRegionIntronMin', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'spliceSiteSize', 'source_id': 'spliceSiteSize', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'onlyReg', 'source_id': 'onlyReg', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'strict', 'source_id': 'strict', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'filterInterval', 'source_id': 'filterInterval', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_downstream', 'source_id': 'no_downstream', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_intergenic', 'source_id': 'no_intergenic', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_intron', 'source_id': 'no_intron', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_upstream', 'source_id': 'no_upstream', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_utr', 'source_id': 'no_utr', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'no_EffectType', 'source_id': 'no_EffectType', 'sink_id': 'snpeff_build_ann', 'name': None, 'default_value': None}, {'id': 'input_vcf', 'source_id': 'snpeff_build_ann/snpeff_output', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'extractFields', 'source_id': 'extractFields', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'separator', 'source_id': 'separator', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}, {'id': 'empty_text', 'source_id': 'empty_text', 'sink_id': 'snpsift_extract', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 28,
    "text_field": "['variation_PE.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: var_pe\nlabel: var-PE\n$namespaces:\n  edam: 'http://edamontology.org/'\ninputs:\n  - id: reads_reverse\n    type: File[]\n    format:\n      - 'edam:format_1930'\n      - 'edam:format_1931'\n\n  - id: reads_forward\n    type: File[]\n    format:\n      - 'edam:format_1930'\n      - 'edam:format_1931'\n  - id: reference_in\n    type: File\n\n   #### 1-  fastp options:\n  - id: unqualified_phred_quality\n    type: int?\n  - id: threads\n    type: int?\n  - id: qualified_phred_quality\n    type: int?\n  - id: min_length_required\n    type: int?\n  - id: force_polyg_tail_trimming\n    type: boolean?\n  - id: disable_trim_poly_g\n    type: boolean?\n  - id: base_correction\n    type: boolean?\n\n   #### picard__sort_sam options:\n  - id: sort_order\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - queryname\n          - coordinate\n          - duplicate\n  - id: validation_stringency\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - STRICT\n          - LENIENT\n          - SILENT\n\n# samtools_view\n  - id: exclude_unmapped\n    type: boolean?\n  - id: count\n    type: boolean\n\n   #### picard__mark_duplicates options:\n  - id: alignments_are_sorted\n    type: boolean\n  - id: remove_duplicates\n    type: boolean\n  - id: validation_stringency_1\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - STRICT\n          - LENIENT\n          - SILENT\n  - id: comment\n    type: 'string[]?'\n  - id: duplicate_scoring_strategy\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - SUM_OF_BASE_QUALITIES\n          - TOTAL_MAPPED_REFERENCE_LENGTH\n          - RANDOM\n  - id: optical_duplicate_pixel_distance\n    type: int?\n  - id: barcode_tag\n    type: string?\n\n   ####lofreq_viterbi options:\n  - id: keepflags\n    type: boolean?\n  - id: defqual\n    type: int?\n  - id: bq2_handling\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - keep\n          - dynamic\n          - fixed\n\n   #### lofreq_cal_variants options:\n  - id: bed\n    type: File?\n  - id: bonferroni\n    type: string?\n  - id: call_indels\n    type: boolean?\n  - id: def_alt_bq\n    type: int?\n  - id: def_alt_jq\n    type: int?\n  - id: del_baq\n    type: boolean?\n  - id: enable_source_qual\n    type: boolean?\n  - id: ignore_vcf\n    type: 'File[]?'\n  - id: illumina_1_3\n    type: boolean?\n  - id: max_depth_cov\n    type: int?\n  - id: max_mapping_quality\n    type: int?\n  - id: min_bq\n    type: int?\n  - id: min_cov\n    type: int?\n  - id: min_mq\n    type: int?\n  - id: use_orphan\n    type: boolean?\n  - id: threads_lf_call\n    type: int?\n  - id: replace_non_match\n    type: int?\n  - id: region\n    type: string?\n  - id: pvalue_cutoff\n    type: float?\n  - id: only_indels\n    type: boolean?\n  - id: no_idaq\n    type: boolean?\n  - id: no_default_filter\n    type: boolean?\n  - id: no_baq\n    type: boolean?\n  - id: no_mapping_quality\n    type: boolean?\n  - id: no_ext_base_alignment_quality\n    type: boolean?\n  - id: min_jq\n    type: int?\n  - id: min_alt_jq\n    type: int?\n  - id: min_alt_bq\n    type: int?\n\n   #### SnpEff build & ann:\n  - id: genome_reference\n    type: string\n  - id: udLength\n    type: int\n  - id: transcripts\n    type: File?\n  - id: strict\n    type: boolean?\n  - id: spliceSiteSize\n    type: int?\n  - id: spliceRegionIntronMin\n    type: int?\n  - id: spliceRegionIntronMax\n    type: int?\n  - id: spliceRegionExonSize\n    type: int?\n  - id: sequenceOntology\n    type: boolean?\n  - id: outputFormat\n    type:\n      - 'null'\n      - type: enum\n        symbols:\n          - vcf\n          - bed\n          - gatk\n          - bedAnn\n  - id: onlyReg\n    type: boolean?\n  - id: onlyProtein\n    type: boolean?\n  - id: oicr\n    type: boolean?\n  - id: noStats\n    type: boolean?\n  - id: noShiftHgvs\n    type: boolean?\n  - id: noNextProt\n    type: boolean?\n  - id: noMotif\n    type: boolean?\n  - id: bankfile\n    type: File?\n  - id: cancer\n    type: boolean?\n  - id: cancerSamples\n    type: File?\n  - id: canon\n    type: boolean?\n  - id: classic\n    type: boolean?\n  - id: csvFile\n    type: boolean?\n  - id: filterInterval\n    type: 'File[]?'\n  - id: hgvs\n    type: boolean?\n  - id: formatEff\n    type: boolean?\n  - id: html_report_1\n    type: boolean?\n  - id: importGenome\n    type: boolean\n  - id: interval\n    type: 'File[]?'\n  - id: lof\n    type: boolean?\n  - id: motif\n    type: boolean?\n  - id: nextProt\n    type: boolean?\n  - id: no_downstream\n    type: boolean?\n  - id: no_EffectType\n    type: boolean?\n  - id: no_intergenic\n    type: boolean?\n  - id: no_intron\n    type: boolean?\n  - id: no_upstream\n    type: boolean?\n  - id: no_utr\n    type: boolean?\n  - id: noGenome\n    type: boolean?\n  - id: noHgvs\n    type: boolean?\n  - id: noLof\n    type: boolean?\n  - id: geneId\n    type: boolean?\n\n   #### SNPSIFT\n  - id: separator\n    type: string?\n  - id: empty_text\n    type: string?\n  - id: extractFields\n    type: 'string[]?'\n\n  - id: IndexName\n    type: string\n\noutputs:\n  - id: multiqc_fastp\n    type: File\n    outputSource:\n      - multiqc_fastp/multiqc_zip\n  - id: stats_bam\n    type: File[]\n    outputSource:\n      - samtools_stats/stats\n  - id: multiqc_markdups\n    type: File\n    outputSource:\n      - multiqc_markdups/multiqc_zip\n  - id: multiqc_samtoolsstats\n    outputSource:\n       - multiqc_stats/multiqc_zip\n    type: File\n#  - id: log\n#    outputSource:\n#      - picard__mark_duplicates/log\n#    type: File[]\n#  - id: alignments\n#    outputSource:\n#      - picard__mark_duplicates/alignments\n#    type: File[]\n#  - id: genes\n#    outputSource:\n#      - snpeff_build_ann/genes\n#    type: File[]\n  - id: statsFile_snpeff\n    outputSource:\n      - snpeff_build_ann/statsFile\n    type: File[]\n  - id: out_snpsift\n    outputSource:\n      - snpsift_extract/out\n    type: File[]\nsteps:\n  - id: fastp\n    scatter: [fastq1, fastq2]\n    scatterMethod: dotproduct\n    in:\n      - id: base_correction\n        source: base_correction\n      - id: disable_trim_poly_g\n        source: disable_trim_poly_g\n      - id: fastq1\n        source: reads_forward\n      - id: fastq2\n        source: reads_reverse\n      - id: force_polyg_tail_trimming\n        source: force_polyg_tail_trimming\n      - id: min_length_required\n        source: min_length_required\n      - id: qualified_phred_quality\n        source: qualified_phred_quality\n      - id: threads\n        source: threads\n      - id: unqualified_phred_quality\n        source: unqualified_phred_quality\n    out:\n      - id: html_report\n      - id: json_report\n      - id: out_fastq1\n      - id: out_fastq2\n    run: ./tools/fastp.cwl\n\n  - id: multiqc_fastp\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_fast'\n      - id: qc_files_array\n        source: fastp/json_report\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl\n\n  - id: samtools_view_filter\n    scatter: bam\n    in:\n      - id: bam\n        source: bwa_mem/reads_stdout\n      - id: count\n        source: count\n      - id: exclude_unmapped\n        source: exclude_unmapped\n    out:\n      - id: bam_filtered\n    run: ./tools/samtools_view_filter.cwl\n\n  - id: picard_sortsam\n    scatter: alignments\n    in: \n      - id: alignments\n        source: samtools_view_filter/bam_filtered\n      - id: sort_order\n        source: sort_order\n      - id: validation_stringency\n        source: validation_stringency\n    out:\n      - id: sorted_alignments\n    run: ./tools/picard_SortSam.cwl\n\n  - id: picard__mark_duplicates\n    scatter: alignments\n    in:\n      - id: alignments\n        source: picard_sortsam/sorted_alignments\n      - id: alignments_are_sorted\n        source: alignments_are_sorted\n      - id: barcode_tag\n        source: barcode_tag\n      - id: comment\n        source:\n          - comment\n      - id: duplicate_scoring_strategy\n        source: duplicate_scoring_strategy\n      - id: optical_duplicate_pixel_distance\n        source: optical_duplicate_pixel_distance\n      - id: remove_duplicates\n        source: remove_duplicates\n      - id: validation_stringency\n        source: validation_stringency_1\n    out:\n      - id: alignments\n      - id: log\n      - id: metrics\n    run: ./tools/picard_MarkDuplicates.cwl\n\n  - id: multiqc_markdups\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_markdups'\n      - id: qc_files_array\n        source: picard__mark_duplicates/metrics\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl\n\n  - id: lofreq_viterbi\n    scatter: reads\n    in:\n      - id: defqual\n        source: defqual\n      - id: keepflags\n        source: keepflags\n      - id: reads\n        source: picard__mark_duplicates/alignments\n      - id: reference\n        source: reference_in\n    out:\n      - id: realigned\n    run: ./tools/lofreq_viterbi.cwl\n\n  - id: samtools_sort\n    scatter: bam_unsorted\n    in:\n      - id: bam_unsorted\n        source: lofreq_viterbi/realigned\n    out:\n      - id: bam_sorted\n    run: ./tools/samtools_sort.cwl\n\n  - id: samtools_faidx\n    in:\n      - id: sequences\n        source: reference_in\n    out:\n      - id: sequences_index\n      - id: sequences_with_index\n    run: ./tools/samtools_faidx.cwl\n    \n  - id: samtool_index\n    scatter: bam_sorted\n    in:\n      - id: bam_sorted\n        source: samtools_sort/bam_sorted\n    out:\n      - id: bam_sorted_indexed\n    run: ./tools/samtools_index.cwl\n\n  - id: bwa_index_cwl\n    in:\n      - id: InputFile\n        source: reference_in\n      - id: IndexName\n        source: IndexName\n    out:\n      - id: index\n    run: ./tools/bwa-index.cwl\n    \n  - id: get_secondaryfiles\n    in:\n      - id: bwa_index\n        source: bwa_index_cwl/index\n      - id: sequence\n        source: samtools_faidx/sequences_with_index\n    out:\n      - id: sequences_with_index\n    run: ./tools/get_secondaryfiles.cwl\n  - id: get_tab\n    scatter: [out_fastq1, out_fastq2]\n    scatterMethod: dotproduct\n    in: \n      - id: out_fastq1\n        source: fastp/out_fastq1\n      - id: out_fastq2\n        source: fastp/out_fastq2\n    out:\n      - id: tab\n    run: ./tools/mergetab.cwl\n  - id: bwa_mem\n    scatter: InputFile\n    in:\n      Index:\n        source: get_secondaryfiles/sequences_with_index\n      InputFile:\n        source: get_tab/tab\n# [fastp/out_fastq1, fastp/out_fastq2]\n#        linkMerge: merge_nested #flattened\n    out:\n      - id: reads_stdout\n    run: ./tools/bwa-mem.cwl\n  - id: samtools_stats\n    scatter: input_file\n    in:\n      input_file:\n        source: samtools_view_filter/bam_filtered\n    out:\n      - id: stats\n    run: ./tools/samtools_stats.cwl\n  - id: multiqc_stats\n    in:\n      - id: report_name\n        valueFrom: 'multiqc_stats'\n      - id: qc_files_array\n        source: samtools_stats/stats\n    out:\n      - id: multiqc_zip\n    run: ./tools/multiqc.cwl \n\n  - id: lofreq_call\n    scatter: [reads_align, reads_index]\n    scatterMethod: dotproduct\n    in:\n      - id: bed\n        source: bed\n      - id: bonferroni\n        source: bonferroni\n      - id: call_indels\n        source: call_indels\n      - id: def_alt_bq\n        source: def_alt_bq\n      - id: def_alt_jq\n        source: def_alt_jq\n      - id: del_baq\n        source: del_baq\n      - id: enable_source_qual\n        source: enable_source_qual\n      - id: ignore_vcf\n        source:\n          - ignore_vcf\n      - id: illumina_1_3\n        source: illumina_1_3\n      - id: max_depth_cov\n        source: max_depth_cov\n      - id: max_mapping_quality\n        source: max_mapping_quality\n      - id: min_alt_bq\n        source: min_alt_bq\n      - id: min_alt_jq\n        source: min_alt_jq\n      - id: min_bq\n        source: min_bq\n      - id: min_cov\n        source: min_cov\n      - id: min_jq\n        source: min_jq\n      - id: min_mq\n        source: min_mq\n      - id: no_baq\n        source: no_baq\n      - id: no_default_filter\n        source: no_default_filter\n      - id: no_ext_base_alignment_quality\n        source: no_ext_base_alignment_quality\n      - id: no_idaq\n        source: no_idaq\n      - id: no_mapping_quality\n        source: no_mapping_quality\n      - id: only_indels\n        source: only_indels\n      - id: pvalue_cutoff\n        source: pvalue_cutoff\n      - id: reads_align\n        source: samtools_sort/bam_sorted\n      - id: reads_index\n        source: samtool_index/bam_sorted_indexed\n      - id: reference_fasta\n        source: samtools_faidx/sequences_with_index\n      - id: reference_index\n        source: samtools_faidx/sequences_index\n      - id: region\n        source: region\n      - id: replace_non_match\n        source: replace_non_match\n      - id: threads\n        source: threads_lf_call\n      - id: use_orphan\n        source: use_orphan\n    out:\n      - id: vcf\n    run: ./tools/lofreq_call.cwl\n    label: LoFreq Call Variants\n\n  - id: snpeff_build_ann\n    scatter: sequence\n    in:\n      - id: importGenome\n        source: importGenome\n      - id: genome_reference\n        source: genome_reference\n      - id: bankfile\n        source: bankfile\n      - id: sequence\n        source: lofreq_call/vcf\n      - id: outputFormat\n        source: outputFormat\n      - id: udLength\n        source: udLength\n      - id: html_report\n        source: html_report_1\n      - id: csvFile\n        source: csvFile\n      - id: noStats\n        source: noStats\n      - id: formatEff\n        source: formatEff\n      - id: classic\n        source: classic\n      - id: sequenceOntology\n        source: sequenceOntology\n      - id: hgvs\n        source: hgvs\n      - id: noShiftHgvs\n        source: noShiftHgvs\n      - id: noHgvs\n        source: noHgvs\n      - id: geneId\n        source: geneId\n      - id: lof\n        source: lof\n      - id: noLof\n        source: noLof\n      - id: cancer\n        source: cancer\n      - id: cancerSamples\n        source: cancerSamples\n      - id: oicr\n        source: oicr\n      - id: canon\n        source: canon\n      - id: motif\n        source: motif\n      - id: noMotif\n        source: noMotif\n      - id: noNextProt\n        source: noNextProt\n      - id: nextProt\n        source: nextProt\n      - id: noGenome\n        source: noGenome\n      - id: onlyProtein\n        source: onlyProtein\n      - id: transcripts\n        source: transcripts\n      - id: interval\n        source:\n          - interval\n      - id: spliceRegionExonSize\n        source: spliceRegionExonSize\n      - id: spliceRegionIntronMax\n        source: spliceRegionIntronMax\n      - id: spliceRegionIntronMin\n        source: spliceRegionIntronMin\n      - id: spliceSiteSize\n        source: spliceSiteSize\n      - id: onlyReg\n        source: onlyReg\n      - id: strict\n        source: strict\n      - id: filterInterval\n        source:\n          - filterInterval\n      - id: no_downstream\n        source: no_downstream\n      - id: no_intergenic\n        source: no_intergenic\n      - id: no_intron\n        source: no_intron\n      - id: no_upstream\n        source: no_upstream\n      - id: no_utr\n        source: no_utr\n      - id: no_EffectType\n        source: no_EffectType\n    out:\n      - id: snpeff_output\n      - id: statsFile\n      - id: csvFile\n      - id: genes\n    run: ./tools/snpEff_build_ann.cwl\n\n  - id: snpsift_extract\n    scatter: input_vcf\n    in:\n      - id: input_vcf\n        source: snpeff_build_ann/snpeff_output\n      - id: extractFields\n        source:\n          - extractFields\n      - id: separator\n        source: separator\n      - id: empty_text\n        source: empty_text\n    out:\n      - id: out\n    run: ./tools/snpSift_extract.cwl\n\nrequirements:\n  - class: ScatterFeatureRequirement\n  - class: SubworkflowFeatureRequirement\n  - class: MultipleInputFeatureRequirement\n  - class: StepInputExpressionRequirement\n  - class: InlineJavascriptRequirement\n\n$schemas:\n  - 'http://edamontology.org/EDAM_1.18.owl'",
    "p_tag_content": "Analysis of variation within individual COVID-19 samples\nusing bowtie2, bwa, fastp, multiqc , picard ,samtools, snpEff\nWorkflow, tools and data are available onhttps://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2/tree/master/VariationThis worklow was ported into CWL from a  Galaxy Workflow\n(https://github.com/galaxyproject/SARS-CoV-2/tree/master/genomics/4-Variationmigrated to CWL). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/28?version=1 Added/updated 1 files Views:2833Downloads:686 Created: 8th Jun 2020 at 15:57 Last updated: 30th Jun 2020 at 08:58 None Teams:CWL workflow SARS-CoV-2 Organizations:IRISA The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 206,
    "discussion_links": "[{'id': '100', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '101', 'label': 'Tutorial', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows/tutorials/md_setup'}, {'id': '102', 'label': 'Documentation', 'url': 'https://biobb-wf-md-setup.readthedocs.io/en/latest/index.html'}]",
    "title": "Protein MD Setup tutorial using BioExcel Building Blocks (biobb) in CWL",
    "license": "Apache-2.0",
    "description": "Common Workflow Language example that illustrate the process of setting up a simulation system containing a protein, step by step, using the [BioExcel Building Blocks](/projects/11) library (biobb). The particular example used is the Lysozyme protein (PDB code 1AKI). This workflow returns a resulting protein structure and simulated 3D trajectories.",
    "latest_version": 3,
    "tags": "['molecular dynamics', 'protein', 'trajectories']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/29?version=1', 'commit': '954b05ab5f24ebccb80b6ec0bf504b0d55bf6031', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Update to paths for BioBB tools. Taken from Git commit 46f24f0', 'url': 'https://workflowhub.eu/workflows/29?version=2', 'commit': '0af74373ab5790c2fa4b525f213985c381be4dd6', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/2/tree', 'doi': '10.48546/workflowhub.workflow.29.2'}, {'version': 3, 'revision_comments': 'Changing CWL label to test if this corrects the workflow title.', 'url': 'https://workflowhub.eu/workflows/29?version=3', 'commit': '7bb04e4d58d45c7f09116da046f9d07baec7ce3e', 'ref': 'refs/heads/master', 'tree': '/workflows/29/git/3/tree', 'doi': '10.48546/workflowhub.workflow.29.3'}]",
    "version": 3,
    "revision_comments": "Changing CWL label to test if this corrects the workflow title.",
    "created_at": "2021-05-10T09:00:56.000Z",
    "updated_at": "2023-01-16T13:42:00.000Z",
    "doi": "10.48546/workflowhub.workflow.29.3",
    "content_blobs": [],
    "creators": "[{'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_gppion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_gppmin_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_energy_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_energy_min_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_gppnvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_energy_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_energy_nvt_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_gppnpt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_energy_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_energy_npt_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_gppmd_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsfirst_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsfirst_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsexp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsexp_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step23_dry_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'trr', 'name': 'Trajectories - Raw trajectory', 'description': 'Raw trajectory from the free simulation step\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_trr_file']}, {'id': 'trr_imaged_dry', 'name': 'Trajectories - Post-processed trajectory', 'description': 'Post-processed trajectory, dehydrated, imaged (rotations and translations\\nremoved) and centered.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step22_image/output_traj_file']}, {'id': 'gro_dry', 'name': 'Resulting protein structure', 'description': 'Resulting protein structure taken from the post-processed trajectory, to\\nbe used as a topology, usually for visualization purposes.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step23_dry/output_str_file']}, {'id': 'gro', 'name': 'Structures - Raw structure', 'description': 'Raw structure from the free simulation step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_gro_file']}, {'id': 'cpt', 'name': 'Checkpoint file', 'description': 'GROMACS portable checkpoint file, allowing to restore (continue) the\\nsimulation from the last step of the setup process.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step18_mdrun_md/output_cpt_file']}, {'id': 'tpr', 'name': 'Topologies GROMACS portable binary run', 'description': 'GROMACS portable binary run input file, containing the starting structure\\nof the simulation, the molecular topology and all the simulation parameters.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step17_grompp_md/output_tpr_file']}, {'id': 'top', 'name': 'GROMACS topology file', 'description': 'GROMACS topology file, containing the molecular topology in an ASCII\\nreadable format.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step7_genion/output_top_zip_file']}, {'id': 'xvg_min', 'name': 'System Setup Observables - Potential Energy', 'description': 'Potential energy of the system during the minimization step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step10_energy_min/output_xvg_file']}, {'id': 'xvg_nvt', 'name': 'System Setup Observables - Temperature', 'description': 'Temperature of the system during the NVT equilibration step.\\n', 'type': [{'type': 'File'}], 'source_ids': ['step13_energy_nvt/output_xvg_file']}, {'id': 'xvg_npt', 'name': 'System Setup Observables - Pressure and density', 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['step16_energy_npt/output_xvg_file']}, {'id': 'xvg_rmsfirst', 'name': 'Simulation Analysis', 'description': 'Root Mean Square deviation (RMSd) throughout the whole free simulation\\nstep against the first snapshot of the trajectory (equilibrated system).\\n', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsfirst/output_xvg_file']}, {'id': 'xvg_rmsexp', 'name': 'Simulation Analysis', 'description': 'Root Mean Square deviation (RMSd) throughout the whole free simulation\\nstep against the experimental structure (minimized system).\\n', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsexp/output_xvg_file']}, {'id': 'xvg_rgyr', 'name': 'Simulation Analysis', 'description': 'Radius of Gyration (RGyr) of the molecule throughout the whole free simulation step\\n', 'type': [{'type': 'File'}], 'source_ids': ['step21_rgyr/output_xvg_file']}], 'steps': [{'id': 'step1_pdb', 'name': 'Fetch PDB Structure', 'description': 'Download a protein structure from the PDB database\\n', 'sink_ids': ['step1_pdb/output_pdb_file']}, {'id': 'step2_fixsidechain', 'name': 'Fix Protein structure', 'description': 'Fix the side chains, adding any side chain atoms missing in the\\noriginal structure.\\n', 'sink_ids': ['step2_fixsidechain/output_pdb_file']}, {'id': 'step3_pdb2gmx', 'name': 'Create Protein System Topology', 'description': None, 'sink_ids': ['step3_pdb2gmx/output_gro_file', 'step3_pdb2gmx/output_top_zip_file']}, {'id': 'step4_editconf', 'name': 'Create Solvent Box', 'description': None, 'sink_ids': ['step4_editconf/output_gro_file']}, {'id': 'step5_solvate', 'name': 'Fill the Box with Water Molecules', 'description': None, 'sink_ids': ['step5_solvate/output_gro_file', 'step5_solvate/output_top_zip_file']}, {'id': 'step6_grompp_genion', 'name': 'Add Ions - part 1', 'description': None, 'sink_ids': ['step6_grompp_genion/output_tpr_file']}, {'id': 'step7_genion', 'name': 'Add Ions - part 2', 'description': None, 'sink_ids': ['step7_genion/output_gro_file', 'step7_genion/output_top_zip_file']}, {'id': 'step8_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': None, 'sink_ids': ['step8_grompp_min/output_tpr_file']}, {'id': 'step9_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': None, 'sink_ids': ['step9_mdrun_min/output_trr_file', 'step9_mdrun_min/output_gro_file', 'step9_mdrun_min/output_edr_file', 'step9_mdrun_min/output_log_file']}, {'id': 'step10_energy_min', 'name': 'Energetically Minimize the System - part 3', 'description': None, 'sink_ids': ['step10_energy_min/output_xvg_file']}, {'id': 'step11_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': None, 'sink_ids': ['step11_grompp_nvt/output_tpr_file']}, {'id': 'step12_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': None, 'sink_ids': ['step12_mdrun_nvt/output_trr_file', 'step12_mdrun_nvt/output_gro_file', 'step12_mdrun_nvt/output_edr_file', 'step12_mdrun_nvt/output_log_file', 'step12_mdrun_nvt/output_cpt_file']}, {'id': 'step13_energy_nvt', 'name': 'Equilibrate the System (NVT) - part 3', 'description': None, 'sink_ids': ['step13_energy_nvt/output_xvg_file']}, {'id': 'step14_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': None, 'sink_ids': ['step14_grompp_npt/output_tpr_file']}, {'id': 'step15_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': None, 'sink_ids': ['step15_mdrun_npt/output_trr_file', 'step15_mdrun_npt/output_gro_file', 'step15_mdrun_npt/output_edr_file', 'step15_mdrun_npt/output_log_file', 'step15_mdrun_npt/output_cpt_file']}, {'id': 'step16_energy_npt', 'name': 'Equilibrate the System (NPT) - part 3', 'description': None, 'sink_ids': ['step16_energy_npt/output_xvg_file']}, {'id': 'step17_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': None, 'sink_ids': ['step17_grompp_md/output_tpr_file']}, {'id': 'step18_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': None, 'sink_ids': ['step18_mdrun_md/output_trr_file', 'step18_mdrun_md/output_gro_file', 'step18_mdrun_md/output_edr_file', 'step18_mdrun_md/output_log_file', 'step18_mdrun_md/output_cpt_file']}, {'id': 'step19_rmsfirst', 'name': 'Post-processing Resulting 3D Trajectory - part 1', 'description': None, 'sink_ids': ['step19_rmsfirst/output_xvg_file']}, {'id': 'step20_rmsexp', 'name': 'Post-processing Resulting 3D Trajectory - part 2', 'description': None, 'sink_ids': ['step20_rmsexp/output_xvg_file']}, {'id': 'step21_rgyr', 'name': 'Post-processing Resulting 3D Trajectory - part 3', 'description': None, 'sink_ids': ['step21_rgyr/output_xvg_file']}, {'id': 'step22_image', 'name': 'Post-processing Resulting 3D Trajectory - part 4', 'description': None, 'sink_ids': ['step22_image/output_traj_file']}, {'id': 'step23_dry', 'name': 'Post-processing Resulting 3D Trajectory - part 5', 'description': None, 'sink_ids': ['step23_dry/output_str_file']}], 'links': [{'id': 'output_pdb_path', 'source_id': 'step1_pdb_name', 'sink_id': 'step1_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_pdb_config', 'sink_id': 'step1_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb/output_pdb_file', 'sink_id': 'step2_fixsidechain', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_fixsidechain/output_pdb_file', 'sink_id': 'step3_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_pdb2gmx/output_gro_file', 'sink_id': 'step4_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step4_editconf/output_gro_file', 'sink_id': 'step5_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_pdb2gmx/output_top_zip_file', 'sink_id': 'step5_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_gppion_config', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_solvate/output_gro_file', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_solvate/output_top_zip_file', 'sink_id': 'step6_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step7_genion_config', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_genion/output_tpr_file', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_solvate/output_top_zip_file', 'sink_id': 'step7_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_gppmin_config', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_genion/output_gro_file', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step8_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step9_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step10_energy_min_config', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step10_energy_min_name', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step9_mdrun_min/output_edr_file', 'sink_id': 'step10_energy_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_gppnvt_config', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step9_mdrun_min/output_gro_file', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step11_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_nvt/output_tpr_file', 'sink_id': 'step12_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_energy_nvt_config', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step13_energy_nvt_name', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step12_mdrun_nvt/output_edr_file', 'sink_id': 'step13_energy_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_gppnpt_config', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_nvt/output_gro_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_nvt/output_cpt_file', 'sink_id': 'step14_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step14_grompp_npt/output_tpr_file', 'sink_id': 'step15_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step16_energy_npt_config', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step16_energy_npt_name', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'input_energy_path', 'source_id': 'step15_mdrun_npt/output_edr_file', 'sink_id': 'step16_energy_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step17_gppmd_config', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step15_mdrun_npt/output_gro_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step7_genion/output_top_zip_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step15_mdrun_npt/output_cpt_file', 'sink_id': 'step17_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step18_mdrun_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step19_rmsfirst_config', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step19_rmsfirst_name', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step19_rmsfirst', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step20_rmsexp_config', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'output_xvg_path', 'source_id': 'step20_rmsexp_name', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step20_rmsexp', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step21_rgyr_config', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step8_grompp_min/output_tpr_file', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step21_rgyr', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step22_image_config', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'input_traj_path', 'source_id': 'step18_mdrun_md/output_trr_file', 'sink_id': 'step22_image', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step23_dry_config', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step18_mdrun_md/output_gro_file', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step17_grompp_md/output_tpr_file', 'sink_id': 'step23_dry', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 29,
    "text_field": "['protein_md.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: Workflow\nlabel: Example of setting up a simulation system\ndoc: |\n  Common Workflow Language example that illustrate the process of setting up a\n  simulation system containing a protein, step by step, using the BioExcel\n  Building Blocks library (biobb). The particular example used is the Lysozyme\n  protein (PDB code 1AKI).\n\ninputs:\n  step1_pdb_name: string\n  step1_pdb_config: string\n  step4_editconf_config: string\n  step6_gppion_config: string\n  step7_genion_config: string\n  step8_gppmin_config: string\n  step10_energy_min_config: string\n  step10_energy_min_name: string\n  step11_gppnvt_config: string\n  step13_energy_nvt_config: string\n  step13_energy_nvt_name: string\n  step14_gppnpt_config: string\n  step16_energy_npt_config: string\n  step16_energy_npt_name: string\n  step17_gppmd_config: string\n  step19_rmsfirst_config: string\n  step19_rmsfirst_name: string\n  step20_rmsexp_config: string\n  step20_rmsexp_name: string\n  step21_rgyr_config: string\n  step22_image_config: string\n  step23_dry_config: string\n\noutputs:\n  trr:\n    label: Trajectories - Raw trajectory\n    doc: |\n      Raw trajectory from the free simulation step\n    type: File\n    outputSource: step18_mdrun_md/output_trr_file\n    \n  trr_imaged_dry:\n    label: Trajectories - Post-processed trajectory\n    doc: |\n      Post-processed trajectory, dehydrated, imaged (rotations and translations\n      removed) and centered.\n    type: File\n    outputSource: step22_image/output_traj_file\n    \n  gro_dry:\n    label: Resulting protein structure\n    doc: |\n      Resulting protein structure taken from the post-processed trajectory, to\n      be used as a topology, usually for visualization purposes.\n    type: File\n    outputSource: step23_dry/output_str_file\n    \n  gro:\n    label: Structures - Raw structure\n    doc: |\n      Raw structure from the free simulation step.\n    type: File\n    outputSource: step18_mdrun_md/output_gro_file\n\n  cpt:\n    label: Checkpoint file\n    doc: |\n      GROMACS portable checkpoint file, allowing to restore (continue) the\n      simulation from the last step of the setup process.\n    type: File\n    outputSource: step18_mdrun_md/output_cpt_file\n\n  tpr:\n    label: Topologies GROMACS portable binary run\n    doc: |\n      GROMACS portable binary run input file, containing the starting structure\n      of the simulation, the molecular topology and all the simulation parameters.\n    type: File\n    outputSource: step17_grompp_md/output_tpr_file\n\n  top:\n    label: GROMACS topology file\n    doc: |\n      GROMACS topology file, containing the molecular topology in an ASCII\n      readable format.\n    type: File\n    outputSource: step7_genion/output_top_zip_file\n    \n  xvg_min:\n    label: System Setup Observables - Potential Energy\n    doc: |\n      Potential energy of the system during the minimization step.\n    type: File\n    outputSource: step10_energy_min/output_xvg_file\n\n  xvg_nvt:\n    label: System Setup Observables - Temperature\n    doc: |\n      Temperature of the system during the NVT equilibration step.\n    type: File\n    outputSource: step13_energy_nvt/output_xvg_file\n    \n  xvg_npt:\n    label: System Setup Observables - Pressure and density \n    type: File\n    outputSource: step16_energy_npt/output_xvg_file\n    \n  xvg_rmsfirst:\n    label: Simulation Analysis\n    doc: |\n      Root Mean Square deviation (RMSd) throughout the whole free simulation\n      step against the first snapshot of the trajectory (equilibrated system).\n    type: File\n    outputSource: step19_rmsfirst/output_xvg_file\n  xvg_rmsexp:\n    label: Simulation Analysis\n    doc: |\n      Root Mean Square deviation (RMSd) throughout the whole free simulation\n      step against the experimental structure (minimized system).\n    type: File\n    outputSource: step20_rmsexp/output_xvg_file\n    \n  xvg_rgyr:\n    label: Simulation Analysis\n    doc: |\n      Radius of Gyration (RGyr) of the molecule throughout the whole free simulation step\n    type: File\n    outputSource: step21_rgyr/output_xvg_file\n\nsteps:\n  step1_pdb:\n    label: Fetch PDB Structure\n    run: biobb_adapters/pdb.cwl\n    in:\n      output_pdb_path: step1_pdb_name\n      config: step1_pdb_config\n    out: [output_pdb_file]\n\n  step2_fixsidechain:\n    label: Fix Protein structure\n    run: biobb_adapters/fix_side_chain.cwl\n    in:\n      input_pdb_path: step1_pdb/output_pdb_file\n    out: [output_pdb_file]\n\n  step3_pdb2gmx:\n    label: Create Protein System Topology\n    run: biobb_adapters/pdb2gmx.cwl\n    in:\n      input_pdb_path: step2_fixsidechain/output_pdb_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step4_editconf:\n    label: Create Solvent Box\n    run: biobb_adapters/editconf.cwl\n    in:\n      input_gro_path: step3_pdb2gmx/output_gro_file\n    out: [output_gro_file]\n\n  step5_solvate:\n    label: Fill the Box with Water Molecules\n    run: biobb_adapters/solvate.cwl\n    in:\n      input_solute_gro_path: step4_editconf/output_gro_file\n      input_top_zip_path: step3_pdb2gmx/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step6_grompp_genion:\n    label: Add Ions - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step6_gppion_config\n      input_gro_path: step5_solvate/output_gro_file\n      input_top_zip_path: step5_solvate/output_top_zip_file\n    out: [output_tpr_file]\n\n  step7_genion:\n    label: Add Ions - part 2\n    run: biobb_adapters/genion.cwl\n    in:\n      config: step7_genion_config\n      input_tpr_path: step6_grompp_genion/output_tpr_file\n      input_top_zip_path: step5_solvate/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step8_grompp_min:\n    label: Energetically Minimize the System - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step8_gppmin_config\n      input_gro_path: step7_genion/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step9_mdrun_min:\n    label: Energetically Minimize the System - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step8_grompp_min/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file]\n\n  step10_energy_min:\n    label: Energetically Minimize the System - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step10_energy_min_config\n      output_xvg_path: step10_energy_min_name\n      input_energy_path: step9_mdrun_min/output_edr_file\n    out: [output_xvg_file]\n\n  step11_grompp_nvt:\n    label: Equilibrate the System (NVT) - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step11_gppnvt_config\n      input_gro_path: step9_mdrun_min/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step12_mdrun_nvt:\n    label: Equilibrate the System (NVT) - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step11_grompp_nvt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step13_energy_nvt:\n    label: Equilibrate the System (NVT) - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step13_energy_nvt_config\n      output_xvg_path: step13_energy_nvt_name\n      input_energy_path: step12_mdrun_nvt/output_edr_file\n    out: [output_xvg_file]\n\n  step14_grompp_npt:\n    label: Equilibrate the System (NPT) - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step14_gppnpt_config\n      input_gro_path: step12_mdrun_nvt/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n      input_cpt_path:  step12_mdrun_nvt/output_cpt_file\n    out: [output_tpr_file]\n\n  step15_mdrun_npt:\n    label: Equilibrate the System (NPT) - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step14_grompp_npt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step16_energy_npt:\n    label: Equilibrate the System (NPT) - part 3\n    run: biobb_adapters/energy.cwl\n    in:\n      config: step16_energy_npt_config\n      output_xvg_path: step16_energy_npt_name\n      input_energy_path: step15_mdrun_npt/output_edr_file\n    out: [output_xvg_file]\n\n  step17_grompp_md:\n    label: Free Molecular Dynamics Simulation - part 1\n    run: biobb_adapters/grompp.cwl\n    in:\n      config: step17_gppmd_config\n      input_gro_path: step15_mdrun_npt/output_gro_file\n      input_top_zip_path: step7_genion/output_top_zip_file\n      input_cpt_path:  step15_mdrun_npt/output_cpt_file\n    out: [output_tpr_file]\n\n  step18_mdrun_md:\n    label: Free Molecular Dynamics Simulation - part 2\n    run: biobb_adapters/mdrun.cwl\n    in:\n      input_tpr_path: step17_grompp_md/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step19_rmsfirst:\n    label: Post-processing Resulting 3D Trajectory - part 1\n    run: biobb_adapters/rms.cwl\n    in:\n      config: step19_rmsfirst_config\n      output_xvg_path: step19_rmsfirst_name\n      input_structure_path: step17_grompp_md/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step20_rmsexp:\n    label: Post-processing Resulting 3D Trajectory - part 2\n    run: biobb_adapters/rms.cwl\n    in:\n      config: step20_rmsexp_config\n      output_xvg_path: step20_rmsexp_name\n      input_structure_path: step8_grompp_min/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step21_rgyr:\n    label: Post-processing Resulting 3D Trajectory - part 3\n    run: biobb_adapters/rgyr.cwl\n    in:\n      config: step21_rgyr_config\n      input_structure_path: step8_grompp_min/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_xvg_file]\n\n  step22_image:\n    label: Post-processing Resulting 3D Trajectory - part 4\n    run: biobb_adapters/gmximage.cwl\n    in:\n      config: step22_image_config\n      input_top_path: step17_grompp_md/output_tpr_file\n      input_traj_path: step18_mdrun_md/output_trr_file\n    out: [output_traj_file]\n\n  step23_dry:\n    label: Post-processing Resulting 3D Trajectory - part 5\n    run: biobb_adapters/gmxtrjconvstr.cwl\n    in:\n      config: step23_dry_config\n      input_structure_path: step18_mdrun_md/output_gro_file\n      input_top_path: step17_grompp_md/output_tpr_file\n    out: [output_str_file]",
    "p_tag_content": "Common Workflow Language example that illustrate the process of setting up a simulation system containing a protein, step by step, using theBioExcel Building Blockslibrary (biobb). The particular example used is the Lysozyme protein (PDB code 1AKI). This workflow returns a resulting protein structure and simulated 3D trajectories. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/29?version=3 DOI:10.48546/workflowhub.workflow.29.3 Changing CWL label to test if this corrects the workflow title. Update to paths for BioBB tools. Taken from Git commit 46f24f0 Added/updated 1 files Views:5479Downloads:629 Created: 16th Jun 2020 at 09:50 Last updated: 10th Feb 2022 at 16:23 Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks,UX trial team Organizations:The University of Manchester Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2 This BioExcel best practice guide outlines the development process for writing a workflow using the Common Workflow Language (CWL), from creating and selecting tools like BioBB, through early experimentation, reuse and testing, to optimization and ensuring reproducibility before publication in workflow repositories. Creators:Stian Soiland-Reyes,Douglas Lowe,Robin Long Submitter:Stian Soiland-Reyes Selection ofBioExcel Building Blocks(BioBB)Workflows, across three workflow languages (jupyter notebooks, CWL, and Galaxy), demonstrating the use of BioBB tool descriptors for each of these systems. Maintainers:Douglas Lowe,Stian Soiland-Reyes,Adam Hospital,Genís Bayarri,Pau Andrio Number of items: 5 Tags:Not specified Selection ofBioExcel Building Blocks(BioBB)Workflowsintended for tutorials and training. Maintainers:Stian Soiland-Reyes Number of items: 14 Tags:molecular dynamics"
  },
  {
    "": 207,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using GATK4.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using GATK4.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'GATK4', 'INDELs', 'SNPs']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/30?version=1', 'commit': 'f0602cf87770dd73717eb9cfa687deed9341b4bd', 'ref': 'refs/heads/master', 'tree': '/workflows/30/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:11:59.000Z",
    "updated_at": "2023-01-16T13:42:19.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'indices_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}], 'outputs': [{'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_indels/output']}, {'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_snps/output']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'create_sequence_dictionary', 'name': None, 'description': None, 'sink_ids': ['create_sequence_dictionary/sequences_with_dictionary']}, {'id': 'update_read_group', 'name': None, 'description': None, 'sink_ids': ['update_read_group/sequences_with_new_read_group']}, {'id': 'mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['mark_duplicates/bam_duprem']}, {'id': 'split_alignments', 'name': None, 'description': None, 'sink_ids': ['split_alignments/output']}, {'id': 'index_split_alignments', 'name': None, 'description': None, 'sink_ids': ['index_split_alignments/bam_sorted_indexed']}, {'id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'description': None, 'sink_ids': ['call_plausible_haplotypes_and_detect_variants/output']}, {'id': 'filer_out_low_quality_variants', 'name': None, 'description': None, 'sink_ids': ['filer_out_low_quality_variants/output']}, {'id': 'select_indels', 'name': None, 'description': None, 'sink_ids': ['select_indels/output']}, {'id': 'select_snps', 'name': None, 'description': None, 'sink_ids': ['select_snps/output']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'indices_folder', 'source_id': 'indices_folder', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'REFERENCE', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'create_sequence_dictionary', 'name': None, 'default_value': None}, {'id': 'INPUT', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'OUTPUT', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGID', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGLB', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPL', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGSM', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPU', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'SORT_ORDER', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'update_read_group/sequences_with_new_read_group', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'mark_duplicates/bam_duprem', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'split_alignments/output', 'sink_id': 'index_split_alignments', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'index_split_alignments/bam_sorted_indexed', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'call_plausible_haplotypes_and_detect_variants/output', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 30,
    "text_field": "['gatk4W.cwl', 'graph.png']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using GATK4.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n    \n  indices_folder:\n  \n    type: Directory\n    \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n      \n      indices_folder: indices_folder\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in:\n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  create_sequence_dictionary:\n\n    run: picard_CreateSequenceDictionary.cwl\n\n    in:\n\n      REFERENCE: sars_cov_2_reference_genome\n\n    out: [ sequences_with_dictionary ]\n\n\n\n  update_read_group:\n\n    run: picard_AddOrReplaceReadGroups.cwl\n\n    in:\n\n      INPUT: align_rnaseq_reads_to_genome/output\n\n      OUTPUT:\n\n        valueFrom: sars-cov-2-newreadgroups.bam\n\n      RGID:\n\n        valueFrom: \"1\"\n\n      RGLB:\n\n        valueFrom: 445_LIB\n\n      RGPL:\n\n        valueFrom: illumina\n\n      RGSM:\n\n        valueFrom: RNA\n\n      RGPU:\n\n        valueFrom: illumina\n\n      SORT_ORDER:\n\n        valueFrom: coordinate\n\n    out: [ sequences_with_new_read_group ]\n\n \n\n  mark_duplicates:\n\n    run: picard_markdup.cwl\n\n    in:\n\n      bam_sorted: update_read_group/sequences_with_new_read_group\n\n    out: [ bam_duprem ]\n\n\n\n  split_alignments:\n\n    run: GATK-SplitNCigarReads.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      reads: mark_duplicates/bam_duprem\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantsplit.bam\n\n      # read_filter:  # Not available in GATK4\n\n      #   valueFrom: ReassignOneMappingQuality  \n\n    out: [ output ]\n\n\n\n  index_split_alignments:\n\n    run: samtools_index.cwl\n\n    in:\n\n      bam_sorted: split_alignments/output\n\n    out: [ bam_sorted_indexed ]\n\n\n\n  call_plausible_haplotypes_and_detect_variants:\n\n    run: GATK-HaplotypeCaller.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      input: index_split_alignments/bam_sorted_indexed\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutant.vcf\n\n    out: [ output ]\n\n\n\n  filer_out_low_quality_variants:\n\n    run: GATK-VariantFiltration.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: call_plausible_haplotypes_and_detect_variants/output\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantfilter.vcf\n\n    out: [output]\n\n\n\n  select_indels:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: INDEL\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n\n\n  select_snps:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: SNP\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n \n\noutputs:\n\n  indels:\n\n    type: File\n\n    outputSource: select_indels/output\n\n  snps:\n\n    type: File\n\n    outputSource: select_snps/output\n\n\n\n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com&ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using GATK4. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/30?version=1 Added/updated 2 files Views:2677Downloads:324 Created: 17th Jun 2020 at 07:11 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 208,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using VARSCAN2.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'INDELs', 'SNPs', 'VARSCAN2']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/31?version=1', 'commit': 'dc0b2e7df1f2e56ac5edd96648a63681e43ab3e2', 'ref': 'refs/heads/master', 'tree': '/workflows/31/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:24:44.000Z",
    "updated_at": "2023-01-16T13:42:27.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['snp_calling_using_mpileup2snp/snpVCF']}, {'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['indel_calling_using_mpileup2indel/indelVCF']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'description': None, 'sink_ids': ['sam_to_bam_conversion_using_samtools_view/bam']}, {'id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'description': None, 'sink_ids': ['sort_alignment_files_using_samtools_sort/bam_sorted']}, {'id': 'index_bam_files_using_samtools_index', 'name': None, 'description': None, 'sink_ids': ['index_bam_files_using_samtools_index/bam_sorted_indexed']}, {'id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'description': None, 'sink_ids': ['mpileup_generation_using_samtools_mpileup/rawMpileup']}, {'id': 'snp_calling_using_mpileup2snp', 'name': None, 'description': None, 'sink_ids': ['snp_calling_using_mpileup2snp/snpVCF']}, {'id': 'indel_calling_using_mpileup2indel', 'name': None, 'description': None, 'sink_ids': ['indel_calling_using_mpileup2indel/indelVCF']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'sam_to_bam_conversion_using_samtools_view/bam', 'sink_id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'index_bam_files_using_samtools_index', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'mpileup_generation_using_samtools_mpileup', 'name': None, 'default_value': None}, {'id': 'inputMpileup', 'source_id': 'mpileup_generation_using_samtools_mpileup/rawMpileup', 'sink_id': 'snp_calling_using_mpileup2snp', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'snp_calling_using_mpileup2snp', 'name': None, 'default_value': None}, {'id': 'inputMpileup', 'source_id': 'mpileup_generation_using_samtools_mpileup/rawMpileup', 'sink_id': 'indel_calling_using_mpileup2indel', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'indel_calling_using_mpileup2indel', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 31,
    "text_field": "['graph1.png', 'varscanW.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n  sample_name:\n\n    type: string              \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in: \n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  sam_to_bam_conversion_using_samtools_view:\n\n    run: samtools_view_sam2bam.cwl\n\n    in: \n\n      sam: align_rnaseq_reads_to_genome/output\n\n    out: [bam] \n\n\n  sort_alignment_files_using_samtools_sort:\n   \n    run: samtools_sort.cwl\n\n    in: \n\n      bam_unsorted: sam_to_bam_conversion_using_samtools_view/bam\n\n    out: [bam_sorted]\n\n\n  \n  index_bam_files_using_samtools_index:\n    \n    run: samtools_index.cwl\n\n    in: \n\n      bam_sorted: sort_alignment_files_using_samtools_sort/bam_sorted\n\n    out: [bam_sorted_indexed]\n\n\n  mpileup_generation_using_samtools_mpileup:\n   \n    run: samtools_mpileup.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [rawMpileup]\n\n\n  \n  snp_calling_using_mpileup2snp:\n\n    run: mpileup2snp.cwl\n\n    in:\n\n      inputMpileup: mpileup_generation_using_samtools_mpileup/rawMpileup\n\n      sampleName: sample_name\n\n    out: [snpVCF]\n\n\n\n  indel_calling_using_mpileup2indel:\n\n    run: mpileup2indel.cwl\n\n    in:\n\n      inputMpileup: mpileup_generation_using_samtools_mpileup/rawMpileup\n\n      sampleName: sample_name\n\n    out: [indelVCF]\n\n\noutputs:\n\n  snps:\n\n    type: File\n\n    outputSource: snp_calling_using_mpileup2snp/snpVCF\n\n  indels:\n\n    type: File\n\n    outputSource: indel_calling_using_mpileup2indel/indelVCF \n   \n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com;ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using VARSCAN. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/31?version=1 Added/updated 2 files Views:2633Downloads:354 Created: 17th Jun 2020 at 07:24 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Detects SNPs and short INDELs. Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 209,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using GATK4 spark based tools.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using GATK4.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'GATK4', 'INDELs', 'SNPs', 'SPARK']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/33?version=1', 'commit': '9c6b1ee755a51bc505cfa5207f4fccfe3815c466', 'ref': 'refs/heads/master', 'tree': '/workflows/33/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T06:38:32.000Z",
    "updated_at": "2023-01-16T13:42:33.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/26', 'family_name': 'Kumar', 'given_name': 'Ambarish', 'affiliation': 'JNU - School of Computational and Integrative Sciences (SC&IS)', 'orcid': None}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sars_cov_2_reference_2bit_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sampleName', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'indels', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_indels/output']}, {'id': 'snps', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['select_snps/output']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'create_sequence_dictionary', 'name': None, 'description': None, 'sink_ids': ['create_sequence_dictionary/sequences_with_dictionary']}, {'id': 'update_read_group', 'name': None, 'description': None, 'sink_ids': ['update_read_group/sequences_with_new_read_group']}, {'id': 'sort_sam', 'name': None, 'description': None, 'sink_ids': ['sort_sam/rawBAM']}, {'id': 'mark_duplicates', 'name': None, 'description': None, 'sink_ids': ['mark_duplicates/rawBAM']}, {'id': 'split_alignments', 'name': None, 'description': None, 'sink_ids': ['split_alignments/output']}, {'id': 'index_split_alignments', 'name': None, 'description': None, 'sink_ids': ['index_split_alignments/bam_sorted_indexed']}, {'id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'description': None, 'sink_ids': ['call_plausible_haplotypes_and_detect_variants/output']}, {'id': 'filer_out_low_quality_variants', 'name': None, 'description': None, 'sink_ids': ['filer_out_low_quality_variants/output']}, {'id': 'select_indels', 'name': None, 'description': None, 'sink_ids': ['select_indels/output']}, {'id': 'select_snps', 'name': None, 'description': None, 'sink_ids': ['select_snps/output']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'REFERENCE', 'source_id': 'index_reference_genome_with_samtools/sequences_with_index', 'sink_id': 'create_sequence_dictionary', 'name': None, 'default_value': None}, {'id': 'INPUT', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'OUTPUT', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGID', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGLB', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPL', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGSM', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'RGPU', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'SORT_ORDER', 'source_id': None, 'sink_id': 'update_read_group', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'update_read_group/sequences_with_new_read_group', 'sink_id': 'sort_sam', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sampleName', 'sink_id': 'sort_sam', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_sam/rawBAM', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sampleName', 'sink_id': 'mark_duplicates', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'mark_duplicates/rawBAM', 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'split_alignments', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'split_alignments/output', 'sink_id': 'index_split_alignments', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'index_split_alignments/bam_sorted_indexed', 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'call_plausible_haplotypes_and_detect_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'call_plausible_haplotypes_and_detect_variants/output', 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'filer_out_low_quality_variants', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_indels', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'create_sequence_dictionary/sequences_with_dictionary', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'variant', 'source_id': 'filer_out_low_quality_variants/output', 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'select_type_to_include', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'select_snps', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 33,
    "text_field": "['gatk4W-spark.cwl', 'graph2.png']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com & ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using GATK4.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    \n\n\n  sars_cov_2_reference_2bit_genome:\n\n    type: File\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    \n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n\n  sampleName:\n\n    type: string\n\n   \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in:\n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  create_sequence_dictionary:\n\n    run: picard_CreateSequenceDictionary.cwl\n\n    in:\n\n      REFERENCE: index_reference_genome_with_samtools/sequences_with_index\n\n    out: [ sequences_with_dictionary ]\n\n\n\n  update_read_group:\n\n    run: picard_AddOrReplaceReadGroups.cwl\n\n    in:\n\n      INPUT: align_rnaseq_reads_to_genome/output\n\n      OUTPUT:\n\n        valueFrom: sars-cov-2-newreadgroups.bam\n\n      RGID:\n\n        valueFrom: \"1\"\n\n      RGLB:\n\n        valueFrom: 445_LIB\n\n      RGPL:\n\n        valueFrom: illumina\n\n      RGSM:\n\n        valueFrom: RNA\n\n      RGPU:\n\n        valueFrom: illumina\n\n      SORT_ORDER:\n\n        valueFrom: coordinate\n\n    out: [ sequences_with_new_read_group ]\n\n \n\n  sort_sam:\n   \n    run: SortSamSparkNew.cwl\n\n    in:\n      \n      inputBAM: update_read_group/sequences_with_new_read_group\n\n      sampleName: sampleName\n\n    out: [rawBAM] \n\n  \n  mark_duplicates:\n\n    run: MarkDuplicatesSparkNew.cwl\n\n    in:\n\n      inputBAM: sort_sam/rawBAM\n    \n      sampleName: sampleName\n\n    out: [ rawBAM ]\n\n\n\n  split_alignments:\n\n    run: GATK-SplitNCigarReads.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      reads: mark_duplicates/rawBAM\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantsplit.bam\n\n      # read_filter:  # Not available in GATK4\n\n      #   valueFrom: ReassignOneMappingQuality  \n\n    out: [ output ]\n\n\n\n  index_split_alignments:\n\n    run: samtools_index.cwl\n\n    in:\n\n      bam_sorted: split_alignments/output\n\n    out: [ bam_sorted_indexed ]\n\n\n\n  call_plausible_haplotypes_and_detect_variants:\n\n    run: GATK-HaplotypeCaller.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      input: index_split_alignments/bam_sorted_indexed\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutant.vcf\n\n    out: [ output ]\n\n\n\n  filer_out_low_quality_variants:\n\n    run: GATK-VariantFiltration.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: call_plausible_haplotypes_and_detect_variants/output\n\n      output_filename:\n\n        valueFrom: sars-cov-2-mutantfilter.vcf\n\n    out: [output]\n\n\n\n  select_indels:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: INDEL\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n\n\n  select_snps:\n\n    run: GATK-SelectVariants.cwl\n\n    in:\n\n      reference: create_sequence_dictionary/sequences_with_dictionary\n\n      variant: filer_out_low_quality_variants/output\n\n      select_type_to_include:\n\n        valueFrom: SNP\n\n      output_filename:\n\n        valueFrom: sars-cov-2-indel.vcf\n\n    out: [ output ]\n\n \n\noutputs:\n\n  indels:\n\n    type: File\n\n    outputSource: select_indels/output\n\n  snps:\n\n    type: File\n\n    outputSource: select_snps/output",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com&ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using GATK4. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/33?version=1 Added/updated 2 files Views:2712Downloads:303 Created: 17th Jun 2020 at 07:38 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2"
  },
  {
    "": 210,
    "discussion_links": [],
    "title": "Genomic variants - SNPs and INDELs detection using SAMTools.",
    "license": "Apache-2.0",
    "description": "Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\nThis is a proposed standard operating procedure for genomic variant detection using SAMTools.\n\nIt is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n\n\nIt uses Illumina RNASEQ reads and genome sequence.",
    "latest_version": 1,
    "tags": "['CWL', 'INDELs', 'SAMTools', 'SNPs', 'covid-19']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/34?version=1', 'commit': '64d0fd2144a9a59847aacb9f43ed7f933002779b', 'ref': 'refs/heads/master', 'tree': '/workflows/34/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-06-17T07:41:06.000Z",
    "updated_at": "2023-01-16T13:42:36.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'sars_cov_2_reference_genome', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_left_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'rnaseq_right_reads', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'snp', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['snp_generation_using_bcftools/snp']}, {'id': 'indel', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['indel_generation_using_bcftools/indel']}], 'steps': [{'id': 'index_reference_genome_with_bowtie2', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_bowtie2/indices']}, {'id': 'align_rnaseq_reads_to_genome', 'name': None, 'description': None, 'sink_ids': ['align_rnaseq_reads_to_genome/output']}, {'id': 'index_reference_genome_with_samtools', 'name': None, 'description': None, 'sink_ids': ['index_reference_genome_with_samtools/sequences_with_index']}, {'id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'description': None, 'sink_ids': ['sam_to_bam_conversion_using_samtools_view/bam']}, {'id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'description': None, 'sink_ids': ['sort_alignment_files_using_samtools_sort/bam_sorted']}, {'id': 'index_bam_files_using_samtools_index', 'name': None, 'description': None, 'sink_ids': ['index_bam_files_using_samtools_index/bam_sorted_indexed']}, {'id': 'snp_generation_using_bcftools', 'name': None, 'description': None, 'sink_ids': ['snp_generation_using_bcftools/snp']}, {'id': 'indel_generation_using_bcftools', 'name': None, 'description': None, 'sink_ids': ['indel_generation_using_bcftools/indel']}], 'links': [{'id': 'reference_in', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'bt2_index_base', 'source_id': None, 'sink_id': 'index_reference_genome_with_bowtie2', 'name': None, 'default_value': None}, {'id': 'indices_file', 'source_id': 'index_reference_genome_with_bowtie2/indices', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist', 'source_id': 'rnaseq_left_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'filelist_mates', 'source_id': 'rnaseq_right_reads', 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'output_filename', 'source_id': None, 'sink_id': 'align_rnaseq_reads_to_genome', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'index_reference_genome_with_samtools', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'align_rnaseq_reads_to_genome/output', 'sink_id': 'sam_to_bam_conversion_using_samtools_view', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'sam_to_bam_conversion_using_samtools_view/bam', 'sink_id': 'sort_alignment_files_using_samtools_sort', 'name': None, 'default_value': None}, {'id': 'bam_sorted', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'index_bam_files_using_samtools_index', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'snp_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'inputBAM', 'source_id': 'sort_alignment_files_using_samtools_sort/bam_sorted', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'ReferenceGenome', 'source_id': 'sars_cov_2_reference_genome', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}, {'id': 'sampleName', 'source_id': 'sample_name', 'sink_id': 'indel_generation_using_bcftools', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 34,
    "text_field": "['graph3.png', 'samtoolsW.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\n\nclass: Workflow\n\n\n\nrequirements:\n\n  StepInputExpressionRequirement: {}\n\n\n\ndoc: |\n\n  Author: AMBARISH KUMAR er.ambarish@gmail.com; ambari73_sit@jnu.ac.in\n\n  This is a proposed standard operating procedure for genomic variant detection using VARSCAN.\n\n  It is hoped to be effective and useful for getting SARS-CoV-2 genome variants.\n\n  \n\n  It uses Illumina RNASEQ reads and genome sequence.\n\n\n\ninputs:\n\n  sars_cov_2_reference_genome:\n\n    type: File\n\n    format: edam:format_1929  # FASTA\n\n\n\n  rnaseq_left_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n\n  rnaseq_right_reads:\n\n    type: File\n\n    format: edam:format_1930  # FASTQ\n\n\n  sample_name:\n\n    type: string              \n\n\n\nsteps:\n\n  index_reference_genome_with_bowtie2:\n\n    run: bowtie2_build.cwl\n\n    in:\n\n      reference_in: sars_cov_2_reference_genome\n\n      bt2_index_base:\n\n        valueFrom: \"sars-cov-2\"\n\n    out: [ indices ]\n\n\n\n  align_rnaseq_reads_to_genome:\n\n    run: bowtie2_align.cwl\n\n    in:\n\n      indices_file: index_reference_genome_with_bowtie2/indices\n\n      filelist: rnaseq_left_reads\n\n      filelist_mates: rnaseq_right_reads\n\n      output_filename:\n\n        valueFrom: sars-cov-2.sam\n\n    out: [ output ]\n\n\n\n  index_reference_genome_with_samtools:\n\n    run: samtools_faidx.cwl\n\n    in: \n\n      sequences: sars_cov_2_reference_genome\n\n    out: [sequences_with_index]\n\n\n\n  sam_to_bam_conversion_using_samtools_view:\n\n    run: samtools_view_sam2bam.cwl\n\n    in: \n\n      sam: align_rnaseq_reads_to_genome/output\n\n    out: [bam] \n\n\n  sort_alignment_files_using_samtools_sort:\n   \n    run: samtools_sort.cwl\n\n    in: \n\n      bam_unsorted: sam_to_bam_conversion_using_samtools_view/bam\n\n    out: [bam_sorted]\n\n\n  \n  index_bam_files_using_samtools_index:\n    \n    run: samtools_index.cwl\n\n    in: \n\n      bam_sorted: sort_alignment_files_using_samtools_sort/bam_sorted\n\n    out: [bam_sorted_indexed]\n\n\n  snp_generation_using_bcftools:\n   \n    run: bcftools_snps.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [snp]\n\n\n  indel_generation_using_bcftools:\n   \n    run: bcftools_indels.cwl\n    \n    in:\n      \n      inputBAM: sort_alignment_files_using_samtools_sort/bam_sorted\n      \n      ReferenceGenome: sars_cov_2_reference_genome\n      \n      sampleName: sample_name \n      \n\n    out: [indel]\n\n\noutputs:\n\n  snp:\n\n    type: File\n\n    outputSource: snp_generation_using_bcftools/snp\n\n  indel:\n\n    type: File\n\n    outputSource: indel_generation_using_bcftools/indel\n\n\n$namespaces:\n\n  edam: http://edamontology.org/\n\n$schemas:\n\n  - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Author: AMBARISH KUMARer.ambarish@gmail.com;ambari73_sit@jnu.ac.in This is a proposed standard operating procedure for genomic variant detection using SAMTools. It is hoped to be effective and useful for getting SARS-CoV-2 genome variants. It uses Illumina RNASEQ reads and genome sequence. SEEK ID:https://workflowhub.eu/workflows/34?version=1 Added/updated 2 files Views:3405Downloads:705 Created: 17th Jun 2020 at 08:41 Last updated: 27th Jun 2020 at 02:27 None Teams:CWL workflow SARS-CoV-2,GalaxyProject SARS-CoV-2 Organizations:JNU - School of Computational and Integrative Sciences (SC&IS) The goal of COVID-19-Biohackathon 2020 (COVID-19-BH20) is to develop and gather computational tools that can be useful for studying the biology of the virus and the disease. The COVID-19 Programme in Workflow Hub aims to gather workflows for the analysis of COVID-19 molecular biology data and their metadata. In this programme, all workflows and their metadata will be curated and made interoperable, reusable and reproducible. All workflows and their metadata will be easily accessible to everyone\n... Teams:Connor Lab,GalaxyProject SARS-CoV-2,InSaFLU,nf-core viralrecon,CWL workflow SARS-CoV-2,V-Pipe,Test team Web page:https://github.com/virtual-biohackathons/covid-19-bh20 CWL workflows related to virus genomics with focus on SARS-CoV-2. Space:COVID-19 Biohackathon Public web page:https://github.com/fjrmoreews/cwl-workflow-SARS-CoV-2 Organisms:Homo sapiens,SARS-CoV-2 Detects SNPs and short INDELs. Creator:Ambarish Kumar Submitter:Ambarish Kumar"
  },
  {
    "": 219,
    "discussion_links": [],
    "title": "NMR pipe",
    "license": "Apache-2.0",
    "description": "CWL workflow for NMR spectra Peak Picking\nThe workflow takes as input a series of 2D 1H 15N HSQC NMR spectra and uses nmrpipe tools to convert the spectra in nmrpipe format and performs an automatic peak picking.\nThis test uses a protein MDM2 with different ligands and peptide and generates a peak list with 1H and 15N chemical shift values for each spectrum. The difference among these peak lists can be used to characterize the ligand binding site on the protein.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/43?version=1', 'commit': '9fa4f7fde166cfedf761ec2f6ff9ab01f7a6446b', 'ref': 'refs/heads/master', 'tree': '/workflows/43/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-07-22T10:49:00.000Z",
    "updated_at": "2023-01-16T13:43:41.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'workdir_array', 'name': None, 'description': None, 'type': [{'type': 'Directory[]'}], 'default_value': None}], 'outputs': [{'id': 'final_result', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['pipe_to_pick/fid_out4']}], 'steps': [{'id': 'brucker_to_script', 'name': None, 'description': None, 'sink_ids': ['brucker_to_script/fid_out']}, {'id': 'script_to_fid', 'name': None, 'description': None, 'sink_ids': ['script_to_fid/fid_out2']}, {'id': 'fid_to_pipe', 'name': None, 'description': None, 'sink_ids': ['fid_to_pipe/fid_out3']}, {'id': 'pipe_to_pick', 'name': None, 'description': None, 'sink_ids': ['pipe_to_pick/fid_out4']}], 'links': [{'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'brucker_to_script', 'name': None, 'default_value': None}, {'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'script_to_fid', 'name': None, 'default_value': None}, {'id': 'fidcom', 'source_id': 'brucker_to_script/fid_out', 'sink_id': 'script_to_fid', 'name': None, 'default_value': None}, {'id': 'workdir', 'source_id': 'workdir_array', 'sink_id': 'fid_to_pipe', 'name': None, 'default_value': None}, {'id': 'fiddir', 'source_id': 'script_to_fid/fid_out2', 'sink_id': 'fid_to_pipe', 'name': None, 'default_value': None}, {'id': 'ft2', 'source_id': 'fid_to_pipe/fid_out3', 'sink_id': 'pipe_to_pick', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 43,
    "text_field": "['nmrpipe_workflow.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.0\nclass: Workflow\n\nrequirements:\n  ScatterFeatureRequirement: {}\n\n# WORKFLOW INPUT\ninputs:\n  workdir_array:\n    type: Directory[]\n    inputBinding:\n      position: 1\n  \n# WORKFLOW OUTPUT\noutputs:\n    final_result:\n      type: File[]\n      #outputSource: script_to_fid/fid_out2\n      #outputSource: fid_to_pipe/fid_out3\n      outputSource: pipe_to_pick/fid_out4\n\n\n# WORKFLOW STEPS\nsteps:\n  # STEP 1\n  # genera lo/gli script fid.com nella directory di input\n  brucker_to_script:\n    run: brucker_to_script.cwl\n    scatter: workdir\n    in: \n      workdir: workdir_array\n    out:\n      [fid_out]\n\n\n\n  # STEP2\n  script_to_fid:\n    run: script_to_fid.cwl\n    scatter: \n      - fidcom\n      - workdir\n    scatterMethod: dotproduct  \n    in: \n      workdir: workdir_array\n      fidcom: brucker_to_script/fid_out\n    out:\n      [fid_out2]\n\n\n\n  # STEP 3\n  fid_to_pipe:\n    run: fid_to_pipe.cwl\n    scatter: \n      - fiddir\n      - workdir\n    scatterMethod: dotproduct  \n    in:\n      workdir: workdir_array\n      fiddir: script_to_fid/fid_out2\n    out:\n      [fid_out3]\n\n\n  # STEP 4\n  pipe_to_pick:\n    run: pipe_to_pick.cwl\n    scatter: ft2\n    in:\n      #workdir: workdir\n      ft2: fid_to_pipe/fid_out3\n    out:\n      [fid_out4]",
    "p_tag_content": "CWL workflow for NMR spectra Peak Picking\nThe workflow takes as input a series of 2D 1H 15N HSQC NMR spectra and uses nmrpipe tools to convert the spectra in nmrpipe format and performs an automatic peak picking.\nThis test uses a protein MDM2 with different ligands and peptide and generates a peak list with 1H and 15N chemical shift values for each spectrum. The difference among these peak lists can be used to characterize the ligand binding site on the protein. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/43?version=1 Added/updated 1 files Views:2415Downloads:879 Created: 22nd Jul 2020 at 11:49 This item has not yet been tagged. None Teams:NMR Workflow Organizations:CIRMMP A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified NMR workflow Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 295,
    "discussion_links": [],
    "title": "Inclusion Body Myositis Active Subnetwork Identification Workflow",
    "license": "MIT",
    "description": "Workflow for Creating a large disease network from various datasets and databases for IBM, and applying the active subnetwork identification method MOGAMUN.",
    "latest_version": 7,
    "tags": "['Bioinformatics', 'CWL', 'Genomics', 'Protein-Protein Interaction', 'Transcriptomics']",
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/681?version=1', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '5d0df39a96883f3390793ed3e527ddc804b8a347', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=2', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=3', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/3/tree', 'doi': None}, {'version': 4, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=4', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/4/tree', 'doi': None}, {'version': 5, 'revision_comments': 'More metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=5', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': '7fd2fb2e49199bf26e79851059619acf88710fea', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/5/tree', 'doi': None}, {'version': 6, 'revision_comments': 'More metada\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=6', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow', 'commit': 'fbe3ed59a9689a1e85890f3a88a3538abaf41010', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/6/tree', 'doi': None}, {'version': 7, 'revision_comments': 'Added remaining metadata\\r\\n', 'url': 'https://workflowhub.eu/workflows/681?version=7', 'remote': 'https://github.com/jdwijnbergen/IBM_ASI_workflow.git', 'commit': '7e4122fc690aef90cafdd96758c561f2dde60555', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/681/git/7/tree', 'doi': '10.48546/workflowhub.workflow.681.7'}]",
    "version": 7,
    "revision_comments": "Added remaining metadata",
    "created_at": "2023-11-27T16:19:23.000Z",
    "updated_at": "2024-02-01T11:27:19.000Z",
    "doi": "10.48546/workflowhub.workflow.681.7",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Wijnbergen', 'given_name': 'Daphne', 'affiliation': 'Leiden University Medical Center', 'orcid': 'https://orcid.org/0000-0002-7449-6657'}, {'profile': None, 'family_name': 'Johari', 'given_name': 'Mridul', 'affiliation': 'Leiden University Medical Center', 'orcid': 'https://orcid.org/0000-0002-3549-558X'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Network analysis', 'identifier': 'http://edamontology.org/operation_3927'}, {'label': 'Protein interaction network analysis', 'identifier': 'http://edamontology.org/operation_0276'}, {'label': 'Weighted correlation network analysis', 'identifier': 'http://edamontology.org/operation_3766'}]",
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'stringdb_input_file', 'name': 'STRING data', 'description': 'Table with Protein - protein interaction data as downloaded from STRING', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'mirtarbase_input_file', 'name': 'miRTarBase data', 'description': 'Table with miRNA - mRNA target data as downloaded from', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'entrez2string', 'name': 'STRING identifier mapping', 'description': 'Table with entrez mappings from STRING protein idenfitiers as downloaded from STRING', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bridgedb', 'name': 'BridgeDB cache', 'description': 'directory with cached BridgeDB data', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'mRNA-mRNA_bicor', 'name': 'mRNA expression correlation', 'description': \"Tab separated edge list with Ensembl gene ID's in the first two columns, and their bi-weight midcorrelation as defined by Langelder et al. in the third column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'miRNA-mRNA_bicor', 'name': 'miRNA mRNA correlation', 'description': \"Tab separated edge list with Ensembl gene ID's in the first column, miRBase ID's in the second column. and their bi-weight midcorrelation as defined by Langelder et al. in the third column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'de_mRNA', 'name': 'Differential gene expression', 'description': 'Output of differential mRNA expression testing from DESeq2, with Ensembl gene ID\\'s concatened with gene symbols with \";\" inbetween in the first column', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'de_miRNA', 'name': 'Differential miRNA expression', 'description': \"Output of differential miRNA expression testing from DESeq2, with miRBase ID's in the first column\", 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'variant_burden', 'name': 'Variant Burden', 'description': 'Output of variant burden testing using SKAT in the rvtests package, with HGNC symbols in the first column', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'stringdb_number_of_edges', 'name': 'STRING limit', 'description': 'The number of STRING edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'stringdb_min_weight', 'name': 'STRING filter', 'description': 'The minimum score for a STRING edge to be included in the analysis', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mirtarbase_number_of_edges', 'name': 'miRTarBase limit', 'description': 'The number of miRTarBase edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'max_cor_edges', 'name': 'Correlation limit', 'description': 'The number of correlation edges to use, USE FOR TESTING ONLY', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_generations', 'name': 'MOGAMUN generations', 'description': 'The number of generation to let the genetic algorithm in MOGAMUN evolve', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_runs', 'name': 'MOGAMUN runs', 'description': 'The number of parallel runs to let MOGAMUN do, these parallel runs are combined in postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_cores', 'name': 'MOGAMUN cores', 'description': 'The number of cores to let MOGAMUN use', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_min_size', 'name': 'Minimum subnetwork size', 'description': 'The minimum size of subnetworks during postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_max_size', 'name': 'Maximum subnetwork size', 'description': 'The maximum size of subnetworks during postprocessing', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'mogamun_merge_threshold', 'name': 'Subnetwork merge threshold', 'description': 'the minimum Jaccard Index overlap between two subnetworks to allow them to be merged', 'type': [{'type': 'int'}], 'default_value': None}], 'outputs': [{'id': 'full_graph', 'name': 'Full network', 'description': 'The full disease network, which combines all data sources', 'type': [{'type': 'File'}], 'source_ids': ['integrate_graph/full_graph']}, {'id': 'subnetworks', 'name': 'Subnetworks', 'description': 'Folder with the resulting subnetworks and generation statistics', 'type': [{'type': 'Directory'}], 'source_ids': ['postprocess_mogamun/subnetworks']}], 'steps': [{'id': 'import_stringdb', 'name': 'Import STRING', 'description': 'Imports STRING database file', 'sink_ids': ['import_stringdb/stringdb_edge_list']}, {'id': 'import_mirtarbase', 'name': 'Import miRTarBase', 'description': 'Imports miRTarBase database file', 'sink_ids': ['import_mirtarbase/mirtarbase_edge_list']}, {'id': 'map_stringdb', 'name': 'Map STRING', 'description': 'Maps STRING identifiers to identifiers consistent with datasets', 'sink_ids': ['map_stringdb/stringdb_mapped_edge_list']}, {'id': 'map_mirtarbase', 'name': 'Map miRTarBase', 'description': 'Maps miRTarBase identifiers to identifiers consistent with datasets', 'sink_ids': ['map_mirtarbase/mirtarbase_mapped_edge_list']}, {'id': 'integrate_graph', 'name': 'Integrate network', 'description': 'Integrates all datasources into a single disease network', 'sink_ids': ['integrate_graph/full_graph', 'integrate_graph/full_graph_rds']}, {'id': 'igraph_to_mogamun', 'name': 'Convert igraph to MOGAMUN', 'description': 'Converts the igraph network format to the MOGAMUN input format', 'sink_ids': ['igraph_to_mogamun/mogamun_input']}, {'id': 'run_mogamun', 'name': 'Run MOGAMUN', 'description': 'runs the MOGAMUN software with selected paramters', 'sink_ids': ['run_mogamun/mogamun_results']}, {'id': 'postprocess_mogamun', 'name': 'Postprocess MOGAMUN', 'description': 'processes output from MOGAMUN, and merges overlapping subnetwork', 'sink_ids': ['postprocess_mogamun/subnetworks']}], 'links': [{'id': 'stringdb_input_file', 'source_id': 'stringdb_input_file', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'stringdb_number_of_edges', 'source_id': 'stringdb_number_of_edges', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'stringdb_min_weight', 'source_id': 'stringdb_min_weight', 'sink_id': 'import_stringdb', 'name': None, 'default_value': None}, {'id': 'mirtarbase_input_file', 'source_id': 'mirtarbase_input_file', 'sink_id': 'import_mirtarbase', 'name': None, 'default_value': None}, {'id': 'mirtarbase_number_of_edges', 'source_id': 'mirtarbase_number_of_edges', 'sink_id': 'import_mirtarbase', 'name': None, 'default_value': None}, {'id': 'stringdb_edge_list', 'source_id': 'import_stringdb/stringdb_edge_list', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'entrez2string', 'source_id': 'entrez2string', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'map_stringdb', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'map_mirtarbase', 'name': None, 'default_value': None}, {'id': 'mirtarbase_edge_list', 'source_id': 'import_mirtarbase/mirtarbase_edge_list', 'sink_id': 'map_mirtarbase', 'name': None, 'default_value': None}, {'id': 'stringdb_mapped_edge_list', 'source_id': 'map_stringdb/stringdb_mapped_edge_list', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'mirtarbase_mapped_edge_list', 'source_id': 'map_mirtarbase/mirtarbase_mapped_edge_list', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'mRNA-mRNA_bicor', 'source_id': 'mRNA-mRNA_bicor', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'miRNA-mRNA_bicor', 'source_id': 'miRNA-mRNA_bicor', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'de_mRNA', 'source_id': 'de_mRNA', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'de_miRNA', 'source_id': 'de_miRNA', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'variant_burden', 'source_id': 'variant_burden', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'bridgedb', 'source_id': 'bridgedb', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'max_cor_edges', 'source_id': 'max_cor_edges', 'sink_id': 'integrate_graph', 'name': None, 'default_value': None}, {'id': 'full_graph_rds', 'source_id': 'integrate_graph/full_graph_rds', 'sink_id': 'igraph_to_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_input', 'source_id': 'igraph_to_mogamun/mogamun_input', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_generations', 'source_id': 'mogamun_generations', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_runs', 'source_id': 'mogamun_runs', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_cores', 'source_id': 'mogamun_cores', 'sink_id': 'run_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_input', 'source_id': 'igraph_to_mogamun/mogamun_input', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_results', 'source_id': 'run_mogamun/mogamun_results', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_min_size', 'source_id': 'mogamun_min_size', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_max_size', 'source_id': 'mogamun_max_size', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}, {'id': 'mogamun_merge_threshold', 'source_id': 'mogamun_merge_threshold', 'sink_id': 'postprocess_mogamun', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 681,
    "text_field": "['docker', 'scripts', 'util', 'workflows', '.gitignore', 'README.md', 'Dockerfile', 'igraph_to_mogamun.R', 'import_mirtarbase.R', 'import_stringdb.R', 'integrate_graph.R', 'map_mirtarbase.R', 'map_stringdb.R', 'postprocess_mogamun.R', 'run_mogamun.R', 'load_omics_data.R', 'map_identifiers.R', 'prepare_mogamun.R', 'igraph_to_mogamun.cwl', 'import_mirtarbase.cwl', 'import_stringdb.cwl', 'integrate_graph.cwl', 'map_mirtarbase.cwl', 'map_stringdb.cwl', 'postprocess_mogamun.cwl', 'run_mogamun.cwl', 'test_job.yml', 'workflow.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Workflow for Creating a large disease network from various datasets and databases for IBM, and applying the active subnetwork identification method MOGAMUN. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/681?version=7 DOI:10.48546/workflowhub.workflow.681.7 Added remaining metadata More metada More metadata More metadata More metadata More metadata Update README.md Views:1966Downloads:712 Created: 27th Nov 2023 at 12:52 Last updated: 1st Feb 2024 at 11:26 None Teams:EJPRD WP13 case-studies workflows Organizations:EJP-RD A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified EJPRD WP13 case-studies workflows from phase 1. Space:Independent Teams Public web page:https://www.ejprarediseases.org/ Organisms:Not specified"
  },
  {
    "": 349,
    "discussion_links": "[{'id': '787', 'label': 'BioExcel Workflows', 'url': 'http://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '788', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/structure_checking'}, {'id': '789', 'label': 'Documentation', 'url': 'https://biobb-wf-structure-checking.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Molecular Structure Checking",
    "license": "Apache-2.0",
    "description": "# Molecular Structure Checking using BioExcel Building Blocks (biobb)\n\n***\n\nThis tutorial aims to illustrate the process of **checking** a **molecular structure** before using it as an input for a **Molecular Dynamics** simulation. The workflow uses the **BioExcel Building Blocks library (biobb)**. The particular structure used is the crystal structure of **human Adenylate Kinase 1A (AK1A)**, in complex with the **AP5A inhibitor** (PDB code [1Z83](https://www.rcsb.org/structure/1z83)).  \n\n**Structure checking** is a key step before setting up a protein system for **simulations**. A number of **common issues** found in structures at **Protein Data Bank** may compromise the success of the **simulation**, or may suggest that longer **equilibration** procedures are necessary.\n\nThe **workflow** shows how to:\n\n- Run **basic manipulations on structures** (selection of models, chains, alternative locations\n- Detect and fix **amide assignments** and **wrong chiralities**\n- Detect and fix **protein backbone** issues (missing fragments, and atoms, capping)\n- Detect and fix **missing side-chain atoms**\n- **Add hydrogen atoms** according to several criteria\n- Detect and classify **atomic clashes**\n- Detect possible **disulfide bonds (SS)**\n\nAn implementation of this workflow in a **web-based Graphical User Interface (GUI)** can be found in the [https://mmb.irbbarcelona.org/biobb-wfs/](https://mmb.irbbarcelona.org/biobb-wfs/) server (see [https://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check](https://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check)).\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2023 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2023 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/776?version=1', 'commit': '24d34210ccf7272242da38ea933da629060f5abc', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/776/git/1/tree', 'doi': '10.48546/workflowhub.workflow.776.1'}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-03-05T08:41:19.000Z",
    "updated_at": "2024-03-05T08:50:30.000Z",
    "doi": "10.48546/workflowhub.workflow.776.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_structure_check_init_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_structure_check_init_output_summary_path', 'name': 'Output file', 'description': 'Output summary checking results.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_model_input_structure_path', 'name': 'Input file', 'description': 'Input structure file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_extract_model_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_extract_model_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_model tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_extract_chain_output_structure_path', 'name': 'Output file', 'description': 'Output structure file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_extract_chain_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.extract_chain tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_fix_altlocs_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_fix_altlocs_config', 'name': 'Config file', 'description': 'Configuration file for biobb_model.fix_altlocs tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_fix_ssbonds_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_remove_molecules_ions_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_remove_molecules_ions_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_remove_molecules_ligands_output_molecules_path', 'name': 'Output file', 'description': 'Output molcules file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_remove_molecules_ligands_config', 'name': 'Config file', 'description': 'Configuration file for biobb_structure_utils.remove_molecules tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_reduce_remove_hydrogens_output_path', 'name': 'Output file', 'description': 'Path to the output file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_remove_pdb_water_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_fix_amides_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_fix_chirality_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_fix_side_chain_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_fix_backbone_input_fasta_canonical_sequence_path', 'name': 'Input file', 'description': 'Input FASTA file path.', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step12_fix_backbone_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_pdb_path', 'name': 'Output file', 'description': 'Output 3D structure PDB file matching the topology file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_top_path', 'name': 'Output file', 'description': 'Output topology file (AMBER ParmTop).', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_output_crd_path', 'name': 'Output file', 'description': 'Output coordinates file (AMBER crd).', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_leap_gen_top_config', 'name': 'Config file', 'description': 'Configuration file for biobb_amber.leap_gen_top tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_traj_path', 'name': 'Output file', 'description': 'Output trajectory file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_rst_path', 'name': 'Output file', 'description': 'Output restart file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_output_log_path', 'name': 'Output file', 'description': 'Output log file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_config', 'name': 'Config file', 'description': 'Configuration file for biobb_amber.sander_mdrun tool.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_amber_to_pdb_output_pdb_path', 'name': 'Output file', 'description': 'Structure PDB file.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_fix_pdb_output_pdb_path', 'name': 'Output file', 'description': 'Output PDB file path.', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_structure_check_output_summary_path', 'name': 'Output file', 'description': 'Output summary checking results.', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_structure_check_init_out1', 'name': 'output_summary_path', 'description': 'Output summary checking results.', 'type': [{'type': 'File'}], 'source_ids': ['step0_structure_check_init/output_summary_path']}, {'id': 'step1_extract_model_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step1_extract_model/output_structure_path']}, {'id': 'step2_extract_chain_out1', 'name': 'output_structure_path', 'description': 'Output structure file path.', 'type': [{'type': 'File'}], 'source_ids': ['step2_extract_chain/output_structure_path']}, {'id': 'step3_fix_altlocs_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step3_fix_altlocs/output_pdb_path']}, {'id': 'step4_fix_ssbonds_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step4_fix_ssbonds/output_pdb_path']}, {'id': 'step5_remove_molecules_ions_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step5_remove_molecules_ions/output_molecules_path']}, {'id': 'step6_remove_molecules_ligands_out1', 'name': 'output_molecules_path', 'description': 'Output molcules file path.', 'type': [{'type': 'File'}], 'source_ids': ['step6_remove_molecules_ligands/output_molecules_path']}, {'id': 'step7_reduce_remove_hydrogens_out1', 'name': 'output_path', 'description': 'Path to the output file.', 'type': [{'type': 'File'}], 'source_ids': ['step7_reduce_remove_hydrogens/output_path']}, {'id': 'step8_remove_pdb_water_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step8_remove_pdb_water/output_pdb_path']}, {'id': 'step9_fix_amides_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step9_fix_amides/output_pdb_path']}, {'id': 'step10_fix_chirality_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step10_fix_chirality/output_pdb_path']}, {'id': 'step11_fix_side_chain_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step11_fix_side_chain/output_pdb_path']}, {'id': 'step12_fix_backbone_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step12_fix_backbone/output_pdb_path']}, {'id': 'step13_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file.', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_pdb_path']}, {'id': 'step13_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop).', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_top_path']}, {'id': 'step13_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd).', 'type': [{'type': 'File'}], 'source_ids': ['step13_leap_gen_top/output_crd_path']}, {'id': 'step14_sander_mdrun_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_traj_path']}, {'id': 'step14_sander_mdrun_out2', 'name': 'output_rst_path', 'description': 'Output restart file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_rst_path']}, {'id': 'step14_sander_mdrun_out3', 'name': 'output_log_path', 'description': 'Output log file.', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun/output_log_path']}, {'id': 'step15_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file.', 'type': [{'type': 'File'}], 'source_ids': ['step15_amber_to_pdb/output_pdb_path']}, {'id': 'step16_fix_pdb_out1', 'name': 'output_pdb_path', 'description': 'Output PDB file path.', 'type': [{'type': 'File'}], 'source_ids': ['step16_fix_pdb/output_pdb_path']}, {'id': 'step17_structure_check_out1', 'name': 'output_summary_path', 'description': 'Output summary checking results.', 'type': [{'type': 'File'}], 'source_ids': ['step17_structure_check/output_summary_path']}], 'steps': [{'id': 'step0_structure_check_init', 'name': 'structure_check', 'description': 'This class is a wrapper of the Structure Checking tool to generate summary checking results on a json file.', 'sink_ids': ['step0_structure_check_init/output_summary_path']}, {'id': 'step1_extract_model', 'name': 'extract_model', 'description': 'This class is a wrapper of the Structure Checking tool to extract a model from a 3D structure.', 'sink_ids': ['step1_extract_model/output_structure_path']}, {'id': 'step2_extract_chain', 'name': 'extract_chain', 'description': 'This class is a wrapper of the Structure Checking tool to extract a chain from a 3D structure.', 'sink_ids': ['step2_extract_chain/output_structure_path']}, {'id': 'step3_fix_altlocs', 'name': 'fix_altlocs', 'description': 'Fix alternate locations from residues.', 'sink_ids': ['step3_fix_altlocs/output_pdb_path']}, {'id': 'step4_fix_ssbonds', 'name': 'fix_ssbonds', 'description': 'Fix SS bonds from residues.', 'sink_ids': ['step4_fix_ssbonds/output_pdb_path']}, {'id': 'step5_remove_molecules_ions', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step5_remove_molecules_ions/output_molecules_path']}, {'id': 'step6_remove_molecules_ligands', 'name': 'remove_molecules', 'description': 'Class to remove molecules from a 3D structure using Biopython.', 'sink_ids': ['step6_remove_molecules_ligands/output_molecules_path']}, {'id': 'step7_reduce_remove_hydrogens', 'name': 'reduce_remove_hydrogens', 'description': 'Removes hydrogen atoms to small molecules.', 'sink_ids': ['step7_reduce_remove_hydrogens/output_path']}, {'id': 'step8_remove_pdb_water', 'name': 'remove_pdb_water', 'description': 'This class is a wrapper of the Structure Checking tool to remove water molecules from PDB 3D structures.', 'sink_ids': ['step8_remove_pdb_water/output_pdb_path']}, {'id': 'step9_fix_amides', 'name': 'fix_amides', 'description': 'Creates a new PDB file flipping the clashing amide groups.', 'sink_ids': ['step9_fix_amides/output_pdb_path']}, {'id': 'step10_fix_chirality', 'name': 'fix_chirality', 'description': \"Creates a new PDB file fixing stereochemical errors in residue side-chains changing It's chirality.\", 'sink_ids': ['step10_fix_chirality/output_pdb_path']}, {'id': 'step11_fix_side_chain', 'name': 'fix_side_chain', 'description': 'Reconstructs the missing side chains and heavy atoms of the given PDB file.', 'sink_ids': ['step11_fix_side_chain/output_pdb_path']}, {'id': 'step12_fix_backbone', 'name': 'fix_backbone', 'description': 'Reconstructs the missing backbone atoms of the given PDB file.', 'sink_ids': ['step12_fix_backbone/output_pdb_path']}, {'id': 'step13_leap_gen_top', 'name': 'leap_gen_top', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step13_leap_gen_top/output_pdb_path', 'step13_leap_gen_top/output_top_path', 'step13_leap_gen_top/output_crd_path']}, {'id': 'step14_sander_mdrun', 'name': 'sander_mdrun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun/output_traj_path', 'step14_sander_mdrun/output_rst_path', 'step14_sander_mdrun/output_log_path']}, {'id': 'step15_amber_to_pdb', 'name': 'amber_to_pdb', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step15_amber_to_pdb/output_pdb_path']}, {'id': 'step16_fix_pdb', 'name': 'fix_pdb', 'description': 'Renumerates residues in a PDB structure according to a reference sequence from UniProt', 'sink_ids': ['step16_fix_pdb/output_pdb_path']}, {'id': 'step17_structure_check', 'name': 'structure_check', 'description': 'This class is a wrapper of the Structure Checking tool to generate summary checking results on a json file.', 'sink_ids': ['step17_structure_check/output_summary_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step0_structure_check_init_input_structure_path', 'sink_id': 'step0_structure_check_init', 'name': None, 'default_value': None}, {'id': 'output_summary_path', 'source_id': 'step0_structure_check_init_output_summary_path', 'sink_id': 'step0_structure_check_init', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step1_extract_model_config', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_model_input_structure_path', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step1_extract_model_output_structure_path', 'sink_id': 'step1_extract_model', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_extract_chain_config', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step1_extract_model/output_structure_path', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step2_extract_chain_output_structure_path', 'sink_id': 'step2_extract_chain', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_fix_altlocs_config', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step2_extract_chain/output_structure_path', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step3_fix_altlocs_output_pdb_path', 'sink_id': 'step3_fix_altlocs', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step3_fix_altlocs/output_pdb_path', 'sink_id': 'step4_fix_ssbonds', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step4_fix_ssbonds_output_pdb_path', 'sink_id': 'step4_fix_ssbonds', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_remove_molecules_ions_config', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_fix_ssbonds/output_pdb_path', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step5_remove_molecules_ions_output_molecules_path', 'sink_id': 'step5_remove_molecules_ions', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_remove_molecules_ligands_config', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step5_remove_molecules_ions/output_molecules_path', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'output_molecules_path', 'source_id': 'step6_remove_molecules_ligands_output_molecules_path', 'sink_id': 'step6_remove_molecules_ligands', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step6_remove_molecules_ligands/output_molecules_path', 'sink_id': 'step7_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step7_reduce_remove_hydrogens_output_path', 'sink_id': 'step7_reduce_remove_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_reduce_remove_hydrogens/output_path', 'sink_id': 'step8_remove_pdb_water', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_remove_pdb_water_output_pdb_path', 'sink_id': 'step8_remove_pdb_water', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_remove_pdb_water/output_pdb_path', 'sink_id': 'step9_fix_amides', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step9_fix_amides_output_pdb_path', 'sink_id': 'step9_fix_amides', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step9_fix_amides/output_pdb_path', 'sink_id': 'step10_fix_chirality', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step10_fix_chirality_output_pdb_path', 'sink_id': 'step10_fix_chirality', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step10_fix_chirality/output_pdb_path', 'sink_id': 'step11_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step11_fix_side_chain_output_pdb_path', 'sink_id': 'step11_fix_side_chain', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step11_fix_side_chain/output_pdb_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'input_fasta_canonical_sequence_path', 'source_id': 'step12_fix_backbone_input_fasta_canonical_sequence_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step12_fix_backbone_output_pdb_path', 'sink_id': 'step12_fix_backbone', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_leap_gen_top_config', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step12_fix_backbone/output_pdb_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step13_leap_gen_top_output_pdb_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step13_leap_gen_top_output_top_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step13_leap_gen_top_output_crd_path', 'sink_id': 'step13_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_sander_mdrun_config', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step13_leap_gen_top/output_top_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step13_leap_gen_top/output_crd_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step14_sander_mdrun_output_traj_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step14_sander_mdrun_output_rst_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step14_sander_mdrun_output_log_path', 'sink_id': 'step14_sander_mdrun', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step13_leap_gen_top/output_top_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step14_sander_mdrun/output_rst_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step15_amber_to_pdb_output_pdb_path', 'sink_id': 'step15_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step15_amber_to_pdb/output_pdb_path', 'sink_id': 'step16_fix_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step16_fix_pdb_output_pdb_path', 'sink_id': 'step16_fix_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step16_fix_pdb/output_pdb_path', 'sink_id': 'step17_structure_check', 'name': None, 'default_value': None}, {'id': 'output_summary_path', 'source_id': 'step17_structure_check_output_summary_path', 'sink_id': 'step17_structure_check', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 776,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'extract_chain.cwl', 'extract_model.cwl', 'fix_altlocs.cwl', 'fix_amides.cwl', 'fix_backbone.cwl', 'fix_chirality.cwl', 'fix_pdb.cwl', 'fix_side_chain.cwl', 'fix_ssbonds.cwl', 'leap_gen_top.cwl', 'reduce_remove_hydrogens.cwl', 'remove_molecules.cwl', 'remove_pdb_water.cwl', 'sander_mdrun.cwl', 'structure_check.cwl', 'sequence.fasta', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process ofcheckingamolecular structurebefore using it as an input for aMolecular Dynamicssimulation. The workflow uses theBioExcel Building Blocks library (biobb). The particular structure used is the crystal structure ofhuman Adenylate Kinase 1A (AK1A), in complex with theAP5A inhibitor(PDB code1Z83). Structure checkingis a key step before setting up a protein system forsimulations. A number ofcommon issuesfound in structures atProtein Data Bankmay compromise the success of thesimulation, or may suggest that longerequilibrationprocedures are necessary. Theworkflowshows how to: An implementation of this workflow in aweb-based Graphical User Interface (GUI)can be found in thehttps://mmb.irbbarcelona.org/biobb-wfs/server (seehttps://mmb.irbbarcelona.org/biobb-wfs/help/create/structure#check). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/776?version=1 DOI:10.48546/workflowhub.workflow.776.1 Initial commit Views:792Downloads:446 Created: 5th Mar 2024 at 08:41 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 378,
    "discussion_links": [],
    "title": "Use Case 13: Novel Cell Surface Targets for Individual Cancer Patients Analyzed with Common Fund Datasets",
    "license": "CC-BY-NC-SA-4.0",
    "description": "The input to this workflow is a data matrix of gene expression that was collected from a pediatric patient tumor patient from the KidsFirst Common Fund program [1]. The RNA-seq samples are the columns of the matrix, and the rows are the raw expression gene count for all human coding genes (Table 1). This data matrix is fed into TargetRanger [2] to screen for targets which are highly expressed in the tumor but lowly expressed across most healthy human tissues based on gene expression data collected from postmortem patients with RNA-seq by the GTEx Common Fund program [3]. Based on this analysis the gene IMP U3 small nucleolar ribonucleoprotein 3 (IMP3) was selected because it was the top candidate returned from the TargetRanger analysis (Tables 2-3). IMP3 is also commonly called insulin-like growth factor 2 mRNA-binding protein 3 (IGF2BP3). Next, we leverage unique knowledge from various other Common Fund programs to examine various functions and knowledge related to IMP3. First, we queried the LINCS L1000 data [4] from the LINCS program [5] converted into RNA-seq-like LINCS L1000 Signatures [6] using the SigCom LINCS API [7] to identify mimicker or reverser small molecules that maximally impact the expression of IMP3 in human cell lines (Fig. 1, Table 4). In addition, we also queried the LINCS L1000 data to identify single gene CRISPR knockouts that down-regulate the expression of IMP3 (Fig. 1, Table 5). These potential drug targets were filtered using the Common Fund IDG program's list of understudied proteins [8] to produce a set of additional targets (Table 6). Next, IMP3 was searched for knowledge provided by the with the Metabolomics Workbench MetGENE tool [9]. MetGENE aggregates knowledge about pathways, reactions, metabolites, and studies from the Metabolomics Workbench Common Fund supported resource [10]. The Metabolomics Workbench was searched to find associated metabolites linked to IMP3 [10]. Furthermore, we leveraged the Linked Data Hub API [11] to list knowledge about regulatory elements associated with IMP3 (Table 6). Finally, the GlyGen database [12] was queried to identify relevant sets of proteins that are the product of the IMP3 genes, as well as known post-translational modifications discovered on IMP3.\n\n1. Lonsdale, J. et al. The Genotype-Tissue Expression (GTEx) project. Nature Genetics vol. 45 580–585 (2013). doi:10.1038/ng.2653\n2. Evangelista, J. E. et al. SigCom LINCS: data and metadata search engine for a million gene expression signatures. Nucleic Acids Research vol. 50 W697–W709 (2022). doi:10.1093/nar/gkac328\n3. IDG Understudied Proteins, https://druggablegenome.net/AboutIDGProteinList\n4. MetGENE, https://sc-cfdewebdev.sdsc.edu/MetGENE/metGene.php\n5. The Metabolomics Workbench, https://www.metabolomicsworkbench.org/\n6. Linked Data Hub, https://ldh.genome.network/cfde/ldh/\n7. York, W. S. et al. GlyGen: Computational and Informatics Resources for Glycoscience. Glycobiology vol. 30 72–73 (2019). doi:10.1093/glycob/cwz080",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/814?version=1', 'commit': '7d7d4ea1ceb21c3d7370ae29806321a98a616fae', 'ref': 'refs/heads/master', 'tree': '/workflows/814/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-04-16T21:42:58.000Z",
    "updated_at": "2024-04-23T15:54:49.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step-1-data', 'name': 'Input File', 'description': 'Upload a Data File', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step-4-data', 'name': 'Select One Gene', 'description': 'Select one Gene', 'type': [{'type': 'File'}], 'default_value': None}], 'outputs': [{'id': 'step-1-output', 'name': 'File URL', 'description': 'URL to a File', 'type': [{'type': 'File'}], 'source_ids': ['step-1/output']}, {'id': 'step-2-output', 'name': 'Gene Count Matrix', 'description': 'A gene count matrix file', 'type': [{'type': 'File'}], 'source_ids': ['step-2/output']}, {'id': 'step-3-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-3/output']}, {'id': 'step-4-output', 'name': 'Gene', 'description': 'Gene Term', 'type': [{'type': 'File'}], 'source_ids': ['step-4/output']}, {'id': 'step-5-output', 'name': 'LINCS L1000 Reverse Search Dashboard', 'description': 'A dashboard for performing L1000 Reverse Search queries for a given gene', 'type': [{'type': 'File'}], 'source_ids': ['step-5/output']}, {'id': 'step-6-output', 'name': 'Scored Drugs', 'description': 'ZScores of Drugs', 'type': [{'type': 'File'}], 'source_ids': ['step-6/output']}, {'id': 'step-7-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-7/output']}, {'id': 'step-8-output', 'name': 'Scored Genes', 'description': 'ZScores of Genes', 'type': [{'type': 'File'}], 'source_ids': ['step-8/output']}, {'id': 'step-9-output', 'name': 'MetGENE Summary', 'description': 'A dashboard for reviewing gene-centric information for a given gene from metabolomics', 'type': [{'type': 'File'}], 'source_ids': ['step-9/output']}, {'id': 'step-10-output', 'name': 'MetGENE metabolite table', 'description': 'MetGENE metabolite table', 'type': [{'type': 'File'}], 'source_ids': ['step-10/output']}, {'id': 'step-11-output', 'name': 'MetGENE Reaction Table', 'description': 'MetGENE Reaction Table', 'type': [{'type': 'File'}], 'source_ids': ['step-11/output']}, {'id': 'step-12-output', 'name': 'Regulatory Element Set', 'description': 'Set of Regulatory Elements', 'type': [{'type': 'File'}], 'source_ids': ['step-12/output']}, {'id': 'step-13-output', 'name': 'GlyGen Protein Products', 'description': 'Protein product records in GlyGen', 'type': [{'type': 'File'}], 'source_ids': ['step-13/output']}], 'steps': [{'id': 'step-1', 'name': 'Input File', 'description': 'Upload a Data File', 'sink_ids': ['step-1/output']}, {'id': 'step-2', 'name': 'Resolve a Gene Count Matrix from a File', 'description': 'Ensure a file contains a gene count matrix, load it into a standard format', 'sink_ids': ['step-2/output']}, {'id': 'step-3', 'name': 'Screen for Targets against GTEx', 'description': 'Identify significantly overexpressed genes when compared to normal tissue in GTEx', 'sink_ids': ['step-3/output']}, {'id': 'step-4', 'name': 'Select One Gene', 'description': 'Select one Gene', 'sink_ids': ['step-4/output']}, {'id': 'step-5', 'name': 'LINCS L1000 Reverse Search', 'description': 'Identify RNA-seq-like LINCS L1000 Signatures which reverse the expression of the gene.', 'sink_ids': ['step-5/output']}, {'id': 'step-6', 'name': 'Extract Down Regulating Perturbagens', 'description': 'Identify RNA-seq-like LINCS L1000 Chemical Perturbagen Signatures which reverse the expression of the gene.', 'sink_ids': ['step-6/output']}, {'id': 'step-7', 'name': 'Extract Down Regulating CRISPR KOs', 'description': 'Identify RNA-seq-like LINCS L1000 CRISPR KO Signatures which reverse the expression of the gene.', 'sink_ids': ['step-7/output']}, {'id': 'step-8', 'name': 'Filter genes by Understudied Proteins', 'description': 'Based on IDG understudied proteins list', 'sink_ids': ['step-8/output']}, {'id': 'step-9', 'name': 'MetGENE Search', 'description': 'Identify gene-centric information from Metabolomics.', 'sink_ids': ['step-9/output']}, {'id': 'step-10', 'name': 'MetGENE Metabolites', 'description': 'Extract Metabolomics metabolites for the gene from MetGENE', 'sink_ids': ['step-10/output']}, {'id': 'step-11', 'name': 'MetGENE Reactions', 'description': 'Extract Metabolomics reactions for the gene from MetGENE', 'sink_ids': ['step-11/output']}, {'id': 'step-12', 'name': 'Resolve Regulatory Elements from LDH', 'description': 'Resolve regulatory elements from gene with Linked Data Hub', 'sink_ids': ['step-12/output']}, {'id': 'step-13', 'name': 'Search GlyGen for Protein Products', 'description': 'Find protein product records in GlyGen for the gene', 'sink_ids': ['step-13/output']}], 'links': [{'id': 'data', 'source_id': 'step-1-data', 'sink_id': 'step-1', 'name': None, 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-1', 'name': None, 'default_value': 'step-1-output.json'}, {'id': 'inputs.file', 'source_id': 'step-1/output', 'sink_id': 'step-2', 'name': 'File URL', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-2', 'name': None, 'default_value': 'step-2-output.json'}, {'id': 'inputs.input', 'source_id': 'step-2/output', 'sink_id': 'step-3', 'name': 'Gene Count Matrix', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-3', 'name': None, 'default_value': 'step-3-output.json'}, {'id': 'data', 'source_id': 'step-4-data', 'sink_id': 'step-4', 'name': None, 'default_value': None}, {'id': 'inputs.scored', 'source_id': 'step-3/output', 'sink_id': 'step-4', 'name': 'Scored Genes', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-4', 'name': None, 'default_value': 'step-4-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-5', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-5', 'name': None, 'default_value': 'step-5-output.json'}, {'id': 'inputs.search', 'source_id': 'step-5/output', 'sink_id': 'step-6', 'name': 'LINCS L1000 Reverse Search Dashboard', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-6', 'name': None, 'default_value': 'step-6-output.json'}, {'id': 'inputs.search', 'source_id': 'step-5/output', 'sink_id': 'step-7', 'name': 'LINCS L1000 Reverse Search Dashboard', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-7', 'name': None, 'default_value': 'step-7-output.json'}, {'id': 'inputs.input', 'source_id': 'step-7/output', 'sink_id': 'step-8', 'name': 'Scored Genes', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-8', 'name': None, 'default_value': 'step-8-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-9', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-9', 'name': None, 'default_value': 'step-9-output.json'}, {'id': 'inputs.summary', 'source_id': 'step-9/output', 'sink_id': 'step-10', 'name': 'MetGENE Summary', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-10', 'name': None, 'default_value': 'step-10-output.json'}, {'id': 'inputs.summary', 'source_id': 'step-9/output', 'sink_id': 'step-11', 'name': 'MetGENE Summary', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-11', 'name': None, 'default_value': 'step-11-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-12', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-12', 'name': None, 'default_value': 'step-12-output.json'}, {'id': 'inputs.gene', 'source_id': 'step-4/output', 'sink_id': 'step-13', 'name': 'Gene', 'default_value': None}, {'id': 'outputFilename', 'source_id': None, 'sink_id': 'step-13', 'name': None, 'default_value': 'step-13-output.json'}]}",
    "tools": [],
    "id": 814,
    "text_field": "['diagram.png', 'pwb-export.json', 'pwb-report.html', 'workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.2\nclass: Workflow\ndoc: >-\n  A file was first uploaded. The file was parsed as a gene count matrix.\n  Significantly over-expressed genes when compared to normal tissue in GTEx [1]\n  were identified. IMP3 was chosen for further investigation. RNA-seq-like LINCS\n  L1000 Signatures [2] which mimick or reverse the the expression of IMP3 were\n  visualized. Drugs which down-regulate the expression of IMP3 were identified\n  from the RNA-seq-like LINCS L1000 Chemical Perturbagens [2]. Genes which\n  down-regulate the expression of IMP3 were identified from the RNA-seq-like\n  LINCS L1000 CRISPR Knockouts [2]. Genes were filtered by IDG Understudied\n  Proteins [3]. The gene was searched with the MetGENE tool providing pathways,\n  reactions, metabolites, and studies from the Metabolomics Workbench [4]. IMP3\n  was then searched in the Metabolomics Workbench [5] to identify associated\n  metabolites. IMP3 was then searched in the Metabolomics Workbench [5] to\n  identify relevant reactions. Regulatory elements were obtained from the Linked\n  Data Hub [6]. The GlyGen database [7] was searched to identify a relevant set\n  of protein products that originate from IMP3.\n\n\n  1. Lonsdale, J. et al. The Genotype-Tissue Expression (GTEx) project. Nature\n  Genetics vol. 45 580–585 (2013). doi:10.1038/ng.2653\n\n  2. Evangelista, J. E. et al. SigCom LINCS: data and metadata search engine for\n  a million gene expression signatures. Nucleic Acids Research vol. 50 W697–W709\n  (2022). doi:10.1093/nar/gkac328\n\n  3. IDG Understudied Proteins, https://druggablegenome.net/AboutIDGProteinList\n\n  4. MetGENE, https://sc-cfdewebdev.sdsc.edu/MetGENE/metGene.php\n\n  5. The Metabolomics Workbench, https://www.metabolomicsworkbench.org/\n\n  6. Linked Data Hub, https://ldh.genome.network/cfde/ldh/\n\n  7. York, W. S. et al. GlyGen: Computational and Informatics Resources for\n  Glycoscience. Glycobiology vol. 30 72–73 (2019). doi:10.1093/glycob/cwz080\nrequirements: {}\ninputs:\n  step-1-data:\n    label: Input File\n    doc: Upload a Data File\n    type: File\n  step-4-data:\n    label: Select One Gene\n    doc: Select one Gene\n    type: File\noutputs:\n  step-1-output:\n    label: File URL\n    doc: URL to a File\n    type: File\n    outputSource: step-1/output\n  step-2-output:\n    label: Gene Count Matrix\n    doc: A gene count matrix file\n    type: File\n    outputSource: step-2/output\n  step-3-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-3/output\n  step-4-output:\n    label: Gene\n    doc: Gene Term\n    type: File\n    outputSource: step-4/output\n  step-5-output:\n    label: LINCS L1000 Reverse Search Dashboard\n    doc: A dashboard for performing L1000 Reverse Search queries for a given gene\n    type: File\n    outputSource: step-5/output\n  step-6-output:\n    label: Scored Drugs\n    doc: ZScores of Drugs\n    type: File\n    outputSource: step-6/output\n  step-7-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-7/output\n  step-8-output:\n    label: Scored Genes\n    doc: ZScores of Genes\n    type: File\n    outputSource: step-8/output\n  step-9-output:\n    label: MetGENE Summary\n    doc: A dashboard for reviewing gene-centric information for a given gene from\n      metabolomics\n    type: File\n    outputSource: step-9/output\n  step-10-output:\n    label: MetGENE metabolite table\n    doc: MetGENE metabolite table\n    type: File\n    outputSource: step-10/output\n  step-11-output:\n    label: MetGENE Reaction Table\n    doc: MetGENE Reaction Table\n    type: File\n    outputSource: step-11/output\n  step-12-output:\n    label: Regulatory Element Set\n    doc: Set of Regulatory Elements\n    type: File\n    outputSource: step-12/output\n  step-13-output:\n    label: GlyGen Protein Products\n    doc: Protein product records in GlyGen\n    type: File\n    outputSource: step-13/output\nsteps:\n  step-1:\n    run: FileInput.cwl\n    label: Input File\n    doc: Upload a Data File\n    in:\n      data:\n        source: step-1-data\n      outputFilename:\n        default: step-1-output.json\n    out:\n      - output\n  step-2:\n    run: GeneCountMatrixFromFile.cwl\n    label: Resolve a Gene Count Matrix from a File\n    doc: Ensure a file contains a gene count matrix, load it into a standard format\n    in:\n      inputs.file:\n        label: File URL\n        source: step-1/output\n      outputFilename:\n        default: step-2-output.json\n    out:\n      - output\n  step-3:\n    run: TargetRangerScreenTargets[GTEx_transcriptomics].cwl\n    label: Screen for Targets against GTEx\n    doc: Identify significantly overexpressed genes when compared to normal tissue\n      in GTEx\n    in:\n      inputs.input:\n        label: Gene Count Matrix\n        source: step-2/output\n      outputFilename:\n        default: step-3-output.json\n    out:\n      - output\n  step-4:\n    run: OneScoredT[Scored[Gene]].cwl\n    label: Select One Gene\n    doc: Select one Gene\n    in:\n      data:\n        source: step-4-data\n      inputs.scored:\n        label: Scored Genes\n        source: step-3/output\n      outputFilename:\n        default: step-4-output.json\n    out:\n      - output\n  step-5:\n    run: LINCSL1000ReverseSearch.cwl\n    label: LINCS L1000 Reverse Search\n    doc: Identify RNA-seq-like LINCS L1000 Signatures which reverse the expression\n      of the gene.\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-5-output.json\n    out:\n      - output\n  step-6:\n    run: LINCSL1000ReverseSearchExtract[Drug, Down].cwl\n    label: Extract Down Regulating Perturbagens\n    doc: Identify RNA-seq-like LINCS L1000 Chemical Perturbagen Signatures which\n      reverse the expression of the gene.\n    in:\n      inputs.search:\n        label: LINCS L1000 Reverse Search Dashboard\n        source: step-5/output\n      outputFilename:\n        default: step-6-output.json\n    out:\n      - output\n  step-7:\n    run: LINCSL1000ReverseSearchExtract[Gene, Down].cwl\n    label: Extract Down Regulating CRISPR KOs\n    doc: Identify RNA-seq-like LINCS L1000 CRISPR KO Signatures which reverse the\n      expression of the gene.\n    in:\n      inputs.search:\n        label: LINCS L1000 Reverse Search Dashboard\n        source: step-5/output\n      outputFilename:\n        default: step-7-output.json\n    out:\n      - output\n  step-8:\n    run: IDGFilter[Scored[Gene], all].cwl\n    label: Filter genes by Understudied Proteins\n    doc: Based on IDG understudied proteins list\n    in:\n      inputs.input:\n        label: Scored Genes\n        source: step-7/output\n      outputFilename:\n        default: step-8-output.json\n    out:\n      - output\n  step-9:\n    run: MetGeneSearch.cwl\n    label: MetGENE Search\n    doc: Identify gene-centric information from Metabolomics.\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-9-output.json\n    out:\n      - output\n  step-10:\n    run: MetgeneMetabolites.cwl\n    label: MetGENE Metabolites\n    doc: Extract Metabolomics metabolites for the gene from MetGENE\n    in:\n      inputs.summary:\n        label: MetGENE Summary\n        source: step-9/output\n      outputFilename:\n        default: step-10-output.json\n    out:\n      - output\n  step-11:\n    run: MetGeneRxns.cwl\n    label: MetGENE Reactions\n    doc: Extract Metabolomics reactions for the gene from MetGENE\n    in:\n      inputs.summary:\n        label: MetGENE Summary\n        source: step-9/output\n      outputFilename:\n        default: step-11-output.json\n    out:\n      - output\n  step-12:\n    run: GetRegulatoryElementsForGeneInfoFromGene.cwl\n    label: Resolve Regulatory Elements from LDH\n    doc: Resolve regulatory elements from gene with Linked Data Hub\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-12-output.json\n    out:\n      - output\n  step-13:\n    run: GlyGenProteinInformation.cwl\n    label: Search GlyGen for Protein Products\n    doc: Find protein product records in GlyGen for the gene\n    in:\n      inputs.gene:\n        label: Gene\n        source: step-4/output\n      outputFilename:\n        default: step-13-output.json\n    out:\n      - output",
    "p_tag_content": "The input to this workflow is a data matrix of gene expression that was collected from a pediatric patient tumor patient from the KidsFirst Common Fund program [1]. The RNA-seq samples are the columns of the matrix, and the rows are the raw expression gene count for all human coding genes (Table 1). This data matrix is fed into TargetRanger [2] to screen for targets which are highly expressed in the tumor but lowly expressed across most healthy human tissues based on gene expression data collected from postmortem patients with RNA-seq by the GTEx Common Fund program [3]. Based on this analysis the gene IMP U3 small nucleolar ribonucleoprotein 3 (IMP3) was selected because it was the top candidate returned from the TargetRanger analysis (Tables 2-3). IMP3 is also commonly called insulin-like growth factor 2 mRNA-binding protein 3 (IGF2BP3). Next, we leverage unique knowledge from various other Common Fund programs to examine various functions and knowledge related to IMP3. First, we queried the LINCS L1000 data [4] from the LINCS program [5] converted into RNA-seq-like LINCS L1000 Signatures [6] using the SigCom LINCS API [7] to identify mimicker or reverser small molecules that maximally impact the expression of IMP3 in human cell lines (Fig. 1, Table 4). In addition, we also queried the LINCS L1000 data to identify single gene CRISPR knockouts that down-regulate the expression of IMP3 (Fig. 1, Table 5). These potential drug targets were filtered using the Common Fund IDG program's list of understudied proteins [8] to produce a set of additional targets (Table 6). Next, IMP3 was searched for knowledge provided by the with the Metabolomics Workbench MetGENE tool [9]. MetGENE aggregates knowledge about pathways, reactions, metabolites, and studies from the Metabolomics Workbench Common Fund supported resource [10]. The Metabolomics Workbench was searched to find associated metabolites linked to IMP3 [10]. Furthermore, we leveraged the Linked Data Hub API [11] to list knowledge about regulatory elements associated with IMP3 (Table 6). Finally, the GlyGen database [12] was queried to identify relevant sets of proteins that are the product of the IMP3 genes, as well as known post-translational modifications discovered on IMP3. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/814?version=1 Initial commit Views:720Downloads:117 Created: 16th Apr 2024 at 22:42 Last updated: 23rd Apr 2024 at 16:54 This item has not yet been tagged. None Teams:NIH CFDE Playbook Workflow Partnership Organizations:Mount Sinai A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://playbook-workflow-builder.cloud/ Organisms:Not specified"
  },
  {
    "": 401,
    "discussion_links": "[{'id': '918', 'label': 'Issues', 'url': 'https://forgemia.inra.fr/tango/tango_models/-/issues'}]",
    "title": "Tango: Numerical reconciliation of bacterial fermentation in cheese production",
    "license": "GPL-3.0",
    "description": "Complete workflow for TANGO as reported in Lecomte et al (2024),\n\"Revealing the dynamics and mechanisms of bacterial interactions in\ncheese production with metabolic modelling\", Metabolic Eng. 83:24-38\nhttps://doi.org/10.1016/j.ymben.2024.02.014\n\n1. Parameters for individual models are obtained by optimization\n2. Individual dynamics and community dynamics are simulated\n3. Figures for the manuscript are assembled from the results.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/873?version=1', 'commit': 'fd9ed7efc8aa53c9af4651a987673db364ecd9fa', 'ref': 'refs/tags/Version-0.9.0', 'tree': '/workflows/873/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-05-03T07:03:12.000Z",
    "updated_at": "2024-05-03T07:08:20.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": "[{'label': 'Microbial ecology', 'identifier': 'http://edamontology.org/topic_3697'}]",
    "internals": "{'inputs': [{'id': '#main/community', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': '#main/pure_culture', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'record', 'fields': []}]}], 'default_value': None}, {'id': '#main/which_figures', 'name': None, 'description': None, 'type': [{'type': 'array', 'items': [{'type': 'string'}]}], 'default_value': None}], 'outputs': [{'id': '#main/figures', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['#main/mkdir_figures/out_dir']}, {'id': '#main/results', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['#main/mkdir_results/out_dir']}], 'steps': [{'id': '#main/dynamics', 'name': None, 'description': None, 'sink_ids': ['#main/dynamics/results', '#main/dynamics/time_series']}, {'id': '#main/mkdir_figures', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_figures/out_dir']}, {'id': '#main/mkdir_models', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_models/models_dir']}, {'id': '#main/mkdir_results', 'name': None, 'description': None, 'sink_ids': ['#main/mkdir_results/out_dir']}, {'id': '#main/optimize', 'name': None, 'description': None, 'sink_ids': ['#main/optimize/result_optimization']}, {'id': '#main/plot_figures', 'name': None, 'description': None, 'sink_ids': ['#main/plot_figures/figures']}], 'links': [{'id': '#main/dynamics/community', 'source_id': '#main/community', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/dynamics/initial_res_optim', 'source_id': '#main/optimize/result_optimization', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/dynamics/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/dynamics', 'name': None, 'default_value': None}, {'id': '#main/mkdir_figures/file_list', 'source_id': '#main/plot_figures/figures', 'sink_id': '#main/mkdir_figures', 'name': None, 'default_value': None}, {'id': '#main/mkdir_figures/name', 'source_id': None, 'sink_id': '#main/mkdir_figures', 'name': None, 'default_value': None}, {'id': '#main/mkdir_models/community', 'source_id': '#main/community', 'sink_id': '#main/mkdir_models', 'name': None, 'default_value': None}, {'id': '#main/mkdir_models/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/mkdir_models', 'name': None, 'default_value': None}, {'id': '#main/mkdir_results/file_list', 'source_id': '#main/dynamics/results', 'sink_id': '#main/mkdir_results', 'name': None, 'default_value': None}, {'id': '#main/mkdir_results/name', 'source_id': None, 'sink_id': '#main/mkdir_results', 'name': None, 'default_value': None}, {'id': '#main/optimize/pure_culture', 'source_id': '#main/pure_culture', 'sink_id': '#main/optimize', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/models', 'source_id': '#main/mkdir_models/models_dir', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/results', 'source_id': '#main/dynamics/results', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/results', 'source_id': '#main/dynamics/time_series', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}, {'id': '#main/plot_figures/which_figures', 'source_id': '#main/which_figures', 'sink_id': '#main/plot_figures', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 873,
    "text_field": "['packed.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Complete workflow for TANGO as reported in Lecomte et al (2024),\n\"Revealing the dynamics and mechanisms of bacterial interactions in\ncheese production with metabolic modelling\", Metabolic Eng. 83:24-38https://doi.org/10.1016/j.ymben.2024.02.014 Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/873?version=1 Initial commit Views:568Downloads:105 Created: 3rd May 2024 at 08:03 This item has not yet been tagged. None Teams:MISTIC Organizations:Inria A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Microbial communities and TIC Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 410,
    "discussion_links": [],
    "title": "beacon-workflow",
    "license": "MIT",
    "description": "# beacon-omop-worker-workflows",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Merge pull request #1 from Health-Informatics-UoN/workflow_files\\r\\n\\r\\nAdd workflow files', 'url': 'https://workflowhub.eu/workflows/882?version=1', 'remote': 'https://github.com/Health-Informatics-UoN/beacon-omop-worker-workflows.git', 'commit': 'b08dc696f14ae4237d20184d01836ced770b2957', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/882/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #4 from Health-Informatics-UoN/remove_env_vars\\r\\n\\r\\nRemove environment variables', 'url': 'https://workflowhub.eu/workflows/882?version=2', 'remote': 'https://github.com/Health-Informatics-UoN/beacon-omop-worker-workflows.git', 'commit': '17afa9be6a259ef8df1e2e9bd5cedb23befc1751', 'ref': 'refs/remotes/origin/main', 'tree': '/workflows/882/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Merge pull request #4 from Health-Informatics-UoN/remove_env_vars\n\nRemove environment variables",
    "created_at": "2024-05-22T13:18:49.000Z",
    "updated_at": "2024-05-22T13:18:49.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'filters', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'output_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['beacon-oneshot/output_file']}], 'steps': [{'id': 'beacon-oneshot', 'name': None, 'description': None, 'sink_ids': ['beacon-oneshot/output_file']}], 'links': [{'id': 'filters', 'source_id': 'filters', 'sink_id': 'beacon-oneshot', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 882,
    "text_field": "['LICENSE', 'README.md', 'beacon-omop-worker.cwl', 'workflow_entrypoint.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: CommandLineTool\nid: beacon-oneshot\nlabel: beacon-oneshot\n\nhints:\n    DockerRequirement:\n        dockerPull: hutchstack/beacon-omop-worker:latest\nrequirements:\n    EnvVarRequirement:\n        envDef:\n            DATASOURCE_DB_HOST: $(inputs.db_host)\n            DATASOURCE_DB_DATABASE: $(inputs.db_name)\n            DATASOURCE_DB_USERNAME: $(inputs.db_user)\n            DATASOURCE_DB_PASSWORD: $(inputs.db_password)\n\nbaseCommand: [beacon-omop-worker]\narguments: [\"individuals\"]\ninputs:\n    filters:\n        type: string?\n        inputBinding:\n            position: 2\n            prefix: -f\n    db_host:\n      type: string\n    db_name:\n      type: string\n    db_user:\n      type: string\n    db_password:\n      type: string\n\noutputs:\n    output_file:\n        type: File\n        outputBinding:\n            glob: \"output.json\"\n\ncwlVersion: v1.0\nclass: Workflow\nid: beacon_workflow\nlabel: beacon-workflow\n\ninputs:\n    filters:\n        type: string?\n    db_host:\n        type: string\n    db_name:\n        type: string\n    db_user:\n        type: string\n    db_password:\n        type: string\n\noutputs:\n    output_file:\n        type: File\n        outputSource: beacon-oneshot/output_file\n\nsteps:\n    beacon-oneshot:\n        run: ./beacon-omop-worker.cwl\n        in:\n            filters: filters\n            db_host: db_host\n            db_name: db_name\n            db_user: db_user\n            db_password: db_password\n            \n        out: [output_file]",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/882?version=2 Merge pull request #4 from Health-Informatics-UoN/remove_env_vars Remove environment variables Merge pull request #1 from Health-Informatics-UoN/workflow_files Add workflow files Views:1009Downloads:303 Created: 10th May 2024 at 13:40 Last updated: 22nd May 2024 at 14:18 This item has not yet been tagged. None Teams:TRE-FX Organizations:University of Nottingham A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified TRE-FX is assembling leading technology providers from ELIXIR-UK and HDR UK, with three TRE providers and two leading analysis platforms to show through a real reference implementation how we can use secure Research Objects to move between TREs while still supporting the Five Safes principles that govern and protect patient data; all overseen by patient representatives. Space:Independent Teams Public web page:https://trefx.uk/ Start date: 1st Mar 2023 End date: 31st Oct 2023 Organisms:Not specified"
  },
  {
    "": 412,
    "discussion_links": [],
    "title": "GSC (Genotype Sparse Compression)",
    "license": "MIT",
    "description": "# GSC (Genotype Sparse Compression)\nGenotype Sparse Compression (GSC) is an advanced tool for lossless compression of VCF files, designed to efficiently store and manage VCF files in a compressed format. It accepts VCF/BCF files as input and utilizes advanced compression techniques to significantly reduce storage requirements while ensuring fast query capabilities. In our study, we successfully compressed the VCF files from the 1000 Genomes Project (1000Gpip3), consisting of 2504 samples and 80 million variants, from an uncompressed VCF file of 803.70GB to approximately 1GB.\n\n## Requirements \n### GSC requires:\n\n- **Compiler Compatibility**: GSC requires a modern C++14-ready compiler, such as:\n  - g++ version 10.1.0 or higher\n\n- **Build System**: Make build system is necessary for compiling GSC.\n\n- **Operating System**: GSC supports 64-bit operating systems, including:\n  - Linux (Ubuntu 18.04)\n  \n## Installation\nTo download, build and install GSC use the following commands.\n```bash\ngit clone https://github.com/luo-xiaolong/GSC.git\ncd GSC\nmake\n```\nTo clean the GSC build use:\n```bash\nmake clean\n```\n## Usage\n```bash\nUsage: gsc [option] [arguments] \nAvailable options: \n        compress - compress VCF/BCF file\n        decompress     - query and decompress to VCF/BCF file\n```\n- Compress the input VCF/BCF file\n```bash\nUsage of gsc compress:\n\n        gsc compress [options] [--in [in_file]] [--out [out_file]]\n\nWhere:\n\n        [options]              Optional flags and parameters for compression.\n        -i,  --in [in_file]    Specify the input file (default: VCF or VCF.GZ). If omitted, input is taken from standard input (stdin).\n        -o,  --out [out_file]  Specify the output file. If omitted, output is sent to standard output (stdout).\n\nOptions:\n\n        -M,  --mode_lossly     Choose lossy compression mode (lossless by default).\n        -b,  --bcf             Input is a BCF file (default: VCF or VCF.GZ).\n        -p,  --ploidy [X]      Set ploidy of samples in input VCF to [X] (default: 2).\n        -t,  --threads [X]     Set number of threads to [X] (default: 1).\n        -d,  --depth [X]       Set maximum replication depth to [X] (default: 100, 0 means no matches).\n        -m,  --merge [X]       Specify files to merge, separated by commas (e.g., -m chr1.vcf,chr2.vcf), or '@' followed by a file containing a list of VCF files (e.g., -m @file_with_IDs.txt). By default, all VCF files are compressed.\n```\n- Decompress / Query\n```bash\nUsage of gsc decompress and query:\n\n        gsc decompress [options] --in [in_file] --out [out_file]\n\nWhere:\n        [options]              Optional flags and parameters for compression.\n        -i,  --in [in_file]    Specify the input file . If omitted, input is taken from standard input (stdin).\n        -o,  --out [out_file]  Specify the output file (default: VCF). If omitted, output is sent to standard output (stdout).\n\nOptions:\n\n    General Options:\n\n        -M,  --mode_lossly      Choose lossy compression mode (default: lossless).\n        -b,  --bcf              Output a BCF file (default: VCF).\n\n    Filter options (applicable in lossy compression mode only): \n\n        -r,  --range [X]        Specify range in format [start],[end] (e.g., -r 4999756,4999852).\n        -s,  --samples [X]      Samples separated by comms (e.g., -s HG03861,NA18639) OR '@' sign followed by the name of a file with sample name(s) separated by whitespaces (for exaple: -s @file_with_IDs.txt). By default all samples/individuals are decompressed. \n        --header-only           Output only the header of the VCF/BCF.\n        --no-header             Output without the VCF/BCF header (only genotypes).\n        -G,  --no-genotype      Don't output sample genotypes (only #CHROM, POS, ID, REF, ALT, QUAL, FILTER, and INFO columns).\n        -C,  --out-ac-an        Write AC/AN to the INFO field.\n        -S,  --split            Split output into multiple files (one per chromosome).\n        -I, [ID=^]              Include only sites with specified ID (e.g., -I \"ID=rs6040355\").\n        --minAC [X]             Include only sites with AC <= X.\n        --maxAC [X]             Include only sites with AC >= X.\n        --minAF [X]             Include only sites with AF >= X (X: 0 to 1).\n        --maxAF [X]             Include only sites with AF <= X (X: 0 to 1).\n        --min-qual [X]          Include only sites with QUAL >= X.\n        --max-qual [X]          Include only sites with QUAL <= X.\n```\n## Example\nThere is an example VCF/VCF.gz/BCF file, `toy.vcf`/`toy.vcf.gz`/`toy.bcf`, in the toy folder, which can be used to test GSC\n### compress\n\n#### lossless compression:\nThe input file format is VCF. You can compress a VCF file in lossless mode using one of the following methods:\n1. **Explicit input and output file parameters**:\n   \n   Use the `--in` option to specify the input VCF file and the `--out` option for the output compressed file.\n   ```bash\n   ./gsc compress --in toy/toy.vcf --out toy/toy_lossless.gsc\n   ```\n2. **Input file parameter and output redirection**:\n   \n   Use the `--out` option for the output compressed file and redirect the input VCF file into the command.\n   ```bash\n   ./gsc compress --out toy/toy_lossless.gsc < toy/toy.vcf\n   ```\n3. **Output file redirection and input file parameter**:\n   \n   Specify the input VCF file with the `--in` option and redirect the output to create the compressed file.\n   ```bash\n   ./gsc compress --in toy/toy.vcf > toy/toy_lossless.gsc\n   ```\n4. **Input and output redirection**:\n   \n   Use shell redirection for both input and output. This method does not use the `--in` and `--out` options.\n   ```bash\n   ./gsc compress < toy/toy.vcf > toy/toy_lossless.gsc\n   ```\nThis will create a file:\n* `toy_lossless.gsc` - The compressed archive of the entire VCF file.\n\n#### lossy compression:\n\nThe input file format is VCF. The commands are similar to those used for lossless compression, with the addition of the `-M` parameter to enable lossy compression.\n\n   For example, to compress a VCF file in lossy mode:\n\n   ```bash\n   ./gsc compress -M --in toy/toy.vcf --out toy/toy_lossy.gsc\n   ```\n   Or using redirection:\n   ```bash\n   ./gsc compress -M --out toy/toy_lossy.gsc < toy/toy.vcf\n   ``` \n   This will create a file:\n   * `toy_lossy.gsc` - The compressed archive of the entire VCF file is implemented with lossy compression. It only retains the 'GT' subfield within the INFO and FORMAT fields, and excludes all other subfields..\n    \n### Decompress   (The commands are similar to those used for compression)\nlossless decompression:\n\nTo decompress the compressed toy_lossless.gsc into a VCF file named toy_lossless.vcf:\n```bash\n./gsc decompress --in toy/toy_lossless.gsc --out toy/toy_lossless.vcf\n```\nlossy decompression:\n\nTo decompress the compressed toy_lossy.gsc into a VCF file named toy_lossy.vcf:\n```bash\n./gsc decompress -M --in toy/toy_lossy.gsc --out toy/toy_lossy.vcf\n```\n## Dockerfile\nDockerfile can be used to build a Docker image with all necessary dependencies and GSC compressor. The image is based on Ubuntu 18.04. To build a Docker image and run a Docker container, you need Docker Desktop (https://www.docker.com). Example commands (run it within a directory with Dockerfile):\n```bash\ndocker build -t gsc_project .\ndocker run -it gsc_project\n```\n## Citations\n- **bio.tools ID**: `gsc_genotype_sparse_compression`\n- **Research Resource Identifier (RRID)**: `SCR_025071`",
    "latest_version": 1,
    "tags": "['Bioinformatics', 'Genomics']",
    "versions": "[{'version': 1, 'revision_comments': 'Update README.md', 'url': 'https://workflowhub.eu/workflows/885?version=1', 'remote': 'https://github.com/luo-xiaolong/GSC.git', 'commit': 'f9e0b1ea322f2a553f11f2dd09f62c1d6756b587', 'ref': 'refs/remotes/origin/master', 'tree': '/workflows/885/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Update README.md",
    "created_at": "2024-05-17T16:51:00.000Z",
    "updated_at": "2024-05-17T16:51:00.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 885,
    "text_field": "['include', 'cpp-mmf', 'htslib', 'sdsl', 'zstd-1.5.2', '.circleci', 'images', 'primary', '.github', 'ISSUE_TEMPLATE', 'workflows', 'build', 'VS2008', 'fullbench', 'fuzzer', 'zstd', 'zstdlib', 'VS2010', 'datagen', 'fullbench-dll', 'fullbench', 'fuzzer', 'libzstd-dll', 'libzstd', 'zstd', 'VS_scripts', 'cmake', 'CMakeModules', 'contrib', 'gen_html', 'pzstd', 'lib', 'programs', 'tests', 'meson', 'contrib', 'gen_html', 'pzstd', 'lib', 'programs', 'tests', 'single_file_libs', 'examples', 'contrib', 'VS2005', 'fullbench', 'fuzzer', 'zstd', 'zstdlib', 'diagnose_corruption', 'docker', 'freestanding_lib', 'gen_html', 'largeNbDicts', 'linux-kernel', 'test', 'include', 'asm', 'linux', 'match_finders', 'premake', 'pzstd', 'images', 'test', 'utils', 'test', 'recovery', 'seekable_format', 'examples', 'tests', 'snap', 'doc', 'educational_decoder', 'images', 'examples', 'lib', 'common', 'compress', 'decompress', 'deprecated', 'dictBuilder', 'dll', 'example', 'legacy', 'programs', 'windres', 'tests', 'dict-files', 'fuzz', 'golden-compression', 'golden-dictionaries', 'gzip', 'regression', 'zlibWrapper', 'examples', 'lib', 'pkgconfig', 'src', '.idea', 'test_scripts', 'bcftools_folder', 'bcftools-1.11', 'doc', 'htslib-1.11', 'cram', 'htslib', 'm4', 'os', 'test', 'bcf-sr', 'fuzz', 'longrefs', 'maintainer', 'mpileup', 'tabix', 'm4', 'misc', 'plugins', 'test', 'csq', 'EDUMMY0001', 'EDUMMY0002', 'EDUMMY0003', 'EMN908947', 'ENSG00000173376', 'ENSMUST00000121418', 'ENSMUST00000133836', 'ENST00000218032', 'ENST00000227471', 'ENST00000230048', 'ENST00000256452', 'ENST00000263103-INS', 'ENST00000271583', 'ENST00000294661', 'ENST00000295641', 'ENST00000301246', 'ENST00000303039', 'ENST00000318249.2', 'ENST00000318249', 'ENST00000329454', 'ENST00000341065', 'ENST00000357367', 'ENST00000368801.2', 'ENST00000368801', 'ENST00000373833', 'ENST00000375992', 'ENST00000378322', 'ENST00000381157', 'ENST00000382647', 'ENST00000390520', 'ENST00000400151', 'ENST00000409523', 'ENST00000410009', 'ENST00000413103', 'ENST00000420190', 'ENST00000420670', 'ENST00000423372', 'ENST00000436063', 'ENST00000448695', 'ENST00000479739', 'ENST00000518414-ENST00000521270', 'ENST00000518414', 'ENST00000519442', 'ENST00000520795', 'ENST00000520868', 'ENST00000528237', 'ENST00000536784', 'ENST00000542803', 'ENST00000543077', 'ENST00000545279', 'ENST00000557788', 'ENST00000573314', 'ENST00000593942', 'ENST00000624631', 'mpileup', 'result', 'toy', 'Dockerfile', 'LICENSE', 'Makefile', 'README.md', 'gsc', 'LICENSE.md', 'README.md', 'memory_mapped_file.cpp', 'memory_mapped_file.d', 'memory_mapped_file.hpp', 'memory_mapped_file.o', 'divsufsort.h', 'divsufsort64.h', 'bgzf.h', 'cram.h', 'faidx.h', 'hfile.h', 'hts.h', 'hts_defs.h', 'hts_endian.h', 'hts_log.h', 'hts_os.h', 'kbitset.h', 'kfunc.h', 'khash.h', 'khash_str2int.h', 'klist.h', 'knetfile.h', 'kseq.h', 'ksort.h', 'kstring.h', 'regidx.h', 'sam.h', 'synced_bcf_reader.h', 'tbx.h', 'thread_pool.h', 'vcf.h', 'vcf_sweep.h', 'vcfutils.h', 'libbsc.h', 'bit_vector_il.hpp', 'bit_vectors.hpp', 'bits.hpp', 'bp_support.hpp', 'bp_support_algorithm.hpp', 'bp_support_g.hpp', 'bp_support_gg.hpp', 'bp_support_sada.hpp', 'coder.hpp', 'coder_comma.hpp', 'coder_elias_delta.hpp', 'coder_elias_gamma.hpp', 'coder_fibonacci.hpp', 'config.hpp', 'construct.hpp', 'construct_bwt.hpp', 'construct_config.hpp', 'construct_isa.hpp', 'construct_lcp.hpp', 'construct_lcp_helper.hpp', 'construct_sa.hpp', 'construct_sa_se.hpp', 'csa_alphabet_strategy.hpp', 'csa_bitcompressed.hpp', 'csa_sada.hpp', 'csa_sampling_strategy.hpp', 'csa_wt.hpp', 'cst_fully.hpp', 'cst_iterators.hpp', 'cst_sada.hpp', 'cst_sct3.hpp', 'dac_vector.hpp', 'enc_vector.hpp', 'fast_cache.hpp', 'hyb_vector.hpp', 'int_vector.hpp', 'int_vector_buffer.hpp', 'int_vector_io_wrappers.hpp', 'int_vector_mapper.hpp', 'inv_perm_support.hpp', 'io.hpp', 'iterators.hpp', 'k2_treap.hpp', 'k2_treap_algorithm.hpp', 'k2_treap_helper.hpp', 'k2_tree.hpp', 'k2_tree_helper.hpp', 'lcp.hpp', 'lcp_bitcompressed.hpp', 'lcp_byte.hpp', 'lcp_dac.hpp', 'lcp_support_sada.hpp', 'lcp_support_tree.hpp', 'lcp_support_tree2.hpp', 'lcp_vlc.hpp', 'lcp_wt.hpp', 'louds_tree.hpp', 'memory_management.hpp', 'nearest_neighbour_dictionary.hpp', 'nn_dict_dynamic.hpp', 'qsufsort.hpp', 'ram_filebuf.hpp', 'ram_fs.hpp', 'rank_support.hpp', 'rank_support_scan.hpp', 'rank_support_v.hpp', 'rank_support_v5.hpp', 'raster_img.hpp', 'rmq_succinct_sada.hpp', 'rmq_succinct_sct.hpp', 'rmq_support.hpp', 'rmq_support_sparse_table.hpp', 'rrr_helper.hpp', 'rrr_vector.hpp', 'rrr_vector_15.hpp', 'sd_vector.hpp', 'sdsl_concepts.hpp', 'select_support.hpp', 'select_support_mcl.hpp', 'select_support_scan.hpp', 'sfstream.hpp', 'sorted_int_stack.hpp', 'sorted_multi_stack_support.hpp', 'sorted_stack_support.hpp', 'structure_tree.hpp', 'suffix_array_algorithm.hpp', 'suffix_array_helper.hpp', 'suffix_arrays.hpp', 'suffix_tree_algorithm.hpp', 'suffix_tree_helper.hpp', 'suffix_trees.hpp', 'uint128_t.hpp', 'uint256_t.hpp', 'uintx_t.hpp', 'util.hpp', 'vectors.hpp', 'vlc_vector.hpp', 'wavelet_trees.hpp', 'wm_int.hpp', 'wt_algorithm.hpp', 'wt_ap.hpp', 'wt_blcd.hpp', 'wt_gmr.hpp', 'wt_helper.hpp', 'wt_huff.hpp', 'wt_hutu.hpp', 'wt_int.hpp', 'wt_pc.hpp', 'wt_rlmn.hpp', '.buckconfig', '.buckversion', 'config.yml', 'Dockerfile', '.cirrus.yml', '.gitattributes', 'bug_report.md', 'feature_request.md', 'dev-long-tests.yml', 'dev-short-tests.yml', 'publish-release-artifacts.yml', '.gitignore', '.travis.yml', 'CHANGELOG', 'CODE_OF_CONDUCT.md', 'CONTRIBUTING.md', 'COPYING', 'LICENSE', 'Makefile', 'Package.swift', 'README.md', 'TESTING.md', 'appveyor.yml', '.gitignore', 'LICENSE', 'README.md', 'fullbench.vcproj', 'fuzzer.vcproj', 'zstd.sln', 'zstd.vcproj', 'zstdlib.vcproj', 'CompileAsCpp.props', 'datagen.vcxproj', 'fullbench-dll.vcxproj', 'fullbench.vcxproj', 'fuzzer.vcxproj', 'libzstd-dll.rc', 'libzstd-dll.vcxproj', 'libzstd.vcxproj', 'zstd.sln', 'zstd.rc', 'zstd.vcxproj', 'README.md', 'build.VS2010.cmd', 'build.VS2012.cmd', 'build.VS2013.cmd', 'build.VS2015.cmd', 'build.VS2017.cmd', 'build.VS2017Community.cmd', 'build.VS2017Enterprise.cmd', 'build.VS2017Professional.cmd', 'build.generic.cmd', '.gitignore', 'CMakeLists.txt', 'AddZstdCompilationFlags.cmake', 'FindLibLZ4.cmake', 'GetZstdLibraryVersion.cmake', 'README.md', 'CMakeLists.txt', 'CMakeLists.txt', 'CMakeLists.txt', '.gitignore', 'CMakeLists.txt', 'cmake_uninstall.cmake.in', '.gitignore', 'CMakeLists.txt', '.gitignore', 'CMakeLists.txt', 'zstdConfig.cmake', 'GetZstdLibraryVersion.py', 'InstallSymlink.py', 'README.md', 'meson.build', 'meson.build', 'meson.build', 'meson.build', 'meson.build', 'meson_options.txt', 'meson.build', 'meson.build', 'valgrindTest.py', '.gitignore', 'README.md', 'build_decoder_test.sh', 'build_library_test.sh', 'combine.sh', 'create_single_file_decoder.sh', 'create_single_file_library.sh', 'README.md', 'emscripten.c', 'roundtrip.c', 'shell.html', 'simple.c', 'testcard-dxt1.inl', 'testcard-zstd.inl', 'testcard.png', 'zstd-in.c', 'zstddeclib-in.c', 'README.md', 'fullbench.vcproj', 'fuzzer.vcproj', 'zstd.sln', 'zstd.vcproj', 'zstdlib.vcproj', 'cleanTabs', '.gitignore', 'Makefile', 'check_flipped_bits.c', 'Dockerfile', 'README.md', 'freestanding.py', '.gitignore', 'Makefile', 'README.md', 'gen-zstd-manual.sh', 'gen_html.cpp', '.gitignore', 'Makefile', 'README.md', 'largeNbDicts.c', '.gitignore', 'Makefile', 'README.md', 'btrfs-benchmark.sh', 'btrfs-extract-benchmark.sh', 'decompress_sources.h', 'linux.mk', 'linux_zstd.h', 'mem.h', 'squashfs-benchmark.sh', 'Makefile', 'unaligned.h', 'compiler.h', 'errno.h', 'kernel.h', 'limits.h', 'math64.h', 'module.h', 'printk.h', 'stddef.h', 'swab.h', 'types.h', 'xxhash.h', 'macro-test.sh', 'static_test.c', 'test.c', 'zstd_compress_module.c', 'zstd_decompress_module.c', 'zstd_deps.h', 'README.md', 'zstd_edist.c', 'zstd_edist.h', 'premake4.lua', 'zstd.lua', '.gitignore', 'BUCK', 'ErrorHolder.h', 'Logging.h', 'Makefile', 'Options.cpp', 'Options.h', 'Pzstd.cpp', 'Pzstd.h', 'README.md', 'SkippableFrame.cpp', 'SkippableFrame.h', 'Cspeed.png', 'Dspeed.png', 'main.cpp', 'BUCK', 'OptionsTest.cpp', 'PzstdTest.cpp', 'RoundTrip.h', 'RoundTripTest.cpp', 'BUCK', 'Buffer.h', 'FileSystem.h', 'Likely.h', 'Range.h', 'ResourcePool.h', 'ScopeGuard.h', 'ThreadPool.h', 'WorkQueue.h', 'BUCK', 'BufferTest.cpp', 'RangeTest.cpp', 'ResourcePoolTest.cpp', 'ScopeGuardTest.cpp', 'ThreadPoolTest.cpp', 'WorkQueueTest.cpp', 'Makefile', 'recover_directory.c', '.gitignore', 'Makefile', 'parallel_compression.c', 'parallel_processing.c', 'seekable_compression.c', 'seekable_decompression.c', 'seekable_decompression_mem.c', '.gitignore', 'Makefile', 'seekable_tests.c', 'zstd_seekable.h', 'zstd_seekable_compression_format.md', 'zstdseek_compress.c', 'zstdseek_decompress.c', 'snapcraft.yaml', 'README.md', '.gitignore', 'Makefile', 'README.md', 'harness.c', 'zstd_decompress.c', 'zstd_decompress.h', 'CSpeed2.png', 'DCspeed5.png', 'DSpeed3.png', 'cdict_v136.png', 'dict-cr.png', 'dict-cs.png', 'dict-ds.png', 'zstd_cdict_v1_3_5.png', 'zstd_logo86.png', 'zstd_compression_format.md', 'zstd_manual.html', '.gitignore', 'Makefile', 'README.md', 'common.h', 'dictionary_compression.c', 'dictionary_decompression.c', 'multiple_simple_compression.c', 'multiple_streaming_compression.c', 'simple_compression.c', 'simple_decompression.c', 'streaming_compression.c', 'streaming_compression_thread_pool.c', 'streaming_decompression.c', 'streaming_memory_usage.c', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'bitstream.h', 'compiler.h', 'cpu.h', 'debug.c', 'debug.h', 'entropy_common.c', 'error_private.c', 'error_private.h', 'fse.h', 'fse_decompress.c', 'huf.h', 'mem.h', 'pool.c', 'pool.h', 'portability_macros.h', 'threading.c', 'threading.h', 'xxhash.c', 'xxhash.h', 'zstd_common.c', 'zstd_deps.h', 'zstd_internal.h', 'zstd_trace.h', 'clevels.h', 'fse_compress.c', 'hist.c', 'hist.h', 'huf_compress.c', 'zstd_compress.c', 'zstd_compress_internal.h', 'zstd_compress_literals.c', 'zstd_compress_literals.h', 'zstd_compress_sequences.c', 'zstd_compress_sequences.h', 'zstd_compress_superblock.c', 'zstd_compress_superblock.h', 'zstd_cwksp.h', 'zstd_double_fast.c', 'zstd_double_fast.h', 'zstd_fast.c', 'zstd_fast.h', 'zstd_lazy.c', 'zstd_lazy.h', 'zstd_ldm.c', 'zstd_ldm.h', 'zstd_ldm_geartab.h', 'zstd_opt.c', 'zstd_opt.h', 'zstdmt_compress.c', 'zstdmt_compress.h', 'huf_decompress.c', 'huf_decompress_amd64.S', 'zstd_ddict.c', 'zstd_ddict.h', 'zstd_decompress.c', 'zstd_decompress_block.c', 'zstd_decompress_block.h', 'zstd_decompress_internal.h', 'zbuff.h', 'zbuff_common.c', 'zbuff_compress.c', 'zbuff_decompress.c', 'cover.c', 'cover.h', 'divsufsort.c', 'divsufsort.h', 'fastcover.c', 'zdict.c', 'Makefile', 'README.md', 'build_package.bat', 'fullbench-dll.sln', 'fullbench-dll.vcxproj', 'zstd_legacy.h', 'zstd_v01.c', 'zstd_v01.h', 'zstd_v02.c', 'zstd_v02.h', 'zstd_v03.c', 'zstd_v03.h', 'zstd_v04.c', 'zstd_v04.h', 'zstd_v05.c', 'zstd_v05.h', 'zstd_v06.c', 'zstd_v06.h', 'zstd_v07.c', 'zstd_v07.h', 'libzstd.mk', 'libzstd.pc.in', 'module.modulemap', 'zdict.h', 'zstd.h', 'zstd_errors.h', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'benchfn.c', 'benchfn.h', 'benchzstd.c', 'benchzstd.h', 'datagen.c', 'datagen.h', 'dibio.c', 'dibio.h', 'fileio.c', 'fileio.h', 'platform.h', 'timefn.c', 'timefn.h', 'util.c', 'util.h', 'verrsrc.h', 'zstd.rc', 'zstd32.res', 'zstd64.res', 'zstd.1', 'zstd.1.md', 'zstdcli.c', 'zstdcli_trace.c', 'zstdcli_trace.h', 'zstdgrep', 'zstdgrep.1', 'zstdgrep.1.md', 'zstdless', 'zstdless.1', 'zstdless.1.md', '.gitignore', 'DEPRECATED-test-zstd-speed.py', 'Makefile', 'README.md', 'automated_benchmarking.py', 'bigdict.c', 'checkTag.c', 'datagencli.c', 'decodecorpus.c', 'zero-weight-dict', 'fullbench.c', '.gitignore', 'Makefile', 'README.md', 'block_decompress.c', 'block_round_trip.c', 'decompress_dstSize_tooSmall.c', 'dictionary_decompress.c', 'dictionary_loader.c', 'dictionary_round_trip.c', 'dictionary_stream_round_trip.c', 'fse_read_ncount.c', 'fuzz.h', 'fuzz.py', 'fuzz_data_producer.c', 'fuzz_data_producer.h', 'fuzz_helpers.c', 'fuzz_helpers.h', 'huf_decompress.c', 'huf_round_trip.c', 'raw_dictionary_round_trip.c', 'regression_driver.c', 'seekable_roundtrip.c', 'sequence_compression_api.c', 'simple_compress.c', 'simple_decompress.c', 'simple_round_trip.c', 'stream_decompress.c', 'stream_round_trip.c', 'zstd_frame_info.c', 'zstd_helpers.c', 'zstd_helpers.h', 'fuzzer.c', 'http', 'huffman-compressed-larger', 'http-dict-missing-symbols', 'Makefile', 'gzip-env.sh', 'helin-segv.sh', 'help-version.sh', 'hufts-segv.gz', 'hufts.sh', 'init.cfg', 'init.sh', 'keep.sh', 'list.sh', 'memcpy-abuse.sh', 'mixed.sh', 'null-suffix-clobber.sh', 'stdin.sh', 'test-driver.sh', 'trailing-nul.sh', 'unpack-invalid.sh', 'z-suffix.sh', 'zdiff.sh', 'zgrep-context.sh', 'zgrep-f.sh', 'zgrep-signal.sh', 'znew-k.sh', 'invalidDictionaries.c', 'legacy.c', 'libzstd_builds.sh', 'longmatch.c', 'paramgrill.c', 'playTests.sh', 'poolTests.c', 'rateLimiter.py', '.gitignore', 'Makefile', 'README.md', 'config.c', 'config.h', 'data.c', 'data.h', 'levels.h', 'method.c', 'method.h', 'result.c', 'result.h', 'results.csv', 'test.c', 'roundTripCrash.c', 'seqgen.c', 'seqgen.h', 'test-license.py', 'test-variants.sh', 'test-zstd-versions.py', 'zstreamtest.c', '.gitignore', 'BUCK', 'Makefile', 'README.md', 'example.c', 'example_original.c', 'fitblk.c', 'fitblk_original.c', 'minigzip.c', 'zwrapbench.c', 'gzclose.c', 'gzcompatibility.h', 'gzguts.h', 'gzlib.c', 'gzread.c', 'gzwrite.c', 'zstd_zlibwrapper.c', 'zstd_zlibwrapper.h', 'libbsc.a', 'libdivsufsort.a', 'libdivsufsort64.a', 'libhts.a', 'libhts.so', 'libhts.so.2', 'libsdsl.a', 'libzstd.a', 'htslib.pc', '.gitignore', 'misc.xml', 'modules.xml', 'src.iml', 'bit_memory.cpp', 'bit_memory.d', 'bit_memory.h', 'bit_memory.o', 'block_processing.cpp', 'block_processing.d', 'block_processing.h', 'block_processing.o', 'bsc.cpp', 'bsc.d', 'bsc.h', 'bsc.o', 'compression_reader.cpp', 'compression_reader.d', 'compression_reader.h', 'compression_reader.o', 'compressor.cpp', 'compressor.d', 'compressor.h', 'compressor.o', 'decompression_reader.cpp', 'decompression_reader.d', 'decompression_reader.h', 'decompression_reader.o', 'decompressor.cpp', 'decompressor.d', 'decompressor.h', 'decompressor.o', 'defs.h', 'file_handle.cpp', 'file_handle.d', 'file_handle.h', 'file_handle.o', 'gsc_params.h', 'main.cpp', 'main.d', 'main.o', 'queues.h', 'samples.cpp', 'samples.d', 'samples.h', 'samples.o', 'utils.cpp', 'utils.d', 'utils.h', 'utils.o', 'variant.h', 'vint_code.cpp', 'vint_code.d', 'vint_code.h', 'vint_code.o', 'zstd_compress.cpp', 'zstd_compress.d', 'zstd_compress.h', 'zstd_compress.o', 'bcftools', 'bcftools-1.11.tar.bz2', '.appveyor.yml', 'AUTHORS', 'HMM.c', 'HMM.h', 'HMM.o', 'INSTALL', 'LICENSE', 'Makefile', 'NEWS', 'README', 'bam2bcf.c', 'bam2bcf.h', 'bam2bcf.o', 'bam2bcf_indel.c', 'bam2bcf_indel.o', 'bam_sample.c', 'bam_sample.h', 'bam_sample.o', 'bcftools', 'bcftools.h', 'bin.c', 'bin.h', 'bin.o', 'call.h', 'ccall.c', 'ccall.o', 'cols.c', 'cols.h', 'cols.o', 'config.h', 'config.h.in', 'config.log', 'config.mk', 'config.mk.in', 'config.status', 'configure', 'configure.ac', 'consensus.c', 'consensus.o', 'convert.c', 'convert.h', 'convert.o', 'csq.c', 'csq.o', 'bcftools.1', 'bcftools.html', 'bcftools.txt', 'docbook-xsl.css', 'em.c', 'em.o', 'extsort.c', 'extsort.h', 'extsort.o', 'filter.c', 'filter.h', 'filter.o', 'gvcf.c', 'gvcf.h', 'gvcf.o', 'hclust.c', 'hclust.h', 'hclust.o', 'hex.h', 'INSTALL', 'LICENSE', 'Makefile', 'NEWS', 'README', 'README.large_positions.md', 'bcf_sr_sort.c', 'bcf_sr_sort.h', 'bcf_sr_sort.o', 'bgzf.c', 'bgzf.o', 'bgzip.1', 'bgzip.c', 'config.h', 'config.h.in', 'config.log', 'config.mk', 'config.mk.in', 'config.status', 'configure', 'configure.ac', 'cram.h', 'cram_codecs.c', 'cram_codecs.h', 'cram_codecs.o', 'cram_decode.c', 'cram_decode.h', 'cram_decode.o', 'cram_encode.c', 'cram_encode.h', 'cram_encode.o', 'cram_external.c', 'cram_external.o', 'cram_index.c', 'cram_index.h', 'cram_index.o', 'cram_io.c', 'cram_io.h', 'cram_io.o', 'cram_samtools.c', 'cram_samtools.h', 'cram_samtools.o', 'cram_stats.c', 'cram_stats.h', 'cram_stats.o', 'cram_structs.h', 'mFILE.c', 'mFILE.h', 'mFILE.o', 'misc.h', 'open_trace_file.c', 'open_trace_file.h', 'open_trace_file.o', 'os.h', 'pooled_alloc.c', 'pooled_alloc.h', 'pooled_alloc.o', 'rANS_byte.h', 'rANS_static.c', 'rANS_static.h', 'rANS_static.o', 'string_alloc.c', 'string_alloc.h', 'string_alloc.o', 'errmod.c', 'errmod.o', 'faidx.5', 'faidx.c', 'faidx.o', 'header.c', 'header.h', 'header.o', 'hfile.c', 'hfile.o', 'hfile_gcs.c', 'hfile_gcs.o', 'hfile_internal.h', 'hfile_libcurl.c', 'hfile_libcurl.o', 'hfile_net.c', 'hfile_net.o', 'hfile_s3.c', 'hfile_s3.o', 'hfile_s3_write.c', 'hfile_s3_write.o', 'hts-object-files', 'hts.c', 'hts.o', 'hts_internal.h', 'hts_os.c', 'hts_os.o', 'htsfile.1', 'htsfile.c', 'htslib-s3-plugin.7', 'htslib.mk', 'htslib.pc.in', 'htslib.pc.tmp', 'bgzf.h', 'cram.h', 'faidx.h', 'hfile.h', 'hts.h', 'hts_defs.h', 'hts_endian.h', 'hts_log.h', 'hts_os.h', 'kbitset.h', 'kfunc.h', 'khash.h', 'khash_str2int.h', 'klist.h', 'knetfile.h', 'kroundup.h', 'kseq.h', 'ksort.h', 'kstring.h', 'regidx.h', 'sam.h', 'synced_bcf_reader.h', 'tbx.h', 'thread_pool.h', 'vcf.h', 'vcf_sweep.h', 'vcfutils.h', 'htslib_static.mk', 'htslib_vars.mk', 'kfunc.c', 'kfunc.o', 'knetfile.c', 'knetfile.o', 'kstring.c', 'kstring.o', 'libhts.a', 'hts_hide_dynamic_syms.m4', 'hts_prog_cc_warnings.m4', 'pkg.m4', 'md5.c', 'md5.o', 'multipart.c', 'multipart.o', 'lzma_stub.h', 'rand.c', 'plugin.c', 'probaln.c', 'probaln.o', 'realn.c', 'realn.o', 'regidx.c', 'regidx.o', 'region.c', 'region.o', 'sam.5', 'sam.c', 'sam.o', 'sam_internal.h', 'synced_bcf_reader.c', 'synced_bcf_reader.o', 'tabix.1', 'tabix.c', 'tbx.c', 'tbx.o', 'auxf#values.sam', 'auxf#values_java.cram', 'auxf.fa', 'auxf.fa.fai', 'merge.noidx.a.vcf', 'merge.noidx.abc.expected.out', 'merge.noidx.b.vcf', 'merge.noidx.c.vcf', 'merge.noidx.hdr_order.vcf', 'merge.noidx.rec_order.vcf', 'bgziptest.txt', 'bgziptest.txt.gz', 'bgziptest.txt.gz.gzi', 'c1#bounds.sam', 'c1#clip.sam', 'c1#noseq.sam', 'c1#pad1.sam', 'c1#pad2.sam', 'c1#pad3.sam', 'c1#unknown.sam', 'c1.fa', 'c1.fa.fai', 'c2#pad.sam', 'c2.fa', 'c2.fa.fai', 'ce#1.sam', 'ce#1000.sam', 'ce#2.sam', 'ce#5.sam', 'ce#5b.sam', 'ce#5b_java.cram', 'ce#large_seq.sam', 'ce#supp.sam', 'ce#tag_depadded.sam', 'ce#tag_padded.sam', 'ce#unmap.sam', 'ce#unmap1.sam', 'ce#unmap2.sam', 'ce.fa', 'ce.fa.fai', 'colons.bam', 'colons.bam.bai', 'compare_sam.pl', 'cross_validate.sh', 'emptyfile', 'faidx.fa', 'fastqs.fq', 'fastqs_README.txt', 'fieldarith.c', 'fieldarith.sam', 'formatcols.vcf', 'formatmissing-out.vcf', 'formatmissing.vcf', 'hts_open_fuzzer.c', 'header_syms.pl', 'hfile.c', 'hts_endian.c', 'index.bam.bai', 'index.bam.csi', 'index.bcf.csi', 'index.cram.crai', 'index.sam', 'index.sam.gz.bai', 'index.sam.gz.csi', 'index.vcf', 'index.vcf.gz.csi', 'index.vcf.gz.tbi', 'index.expected1.vcf', 'index.expected2.vcf', 'index.vcf', 'longref.sam', 'longref_itr.expected.sam', 'longref_multi.expected.sam', 'check_copyright.pl', 'check_spaces.pl', 'md#1.sam', 'md.fa', 'md.fa.fai', 'c1#pad1.out', 'c1#pad1.sam', 'c1#pad2.out', 'c1#pad2.sam', 'c1#pad3.out', 'c1#pad3.sam', 'mp_D.out', 'mp_D.sam', 'mp_DI.out', 'mp_DI.sam', 'mp_I.out', 'mp_I.sam', 'mp_ID.out', 'mp_ID.sam', 'mp_N.out', 'mp_N.sam', 'mp_N2.out', 'mp_N2.sam', 'mp_P.out', 'mp_P.sam', 'mpileup.tst', 'small.bam', 'small.out', 'test-pileup.sh', 'no_hdr_sq_1.bam', 'no_hdr_sq_1.bam.csi', 'no_hdr_sq_1.expected.sam', 'noroundtrip-out.vcf', 'noroundtrip.vcf', 'pileup.c', 'plugins-dlhts.c', 'range.bam', 'range.bam.bai', 'range.cram', 'range.cram.crai', 'range.out', 'realn01.fa', 'realn01.fa.fai', 'realn01.sam', 'realn01_exp-a.sam', 'realn01_exp-e.sam', 'realn01_exp.sam', 'realn02-r.sam', 'realn02.fa', 'realn02.fa.fai', 'realn02.sam', 'realn02_exp-a.sam', 'realn02_exp-e.sam', 'realn02_exp.sam', 'sam.c', 'simple_test_driver.sh', 'tabix.out', 'bed_file.Y.100200.out', 'bed_file.bed', 'bed_file.separate.out', 'gff_file.X.2934832.2935190.out', 'gff_file.gff', 'large_chr.20.1.2147483647.out', 'large_chr.vcf', 'tabix.tst', 'test-tabix.sh', 'vcf_file.1.3000151.out', 'vcf_file.2.3199812.out', 'vcf_file.bcf', 'vcf_file.vcf', 'test-bcf-sr.c', 'test-bcf-sr.pl', 'test-bcf-translate.c', 'test-bcf-translate.out', 'test-logging.pl', 'test-parse-reg.c', 'test-regidx.c', 'test-vcf-api.c', 'test-vcf-api.out', 'test-vcf-hdr-in.vcf', 'test-vcf-hdr.out', 'test-vcf-sweep.c', 'test-vcf-sweep.out', 'test.pl', 'test_bgzf.c', 'test_index.c', 'test_kfunc.c', 'test_kstring.c', 'test_realn.c', 'test_str2int.c', 'test_view.c', 'thrash_threads1.c', 'thrash_threads2.c', 'thrash_threads3.c', 'thrash_threads4.c', 'thrash_threads5.c', 'thrash_threads6.c', 'thrash_threads7.c', 'thread_pool.md', 'with-shlib.sh', 'xx#MD.sam', 'xx#MD2.sam', 'xx#blank.sam', 'xx#large_aux.sam', 'xx#large_aux2.sam', 'xx#large_aux_java.cram', 'xx#minimal.sam', 'xx#pair.sam', 'xx#repeated.sam', 'xx#rg.sam', 'xx#tlen.sam', 'xx#tlen2.sam', 'xx#triplet.sam', 'xx#unsorted.sam', 'xx.fa', 'xx.fa.fai', 'textutils.c', 'textutils.o', 'textutils_internal.h', 'thread_pool.c', 'thread_pool.o', 'thread_pool_internal.h', 'vcf.5', 'vcf.c', 'vcf.o', 'vcf_sweep.c', 'vcf_sweep.o', 'vcfutils.c', 'vcfutils.o', 'version.h', 'version.sh', 'install-sh', 'khash_str2str.h', 'kheap.h', 'kmin.c', 'kmin.h', 'kmin.o', 'ax_with_htslib.m4', 'hts_prog_cc_warnings.m4', 'main.c', 'main.o', 'mcall.c', 'mcall.o', 'color-chrs.pl', 'demo-flt.pl', 'fix-broken-GATK-Double-vs-Integer', 'gff2gff.py', 'guess-ploidy.py', 'plot-roh.py', 'plot-vcfstats', 'run-roh.pl', 'vcfutils.pl', 'mpileup.c', 'mpileup.o', 'mw.h', 'peakfit.c', 'peakfit.h', 'ploidy.c', 'ploidy.h', 'ploidy.o', 'GTisec.c', 'GTisec.mk', 'GTisec.so', 'GTsubset.c', 'GTsubset.mk', 'GTsubset.so', 'ad-bias.c', 'ad-bias.mk', 'ad-bias.so', 'add-variantkey.c', 'add-variantkey.so', 'af-dist.c', 'af-dist.mk', 'af-dist.so', 'allele-length.c', 'allele-length.so', 'check-ploidy.c', 'check-ploidy.so', 'check-sparsity.c', 'check-sparsity.so', 'color-chrs.c', 'color-chrs.mk', 'color-chrs.so', 'contrast.c', 'contrast.so', 'counts.c', 'counts.so', 'dosage.c', 'dosage.so', 'fill-AN-AC.c', 'fill-AN-AC.so', 'fill-from-fasta.c', 'fill-from-fasta.mk', 'fill-from-fasta.so', 'fill-tags.c', 'fill-tags.so', 'fixploidy.c', 'fixploidy.mk', 'fixploidy.so', 'fixref.c', 'fixref.so', 'frameshifts.c', 'frameshifts.so', 'guess-ploidy.c', 'guess-ploidy.so', 'gvcfz.c', 'gvcfz.so', 'impute-info.c', 'impute-info.so', 'indel-stats.c', 'indel-stats.so', 'isecGT.c', 'isecGT.mk', 'isecGT.so', 'mendelian.c', 'mendelian.so', 'missing2ref.c', 'missing2ref.so', 'parental-origin.c', 'parental-origin.so', 'prune.c', 'prune.so', 'remove-overlaps.c', 'remove-overlaps.so', 'scatter.c', 'scatter.so', 'setGT.c', 'setGT.so', 'smpl-stats.c', 'smpl-stats.so', 'split-vep.c', 'split-vep.so', 'split.c', 'split.so', 'tag2tag.c', 'tag2tag.so', 'trio-dnm.c', 'trio-dnm.so', 'trio-stats.c', 'trio-stats.so', 'trio-switch-rate.c', 'trio-switch-rate.so', 'variantkey-hex.c', 'variantkey-hex.so', 'polysomy.c', 'prob1.c', 'prob1.h', 'prob1.o', 'rbuf.h', 'regidx.c', 'regidx.h', 'regidx.o', 'reheader.c', 'reheader.o', 'smpl_ilist.c', 'smpl_ilist.h', 'smpl_ilist.o', 'tabix.c', 'tabix.o', '23andme.fa', '23andme.fa.fai', 'aa.2.out', 'aa.fa', 'aa.fa.fai', 'aa.hdr', 'aa.out', 'aa.vcf', 'ad-bias.2.out', 'ad-bias.2.vcf', 'ad-bias.out', 'ad-bias.samples', 'ad-bias.vcf', 'af-dist.out', 'af-dist.vcf', 'annotate.hdr', 'annotate.multi.1.out', 'annotate.multi.tab', 'annotate.multi.vcf', 'annotate.out', 'annotate.tab', 'annotate.vcf', 'annotate10.hdr', 'annotate10.out', 'annotate10.vcf', 'annotate11.out', 'annotate11.vcf', 'annotate12.out', 'annotate12.vcf', 'annotate13.hdr', 'annotate13.out', 'annotate13.vcf', 'annotate14.out', 'annotate14.vcf', 'annotate15.hdr', 'annotate15.out', 'annotate15.tab', 'annotate15.vcf', 'annotate16.out', 'annotate16.vcf', 'annotate17.1.out', 'annotate17.1.tab', 'annotate17.1.vcf', 'annotate17.2.out', 'annotate17.2.vcf', 'annotate17.3.out', 'annotate17.3.tab', 'annotate17.3.vcf', 'annotate17.out', 'annotate18.1.out', 'annotate18.1.tab', 'annotate18.1.vcf', 'annotate18.2.out', 'annotate18.2.tab', 'annotate18.2.vcf', 'annotate18.out', 'annotate19.1.out', 'annotate19.2.out', 'annotate19.dst.vcf', 'annotate19.out', 'annotate19.src.vcf', 'annotate2.out', 'annotate2.tab', 'annotate2.vcf', 'annotate20.1.out', 'annotate20.2.out', 'annotate20.3.out', 'annotate20.dst.vcf', 'annotate20.out', 'annotate20.src.vcf', 'annotate21.out', 'annotate22.out', 'annotate23.out', 'annotate24.out', 'annotate25.out', 'annotate26.out', 'annotate27.out', 'annotate28.out', 'annotate3.out', 'annotate3.vcf', 'annotate4.hdr', 'annotate4.out', 'annotate4.vcf', 'annotate5.out', 'annotate6.out', 'annotate7.out', 'annotate8.out', 'annotate9.out', 'annotate9.vcf', 'annots.vcf', 'annots10.tab', 'annots11.tab', 'annots11.vcf', 'annots12.vcf', 'annots13.tab', 'annots2.vcf', 'annots4.tab', 'annots4.vcf', 'annots9.tab', 'annots9.vcf', 'check.chk', 'check.gs.chrom.gen', 'check.gs.chrom.samples', 'check.gs.vcfids.gen', 'check.gs.vcfids.samples', 'check.gs.vcfids_chrom.gen', 'check.gs.vcfids_chrom.samples', 'check.vcf', 'check_merge.chk', 'concat.1.a.vcf', 'concat.1.b.vcf', 'concat.1.bcf.out', 'concat.1.vcf.out', 'concat.2.a.vcf', 'concat.2.b.vcf', 'concat.2.bcf.out', 'concat.2.vcf.out', 'concat.3.0.vcf', 'concat.3.a.vcf', 'concat.3.b.vcf', 'concat.3.bcf.out', 'concat.3.c.vcf', 'concat.3.d.vcf', 'concat.3.e.vcf', 'concat.3.f.vcf', 'concat.3.vcf.out', 'concat.4.bcf.out', 'concat.4.vcf.out', 'consensus.1.chain', 'consensus.1.out', 'consensus.10.vcf', 'consensus.11.1.out', 'consensus.11.2.out', 'consensus.11.fa', 'consensus.11.vcf', 'consensus.12.fa', 'consensus.12.out', 'consensus.12.vcf', 'consensus.13.fa', 'consensus.13.out', 'consensus.13.vcf', 'consensus.2.chain', 'consensus.2.out', 'consensus.3.chain', 'consensus.3.out', 'consensus.4.chain', 'consensus.4.out', 'consensus.5.out', 'consensus.8a.out', 'consensus.8b.out', 'consensus.8c.out', 'consensus.8d.out', 'consensus.8e.out', 'consensus.8f.out', 'consensus.9.1.fa', 'consensus.9.1.out', 'consensus.9.2.fa', 'consensus.9.2.out', 'consensus.9.vcf', 'consensus.fa', 'consensus.tab', 'consensus.vcf', 'consensus2.1.out', 'consensus2.2.out', 'consensus2.fa', 'consensus2.vcf', 'consensus3.2.out', 'consensus3.out', 'consensus3.vcf', 'consensus4.out', 'consensus4.vcf', 'consensus5.fa', 'consensus5.out', 'consensus5.vcf', 'consensus6.fa', 'consensus6.out', 'consensus6.vcf', 'consensus7.fa', 'consensus7.vcf', 'consensus7a.out', 'consensus7b.out', 'consensus7c.out', 'consensus7d.out', 'consensus8.vcf', 'contrast.out', 'contrast.vcf', 'contrast0.txt', 'contrast1.txt', 'convert.23andme', 'convert.23andme.vcf', 'convert.gs.gt.gen', 'convert.gs.gt.samples', 'convert.gs.pl.gen', 'convert.gs.pl.samples', 'convert.gt.noHead.ids.vcf', 'convert.gt.noHead.vcf', 'convert.gt.vcf', 'convert.gvcf.out', 'convert.gvcf.vcf', 'convert.hap-missing.haps', 'convert.hap-missing.vcf', 'convert.hls.gt.hap', 'convert.hls.gt.legend', 'convert.hls.gt.samples', 'convert.hls.haps', 'convert.hls.legend', 'convert.hls.samples', 'convert.hs.gt.hap', 'convert.hs.gt.samples', 'convert.hs.hap', 'convert.hs.sample', 'convert.vcf', 'create-bam-test', 'csq.1.out', 'csq.fa', 'csq.fa.fai', 'csq.gff3', 'csq.vcf', 'EDUMMY0001.fa', 'EDUMMY0001.fa.fai', 'EDUMMY0001.gff', 'starts-with-1.txt', 'starts-with-1.txt-l', 'starts-with-1.vcf', 'EDUMMY0002.fa', 'EDUMMY0002.fa.fai', 'EDUMMY0002.gff', 'boundaries.txt', 'boundaries.vcf', 'EDUMMY0003.fa', 'EDUMMY0003.fa.fai', 'EDUMMY0003.gff', 'long-del.txt', 'long-del.vcf', 'EMN908947.fa', 'EMN908947.fa.fai', 'ribosomal-slippage.cmd', 'ribosomal-slippage.cmd.out', 'ribosomal-slippage.gff', 'ribosomal-slippage.vcf', 'simple.cmd', 'simple.cmd.out', 'simple.gff', 'simple.vcf', 'ENSG00000173376.fa', 'ENSG00000173376.fa.fai', 'ENSG00000173376.gff', 'synon.txt', 'synon.vcf', 'ENSMUST00000121418.fa', 'ENSMUST00000121418.fa.fai', 'ENSMUST00000121418.gff', 'filter-problem.1.cmd', 'filter-problem.1.cmd.out', 'filter-problem.2.cmd', 'filter-problem.2.cmd.out', 'filter-problem.3.cmd', 'filter-problem.3.cmd.out', 'filter-problem.vcf', 'ENSMUST00000133836.fa', 'ENSMUST00000133836.fa.fai', 'ENSMUST00000133836.gff', 'filter-problem.1.cmd', 'filter-problem.1.cmd.out', 'filter-problem.vcf', 'ENST00000218032.fa', 'ENST00000218032.fa.fai', 'ENST00000218032.gff', 'start-lost-del.txt', 'start-lost-del.vcf', 'start-lost.txt', 'start-lost.txt-l', 'start-lost.vcf', 'ENST00000227471.fa', 'ENST00000227471.fa.fai', 'ENST00000227471.gff', 'insert-splice-vs-frameshift.txt', 'insert-splice-vs-frameshift.vcf', 'ENST00000230048.fa', 'ENST00000230048.fa.fai', 'ENST00000230048.gff', 'ascii-art.txt', 'start-del.txt', 'start-del.vcf', 'ENST00000256452.fa', 'ENST00000256452.fa.fai', 'ENST00000256452.gff', 'intron.txt', 'intron.vcf', 'ENST00000263103-INS.fa', 'ENST00000263103-INS.fa.fai', 'ENST00000263103-INS.gff', 'insertions.txt', 'insertions.vcf', 'ENST00000271583.fa', 'ENST00000271583.fa.fai', 'ENST00000271583.gff', 'splice-acceptor.txt', 'splice-acceptor.vcf', 'ENST00000294661.fa', 'ENST00000294661.fa.fai', 'ENST00000294661.gff', 'non-coding-boundary.txt', 'non-coding-boundary.txt-l', 'non-coding-boundary.vcf', 'ENST00000295641.fa', 'ENST00000295641.fa.fai', 'ENST00000295641.gff', 'not-a-start-lost.txt', 'not-a-start-lost.txt-l', 'not-a-start-lost.vcf', '15bp-insert.txt', '15bp-insert.vcf', 'ENST00000301246.fa', 'ENST00000301246.fa.fai', 'ENST00000301246.gff', 'ENST00000303039.fa', 'ENST00000303039.fa.fai', 'ENST00000303039.gff', 'not-a-stop.txt', 'not-a-stop.txt-l', 'not-a-stop.vcf', 'ENST00000318249.2.fa', 'ENST00000318249.2.fa.fai', 'ENST00000318249.2.gff', 'ascii-art.txt', 'synonymous-start-lost.txt', 'synonymous-start-lost.vcf', 'ENST00000318249.fa', 'ENST00000318249.fa.fai', 'ENST00000318249.gff', 'ascii-art.txt', 'start-lost.txt', 'start-lost.txt-l', 'start-lost.vcf', 'start-lost.vcf.ori', 'start-lost.vep', 'ENST00000329454.fa', 'ENST00000329454.fa.fai', 'ENST00000329454.gff', 'boundary-deletion.txt', 'boundary-deletion.txt-l', 'boundary-deletion.vcf', 'ENST00000341065.fa', 'ENST00000341065.fa.fai', 'ENST00000341065.gff', 'ascii-art.txt', 'ascii-art.txt-l', 'frame1.txt', 'frame1.txt-l', 'frame1.vcf', 'frame2.txt', 'frame2.txt-l', 'frame2.vcf', 'frame3.txt', 'frame3.txt-l', 'frame3.vcf', 'not-a-start-lost.txt', 'not-a-start-lost.txt-l', 'not-a-start-lost.vcf', 'splice-acceptor-donor1.txt', 'splice-acceptor-donor1.txt-l', 'splice-acceptor-donor1.vcf', 'splice-acceptor-donor2.txt', 'splice-acceptor-donor2.txt-l', 'splice-acceptor-donor2.vcf', 'splice-acceptor-donor3.txt', 'splice-acceptor-donor3.txt-l', 'splice-acceptor-donor3.vcf', 'splice-acceptor-donor4.txt', 'splice-acceptor-donor4.txt-l', 'splice-acceptor-donor4.vcf', 'splice-acceptor-donor5.txt', 'splice-acceptor-donor5.txt-l', 'splice-acceptor-donor5.vcf', 'splice-acceptor-donor6.txt', 'splice-acceptor-donor6.txt-l', 'splice-acceptor-donor6.vcf', 'splice-acceptor-donor7.txt', 'splice-acceptor-donor7.txt-l', 'splice-acceptor-donor7.vcf', 'splice-acceptor-donor8.txt', 'splice-acceptor-donor8.txt-l', 'splice-acceptor-donor8.vcf', 'splice-acceptor-donor9.txt', 'splice-acceptor-donor9.txt-l', 'splice-acceptor-donor9.vcf', 'ENST00000357367.fa', 'ENST00000357367.fa.fai', 'ENST00000357367.gff', 'stop-retained.txt', 'stop-retained.vcf', 'ENST00000368801.2.fa', 'ENST00000368801.2.fa.fai', 'ENST00000368801.2.gff', 'ascii-art.txt', 'start-lost.txt', 'start-lost.vcf', 'ENST00000368801.fa', 'ENST00000368801.fa.fai', 'ENST00000368801.gff', 'ascii-art.txt', 'compound-lost.txt', 'compound-lost.vcf', 'ENST00000373833.fa', 'ENST00000373833.fa.fai', 'ENST00000373833.gff', 'boundary-insertion.txt', 'boundary-insertion.txt-l', 'boundary-insertion.vcf', 'ENST00000375992.fa', 'ENST00000375992.fa.fai', 'ENST00000375992.gff', 'ascii-art.txt', 'incorrect-synon-del-not-start-lost.txt', 'incorrect-synon-del-not-start-lost.vcf', 'ENST00000378322.fa', 'ENST00000378322.fa.fai', 'ENST00000378322.gff', 'ascii-art.txt', 'ascii-art.txt-l', 'end-overlap-tscript.txt', 'end-overlap-tscript.txt-l', 'end-overlap-tscript.vcf', 'ENST00000381157.fa', 'ENST00000381157.fa.fai', 'ENST00000381157.gff', 'haploid-diploid.txt', 'haploid-diploid.vcf', 'ENST00000382647.fa', 'ENST00000382647.fa.fai', 'ENST00000382647.gff', 'synon-splice-region-insert.txt', 'synon-splice-region-insert.vcf', 'ENST00000390520.fa', 'ENST00000390520.fa.fai', 'ENST00000390520.gff', 'deletion-overlap.txt', 'deletion-overlap.vcf', 'ENST00000400151.fa', 'ENST00000400151.fa.fai', 'ENST00000400151.gff', 'ascii-art.txt', 'long-del.txt', 'long-del.vcf', 'ENST00000409523.fa', 'ENST00000409523.fa.fai', 'ENST00000409523.gff', 'ascii-art.txt', 'long-overlapping-del.txt', 'long-overlapping-",
    "raw_text_content": "",
    "p_tag_content": "Genotype Sparse Compression (GSC) is an advanced tool for lossless compression of VCF files, designed to efficiently store and manage VCF files in a compressed format. It accepts VCF/BCF files as input and utilizes advanced compression techniques to significantly reduce storage requirements while ensuring fast query capabilities. In our study, we successfully compressed the VCF files from the 1000 Genomes Project (1000Gpip3), consisting of 2504 samples and 80 million variants, from an uncompressed VCF file of 803.70GB to approximately 1GB. Compiler Compatibility: GSC requires a modern C++14-ready compiler, such as: Build System: Make build system is necessary for compiling GSC. Operating System: GSC supports 64-bit operating systems, including: To download, build and install GSC use the following commands. To clean the GSC build use: There is an example VCF/VCF.gz/BCF file,toy.vcf/toy.vcf.gz/toy.bcf, in the toy folder, which can be used to test GSC The input file format is VCF. You can compress a VCF file in lossless mode using one of the following methods: Explicit input and output file parameters: Use the--inoption to specify the input VCF file and the--outoption for the output compressed file. Input file parameter and output redirection: Use the--outoption for the output compressed file and redirect the input VCF file into the command. Output file redirection and input file parameter: Specify the input VCF file with the--inoption and redirect the output to create the compressed file. Input and output redirection: Use shell redirection for both input and output. This method does not use the--inand--outoptions. This will create a file: The input file format is VCF. The commands are similar to those used for lossless compression, with the addition of the-Mparameter to enable lossy compression. For example, to compress a VCF file in lossy mode: Or using redirection: This will create a file: lossless decompression: To decompress the compressed toy_lossless.gsc into a VCF file named toy_lossless.vcf: lossy decompression: To decompress the compressed toy_lossy.gsc into a VCF file named toy_lossy.vcf: Dockerfile can be used to build a Docker image with all necessary dependencies and GSC compressor. The image is based on Ubuntu 18.04. To build a Docker image and run a Docker container, you need Docker Desktop (https://www.docker.com). Example commands (run it within a directory with Dockerfile): SEEK ID:https://workflowhub.eu/workflows/885?version=1 Update README.md Views:750Downloads:133 Created: 17th May 2024 at 17:51 None Teams:Genome Data Compression Team Organizations:Shenzhen University Expertise:Bioinformatics Tools:Workflows Teams:Genome Data Compression Team Web page:Not specified We are dedicated to designing efficient genome data compression algorithms and developing related tools to address the challenges of large-scale genome data storage and transmission. Our goal is to reduce data storage costs and improve data processing efficiency through advanced technology, thereby advancing genomic research. Space:GenomeDataCompression Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 421,
    "discussion_links": "[{'id': '429', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "NGTax",
    "license": "CC0-1.0",
    "description": "Amplicon analysis workflow using NG-Tax\n\n**Steps:**\n\n* Quality control on the reads\n* Execute NGTax for ASV detection and classification\n\nFor more information about NG-Tax 2.0 have a look at https://doi.org/10.3389/fgene.2019.01366",
    "latest_version": 7,
    "tags": "['16S', 'Amplicon', 'ITS']",
    "versions": "[{'version': 7, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/45?version=7', 'commit': 'e10f31f762c11d24f2a6efa1515d2927be1ad156', 'ref': 'refs/heads/master', 'tree': '/workflows/45/git/7/tree', 'doi': None}]",
    "version": 7,
    "revision_comments": "",
    "created_at": "2020-10-28T11:07:26.000Z",
    "updated_at": "2023-01-16T13:43:45.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "Jesse van Dam, Peter Schaap,",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_primer', 'name': 'Forward primer', 'description': 'Forward primer used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'reverse_primer', 'name': 'Reverse primer', 'description': 'Reverse primer used', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'reference_db', 'name': 'Reference database', 'description': 'Reference database used in FASTA format', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'rev_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'for_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'sample', 'name': 'Sample name', 'description': 'Name of the sample being analysed', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['fastqc_files_to_folder/results']}, {'id': 'files_to_folder_ngtax', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['ngtax_files_to_folder/results']}], 'steps': [{'id': 'fastqc', 'name': None, 'description': None, 'sink_ids': ['fastqc/output']}, {'id': 'reads_to_folder', 'name': None, 'description': None, 'sink_ids': ['reads_to_folder/results']}, {'id': 'ngtax', 'name': None, 'description': None, 'sink_ids': ['ngtax/biom', 'ngtax/turtle']}, {'id': 'fastqc_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['fastqc_files_to_folder/results']}, {'id': 'ngtax_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['ngtax_files_to_folder/results']}], 'links': [{'id': 'fastqs', 'source_id': 'forward_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'fastqs', 'source_id': 'reverse_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'forward_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reverse_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'forward_primer', 'source_id': 'forward_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reverse_primer', 'source_id': 'reverse_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reference_db', 'source_id': 'reference_db', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'reads_to_folder/results', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'rev_read_len', 'source_id': 'rev_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'for_read_len', 'source_id': 'for_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'sample', 'source_id': 'sample', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'minimum_threshold', 'source_id': None, 'sink_id': 'ngtax', 'name': None, 'default_value': 0.1}, {'id': 'files', 'source_id': 'fastqc/output', 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/biom', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 45,
    "text_field": "['workflow_ngtax.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: Workflow\nrequirements:\n   - class: StepInputExpressionRequirement\n   - class: InlineJavascriptRequirement\n   - class: MultipleInputFeatureRequirement\n\ninputs:\n  files:\n    type: string[]\n    doc: files to download\n    label: file paths\n  destination:\n    type: string\n    doc: Final destination on iRODS\n    label: IRODS final destination\n  forward_primer: \n    type: string\n    doc: Forward primer used\n    label: Forward primer\n    default: \"[AG]GGATTAGATACCC\"\n  reverse_primer:\n    type: string\n    doc: Reverse primer used\n    label: Reverse primer\n    default: \"CGAC[AG][AG]CCATGCA[ACGT]CACCT\"\n  reference_db:\n    type: string?\n    doc: Reference database used in FASTA format\n    label: Reference database\n    # default: \"/unlock/Databases/Silva/SILVA_132_SSURef_tax_silva.fasta.gz\"\n  rev_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  for_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  sample:\n    type: string\n    doc: Name of the sample being analysed\n    label: Sample name\n    \noutputs:\n  info:\n    type: string\n  error: \n    type: string\n\nsteps:\n############################\n  irods_download:\n    run: ../irods/irods.cwl\n    in:\n      files: files\n      pull: \n        default: true\n    out: [irods_files, irods_folder]\n############################\n  fastqc:\n   run: ../fastqc/fastqc.cwl\n   in:\n     step:\n       default: 1\n     fastqs: irods_download/irods_files\n   out: [upload]\n############################\n  ngtax:\n   run: ../ngtax/ngtax.cwl\n   in:\n    step:\n      default: 2\n    forward_primer: forward_primer\n    reverse_primer: reverse_primer\n    reference_db: reference_db\n    folder: irods_download/irods_folder\n    rev_read_len: rev_read_len\n    for_read_len: for_read_len\n    sample: sample\n    minimum_threshold:\n      default: 0.1\n   out: [upload]\n############################    \n\n\noutputs:\n  fastqc_output:\n    type: Directory\n    outputSource: fastqc/upload\n  ngtax_output:\n    type: Directory\n    outputSource: ngtax/upload\n\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/docs/schema_org_rdfa.html\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Amplicon analysis workflow using NG-Tax Steps: For more information about NG-Tax 2.0 have a look athttps://doi.org/10.3389/fgene.2019.01366 Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/45?version=7 Jesse van Dam, Peter Schaap, Views:9920Downloads:280 Created: 23rd Jul 2020 at 10:59 Last updated: 8th Jun 2021 at 08:11 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 438,
    "discussion_links": "[{'id': '48', 'label': 'Gitter Chat', 'url': 'https://gitter.im/arvados/pubseq'}]",
    "title": "COVID-19 PubSeq Pangenome Generate",
    "license": "Apache-2.0",
    "description": "",
    "latest_version": 1,
    "tags": "['CWL', 'covid-19', 'pangenome']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/63?version=1', 'commit': 'c89b1838e4c9d86689ce03be964a8503406153e0', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/63/git/1/tree', 'doi': '10.48546/workflowhub.workflow.63.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-10-07T09:36:13.000Z",
    "updated_at": "2023-01-16T13:44:54.000Z",
    "doi": "10.48546/workflowhub.workflow.63.1",
    "content_blobs": [],
    "creators": "[{'profile': None, 'family_name': 'Prins', 'given_name': 'Pjotr', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-8021-9162'}, {'profile': None, 'family_name': 'Guarracino', 'given_name': 'Andrea', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0001-9744-131X'}, {'profile': None, 'family_name': 'Amstutz', 'given_name': 'Peter', 'affiliation': 'Curii, Inc.', 'orcid': 'https://orcid.org/0000-0003-3566-7705'}, {'profile': None, 'family_name': 'Liener', 'given_name': 'Thomas', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0003-3257-9937'}, {'profile': None, 'family_name': 'Novak', 'given_name': 'Adam M.', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0001-5828-047X'}, {'profile': None, 'family_name': 'Munyoki', 'given_name': 'Bonface', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5049-8658'}, {'profile': '/people/263', 'family_name': 'Inutano', 'given_name': 'Tazro', 'affiliation': 'Database Center for Life Science', 'orcid': 'https://orcid.org/0000-0003-3777-5945'}, {'profile': None, 'family_name': 'Heuer', 'given_name': 'Michael', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-9052-6000'}, {'profile': '/people/70', 'family_name': 'Crusoe', 'given_name': 'Michael R.', 'affiliation': 'VU Amsterdam', 'orcid': 'https://orcid.org/0000-0002-2961-9670'}, {'profile': '/people/2', 'family_name': 'Soiland-Reyes', 'given_name': 'Stian', 'affiliation': 'The University of Manchester', 'orcid': 'https://orcid.org/0000-0001-9842-9718'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'inputReads', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadata', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadataSchema', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'subjects', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'exclude', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'bin_widths', 'name': None, 'description': 'width of each bin in basepairs along the graph vector', 'type': [{'type': 'int[]'}], 'default_value': [1, 4, 16, 64, 256, 1000, 4000, 16000]}, {'id': 'cells_per_file', 'name': None, 'description': 'Cells per file on component_segmentation', 'type': [{'type': 'int'}], 'default_value': 100}], 'outputs': [{'id': 'odgiGraph', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['buildGraph/odgiGraph']}, {'id': 'odgiPNG', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['vizGraph/graph_image']}, {'id': 'seqwishGFA', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['induceGraph/seqwishGFA']}, {'id': 'odgiRDF', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['odgi2rdf/rdf']}, {'id': 'readsMergeDedup', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['dedup/reads_dedup']}, {'id': 'mergedMetadata', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['mergeMetadata/merged']}, {'id': 'indexed_paths', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['index_paths/indexed_paths']}, {'id': 'colinear_components', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['segment_components/colinear_components']}], 'steps': [{'id': 'relabel', 'name': None, 'description': None, 'sink_ids': ['relabel/relabeledSeqs', 'relabel/originalLabels']}, {'id': 'dedup', 'name': None, 'description': None, 'sink_ids': ['dedup/reads_dedup', 'dedup/dups']}, {'id': 'overlapReads', 'name': None, 'description': None, 'sink_ids': ['overlapReads/alignments']}, {'id': 'induceGraph', 'name': None, 'description': None, 'sink_ids': ['induceGraph/seqwishGFA']}, {'id': 'buildGraph', 'name': None, 'description': None, 'sink_ids': ['buildGraph/odgiGraph']}, {'id': 'vizGraph', 'name': None, 'description': None, 'sink_ids': ['vizGraph/graph_image']}, {'id': 'odgi2rdf', 'name': None, 'description': None, 'sink_ids': ['odgi2rdf/rdf']}, {'id': 'mergeMetadata', 'name': None, 'description': None, 'sink_ids': ['mergeMetadata/merged']}, {'id': 'bin_paths', 'name': None, 'description': None, 'sink_ids': ['bin_paths/bins', 'bin_paths/pangenome_sequence']}, {'id': 'index_paths', 'name': 'Create path index', 'description': None, 'sink_ids': ['index_paths/indexed_paths']}, {'id': 'segment_components', 'name': 'Run component segmentation', 'description': None, 'sink_ids': ['segment_components/colinear_components']}], 'links': [{'id': 'readsFA', 'source_id': 'inputReads', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'subjects', 'source_id': 'subjects', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'exclude', 'source_id': 'exclude', 'sink_id': 'relabel', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'relabel/relabeledSeqs', 'sink_id': 'dedup', 'name': None, 'default_value': None}, {'id': 'target', 'source_id': 'dedup/reads_dedup', 'sink_id': 'overlapReads', 'name': None, 'default_value': None}, {'id': 'query', 'source_id': 'dedup/reads_dedup', 'sink_id': 'overlapReads', 'name': None, 'default_value': None}, {'id': 'outputCIGAR', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': True}, {'id': 'preset', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': 'asm20'}, {'id': 'miniWinSize', 'source_id': None, 'sink_id': 'overlapReads', 'name': None, 'default_value': 1}, {'id': 'readsFA', 'source_id': 'dedup/reads_dedup', 'sink_id': 'induceGraph', 'name': None, 'default_value': None}, {'id': 'readsPAF', 'source_id': 'overlapReads/alignments', 'sink_id': 'induceGraph', 'name': None, 'default_value': None}, {'id': 'inputGFA', 'source_id': 'induceGraph/seqwishGFA', 'sink_id': 'buildGraph', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'vizGraph', 'name': None, 'default_value': None}, {'id': 'width', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 50000}, {'id': 'height', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 500}, {'id': 'path_per_row', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': True}, {'id': 'path_height', 'source_id': None, 'sink_id': 'vizGraph', 'name': None, 'default_value': 4}, {'id': 'odgi', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'odgi2rdf', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'metadataSchema', 'source_id': 'metadataSchema', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'subjects', 'source_id': 'subjects', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'dups', 'source_id': 'dedup/dups', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'originalLabels', 'source_id': 'relabel/originalLabels', 'sink_id': 'mergeMetadata', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'bin_paths', 'name': None, 'default_value': None}, {'id': 'bin_width', 'source_id': 'bin_widths', 'sink_id': 'bin_paths', 'name': None, 'default_value': None}, {'id': 'sparse_graph_index', 'source_id': 'buildGraph/odgiGraph', 'sink_id': 'index_paths', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'bin_paths/bins', 'sink_id': 'segment_components', 'name': None, 'default_value': None}, {'id': 'cells_per_file', 'source_id': 'cells_per_file', 'sink_id': 'segment_components', 'name': None, 'default_value': None}, {'id': 'pangenome_sequence', 'source_id': 'bin_paths/pangenome_sequence', 'sink_id': 'segment_components', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 63,
    "text_field": "['pangenome-generate.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.1\nclass: Workflow\nrequirements:\n  ScatterFeatureRequirement: {}\n  StepInputExpressionRequirement: {}\ninputs:\n  inputReads: File[]\n  metadata: File[]\n  metadataSchema: File\n  subjects: string[]\n  exclude: File?\n  bin_widths:\n    type: int[]\n    default: [ 1, 4, 16, 64, 256, 1000, 4000, 16000]\n    doc: width of each bin in basepairs along the graph vector\n  cells_per_file:\n    type: int\n    default: 100\n    doc: Cells per file on component_segmentation\noutputs:\n  odgiGraph:\n    type: File\n    outputSource: buildGraph/odgiGraph\n  odgiPNG:\n    type: File\n    outputSource: vizGraph/graph_image\n  seqwishGFA:\n    type: File\n    outputSource: induceGraph/seqwishGFA\n  odgiRDF:\n    type: File\n    outputSource: odgi2rdf/rdf\n  readsMergeDedup:\n    type: File\n    outputSource: dedup/reads_dedup\n  mergedMetadata:\n    type: File\n    outputSource: mergeMetadata/merged\n  indexed_paths:\n    type: File\n    outputSource: index_paths/indexed_paths\n  colinear_components:\n    type: Directory\n    outputSource: segment_components/colinear_components\nsteps:\n  relabel:\n    in:\n      readsFA: inputReads\n      subjects: subjects\n      exclude: exclude\n    out: [relabeledSeqs, originalLabels]\n    run: relabel-seqs.cwl\n  dedup:\n    in: {reads: relabel/relabeledSeqs}\n    out: [reads_dedup, dups]\n    run: ../tools/seqkit/seqkit_rmdup.cwl\n  overlapReads:\n    in:\n      target: dedup/reads_dedup\n      query: dedup/reads_dedup\n      outputCIGAR: {default: true}\n      preset: {default: asm20}\n      miniWinSize: {default: 1}\n    out: [alignments]\n    run: ../tools/minimap2/minimap2_paf.cwl\n  induceGraph:\n    in:\n      readsFA: dedup/reads_dedup\n      readsPAF: overlapReads/alignments\n    out: [seqwishGFA]\n    run: seqwish.cwl\n  buildGraph:\n    in: {inputGFA: induceGraph/seqwishGFA}\n    out: [odgiGraph]\n    run: odgi-build.cwl\n  vizGraph:\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n      width:\n        default: 50000\n      height:\n        default: 500\n      path_per_row:\n        default: true\n      path_height:\n        default: 4\n    out: [graph_image]\n    run: ../tools/odgi/odgi_viz.cwl\n  odgi2rdf:\n    in: {odgi: buildGraph/odgiGraph}\n    out: [rdf]\n    run: odgi_to_rdf.cwl\n  mergeMetadata:\n    in:\n      metadata: metadata\n      metadataSchema: metadataSchema\n      subjects: subjects\n      dups: dedup/dups\n      originalLabels: relabel/originalLabels\n    out: [merged]\n    run: merge-metadata.cwl\n  bin_paths:\n    run: ../tools/odgi/odgi_bin.cwl\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n      bin_width: bin_widths\n    scatter: bin_width\n    out: [ bins, pangenome_sequence ]\n  index_paths:\n    label: Create path index\n    run: ../tools/odgi/odgi_pathindex.cwl\n    in:\n      sparse_graph_index: buildGraph/odgiGraph\n    out: [ indexed_paths ]\n  segment_components:\n    label: Run component segmentation\n    run: ../tools/graph-genome-segmentation/component_segmentation.cwl\n    in:\n      bins: bin_paths/bins\n      cells_per_file: cells_per_file\n      pangenome_sequence:\n        source: bin_paths/pangenome_sequence\n        valueFrom: $(self[0])\n        # the bin_paths step is scattered over the bin_width array, but always using the same sparse_graph_index\n        # the pangenome_sequence that is extracted is exactly the same for the same sparse_graph_index\n        # regardless of bin_width, so we take the first pangenome_sequence as input for this step\n    out: [ colinear_components ]",
    "p_tag_content": "Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/63?version=1 DOI:10.48546/workflowhub.workflow.63.1 Views:2315Downloads:685 Created: 7th Oct 2020 at 10:36 Last updated: 21st Sep 2022 at 10:26 None Teams:COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,Common Workflow Language (CWL) community,MGnify,Metabolomics-Reproducibility Organizations:VU Amsterdam,ELIXIR Teams:Pitagora-Network Organizations:Database Center for Life Science Teams:IBISBA Workflows,GalaxyProject SARS-CoV-2,BioBB Building Blocks,Common Workflow Language (CWL) community,BioExcel Best Practice Guides,Specimen Data Refinery,FAIR Computational Workflows,Vertebrate Genomes Pipelines in Galaxy,TRE-FX,EuroScienceGateway,Biodiversity Genomics Europe (general),BY-COVID Baseline Use Case: SARS-CoV-2 Vaccine(s) effectiveness in preventing SARS-CoV-2 infection,BY-COVID (general),BioDT additional pipelines,BioDT Use Case 4.1.1.1 Biodiversity dynamics,BioDT Use Case 4.1.2.2 DNA detected biodiversity, poorly known habitats,BioDT Use Case 4.1.2.1 Crop wild relatives and genetic resources for food security,BioDT Use Case 4.1.3.1 Invasive species,BioDT Use Case 4.1.3.2 Endangered species,BioDT Use Case 4.1.4.1 Disease outbreaks,BioDT Use Case 4.1.4.2 Pollinators,BioDT Use Case 4.1.1.2 Ecosystem services,ELIXIR Training,ELIXIR Tools platform Organizations:The University of Manchester,ELIXIR-UK A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:http://covid-19.genenetwork.org/ Organisms:Not specified"
  },
  {
    "": 439,
    "discussion_links": "[{'id': '49', 'label': 'GitLab Issues', 'url': 'https://git.wur.nl/unlock/cwl/-/issues'}]",
    "title": "Metagenomic Binning from Assembly",
    "license": "Apache-2.0",
    "description": "### Workflow for Metagenomics binning from assembly\n\n**Minimal inputs are: Identifier, assembly (fasta) and a associated sorted BAM file**\n\n**Summary**\n  - MetaBAT2 (binning)\n  - MaxBin2 (binning)\n  - SemiBin (binning)\n  - DAS Tool (bin merging)\n  - EukRep (eukaryotic classification)\n  - CheckM (bin completeness and contamination)\n  - BUSCO (bin completeness)\n  - GTDB-Tk (bin taxonomic classification)\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://gitlab.com/m-unlock/cwl<br>\n  Workflows: https://gitlab.com/m-unlock/cwl/workflows<br>\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 11,
    "tags": "['Metagenomics', 'binning', 'metagenome', 'microbial']",
    "versions": "[{'version': 7, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=7', 'commit': 'f3919f225bcea97b6b0c10750c8acb34841a52f1', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/7/tree', 'doi': None}, {'version': 8, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=8', 'commit': '06604059e37a63c5882f4e180ce1ea693ca96706', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/8/tree', 'doi': None}, {'version': 9, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=9', 'commit': 'd6fcbfaa5609d3aaa341a3b31bd3075f99b80df8', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/9/tree', 'doi': None}, {'version': 10, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/64?version=10', 'commit': 'c2519b156dfa0c2f2be55e5edaa2f82775079e1a', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/10/tree', 'doi': None}, {'version': 11, 'revision_comments': 'Added more binning and assembly reports', 'url': 'https://workflowhub.eu/workflows/64?version=11', 'commit': 'd4c912ca61c0fa194b94eb7a6cc479d8b295179d', 'ref': 'refs/heads/master', 'tree': '/workflows/64/git/11/tree', 'doi': None}]",
    "version": 11,
    "revision_comments": "Added more binning and assembly reports",
    "created_at": "2021-10-18T09:49:33.000Z",
    "updated_at": "2023-02-02T15:15:38.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}]",
    "topic_annotations": "[{'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'assembly', 'name': 'Assembly fasta', 'description': 'Assembly in fasta format', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bam_file', 'name': 'Bam file', 'description': 'Mapping file in sorted bam format containing reads mapped to the assembly', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'threads', 'name': 'Threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'memory usage (MB)', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'gtdbtk_data', 'name': 'gtdbtk data directory', 'description': 'Directory containing the GTDB database. When none is given GTDB-Tk will be skipped.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'busco_data', 'name': 'BUSCO dataset', 'description': 'Directory containing the BUSCO dataset location.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'run_semibin', 'name': 'Run SemiBin', 'description': 'Run with SemiBin binner', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'semibin_environment', 'name': 'SemiBin Environment', 'description': 'Semibin Built-in models (human_gut/dog_gut/ocean/soil/cat_gut/human_oral/mouse_gut/pig_gut/built_environment/wastewater/global)', 'type': [{'type': 'string?'}], 'default_value': 'global'}, {'id': 'sub_workflow', 'name': 'Sub workflow Run', 'description': 'Use this when you need the output bins as File[] for subsequent analysis workflow steps in another workflow.', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'step', 'name': 'CWL base step number', 'description': 'Step number for order of steps', 'type': [{'type': 'int?'}], 'default_value': 1}, {'id': 'destination', 'name': 'Output destination (not used in the workflow itself)', 'description': 'Optional output destination path for cwl-prov reporting.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'bins', 'name': 'Bin files', 'description': 'Bins files in fasta format. To be be used in other workflows.', 'type': [{'type': 'File[]?'}], 'source_ids': ['output_bin_files/bins_out']}, {'id': 'metabat2_output', 'name': 'MetaBAT2', 'description': 'MetaBAT2 output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['metabat2_files_to_folder/results']}, {'id': 'maxbin2_output', 'name': 'MaxBin2', 'description': 'MaxBin2 output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['maxbin2_files_to_folder/results']}, {'id': 'semibin_output', 'name': 'SemiBin', 'description': 'MaxBin2 output directory', 'type': [{'type': 'Directory?'}], 'source_ids': ['semibin_files_to_folder/results']}, {'id': 'das_tool_output', 'name': 'DAS Tool', 'description': 'DAS Tool output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['das_tool_files_to_folder/results']}, {'id': 'checkm_output', 'name': 'CheckM', 'description': 'CheckM output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['checkm_files_to_folder/results']}, {'id': 'busco_output', 'name': 'BUSCO', 'description': 'BUSCO output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['busco_files_to_folder/results']}, {'id': 'gtdbtk_output', 'name': 'GTDB-Tk', 'description': 'GTDB-Tk output directory', 'type': [{'type': 'Directory?'}], 'source_ids': ['gtdbtk_files_to_folder/results']}, {'id': 'bins_summary_table', 'name': 'Bins summary', 'description': 'Summary of info about the bins', 'type': [{'type': 'File'}], 'source_ids': ['bins_summary/bins_summary_table']}, {'id': 'bins_read_stats', 'name': 'Assembly/Bin read stats', 'description': 'General assembly and bin coverage', 'type': [{'type': 'File'}], 'source_ids': ['bin_readstats/binReadStats']}, {'id': 'eukrep_fasta', 'name': 'EukRep fasta', 'description': 'EukRep eukaryotic classified contigs', 'type': [{'type': 'File'}], 'source_ids': ['eukrep/euk_fasta_out']}, {'id': 'eukrep_stats_file', 'name': 'EukRep stats', 'description': 'EukRep fasta statistics', 'type': [{'type': 'File'}], 'source_ids': ['eukrep_stats/output']}], 'steps': [{'id': 'metabat2_contig_depths', 'name': 'contig depths', 'description': 'MetabatContigDepths to obtain the depth file used in the MetaBat2 and SemiBin binning process', 'sink_ids': ['metabat2_contig_depths/depths']}, {'id': 'contig_read_counts', 'name': 'samtools idxstats', 'description': 'Reports alignment summary statistics', 'sink_ids': ['contig_read_counts/contigReadCounts']}, {'id': 'assembly_read_counts', 'name': 'samtools flagstat', 'description': 'Reports alignment summary statistics', 'sink_ids': ['assembly_read_counts/flagstat']}, {'id': 'eukrep', 'name': 'EukRep', 'description': 'EukRep, eukaryotic sequence classification', 'sink_ids': ['eukrep/euk_fasta_out']}, {'id': 'eukrep_stats', 'name': 'EukRep stats', 'description': 'EukRep fasta statistics', 'sink_ids': ['eukrep_stats/output']}, {'id': 'metabat2', 'name': 'MetaBAT2 binning', 'description': 'Binning procedure using MetaBAT2', 'sink_ids': ['metabat2/bin_dir', 'metabat2/log']}, {'id': 'metabat2_filter_bins', 'name': 'Filter MetBAT2 Bins', 'description': 'Removed unwanted fasta files from the MetaBAT2 bin directory (like TooShort.fa)', 'sink_ids': ['metabat2_filter_bins/output_folder']}, {'id': 'metabat2_contig2bin', 'name': 'MetaBAT2 to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['metabat2_contig2bin/table']}, {'id': 'maxbin2', 'name': 'MaxBin2 binning', 'description': 'Binning procedure using MaxBin2', 'sink_ids': ['maxbin2/bins', 'maxbin2/summary', 'maxbin2/log']}, {'id': 'maxbin2_to_folder', 'name': 'MaxBin2 bins to folder', 'description': 'Create folder with MaxBin2 bins', 'sink_ids': ['maxbin2_to_folder/results']}, {'id': 'maxbin2_contig2bin', 'name': 'MaxBin2 to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['maxbin2_contig2bin/table']}, {'id': 'semibin', 'name': 'Sembin binning', 'description': 'Binning procedure using SemiBin', 'sink_ids': ['semibin/recluster_bins', 'semibin/data', 'semibin/data_split', 'semibin/model', 'semibin/coverage']}, {'id': 'semibin_contig2bin', 'name': 'SemiBin to contig to bins', 'description': 'List the contigs and their corresponding bin.', 'sink_ids': ['semibin_contig2bin/table']}, {'id': 'das_tool', 'name': 'DAS Tool integrate predictions from multiple binning tools', 'description': 'DAS Tool', 'sink_ids': ['das_tool/bin_dir', 'das_tool/summary', 'das_tool/contig2bin', 'das_tool/log']}, {'id': 'das_tool_bins', 'name': 'Bin dir to files[]', 'description': 'DAS Tool bins folder to File array for further analysis', 'sink_ids': ['das_tool_bins/files']}, {'id': 'aggregate_bin_depths', 'name': 'Depths per bin', 'description': 'Depths per bin', 'sink_ids': ['aggregate_bin_depths/binDepths']}, {'id': 'bins_summary', 'name': 'Bins summary', 'description': 'Table of all bins and their statistics like size, contigs, completeness etc', 'sink_ids': ['bins_summary/bins_summary_table']}, {'id': 'bin_readstats', 'name': 'Bin and assembly read stats', 'description': 'Table general bin and assembly read mapping stats', 'sink_ids': ['bin_readstats/binReadStats']}, {'id': 'checkm', 'name': 'CheckM', 'description': 'CheckM bin quality assessment', 'sink_ids': ['checkm/checkm_out_table', 'checkm/checkm_out_folder']}, {'id': 'busco', 'name': 'BUSCO', 'description': 'BUSCO assembly completeness workflow', 'sink_ids': ['busco/short_summaries']}, {'id': 'merge_busco_summaries', 'name': 'Merge BUSCO summaries', 'description': None, 'sink_ids': ['merge_busco_summaries/output']}, {'id': 'gtdbtk', 'name': 'GTDBTK', 'description': 'Taxomic assigment of bins with GTDB-Tk', 'sink_ids': ['gtdbtk/gtdbtk_summary', 'gtdbtk/gtdbtk_out_folder']}, {'id': 'compress_gtdbtk', 'name': 'Compress GTDB-Tk', 'description': 'Compress GTDB-Tk output folder', 'sink_ids': ['compress_gtdbtk/outfile']}, {'id': 'metabat2_files_to_folder', 'name': 'MetaBAT2 output folder', 'description': 'Preparation of MetaBAT2 output files + unbinned contigs to a specific output folder', 'sink_ids': ['metabat2_files_to_folder/results']}, {'id': 'maxbin2_files_to_folder', 'name': 'MaxBin2 output folder', 'description': 'Preparation of maxbin2 output files to a specific output folder.', 'sink_ids': ['maxbin2_files_to_folder/results']}, {'id': 'semibin_files_to_folder', 'name': 'SemiBin output folder', 'description': 'Preparation of SemiBin output files to a specific output folder.', 'sink_ids': ['semibin_files_to_folder/results']}, {'id': 'das_tool_files_to_folder', 'name': 'DAS Tool output folder', 'description': 'Preparation of DAS Tool output files to a specific output folder.', 'sink_ids': ['das_tool_files_to_folder/results']}, {'id': 'checkm_files_to_folder', 'name': 'CheckM output', 'description': 'Preparation of CheckM output files to a specific output folder', 'sink_ids': ['checkm_files_to_folder/results']}, {'id': 'busco_files_to_folder', 'name': 'BUSCO output folder', 'description': 'Preparation of BUSCO output files to a specific output folder', 'sink_ids': ['busco_files_to_folder/results']}, {'id': 'gtdbtk_files_to_folder', 'name': 'GTBD-Tk output folder', 'description': 'Preparation of GTDB-Tk output files to a specific output folder', 'sink_ids': ['gtdbtk_files_to_folder/results']}, {'id': 'output_bin_files', 'name': 'Bin files', 'description': 'Bin files for subsequent workflow runs when sub_worflow = true', 'sink_ids': ['output_bin_files/bins_out']}], 'links': [{'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'metabat2_contig_depths', 'name': None, 'default_value': None}, {'id': 'bamFile', 'source_id': 'bam_file', 'sink_id': 'metabat2_contig_depths', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'bam_file', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'bam_file', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'assembly_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'eukrep', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'eukrep', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'input_fasta', 'source_id': 'eukrep/euk_fasta_out', 'sink_id': 'eukrep_stats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'depths', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'metabat2', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'metabat2/bin_dir', 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'regex', 'source_id': None, 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'output_folder_name', 'source_id': None, 'sink_id': 'metabat2_filter_bins', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'metabat2_filter_bins/output_folder', 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'extension', 'source_id': None, 'sink_id': 'metabat2_contig2bin', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'contigs', 'source_id': 'assembly', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'abundances', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'maxbin2', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/bins', 'sink_id': 'maxbin2_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'maxbin2_to_folder', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'maxbin2_to_folder/results', 'sink_id': 'maxbin2_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'maxbin2_contig2bin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'metabat2_depth_file', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'environment', 'source_id': 'semibin_environment', 'sink_id': 'semibin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'bin_folder', 'source_id': 'semibin/recluster_bins', 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'binner_name', 'source_id': None, 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'extension', 'source_id': None, 'sink_id': 'semibin_contig2bin', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'assembly', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'metabat2_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'bin_tables', 'source_id': 'semibin_contig2bin/table', 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'binner_labels', 'source_id': None, 'sink_id': 'das_tool', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'das_tool/bin_dir', 'sink_id': 'das_tool_bins', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'metabatdepthsFile', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'aggregate_bin_depths', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'bin_depths', 'source_id': 'aggregate_bin_depths/binDepths', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'checkm', 'source_id': 'checkm/checkm_out_table', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'gtdbtk', 'source_id': 'gtdbtk/gtdbtk_summary', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'busco_dir', 'source_id': 'busco_files_to_folder/results', 'sink_id': 'bins_summary', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'binContigs', 'source_id': 'das_tool/contig2bin', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'idxstats', 'source_id': 'contig_read_counts/contigReadCounts', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'flagstat', 'source_id': 'assembly_read_counts/flagstat', 'sink_id': 'bin_readstats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'checkm', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'sequence_file', 'source_id': 'das_tool_bins/files', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'mode', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'busco_data', 'source_id': 'busco_data', 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'auto-lineage-prok', 'source_id': None, 'sink_id': 'busco', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'merge_busco_summaries', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'busco/short_summaries', 'sink_id': 'merge_busco_summaries', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'bin_dir', 'source_id': 'das_tool/bin_dir', 'sink_id': 'gtdbtk', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'compress_gtdbtk', 'name': None, 'default_value': None}, {'id': 'indir', 'source_id': 'gtdbtk/gtdbtk_out_folder', 'sink_id': 'compress_gtdbtk', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metabat2/log', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metabat2_contig_depths/depths', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metabat2/bin_dir', 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metabat2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/summary', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2/log', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'maxbin2_contig2bin/table', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'maxbin2_to_folder/results', 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'maxbin2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_semibin', 'source_id': 'run_semibin', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin_contig2bin/table', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/data', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/data_split', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/model', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'semibin/coverage', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'semibin/recluster_bins', 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'semibin_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/log', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/summary', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'das_tool/contig2bin', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'aggregate_bin_depths/binDepths', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'das_tool/bin_dir', 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'das_tool_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'checkm/checkm_out_table', 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'checkm/checkm_out_folder', 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'checkm_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'merge_busco_summaries/output', 'sink_id': 'busco_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'busco_files_to_folder', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'gtdbtk/gtdbtk_summary', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_gtdbtk/outfile', 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'gtdbtk_files_to_folder', 'name': None, 'default_value': None}, {'id': 'sub_workflow', 'source_id': 'sub_workflow', 'sink_id': 'output_bin_files', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'das_tool_bins/files', 'sink_id': 'output_bin_files', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 64,
    "text_field": "['workflow_metagenomics_binning.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Minimal inputs are: Identifier, assembly (fasta) and a associated sorted BAM file Summary Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:Tools:https://gitlab.com/m-unlock/cwlWorkflows:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/64?version=11 Added more binning and assembly reports Views:9030Downloads:861 Created: 15th Oct 2020 at 14:55 Last updated: 2nd Nov 2022 at 15:29 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 494,
    "discussion_links": [],
    "title": "cocomico_wf_simulated",
    "license": "GPL-3.0+",
    "description": "CoCoMiCo analyses on collections of simulated communities.\nCommunity: scatterplots and KW tests of cooperation and competition\npotentials, for each collection.\nSimilarity: cooperation and competition potentials vs model\nsimilarity, defined as the Jaccard distance on sets of reactions.\nAdded value: boxplots comparing the added value of models in\ncommunities.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/1081?version=1', 'commit': 'e7a1844dbc3ccdaa2af73e293766dca1510a10d8', 'ref': 'refs/heads/master', 'tree': '/workflows/1081/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2024-07-18T19:57:27.000Z",
    "updated_at": "2024-08-14T15:24:11.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'community', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}, {'id': 'similarity', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}, {'id': 'added_value', 'name': None, 'description': None, 'type': [{'type': 'type_cocomico.yaml#named_spec_collection[]'}], 'default_value': None}], 'outputs': [{'id': 'similarity_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_similarity/figure_pdf']}, {'id': 'community_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_community/figure_pdf']}, {'id': 'added_value_pdf', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['fig_added_value/figure_pdf']}], 'steps': [{'id': 'coco_community', 'name': None, 'description': None, 'sink_ids': ['coco_community/csv']}, {'id': 'fig_community', 'name': None, 'description': None, 'sink_ids': ['fig_community/figure_pdf']}, {'id': 'jaccard_distance', 'name': None, 'description': None, 'sink_ids': ['jaccard_distance/distance_matrix']}, {'id': 'coco_similarity', 'name': None, 'description': None, 'sink_ids': ['coco_similarity/csv']}, {'id': 'fig_similarity', 'name': None, 'description': None, 'sink_ids': ['fig_similarity/figure_pdf']}, {'id': 'coco_added_value', 'name': None, 'description': None, 'sink_ids': ['coco_added_value/csv']}, {'id': 'fig_added_value', 'name': None, 'description': None, 'sink_ids': ['fig_added_value/figure_pdf']}], 'links': [{'id': 'spec', 'source_id': 'community', 'sink_id': 'coco_community', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_community/csv', 'sink_id': 'fig_community', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'similarity', 'sink_id': 'jaccard_distance', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'similarity', 'sink_id': 'coco_similarity', 'name': None, 'default_value': None}, {'id': 'distance', 'source_id': 'jaccard_distance/distance_matrix', 'sink_id': 'fig_similarity', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_similarity/csv', 'sink_id': 'fig_similarity', 'name': None, 'default_value': None}, {'id': 'spec', 'source_id': 'added_value', 'sink_id': 'coco_added_value', 'name': None, 'default_value': None}, {'id': 'scores', 'source_id': 'coco_added_value/csv', 'sink_id': 'fig_added_value', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 1081,
    "text_field": "",
    "raw_text_content": "",
    "p_tag_content": "CoCoMiCo analyses on collections of simulated communities.\nCommunity: scatterplots and KW tests of cooperation and competition\npotentials, for each collection.\nSimilarity: cooperation and competition potentials vs model\nsimilarity, defined as the Jaccard distance on sets of reactions.\nAdded value: boxplots comparing the added value of models in\ncommunities. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/1081?version=1 Initial commit Views:329Downloads:0 Created: 18th Jul 2024 at 20:57 Last updated: 18th Jul 2024 at 21:01 This item has not yet been tagged. None Teams:MISTIC Organizations:Inria A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Microbial communities and TIC Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 520,
    "discussion_links": "[{'id': '431', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Indices builder from GBOL RDF (TTL)",
    "license": "CC0-1.0",
    "description": "Workflow to build different indices for different tools from a genome and transcriptome. \n\nThis workflow expects an (annotated) genome in GBOL ttl format.\n\nSteps:\n  - SAPP: rdf2gtf (genome fasta)\n  - SAPP: rdf2fasta (transcripts fasta)\n  - STAR index (Optional for Eukaryotic origin)\n  - bowtie2 index\n  - kallisto index",
    "latest_version": 1,
    "tags": "['Alignment']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/75?version=1', 'commit': 'f8d3db7af24d8ad8fceac69baf83f572a64abff2', 'ref': 'refs/heads/master', 'tree': '/workflows/75/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-11-23T16:22:43.000Z",
    "updated_at": "2023-01-16T13:46:15.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'maximum memory usage in megabytes', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'inputFile', 'name': 'turtle file', 'description': 'Annotated genome in GBOL turtle file (.ttl) format', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'run_star', 'name': 'Run STAR', 'description': 'create STAR index for genome if true. (For genomes with exons)', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'genomeSAindexNbases', 'name': 'STAR parameter', 'description': 'For small genomes, the parameter --genomeSAindexNbases must be scaled down.', 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'STAR', 'name': 'STAR', 'description': 'STAR index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['STAR/STAR']}, {'id': 'bowtie2', 'name': 'bowtie2', 'description': 'bowtie2 index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['bowtie2/bowtie2']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'kallisto index folder', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto/kallisto_indexFolder']}, {'id': 'genomefasta', 'name': 'Genome fasta', 'description': 'Genome fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2gtf/genomefasta']}, {'id': 'gtf', 'name': 'GTF', 'description': 'Genes in GTF format', 'type': [{'type': 'File'}], 'source_ids': ['rdf2gtf/gtf']}, {'id': 'transcripts', 'name': 'Transcripts', 'description': 'Transcripts fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2fasta/transcripts']}, {'id': 'proteins', 'name': 'Proteins', 'description': 'Proteins fasta file', 'type': [{'type': 'File'}], 'source_ids': ['rdf2fasta/proteins']}], 'steps': [{'id': 'rdf2gtf', 'name': 'RDF to GTF', 'description': 'Convert input RDF (turtle) file to GTF file', 'sink_ids': ['rdf2gtf/genomefasta', 'rdf2gtf/gtf']}, {'id': 'rdf2fasta', 'name': 'RDF to Fasta', 'description': 'Convert input RDF (turtle) file to Genome fasta file.', 'sink_ids': ['rdf2fasta/transcripts', 'rdf2fasta/proteins']}, {'id': 'STAR', 'name': 'STAR index', 'description': 'Creates STAR index with genome fasta and GTF file', 'sink_ids': ['STAR/STAR']}, {'id': 'bowtie2', 'name': 'bowtie2 index', 'description': 'Creates bowtie2 index with genome fasta', 'sink_ids': ['bowtie2/bowtie2']}, {'id': 'kallisto', 'name': 'kallisto index', 'description': 'Creates kallisto index with transcripts fasta file', 'sink_ids': ['kallisto/kallisto_indexFolder']}], 'links': [{'id': 'inputFile', 'source_id': 'inputFile', 'sink_id': 'rdf2gtf', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'inputFile', 'sink_id': 'rdf2fasta', 'name': None, 'default_value': None}, {'id': 'run_star', 'source_id': 'run_star', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2gtf/genomefasta', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'sjdbGTFfile', 'source_id': 'rdf2gtf/gtf', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'genomeSAindexNbases', 'source_id': 'genomeSAindexNbases', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2gtf/genomefasta', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'inputFile', 'source_id': 'rdf2fasta/transcripts', 'sink_id': 'kallisto', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 75,
    "text_field": "['workflow_indexbuilder.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Indices builder from GBOL RDF (TTL)\ndoc: |\n    Workflow to build different indices for different tools from a genome and transcriptome. \n    \n    This workflow expects an (annotated) genome in GBOL ttl format.\n\n    Steps:\n      - SAPP: rdf2gtf (genome fasta)\n      - SAPP: rdf2fasta (transcripts fasta)\n      - STAR index (Optional for Eukaryotic origin)\n      - bowtie2 index\n      - kallisto index\n\noutputs:\n  STAR:\n    type: Directory\n    label: STAR\n    doc: STAR index folder\n    outputSource: STAR/STAR\n  bowtie2:\n    type: Directory\n    label: bowtie2\n    doc: bowtie2 index folder\n    outputSource: bowtie2/bowtie2\n  kallisto:\n    label: kallisto\n    doc: kallisto index folder\n    type: Directory\n    outputSource: kallisto/kallisto_indexFolder\n  genomefasta:\n    label: Genome fasta\n    doc: Genome fasta file\n    type: [File]\n    outputSource: [rdf2gtf/genomefasta]\n  gtf:\n    label: GTF\n    doc: Genes in GTF format\n    type: [File]\n    outputSource: [rdf2gtf/gtf]\n  transcripts:\n    label: Transcripts\n    doc: Transcripts fasta file\n    type: [File]\n    outputSource: [rdf2fasta/transcripts]\n  proteins:\n    label: Proteins\n    doc: Proteins fasta file\n    type: [File]\n    outputSource: [rdf2fasta/proteins]\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: maximum memory usage in megabytes\n    default: 4000\n  inputFile:\n    label: Input File\n    doc: Annotated genome in GBOL turtle file (.ttl) format\n    type: File\n    label: turtle file  \n  run_star:\n    label: Run STAR\n    doc: create STAR index for genome if true. (For genomes with exons)\n    type: boolean\n    default: false\n\n  genomeSAindexNbases:\n  # TODO calculate genomeSAindexNbases automatically per genome\n    type: int?\n    doc: For small genomes, the parameter --genomeSAindexNbases must be scaled down.\n    label: STAR parameter\n  \nsteps:\n  #########################################\n  # Workflow for SAPP rdf2gtf\n  rdf2gtf:\n    label: RDF to GTF\n    doc: Convert input RDF (turtle) file to GTF file\n    run: ../sapp/conversion_rdf2gtf.cwl\n    in:\n      inputFile: inputFile\n    out: [genomefasta,gtf]\n  #########################################\n  # Workflow for SAPP rdf2fasta\n  rdf2fasta:\n    label: RDF to Fasta\n    doc: Convert input RDF (turtle) file to Genome fasta file. \n    run: ../sapp/conversion_rdf2fasta.cwl\n    in:\n      inputFile: inputFile\n    out: [transcripts,proteins]\n  #########################################\n  # Workflow for STAR\n  STAR:\n    label: STAR index\n    doc: Creates STAR index with genome fasta and GTF file \n    when: $(inputs.run_star)\n    run: ../RNAseq/star/star_index.cwl\n    in:\n      run_star: run_star\n      inputFile: rdf2gtf/genomefasta\n      sjdbGTFfile: rdf2gtf/gtf\n      genomeSAindexNbases: genomeSAindexNbases\n      # TODO calculate genomeSAindexNbases automatically per genome\n    out: [STAR]\n  #########################################\n  # Workflow for bowtie2\n  bowtie2:\n   label: bowtie2 index\n   doc: Creates bowtie2 index with genome fasta\n   run: ../bowtie2/bowtie2_index.cwl\n   in:\n    inputFile: rdf2gtf/genomefasta\n   out: [bowtie2]\n\n  #########################################\n  # Workflow for kallisto\n  kallisto:\n   label: kallisto index\n   doc: Creates kallisto index with transcripts fasta file\n   run: ../RNAseq/kallisto/kallisto_index.cwl\n   in:\n    inputFile: rdf2fasta/transcripts\n   out: [kallisto_indexFolder]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow to build different indices for different tools from a genome and transcriptome. This workflow expects an (annotated) genome in GBOL ttl format. Steps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/75?version=1 Added/updated 1 files Views:2285Downloads:258 Created: 23rd Nov 2020 at 16:22 None Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 521,
    "discussion_links": "[{'id': '428', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "NonSpliced RNAseq workflow",
    "license": "CC0-1.0",
    "description": "Workflow for NonSpliced RNAseq data with multiple aligners.\n\nSteps:  \n    - workflow_quality.cwl:\n        - FastQC (control)\n        - fastp (trimming)\n    - bowtie2 (read mapping)\n    - sam_to_sorted-bam\n    - featurecounts (transcript read counts)\n    - kallisto (transcript [pseudo]counts)",
    "latest_version": 1,
    "tags": "['Alignment', 'bowtie2', 'featurecounts', 'kallisto', 'nonspliced']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/77?version=1', 'commit': '533f564586c3f2e4f924104184220bab21f3612d', 'ref': 'refs/heads/master', 'tree': '/workflows/77/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-11-24T11:05:56.000Z",
    "updated_at": "2023-01-16T13:46:21.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Max memory', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': 'Filer rRNA', 'description': 'Filter rRNA from reads if true', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'prefix_id', 'name': 'Filename prefix', 'description': 'Prefix of the output filenames.', 'type': [{'type': 'string'}], 'default_value': 'out'}, {'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'bowtie2-indexfolder', 'name': 'bowtie2 index', 'description': 'Folder location of the bowtie2 index files.', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'kallisto-indexfolder', 'name': 'kallisto index', 'description': 'Folder location of the kallisto index file.', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'gtf', 'name': 'GTF file', 'description': 'GTF file location', 'type': [{'type': 'File?'}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': 'FASTQC', 'description': 'Quality reporting by FASTQC', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_fastqc']}, {'id': 'files_to_folder_filtered', 'name': 'Filtered reads folder', 'description': 'Output folder with filtered reads.', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_filtered']}, {'id': 'files_to_folder_bowtie2', 'name': 'bowtie2 output', 'description': 'bowtie2 mapping results folder. Contains sorted bam file, metrics file and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['bowtie2_files_to_folder/results']}, {'id': 'files_to_folder_featurecounts', 'name': 'FeatureCounts output', 'description': 'FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['featurecounts_files_to_folder/results']}, {'id': 'files_to_folder_kallisto', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['quality/files_to_folder_fastqc', 'quality/files_to_folder_filtered', 'quality/QC_forward_reads', 'quality/QC_reverse_reads']}, {'id': 'bowtie2', 'name': 'bowtie2', 'description': 'runs bowtie2 alignment on the genome with the quality filtered reads.', 'sink_ids': ['bowtie2/sam', 'bowtie2/metricsfile', 'bowtie2/bowtie2_stats']}, {'id': 'sam_to_sorted-bam', 'name': 'sam to sorted bam', 'description': 'Converts a SAM file to a sorted BAM file', 'sink_ids': ['sam_to_sorted-bam/sortedbam']}, {'id': 'featurecounts', 'name': 'FeatureCounts', 'description': 'Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.', 'sink_ids': ['featurecounts/readcounts', 'featurecounts/summary', 'featurecounts/overview']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.h5', 'kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'bowtie2_files_to_folder', 'name': 'bowtie2 output', 'description': 'Preparation of bowtie2 output files to a specific output folder', 'sink_ids': ['bowtie2_files_to_folder/results']}, {'id': 'featurecounts_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of FeatureCounts output files to a specific output folder', 'sink_ids': ['featurecounts_files_to_folder/results']}, {'id': 'kallisto_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix_id', 'source_id': 'prefix_id', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'bowtie2-indexfolder', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'bowtie2', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'bowtie2/sam', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sam_to_sorted-bam', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'sam_to_sorted-bam/sortedbam', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'kallisto-indexfolder', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'sam_to_sorted-bam/sortedbam', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'bowtie2/metricsfile', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'bowtie2/bowtie2_stats', 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'bowtie2_files_to_folder', 'name': None, 'default_value': 'Step_3_bowtie2-alignment'}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/readcounts', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/summary', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/overview', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': 'Step_4_FeatureCounts'}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.h5', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': 'Step_5_Kallisto'}]}",
    "tools": [],
    "id": 77,
    "text_field": "['workflow_RNAseq_NonSpliced.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: NonSpliced RNAseq workflow\ndoc: | \n  Workflow for NonSpliced RNAseq data alignment with multiple aligners.\n  Steps:  \n      - workflow_quality.cwl:\n          - FastQC (control)\n          - fastp (trimming)\n      - bowtie2 (read mapping)\n      - sam_to_sorted-bam\n      - featurecounts (transcript read counts)\n      - kallisto (transcript [pseudo]counts)\n\noutputs:\n  files_to_folder_fastqc:\n    type: Directory\n    label: FASTQC\n    doc: Quality reporting by FASTQC\n    outputSource: quality/files_to_folder_fastqc\n  files_to_folder_filtered:\n    label: Filtered reads folder\n    doc: Output folder with filtered reads.\n    type: Directory\n    outputSource: quality/files_to_folder_filtered\n  files_to_folder_bowtie2:\n    type: Directory\n    label: bowtie2 output\n    doc: bowtie2 mapping results folder. Contains sorted bam file, metrics file and mapping statistics (stdout).\n    outputSource: bowtie2_files_to_folder/results\n  files_to_folder_featurecounts:\n    type: Directory\n    label: FeatureCounts output\n    doc: FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).\n    outputSource: featurecounts_files_to_folder/results\n  files_to_folder_kallisto:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: Max memory\n    default: 4000\n  filter_rrna:\n    type: boolean\n    label: Filer rRNA\n    doc: Filter rRNA from reads if true\n    default: false\n  prefix_id:\n    type: string\n    label: Filename prefix\n    doc: Prefix of the output filenames.\n    default: out\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File\n    doc: reverse sequence file locally\n    label: reverse reads\n  bowtie2-indexfolder:\n    type: Directory\n    label:  bowtie2 index\n    doc: Folder location of the bowtie2 index files.\n  kallisto-indexfolder:\n    type: Directory?\n    label: kallisto index\n    doc: Folder location of the kallisto index file.\n  gtf:\n    type: File?\n    label: GTF file\n    doc: GTF file location\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering using fastqc, fastp and optionally bbduk\n  quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    in:\n      filter_rrna: filter_rrna\n      prefix_id: prefix_id\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      threads: threads\n      memory: memory\n    run: ../workflows/workflow_quality.cwl\n    out: [files_to_folder_fastqc, files_to_folder_filtered, QC_forward_reads, QC_reverse_reads]\n  #########################################\n  # bowtie2 alignment\n  bowtie2:\n    label: bowtie2\n    doc: runs bowtie2 alignment on the genome with the quality filtered reads.\n    in:\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: bowtie2-indexfolder\n      threads: threads\n    run: ../bowtie2/bowtie2_align_simple.cwl\n    out:     \n      [sam, metricsfile,bowtie2_stats]\n  #########################################\n  # convert sam file to sorted bam file\n  sam_to_sorted-bam:\n    label: sam to sorted bam\n    doc: Converts a SAM file to a sorted BAM file\n    in:\n      prefix: \n       source: prefix_id\n       valueFrom: $(self+\"_bowtie2\")\n      sam: bowtie2/sam\n      threads: threads\n    run: ../samtools/sam_to_sorted-bam.cwl\n    out: \n      [sortedbam]\n  #########################################\n  # Feature counts with GTF file and with bowtie2 mapped output\n  featurecounts:\n    label: FeatureCounts\n    doc: Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.\n    when: $(inputs.gtf != undefined)\n    run: ../RNAseq/featurecounts.cwl\n    in:\n      prefix: prefix_id\n      bam: sam_to_sorted-bam/sortedbam\n      gtf: gtf\n      threads: threads\n    out: \n      [readcounts, summary, overview]\n\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    when: $(inputs.gtf != undefined)\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    in:\n      gtf: gtf\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: kallisto-indexfolder\n      threads: threads\n    out:\n      [abundance.h5, abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  bowtie2_files_to_folder:\n    label: bowtie2 output\n    doc: Preparation of bowtie2 output files to a specific output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [sam_to_sorted-bam/sortedbam, bowtie2/metricsfile, bowtie2/bowtie2_stats]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_3_bowtie2-alignment\"\n    out:\n      [results]\n  featurecounts_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of FeatureCounts output files to a specific output folder\n    when: $(inputs.gtf != undefined)\n    run: ../expressions/files_to_folder.cwl\n    in:\n      gtf: gtf\n      files: \n        source: [featurecounts/readcounts, featurecounts/summary, featurecounts/overview]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        default: \"Step_4_FeatureCounts\"\n    out:\n      [results]\n  kallisto_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of kallisto output files to a specific output folder\n    when: $(inputs.gtf != undefined)\n    run: ../expressions/files_to_folder.cwl\n    in:\n      gtf: gtf\n      files: \n        source: [kallisto/abundance.h5, kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_5_Kallisto\"\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for NonSpliced RNAseq data with multiple aligners. Steps:- workflow_quality.cwl:\n- FastQC (control)\n- fastp (trimming)\n- bowtie2 (read mapping)\n- sam_to_sorted-bam\n- featurecounts (transcript read counts)\n- kallisto (transcript [pseudo]counts) Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/77?version=1 Added/updated 1 files Views:2574Downloads:292 Created: 24th Nov 2020 at 11:05 Last updated: 8th Jun 2021 at 08:32 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 522,
    "discussion_links": "[{'id': '427', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Spliced RNAseq workflow",
    "license": "CC0-1.0",
    "description": "Workflow for Spliced RNAseq data\n**Steps:**\n\n* workflow_quality.cwl:\n\t* FastQC (Read Quality Control)\n\t* fastp (Read Trimming)\n* STAR (Read mapping)\n* featurecounts (transcript read counts)\n* kallisto (transcript [pseudo]counts)",
    "latest_version": 1,
    "tags": "['RNASEQ', 'STAR', 'kallisto', 'rna', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/95?version=1', 'commit': '168dee2311b3378831943d3ab3c047e41b86537d', 'ref': 'refs/heads/master', 'tree': '/workflows/95/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2020-12-22T15:53:49.000Z",
    "updated_at": "2023-01-16T13:46:30.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'maximum memory usage in megabytes', 'description': 'maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'filter_rrna', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': True}, {'id': 'prefix_id', 'name': None, 'description': 'prefix of the filename outputs', 'type': [{'type': 'string'}], 'default_value': 'out'}, {'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'STAR-indexfolder', 'name': 'folder where the STAR indices are', 'description': None, 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'kallisto-indexfolder', 'name': 'folder where the kallisto indices are', 'description': None, 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'gtf', 'name': None, 'description': 'gtf file', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'quantMode', 'name': None, 'description': 'Run with get gene quantification', 'type': [{'type': 'null'}, {'type': 'enum', 'symbols': ['None', 'TranscriptomeSAM', 'GeneCounts']}], 'default_value': None}], 'outputs': [{'id': 'files_to_folder_fastqc', 'name': 'FASTQC', 'description': 'Quality reporting by FASTQC', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_fastqc']}, {'id': 'files_to_folder_filtered', 'name': 'Filtered reads folder', 'description': 'Output folder with filtered reads.', 'type': [{'type': 'Directory'}], 'source_ids': ['quality/files_to_folder_filtered']}, {'id': 'files_to_folder_STAR', 'name': 'STAR output folder', 'description': 'STAR results folder. Contains logs, bam file, readcounts per gene and splice_junctions.', 'type': [{'type': 'Directory'}], 'source_ids': ['STAR_files_to_folder/results']}, {'id': 'files_to_folder_featurecounts', 'name': 'FeatureCounts output', 'description': 'FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).', 'type': [{'type': 'Directory'}], 'source_ids': ['featurecounts_files_to_folder/results']}, {'id': 'files_to_folder_kallisto', 'name': 'kallisto output', 'description': 'kallisto results folder. Contains transcript abundances, run info and summary.', 'type': [{'type': 'Directory'}], 'source_ids': ['kallisto_files_to_folder/results']}], 'steps': [{'id': 'quality', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['quality/files_to_folder_fastqc', 'quality/files_to_folder_filtered', 'quality/QC_forward_reads', 'quality/QC_reverse_reads']}, {'id': 'STAR', 'name': 'STAR', 'description': 'runs STAR alignment on the genome with the quality filtered reads.', 'sink_ids': ['STAR/bam', 'STAR/log_file', 'STAR/final_log_file', 'STAR/reads_per_gene', 'STAR/splice_junctions']}, {'id': 'featurecounts', 'name': 'FeatureCounts', 'description': 'Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.', 'sink_ids': ['featurecounts/readcounts', 'featurecounts/summary', 'featurecounts/overview']}, {'id': 'kallisto', 'name': 'kallisto', 'description': 'Calculates transcript abundances', 'sink_ids': ['kallisto/abundance.h5', 'kallisto/abundance.tsv', 'kallisto/run_info', 'kallisto/summary']}, {'id': 'STAR_files_to_folder', 'name': 'STAR output', 'description': 'Preparation of STAR output files to a specific output folder', 'sink_ids': ['STAR_files_to_folder/results']}, {'id': 'featurecounts_files_to_folder', 'name': 'FeatureCounts output', 'description': 'Preparation of FeatureCounts output files to a specific output folder', 'sink_ids': ['featurecounts_files_to_folder/results']}, {'id': 'kallisto_files_to_folder', 'name': 'kallisto output', 'description': 'Preparation of kallisto output files to a specific output folder', 'sink_ids': ['kallisto_files_to_folder/results']}], 'links': [{'id': 'filter_rrna', 'source_id': 'filter_rrna', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'prefix_id', 'source_id': 'prefix_id', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'quality', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'OutFileNamePrefix', 'source_id': 'prefix_id', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'genomeDir', 'source_id': 'STAR-indexfolder', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'sjdbGTFfile', 'source_id': 'gtf', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'quantMode', 'source_id': 'quantMode', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'STAR', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'bam', 'source_id': 'STAR/bam', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'gtf', 'source_id': 'gtf', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'featurecounts', 'name': None, 'default_value': None}, {'id': 'prefix', 'source_id': 'prefix_id', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'quality/QC_forward_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'quality/QC_reverse_reads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'indexfolder', 'source_id': 'kallisto-indexfolder', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kallisto', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/bam', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/log_file', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/final_log_file', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/reads_per_gene', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'STAR/splice_junctions', 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'STAR_files_to_folder', 'name': None, 'default_value': 'Step_3_STAR-alignment'}, {'id': 'files', 'source_id': 'featurecounts/readcounts', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/summary', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'featurecounts/overview', 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'featurecounts_files_to_folder', 'name': None, 'default_value': 'Step_4_FeatureCounts'}, {'id': 'files', 'source_id': 'kallisto/abundance.h5', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/abundance.tsv', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/run_info', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kallisto/summary', 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kallisto_files_to_folder', 'name': None, 'default_value': 'Step_5_Kallisto'}]}",
    "tools": [],
    "id": 95,
    "text_field": "['workflow_RNAseq_Spliced.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Spliced RNAseq workflow\ndoc: | \n  Workflow for Spliced RNAseq data\n  Steps:  \n      - workflow_quality.cwl:\n          - FastQC (Read Quality Control)\n          - fastp (Read Trimming)\n      - STAR (Read mapping)\n      - featurecounts (transcript read counts)\n      - kallisto (transcript [pseudo]counts)\n\noutputs:\n  files_to_folder_fastqc:\n    type: Directory\n    label: FASTQC\n    doc: Quality reporting by FASTQC\n    outputSource: quality/files_to_folder_fastqc\n  files_to_folder_filtered:\n    type: Directory\n    label: Filtered reads folder\n    doc: Output folder with filtered reads.\n    outputSource: quality/files_to_folder_filtered\n  files_to_folder_STAR:\n    type: Directory\n    label: STAR output folder\n    doc: STAR results folder. Contains logs, bam file, readcounts per gene and splice_junctions.\n    outputSource: STAR_files_to_folder/results\n  files_to_folder_featurecounts:\n    type: Directory\n    label: FeatureCounts output\n    doc: FeatureCounts results folder. Contains readcounts, summary and mapping statistics (stdout).\n    outputSource: featurecounts_files_to_folder/results\n  files_to_folder_kallisto:\n    type: Directory\n    label: kallisto output\n    doc: kallisto results folder. Contains transcript abundances, run info and summary.\n    outputSource: kallisto_files_to_folder/results\n\ninputs:\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: maximum memory usage in megabytes\n    label: maximum memory usage in megabytes\n    default: 4000\n  filter_rrna:\n    type: boolean\n    default: true\n  prefix_id:\n    type: string\n    doc: prefix of the filename outputs\n    default: out\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File\n    doc: reverse sequence file locally\n    label: reverse reads\n\n  STAR-indexfolder: \n    type: Directory\n    label: folder where the STAR indices are\n  kallisto-indexfolder:\n    type: Directory?\n    label: folder where the kallisto indices are\n\n  gtf:\n    type: File\n    format: http://edamontology.org/format_2306 # GTF\n    doc: gtf file\n\n  quantMode:\n    type:\n     - \"null\"\n     - type: enum\n       symbols:\n        - None\n        - TranscriptomeSAM\n        - GeneCounts\n    doc: Run with get gene quantification\n\nsteps:\n  #########################################\n  # Workflow for quality and filtering using fastqc, fastp and optionally bbduk\n  quality:\n    label: Quality and filtering workflow\n    doc: Quality assessment of illumina reads with rRNA filtering option\n    in:\n      filter_rrna: filter_rrna\n      prefix_id: prefix_id\n      forward_reads: forward_reads\n      reverse_reads: reverse_reads\n      threads: threads\n      memory: memory\n    run: ../workflows/workflow_quality.cwl\n    out: [files_to_folder_fastqc, files_to_folder_filtered, QC_forward_reads, QC_reverse_reads]\n  #########################################\n  # STAR alignment\n  STAR:\n    label: STAR\n    doc: runs STAR alignment on the genome with the quality filtered reads.\n    in:\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n\n      OutFileNamePrefix:\n        source: prefix_id\n        valueFrom: $(self+\"_\")\n      genomeDir: STAR-indexfolder\n      sjdbGTFfile: gtf\n      quantMode: quantMode\n   \n      memory: memory\n      threads: threads\n    run: ../RNAseq/star/star_align.cwl\n    out: \n      [bam, log_file,final_log_file, reads_per_gene, splice_junctions]\n  #########################################\n  # FeatureCounts\n  featurecounts:\n    label: FeatureCounts\n    doc: Calculates gene counts with bowtie2 mapped data and input GTF file with FeatureCounts.\n    in:\n      prefix: prefix_id\n      bam: STAR/bam\n      gtf: gtf\n      threads: threads\n    run: ../RNAseq/featurecounts.cwl\n    out: \n      [readcounts, summary, overview]\n  #########################################\n  # kallisto transcript abundances\n  kallisto:\n    label: kallisto\n    doc: Calculates transcript abundances\n    in:\n      prefix: prefix_id\n      forward_reads: quality/QC_forward_reads\n      reverse_reads: quality/QC_reverse_reads\n      indexfolder: kallisto-indexfolder\n      threads: threads\n    run: ../RNAseq/kallisto/kallisto_quant.cwl\n    out:\n      [abundance.h5, abundance.tsv, run_info, summary]\n\n#############################################\n#### Move to folder if not part of a workflow\n  STAR_files_to_folder:\n    label: STAR output\n    doc: Preparation of STAR output files to a specific output folder\n    in:\n      files: \n        source: [STAR/bam, STAR/log_file, STAR/final_log_file, STAR/reads_per_gene, STAR/splice_junctions]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_3_STAR-alignment\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n\n  featurecounts_files_to_folder:\n    label: FeatureCounts output\n    doc: Preparation of FeatureCounts output files to a specific output folder    \n    in:\n      files: \n        source: [featurecounts/readcounts, featurecounts/summary, featurecounts/overview]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_4_FeatureCounts\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n\n  kallisto_files_to_folder:\n    label: kallisto output\n    doc: Preparation of kallisto output files to a specific output folder\n    in:\n      files: \n        source: [kallisto/abundance.h5, kallisto/abundance.tsv, kallisto/run_info, kallisto/summary]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        default: \"Step_5_Kallisto\"\n    run: ../expressions/files_to_folder.cwl\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2020-00-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for Spliced RNAseq dataSteps: Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/95?version=1 Added/updated 1 files Views:2446Downloads:296 Created: 22nd Dec 2020 at 15:53 Last updated: 8th Jun 2021 at 13:31 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 523,
    "discussion_links": [],
    "title": "Example of setting up a simulation system",
    "license": "Apache-2.0",
    "description": "CWL version of the md_list.cwl workflow for HPC.",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 2, 'revision_comments': 'Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows)', 'url': 'https://workflowhub.eu/workflows/98?version=2', 'commit': '9a5aab77d77ec7eac06516395d371a610c323e0a', 'ref': 'refs/heads/master', 'tree': '/workflows/98/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows)",
    "created_at": "2021-01-29T16:56:33.000Z",
    "updated_at": "2023-01-16T13:46:36.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_editconf_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_grompp_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_genion_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_grompp_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_make_ndx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'dir', 'name': 'whole workflow output', 'description': 'outputs from the whole workflow, containing these optional files:\\nstep14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\\nstep14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\\nstep14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\\n                                   simulation from the last step of the setup process.\\nstep13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\\n                                   of the simulation, the molecular topology and all the simulation parameters.\\nstep5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\\n                                   readable format.\\n', 'type': [{'type': 'Directory'}], 'source_ids': ['step15_gather_outputs/project_work_dir']}], 'steps': [{'id': 'step1_pdb2gmx', 'name': 'Create Protein System Topology', 'description': None, 'sink_ids': ['step1_pdb2gmx/output_gro_file', 'step1_pdb2gmx/output_top_zip_file']}, {'id': 'step2_editconf', 'name': 'Create Solvent Box', 'description': None, 'sink_ids': ['step2_editconf/output_gro_file']}, {'id': 'step3_solvate', 'name': 'Fill the Box with Water Molecules', 'description': None, 'sink_ids': ['step3_solvate/output_gro_file', 'step3_solvate/output_top_zip_file']}, {'id': 'step4_grompp_genion', 'name': 'Add Ions - part 1', 'description': None, 'sink_ids': ['step4_grompp_genion/output_tpr_file']}, {'id': 'step5_genion', 'name': 'Add Ions - part 2', 'description': None, 'sink_ids': ['step5_genion/output_gro_file', 'step5_genion/output_top_zip_file']}, {'id': 'step6_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': None, 'sink_ids': ['step6_grompp_min/output_tpr_file']}, {'id': 'step7_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': None, 'sink_ids': ['step7_mdrun_min/output_trr_file', 'step7_mdrun_min/output_gro_file', 'step7_mdrun_min/output_edr_file', 'step7_mdrun_min/output_log_file']}, {'id': 'step8_make_ndx', 'name': 'Generate GROMACS index file', 'description': None, 'sink_ids': ['step8_make_ndx/output_ndx_file']}, {'id': 'step9_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': None, 'sink_ids': ['step9_grompp_nvt/output_tpr_file']}, {'id': 'step10_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': None, 'sink_ids': ['step10_mdrun_nvt/output_trr_file', 'step10_mdrun_nvt/output_gro_file', 'step10_mdrun_nvt/output_edr_file', 'step10_mdrun_nvt/output_log_file', 'step10_mdrun_nvt/output_cpt_file']}, {'id': 'step11_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': None, 'sink_ids': ['step11_grompp_npt/output_tpr_file']}, {'id': 'step12_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': None, 'sink_ids': ['step12_mdrun_npt/output_trr_file', 'step12_mdrun_npt/output_gro_file', 'step12_mdrun_npt/output_edr_file', 'step12_mdrun_npt/output_log_file', 'step12_mdrun_npt/output_cpt_file']}, {'id': 'step13_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': None, 'sink_ids': ['step13_grompp_md/output_tpr_file']}, {'id': 'step14_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': None, 'sink_ids': ['step14_mdrun_md/output_trr_file', 'step14_mdrun_md/output_gro_file', 'step14_mdrun_md/output_edr_file', 'step14_mdrun_md/output_log_file', 'step14_mdrun_md/output_cpt_file']}, {'id': 'step15_gather_outputs', 'name': 'Archiving outputs to be returned to user', 'description': None, 'sink_ids': ['step15_gather_outputs/project_work_dir']}], 'links': [{'id': 'input_pdb_path', 'source_id': 'step1_pdb_file', 'sink_id': 'step1_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step1_pdb2gmx/output_gro_file', 'sink_id': 'step2_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step2_editconf/output_gro_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step1_pdb2gmx/output_top_zip_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_grompp_genion_config', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_solvate/output_gro_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_genion_config', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step4_grompp_genion/output_tpr_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_grompp_min_config', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_genion/output_gro_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_min/output_tpr_file', 'sink_id': 'step7_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_make_ndx_config', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_nvt_config', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_nvt/output_tpr_file', 'sink_id': 'step10_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_npt_config', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_nvt/output_gro_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step10_mdrun_nvt/output_cpt_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_npt/output_tpr_file', 'sink_id': 'step12_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_md_config', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_npt/output_gro_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_npt/output_cpt_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_mdrun_md_config', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'external_project_file', 'source_id': 'step1_pdb_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_trr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_gro_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_cpt_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 98,
    "text_field": "['1_md_list.cwl', 'graph.svg', 'md_list.cwl']",
    "raw_text_content": "<!DOCTYPE html>\n\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing,\n  ~ software distributed under the License is distributed on an\n  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  ~ KIND, either express or implied.  See the License for the\n  ~ specific language governing permissions and limitations\n  ~ under the License.\n  -->\n\n<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:site\" content=\"@commonwl\" />\n    <meta name=\"twitter:title\" content=\"CWL Workflow: Example of setting up a simulation system\" />\n    <meta name=\"twitter:description\" content=\"CWL version of the md_list.cwl workflow for HPC.\n\" />\n    <meta name=\"twitter:image\" content=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" />\n    <title>Example of setting up a simulation system - Common Workflow Language Viewer</title>\n    <link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main-20180518.css\" />\n</head>\n<body>\n\n<nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container\">\n        <div class=\"navbar-header\">\n            <a href=\"/\" class=\"navbar-left\">\n                <img id=\"logo\" src=\"/img/CWL-Logo-nofonts.svg\" />\n            </a>\n            <a href=\"/workflows\" class=\"button navbar-toggle\">Explore</a>\n            <a href=\"/apidocs\" class=\"button navbar-toggle\">API</a>\n            <a href=\"/about\" class=\"button navbar-toggle\">About</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li><a href=\"/about\">About</a></li>\n                <li><a href=\"/apidocs\">API</a></li>\n                <li><a href=\"/workflows\">Explore</a></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n\n<!-- Modal for viewing DOT graph -->\n<div class=\"modal fade\" id=\"dotGraph\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dotGraphLabel\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                <h4 class=\"modal-title\" id=\"dotGraphLabel\">Workflow DOT Graph</h4>\n            </div>\n            <div class=\"modal-body\">\n                <h4 id=\"modalTitle\">Dot File Source:</h4>\n<textarea id=\"dot\" class=\"form-control\" rows=\"15\" name=\"visualisationDot\">\ndigraph workflow {\n  graph [\n    bgcolor = &quot;#eeeeee&quot;\n    color = &quot;black&quot;\n    fontsize = &quot;10&quot;\n    labeljust = &quot;left&quot;\n    clusterrank = &quot;local&quot;\n    ranksep = &quot;0.22&quot;\n    nodesep = &quot;0.05&quot;\n  ]\n  node [\n    fontname = &quot;Helvetica&quot;\n    fontsize = &quot;10&quot;\n    fontcolor = &quot;black&quot;\n    shape = &quot;record&quot;\n    height = &quot;0&quot;\n    width = &quot;0&quot;\n    color = &quot;black&quot;\n    fillcolor = &quot;lightgoldenrodyellow&quot;\n    style = &quot;filled&quot;\n  ];\n  edge [\n    fontname=&quot;Helvetica&quot;\n    fontsize=&quot;8&quot;\n    fontcolor=&quot;black&quot;\n    color=&quot;black&quot;\n    arrowsize=&quot;0.7&quot;\n  ];\n  subgraph cluster_inputs {\n    rank = &quot;same&quot;;\n    style = &quot;dashed&quot;;\n    label = &quot;Workflow Inputs&quot;;\n    &quot;step6_grompp_min_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step6_grompp_min_config&quot;];\n    &quot;step5_genion_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step5_genion_config&quot;];\n    &quot;step9_grompp_nvt_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step9_grompp_nvt_config&quot;];\n    &quot;step11_grompp_npt_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step11_grompp_npt_config&quot;];\n    &quot;step13_grompp_md_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step13_grompp_md_config&quot;];\n    &quot;step14_mdrun_md_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step14_mdrun_md_config&quot;];\n    &quot;step8_make_ndx_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step8_make_ndx_config&quot;];\n    &quot;step2_editconf_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step2_editconf_config&quot;];\n    &quot;step4_grompp_genion_config&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step4_grompp_genion_config&quot;];\n    &quot;step1_pdb_file&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;step1_pdb_file&quot;];\n  }\n  subgraph cluster_outputs {\n    rank = &quot;same&quot;;\n    style = &quot;dashed&quot;;\n    labelloc = &quot;b&quot;;\n    label = &quot;Workflow Outputs&quot;;\n    &quot;dir&quot; [fillcolor=&quot;#94DDF4&quot;,label=&quot;whole workflow output&quot;];\n  }\n  &quot;step14_mdrun_md&quot; [label=&quot;step14_mdrun_md&quot;];\n  &quot;step11_grompp_npt&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step6_grompp_min&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step5_genion&quot; [label=&quot;step5_genion&quot;];\n  &quot;step15_gather_outputs&quot; [label=&quot;step15_gather_outputs&quot;];\n  &quot;step13_grompp_md&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step3_solvate&quot; [label=&quot;step3_solvate&quot;];\n  &quot;step10_mdrun_nvt&quot; [label=&quot;step10_mdrun_nvt&quot;];\n  &quot;step8_make_ndx&quot; [label=&quot;step8_make_ndx&quot;];\n  &quot;step7_mdrun_min&quot; [label=&quot;step7_mdrun_min&quot;];\n  &quot;step9_grompp_nvt&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step4_grompp_genion&quot; [label=&quot;Wrapper of the GROMACS grompp module&quot;];\n  &quot;step12_mdrun_npt&quot; [label=&quot;step12_mdrun_npt&quot;];\n  &quot;step1_pdb2gmx&quot; [label=&quot;step1_pdb2gmx&quot;];\n  &quot;step2_editconf&quot; [label=&quot;step2_editconf&quot;];\n  &quot;step13_grompp_md&quot; -&gt; &quot;step14_mdrun_md&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step14_mdrun_md_config&quot; -&gt; &quot;step14_mdrun_md&quot; [label=&quot;config&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step10_mdrun_nvt&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step10_mdrun_nvt&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;input_cpt_path&quot;];\n  &quot;step11_grompp_npt_config&quot; -&gt; &quot;step11_grompp_npt&quot; [label=&quot;config&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step6_grompp_min_config&quot; -&gt; &quot;step6_grompp_min&quot; [label=&quot;config&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step5_genion&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step5_genion_config&quot; -&gt; &quot;step5_genion&quot; [label=&quot;config&quot;];\n  &quot;step4_grompp_genion&quot; -&gt; &quot;step5_genion&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step14_mdrun_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step13_grompp_md&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_files&quot;];\n  &quot;step1_pdb_file&quot; -&gt; &quot;step15_gather_outputs&quot; [label=&quot;external_project_file&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step13_grompp_md_config&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;config&quot;];\n  &quot;step12_mdrun_npt&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step12_mdrun_npt&quot; -&gt; &quot;step13_grompp_md&quot; [label=&quot;input_cpt_path&quot;];\n  &quot;step1_pdb2gmx&quot; -&gt; &quot;step3_solvate&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step2_editconf&quot; -&gt; &quot;step3_solvate&quot; [label=&quot;input_solute_gro_path&quot;];\n  &quot;step9_grompp_nvt&quot; -&gt; &quot;step10_mdrun_nvt&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step8_make_ndx_config&quot; -&gt; &quot;step8_make_ndx&quot; [label=&quot;config&quot;];\n  &quot;step7_mdrun_min&quot; -&gt; &quot;step8_make_ndx&quot; [label=&quot;input_structure_path&quot;];\n  &quot;step6_grompp_min&quot; -&gt; &quot;step7_mdrun_min&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step7_mdrun_min&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step9_grompp_nvt_config&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;config&quot;];\n  &quot;step8_make_ndx&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_ndx_path&quot;];\n  &quot;step5_genion&quot; -&gt; &quot;step9_grompp_nvt&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;input_top_zip_path&quot;];\n  &quot;step3_solvate&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step4_grompp_genion_config&quot; -&gt; &quot;step4_grompp_genion&quot; [label=&quot;config&quot;];\n  &quot;step11_grompp_npt&quot; -&gt; &quot;step12_mdrun_npt&quot; [label=&quot;input_tpr_path&quot;];\n  &quot;step1_pdb_file&quot; -&gt; &quot;step1_pdb2gmx&quot; [label=&quot;input_pdb_path&quot;];\n  &quot;step1_pdb2gmx&quot; -&gt; &quot;step2_editconf&quot; [label=&quot;input_gro_path&quot;];\n  &quot;step15_gather_outputs&quot; -&gt; &quot;dir&quot;;\n}\n</textarea>\n                <a id=\"download-link-dot\" href=\"\" download=\"workflow.dot\"></a>\n                <button id=\"download-dot\" class=\"btn btn-primary\" type=\"button\">Download dot File</button>\n                <a href=\"/graph/xdot/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" download=\"graph.dot\" class=\"btn btn-primary\" type=\"button\">Download xdot File</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal for viewing the graph in full screen -->\n<div class=\"modal fade\" id=\"fullScreenGraphModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"fullScreenGraphLabel\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                <h4 class=\"modal-title\" id=\"fullScreenGraphLabel\">Workflow Graph</h4>\n            </div>\n            <div class=\"modal-body\">\n                <span id=\"fullscreen-close\" data-dismiss=\"modal\" class=\"close glyphicon glyphicon-resize-small graphControl\" data-tooltip=\"true\" title=\"Close\"></span>\n                <object id=\"graphFullscreen\" type=\"image/svg+xml\" data=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">\n                    <img alt=\"fullscreen\" src=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" />\n                </object>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container\" role=\"main\" id=\"main\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Workflow: <span>Example of setting up a simulation system</span></h2>\n        </div>\n        <div class=\"col-md-6\">\n            <a href=\"https://github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" rel=\"noopener\" target=\"_blank\" style=\"text-decoration:none;\">\n                <img id=\"gitLogo\" src=\"/img/GitHub-Mark-32px.png\" width=\"24\" height=\"24\" />\n                \n            </a>\n        <i>Fetched <span>2021-01-29 13:47:55 GMT</span></i>\n          <span class=\"hidden-print hidden-sm hidden-xs\">\n                \n            <span id=\"generating\" class=\"hide\"> - Generating download link <img alt=\"loading\" src=\"/img/loading.svg\" width=\"20\" height=\"20\" /></span>\n            <span id=\"generated\">\n                    - <a id=\"download\" href=\"/robundle/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" download=\"bundle.zip\">Download as Research Object Bundle</a>\n                    <a href=\"http://www.researchobject.org/\" rel=\"noopener\" class=\"help\" target=\"_blank\">[?]</a>\n                </span>\n          </span>\n        </div>\n        <div class=\"col-md-6 text-right hidden-xs\">\n            <img class=\"verification_icon\" src=\"/img/tick.svg\" width=\"20\" height=\"22\" /> Verified with cwltool version <samp>3.0.20201203173111</samp>\n        </div>\n\n        <div class=\"col-md-12\" style=\"margin-top:5px;\">\n            <p id=\"workflow-doc\">CWL version of the md_list.cwl workflow for HPC.\n</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-9 col-md-8 col-sm-6\">\n                <div class=\"permalink hidden-sm hidden-xs hidden-print\">\n                        Permalink:\n                          <a href=\"https://w3id.org/cwl/view/\" rel=\"noopener\" class=\"help\" target=\"_blank\">[?]</a>\n                          <a id=\"permalink\" href=\"https://w3id.org/cwl/view/git/95111f381617c8e63794eca42d06f10ed2605f4f/md_list.cwl\">https://w3id.org/cwl/view/git/95111f381617c8e63794eca42d06f10ed2605f4f/md_list.cwl</a>\n                </div>\n\n        </div>\n        <div class=\"col-lg-3 col-md-4 col-sm-6 hidden-xs\">\n            <div class=\"graph-menu hidden-print\" id=\"pull-right\">\n                <button id=\"view-dot\" class=\"hidden-print hidden-sm-down btn btn-primary\" type=\"button\" data-toggle=\"modal\" data-target=\"#dotGraph\">View DOT</button>\n                <div class=\"btn-group hidden-print\">\n                    <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Download Image <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                        <li><a id=\"download-graph\" download=\"graph.svg\" href=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">As .svg</a></li>\n                        <li><a id=\"download-graph\" download=\"graph.png\" href=\"/graph/png/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\">As .png</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div id=\"visualisation\" class=\"jumbotron hidden-print\">\n                <span id=\"fullscreen-open\" data-toggle=\"modal\" data-target=\"#fullScreenGraphModal\" data-tooltip=\"true\" class=\"glyphicon glyphicon-resize-full graphControl\" title=\"Expand\"></span>\n                <img id=\"selectChildren\" class=\"graphControl\" src=\"/img/children-logo.svg\" alt=\"children\" data-tooltip=\"true\" title=\"Select All Children\" />\n                <img id=\"selectParents\" class=\"graphControl\" src=\"/img/parents-logo.svg\" alt=\"parents\" data-tooltip=\"true\" title=\"Select All Parents\" />\n                <div id=\"graph\" data-svgurl=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\"></div>\n            </div>\n            <img alt=\"Workflow as SVG\" src=\"/graph/svg/github.com/douglowe/biobb_hpc_cwl_md_list/blob/main/md_list.cwl\" class=\"visible-print-block\" />\n            <ul class=\"legend\">\n                <li><span class=\"selectednode hidden-print\"></span> Selected</li>\n                <li class=\"hidden-xs\">|</li>\n                <li><span class=\"defaults\"></span> Default Values</li>\n                <li><span class=\"nestedworkflows\"></span> Nested Workflows</li>\n                <li><span class=\"tools\"></span> Tools</li>\n                <li><span class=\"inputoutputs\"></span> Inputs/Outputs</li>\n            </ul>\n            \n            <div class=\"alert alert-success\" role=\"alert\">\n            \t<span class=\"hidden-xs\">This workflow is Open Source and may be reused according to the terms of:</span>\n            \t<a href=\"https://raw.githubusercontent.com/douglowe/biobb_hpc_cwl_md_list/main/LICENSE\" class=\"alert-link\">\n        \t\t\t\t\t\t\n        \t\t\t\t\t\t\t<!-- TODO: Move license 'registry' to controller? -->\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n        \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\thttps://raw.githubusercontent.com/douglowe/biobb_hpc_cwl_md_list/main/LICENSE\n        \t\t\t\t\t\t\n\t\t\t\t</a>\n\t\t\t\t<div class=\"hidden-xs\"><small>Note that the <em>tools</em> invoked by the workflow may have separate licenses.</small></div>\n\t\t\t</div>\n\t\t\t\n            <h2>Inputs</h2>\n            \n            <div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped table-hover input\">\n                        <thead>\n                            <th>ID</th>\n                            <th>Type</th>\n                            <th>Title</th>\n                            <th>Doc</th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"id\">step5_genion_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step11_grompp_npt_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step13_grompp_md_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step14_mdrun_md_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step2_editconf_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step4_grompp_genion_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step1_pdb_file</td>\n                                <td class=\"type\">\n                                    \n                                    <span>File</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step8_make_ndx_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step6_grompp_min_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"id\">step9_grompp_nvt_config</td>\n                                <td class=\"type\">\n                                    \n                                    <span>String</span>\n                                </td>\n                                <td class=\"title\"></td>\n                                <td class=\"doc\">\n                                    \n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <h2>Steps</h2>\n            \n            <div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped table-hover steps\">\n                        <thead>\n\t                        <th>ID</th>\n\t                        <th>Runs</th>\n\t                        <th>Label</th>\n\t                        <th>Doc</th>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td class=\"id\">step2_editconf</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/editconf.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step5_genion</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/genion.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step13_grompp_md</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step12_mdrun_npt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step10_mdrun_nvt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step15_gather_outputs</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>md_gather.cwl</span>\n                                    (<span>ExpressionTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                <p>This javascript takes two inputs, a list of \nfiles, a project file, and an optional string. \nIt will create a directory named after the \nproject file and optional string, populate\nthat directory with the files in the list, and\nreturn the directory.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step7_mdrun_min</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step8_make_ndx</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/make_ndx.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step1_pdb2gmx</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/pdb2gmx.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\"></td>\n                            <td class=\"doc\">\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step4_grompp_genion</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step6_grompp_min</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)\n                                </div>\n                                \n                            </td>\n                            <td class=\"title\">Wrapper of the GROMACS grompp module</td>\n                            <td class=\"doc\">\n                                <p>The GROMACS preprocessor module needs to be feeded with the input system and\nthe dynamics parameters to create a portable binary run input file TPR. The\ndynamics parameters are specified in the mdp section of the configuration YAML\nfile. The parameter names and defaults are the same as the ones in the\nofficial MDP specification.\n</p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td class=\"id\">step11_grompp_npt</td>\n                            <td class=\"run\">\n                                <div>\n                                    \n                                    <span>biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl</span>\n                                    (<span>CommandLineTool</span>)",
    "p_tag_content": "CWL version of the md_list.cwl workflow for HPC. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/98?version=2 Trying different way of uploading the diagram (using view.commonwl.org/graph/svg, not view.commonwl.org/workflows) Views:1707Downloads:352 Created: 29th Jan 2021 at 16:37 Last updated: 29th Jan 2021 at 16:56 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 532,
    "discussion_links": [],
    "title": "VariantCaller_GATK3.6",
    "license": "Apache-2.0",
    "description": "Rare disease researchers workflow is that they submit their raw data (fastq), run the mapping and variant calling RD-Connect pipeline and obtain unannotated gvcf files to further submit to the RD-Connect GPAP or analyse on their own.\n\nThis demonstrator focuses on the variant calling pipeline. The raw genomic data is processed using the RD-Connect pipeline ([Laurie et al., 2016](https://www.ncbi.nlm.nih.gov/pubmed/27604516)) running on the standards (GA4GH) compliant, interoperable container orchestration platform.\n\nThis demonstrator will be aligned with the current implementation study on [Development of Architecture for Software Containers at ELIXIR and its use by EXCELERATE use-case communities](docs/Appendix%201%20-%20Project%20Plan%202018-biocontainers%2020171117.pdf) \n\nFor this implementation, different steps are required:\n\n1. Adapt the pipeline to CWL and dockerise elements \n2. Align with IS efforts on software containers to package the different components (Nextflow) \n3. Submit trio of Illumina NA12878 Platinum Genome or Exome to the GA4GH platform cloud (by Aspera or ftp server)\n4. Run the RD-Connect pipeline on the container platform\n5. Return corresponding gvcf files\n6. OPTIONAL: annotate and update to RD-Connect playground instance\n\nN.B: The demonstrator might have some manual steps, which will not be in production. \n\n## RD-Connect pipeline\n\nDetailed information about the RD-Connect pipeline can be found in [Laurie et al., 2016](https://www.ncbi.nlm.nih.gov/pubmed/?term=27604516)\n\n![alt text](https://raw.githubusercontent.com/inab/Wetlab2Variations/eosc-life/docs/RD-Connect_pipeline.jpg)\n\n## The applications\n\n**1\\. Name of the application: Adaptor removal**\nFunction: remove sequencing adaptors   \nContainer (readiness status, location, version): [cutadapt (v.1.18)](https://hub.docker.com/r/cnag/cutadapt)  \nRequired resources in cores and RAM: current container size 169MB  \nInput data (amount, format, directory..): raw fastq  \nOutput data: paired fastq without adaptors  \n\n**2\\. Name of the application: Mapping and bam sorting**  \nFunction: align data to reference genome  \nContainer : [bwa-mem (v.0.7.17)](https://hub.docker.com/r/cnag/bwa) / [Sambamba (v. 0.6.8 )](https://hub.docker.com/r/cnag/sambamba)(or samtools)  \nResources :current container size 111MB / 32MB  \nInput data: paired fastq without adaptors  \nOutput data: sorted bam  \n\n**3\\. Name of the application: MarkDuplicates**  \nFunction: Mark (and remove) duplicates  \nContainer: [Picard (v.2.18.25)](https://hub.docker.com/r/cnag/picard)\nResources: current container size 261MB  \nInput data:sorted bam  \nOutput data: Sorted bam with marked (or removed) duplicates  \n\n**4\\. Name of the application: Base quality recalibration (BQSR)**  \nFunction: Base quality recalibration  \nContainer: [GATK (v.3.6-0)](https://hub.docker.com/r/cnag/gatk)\nResources: current container size 270MB  \nInput data: Sorted bam with marked (or removed) duplicates  \nOutput data: Sorted bam with marked duplicates & base quality recalculated  \n\n**5\\. Name of the application: Variant calling**  \nFunction: variant calling  \nContainer: [GATK (v.3.6-0)](https://hub.docker.com/r/cnag/gatk)\nResources: current container size 270MB  \nInput data:Sorted bam with marked duplicates & base quality recalculated  \nOutput data: unannotated gvcf per sample  \n\n**6\\. (OPTIONAL)Name of the application: Quality of the fastq**  \nFunction: report on the sequencing quality  \nContainer: [fastqc 0.11.8](https://hub.docker.com/r/cnag/fastqc)\nResources: current container size 173MB  \nInput data: raw fastq  \nOutput data: QC report \n\n## Licensing\n\nGATK declares that archived packages are made available for free to academic researchers under a limited license for non-commercial use. If you need to use one of these packages for commercial use. https://software.broadinstitute.org/gatk/download/archive",
    "latest_version": 1,
    "tags": "['CWL', 'variant_calling']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/107?version=1', 'commit': 'e0f868f36095db8590147a97a88572ede5457f9d', 'ref': 'refs/heads/master', 'tree': '/workflows/107/git/1/tree', 'doi': '10.48546/workflowhub.workflow.107.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-02-18T15:01:31.000Z",
    "updated_at": "2023-04-21T12:35:06.000Z",
    "doi": "10.48546/workflowhub.workflow.107.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/110', 'family_name': 'Fernández', 'given_name': 'José Mª', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), EJP-RD', 'orcid': 'https://orcid.org/0000-0002-4806-5140'}, {'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_files', 'name': None, 'description': 'List of paired-end input FASTQ files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_genome', 'name': None, 'description': 'Compress FASTA files with the reference genome chromosomes', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'known_indels_file', 'name': None, 'description': 'VCF file correlated to reference genome assembly with known indels', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'known_sites_file', 'name': None, 'description': 'VCF file correlated to reference genome assembly with know sites (for instance dbSNP)', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'chromosome', 'name': None, 'description': 'Label of the chromosome to be used for the analysis. By default all the chromosomes are used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'readgroup_str', 'name': None, 'description': 'Parsing header which should correlate to FASTQ files', 'type': [{'type': 'string'}], 'default_value': '@RG\\\\tID:Seq01p\\\\tSM:Seq01\\\\tPL:ILLUMINA\\\\tPI:330'}, {'id': 'sample_name', 'name': None, 'description': 'Sample name', 'type': [{'type': 'string'}], 'default_value': 'ABC3'}, {'id': 'gqb', 'name': None, 'description': 'Exclusive upper bounds for reference confidence GQ bands (must be in [1, 100] and specified in increasing order)', 'type': [{'type': 'int[]'}], 'default_value': [20, 25, 30, 35, 40, 45, 50, 70, 90, 99]}], 'outputs': [{'id': 'metrics', 'name': None, 'description': 'Several metrics about the result', 'type': [{'type': 'File'}], 'source_ids': ['picard_markduplicates/output_metrics']}, {'id': 'gvcf', 'name': None, 'description': 'unannotated gVCF output file from the mapping and variant calling pipeline', 'type': [{'type': 'File'}], 'source_ids': ['gatk_haplotype_caller/gvcf']}], 'steps': [{'id': 'unzipped_known_sites', 'name': None, 'description': None, 'sink_ids': ['unzipped_known_sites/output']}, {'id': 'unzipped_known_indels', 'name': None, 'description': None, 'sink_ids': ['unzipped_known_indels/output']}, {'id': 'gunzip', 'name': None, 'description': None, 'sink_ids': ['gunzip/unzipped_fasta']}, {'id': 'picard_dictionary', 'name': None, 'description': None, 'sink_ids': ['picard_dictionary/dict']}, {'id': 'cutadapt2', 'name': None, 'description': None, 'sink_ids': ['cutadapt2/trimmed_fastq']}, {'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'samtools_index', 'name': None, 'description': None, 'sink_ids': ['samtools_index/index_fai']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/aligned_sam']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/sorted_bam']}, {'id': 'picard_markduplicates', 'name': 'picard-MD', 'description': None, 'sink_ids': ['picard_markduplicates/md_bam', 'picard_markduplicates/output_metrics']}, {'id': 'gatk3-rtc', 'name': 'gatk3-rtc', 'description': None, 'sink_ids': ['gatk3-rtc/rtc_intervals_file']}, {'id': 'gatk-ir', 'name': 'gatk-ir', 'description': None, 'sink_ids': ['gatk-ir/realigned_bam']}, {'id': 'gatk-base_recalibration', 'name': 'gatk-base_recalibration', 'description': None, 'sink_ids': ['gatk-base_recalibration/br_model']}, {'id': 'gatk-base_recalibration_print_reads', 'name': 'gatk-base_recalibration_print_reads', 'description': None, 'sink_ids': ['gatk-base_recalibration_print_reads/bqsr_bam']}, {'id': 'gatk_haplotype_caller', 'name': 'gatk-haplotype_caller', 'description': None, 'sink_ids': ['gatk_haplotype_caller/gvcf']}], 'links': [{'id': 'input', 'source_id': 'known_sites_file', 'sink_id': 'unzipped_known_sites', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'known_indels_file', 'sink_id': 'unzipped_known_indels', 'name': None, 'default_value': None}, {'id': 'reference_file', 'source_id': 'reference_genome', 'sink_id': 'gunzip', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'picard_dictionary', 'name': None, 'default_value': None}, {'id': 'raw_sequences', 'source_id': 'fastq_files', 'sink_id': 'cutadapt2', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gunzip/unzipped_fasta', 'sink_id': 'samtools_index', 'name': None, 'default_value': None}, {'id': 'sample_name', 'source_id': 'sample_name', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'trimmed_fastq', 'source_id': 'cutadapt2/trimmed_fastq', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'readgroup_str', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'bwa_mem/aligned_sam', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'samtools_sort/sorted_bam', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/md_bam', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'known_indels', 'source_id': 'unzipped_known_indels/output', 'sink_id': 'gatk3-rtc', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'picard_markduplicates/md_bam', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'rtc_intervals', 'source_id': 'gatk3-rtc/rtc_intervals_file', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-ir', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-ir/realigned_bam', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'unzipped_known_sites_file', 'source_id': 'unzipped_known_sites/output', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'known_indels_file', 'source_id': 'unzipped_known_indels/output', 'sink_id': 'gatk-base_recalibration', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-ir/realigned_bam', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'br_model', 'source_id': 'gatk-base_recalibration/br_model', 'sink_id': 'gatk-base_recalibration_print_reads', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'samtools_index/index_fai', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'dict', 'source_id': 'picard_dictionary/dict', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'gatk-base_recalibration_print_reads/bqsr_bam', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'chromosome', 'source_id': 'chromosome', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}, {'id': 'gqb', 'source_id': 'gqb', 'sink_id': 'gatk_haplotype_caller', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 107,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nlabel: RD_Connect\n\nrequirements:\n  - class: MultipleInputFeatureRequirement\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/version/latest/schemaorg-current-https.rdf\n - http://edamontology.org/EDAM_1.18.owl\n\ninputs:\n  fastq_files: {type: 'File[]', doc: \"List of paired-end input FASTQ files\"}\n  reference_genome: {type: 'File[]', doc: \"Compress FASTA files with the reference genome chromosomes\"}\n  known_indels_file: {type: File, doc: \"VCF file correlated to reference genome assembly with known indels\"}\n  known_sites_file: {type: File, doc: \"VCF file correlated to reference genome assembly with know sites (for instance dbSNP)\"}\n  chromosome: {type: string, doc: \"Label of the chromosome to be used for the analysis. By default all the chromosomes are used\"}\n  readgroup_str: {type: string, default: '@RG\\tID:Seq01p\\tSM:Seq01\\tPL:ILLUMINA\\tPI:330', doc: \"Parsing header which should correlate to FASTQ files\"}\n  sample_name: {type: string, default: 'ABC3', doc: \"Sample name\"}\n  gqb: {type: 'int[]', default: [20, 25, 30, 35, 40, 45, 50, 70, 90, 99], doc: \"Exclusive upper bounds for reference confidence GQ bands (must be in [1, 100] and specified in increasing order)\"}\n\noutputs: \n  metrics: {type: File, outputSource: picard_markduplicates/output_metrics, doc: \"Several metrics about the result\"}\n  gvcf: {type: File, outputSource: gatk_haplotype_caller/gvcf, doc: \"unannotated gVCF output file from the mapping and variant calling pipeline\"}\n\nsteps:\n  - id: unzipped_known_sites\n    in:\n      input: known_sites_file\n    out: [output]\n    run: ../tools/gunzip_known_sites.cwl\n\n  - id: unzipped_known_indels\n    in:\n      input: known_indels_file\n    out: [output]\n    run: ../tools/gunzip_known_sites.cwl\n\n  - id: gunzip\n    in:\n      - id: reference_file\n        source:\n          - reference_genome\n    out:\n      - id: unzipped_fasta\n    run: ../tools/gunzip.cwl\n\n  - id: picard_dictionary\n    # from samtools reference genome\n    in:\n      - id: reference_genome\n        source:\n          - gunzip/unzipped_fasta\n    # produced .dict file\n    out:\n      - id: dict\n    run: ../tools/picard_dictionary.cwl\n\n  - id: cutadapt2\n    in:\n      - id: raw_sequences\n        source:\n          - fastq_files\n    out: \n      - id: trimmed_fastq\n    run: ../tools/cutadapt-v.1.18.cwl\n\n  - id: bwa_index\n    in:\n      - id: reference_genome\n        source:\n          - gunzip/unzipped_fasta\n    out:\n      - id: output\n    run: ../tools/bwa-index.cwl\n\n  - id: samtools_index\n    in:\n      - id: input\n        source:\n          - gunzip/unzipped_fasta\n    out:\n      - id: index_fai\n    run: ../tools/samtools_index.cwl\n\n  - id: bwa_mem\n    in:\n\n      - id: sample_name\n        source:\n          - sample_name\n      - id: trimmed_fastq\n        source:\n         - cutadapt2/trimmed_fastq\n      - id: read_group\n        source:\n          - readgroup_str\n      - id: reference_genome\n        source:\n          - bwa_index/output\n    out:\n      - id: aligned_sam\n    run: ../tools/bwa-mem.cwl\n\n  - id: samtools_sort\n    in:\n      - id: input\n        source:\n          - bwa_mem/aligned_sam\n    out:\n      - id: sorted_bam\n    run: ../tools/samtools_sort_bam.cwl\n   \n  - id: picard_markduplicates\n    in:\n      - id: input\n        source: \n          - samtools_sort/sorted_bam\n    out:\n      - id: md_bam\n      - id: output_metrics\n    run: ../tools/picard_markduplicates.cwl\n    label: picard-MD\n\n  - id: gatk3-rtc\n    in:\n      - id: input\n        source: \n          - picard_markduplicates/md_bam\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: known_indels\n        source:\n          - unzipped_known_indels/output\n    out:\n      - id: rtc_intervals_file\n    run: ../tools/gatk3-rtc.cwl\n    label: gatk3-rtc\n\n  - id: gatk-ir\n    in:\n      - id: input\n        source: \n          - picard_markduplicates/md_bam\n      - id: rtc_intervals\n        source: \n          - gatk3-rtc/rtc_intervals_file\n      - id: reference_genome\n        source: \n           - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n    out:\n      - id: realigned_bam\n    run: ../tools/gatk-ir.cwl\n    label: gatk-ir\n\n  - id: gatk-base_recalibration\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-ir/realigned_bam\n      - id: unzipped_known_sites_file\n        source:\n          - unzipped_known_sites/output\n      - id: known_indels_file\n        source:\n          - unzipped_known_indels/output\n    out:\n      - id: br_model \n    run: ../tools/gatk-base_recalibration.cwl\n    label: gatk-base_recalibration\n\n  - id: gatk-base_recalibration_print_reads\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-ir/realigned_bam\n      - id: br_model\n        source:\n          - gatk-base_recalibration/br_model\n    out:\n      - id: bqsr_bam\n    run: ../tools/gatk-base_recalibration_print_reads.cwl\n    label: gatk-base_recalibration_print_reads\n\n  - id: gatk_haplotype_caller\n    in:\n      - id: reference_genome\n        source: \n          - samtools_index/index_fai\n      - id: dict\n        source:\n          - picard_dictionary/dict\n      - id: input\n        source:\n          - gatk-base_recalibration_print_reads/bqsr_bam\n      - id: chromosome\n        source: \n          - chromosome\n      - id: gqb\n        source:\n          - gqb\n    out:\n      - id: gvcf\n    run: ../tools/gatk-haplotype_caller.cwl\n    label: gatk-haplotype_caller\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-7893-2404\n    s:email: mailto:raul.tonda@cnag.crg.cat\n    s:name: Raul Tonda\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-0807-2570\n    s:email: mailto:leslie.matalonga@cnag.crg.eu\n    s:name: Leslie Matalonga\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-1687-2754\n    s:email: mailto:varma@ebi.ac.uk\n    s:name: Susheel Varma\n\ns:contributor:\n  - class: s:Person\n    s:identifier: http://orcid.org/0000-0002-7681-6415\n    s:email: mailto:jarno.laitinen@csc.fi\n    s:name: Jarno Laitinen\n  - class: s:Person\n    s:email: mailto:aniewielska@ebi.ac.uk\n    s:name: Ania Niewielska\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-3468-0652\n    s:email: mailto:alexander.kanitz@unibas.ch\n    s:name: Alex Kanitz\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-4806-5140\n    s:email: mailto:jose.m.fernandez@bsc.es\n    s:name: José M. Fernández\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:citation: https://dx.doi.org/10.1002/humu.23114\ns:codeRepository: https://github.com/inab/Wetlab2Variations/\ns:dateCreated: \"2019-03-06\"\ns:license: https://spdx.org/licenses/Apache-2.0",
    "p_tag_content": "Rare disease researchers workflow is that they submit their raw data (fastq), run the mapping and variant calling RD-Connect pipeline and obtain unannotated gvcf files to further submit to the RD-Connect GPAP or analyse on their own. This demonstrator focuses on the variant calling pipeline. The raw genomic data is processed using the RD-Connect pipeline (Laurie et al., 2016) running on the standards (GA4GH) compliant, interoperable container orchestration platform. This demonstrator will be aligned with the current implementation study onDevelopment of Architecture for Software Containers at ELIXIR and its use by EXCELERATE use-case communities For this implementation, different steps are required: N.B: The demonstrator might have some manual steps, which will not be in production. Detailed information about the RD-Connect pipeline can be found inLaurie et al., 2016  1. Name of the application: Adaptor removalFunction: remove sequencing adaptorsContainer (readiness status, location, version):cutadapt (v.1.18)Required resources in cores and RAM: current container size 169MBInput data (amount, format, directory..): raw fastqOutput data: paired fastq without adaptors 2. Name of the application: Mapping and bam sortingFunction: align data to reference genomeContainer :bwa-mem (v.0.7.17)/Sambamba (v. 0.6.8 )(or samtools)Resources :current container size 111MB / 32MBInput data: paired fastq without adaptorsOutput data: sorted bam 3. Name of the application: MarkDuplicatesFunction: Mark (and remove) duplicatesContainer:Picard (v.2.18.25)Resources: current container size 261MBInput data:sorted bamOutput data: Sorted bam with marked (or removed) duplicates 4. Name of the application: Base quality recalibration (BQSR)Function: Base quality recalibrationContainer:GATK (v.3.6-0)Resources: current container size 270MBInput data: Sorted bam with marked (or removed) duplicatesOutput data: Sorted bam with marked duplicates & base quality recalculated 5. Name of the application: Variant callingFunction: variant callingContainer:GATK (v.3.6-0)Resources: current container size 270MBInput data:Sorted bam with marked duplicates & base quality recalculatedOutput data: unannotated gvcf per sample 6. (OPTIONAL)Name of the application: Quality of the fastqFunction: report on the sequencing qualityContainer:fastqc 0.11.8Resources: current container size 173MBInput data: raw fastqOutput data: QC report GATK declares that archived packages are made available for free to academic researchers under a limited license for non-commercial use. If you need to use one of these packages for commercial use.https://software.broadinstitute.org/gatk/download/archive Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/107?version=1 DOI:10.48546/workflowhub.workflow.107.1 Added/updated 1 files Views:2827Downloads:346 Created: 18th Feb 2021 at 15:01 Last updated: 8th Mar 2021 at 21:35 None Teams:EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics,EuroScienceGateway Organizations:Barcelona Supercomputing Center (BSC-CNS),EJP-RD Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) EOSC-Life brings together the 13 Life Science ‘ESFRI’ research infrastructures (LS RIs) to create an open, digital and collaborative space for biological and medical research. The project will publish ‘FAIR’ data and a catalogue of services provided by participating RIs for the management, storage and reuse of data in the European Open Science Cloud (EOSC). Teams:EOSC-Life - Demonstrator 7: Rare Diseases,EOSC-Life WP3 Web page:https://www.eosc-life.eu/ An integrative analysis pipeline of genomic and transcriptomic human data for disentangling the genetic origin of a rare-disease in the context of the European Open Science Cloud. Space:EOSC-Life Public web page:https://www.eosc-life.eu/services/demonstrators/ Organisms:Not specified"
  },
  {
    "": 541,
    "discussion_links": [],
    "title": "COSIFER",
    "license": "Apache-2.0",
    "description": "# COnSensus Interaction Network InFErence Service\nInference framework for reconstructing networks using a consensus approach between multiple methods and data sources.\n\n![alt text](https://github.com/PhosphorylatedRabbits/cosifer/raw/master/docs/_static/logo.png)\n\n## Reference\n[Manica, Matteo, Charlotte, Bunne, Roland, Mathis, Joris, Cadow, Mehmet Eren, Ahsen, Gustavo A, Stolovitzky, and María Rodríguez, Martínez. \"COSIFER: a python package for the consensus inference of molecular interaction networks\".Bioinformatics (2020)](https://doi.org/10.1093/bioinformatics/btaa942).",
    "latest_version": 1,
    "tags": "['cancer', 'cosifer', 'pediatric', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/118?version=1', 'commit': '1632c07a099437449eedbf009c9f3a56b7c9d7e1', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/118/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-05-05T15:50:31.000Z",
    "updated_at": "2023-04-21T11:04:20.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}, {'profile': '/people/110', 'family_name': 'Fernández', 'given_name': 'José Mª', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), EJP-RD', 'orcid': 'https://orcid.org/0000-0002-4806-5140'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'data_matrix', 'name': None, 'description': 'Gene expression data matrix', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'gmt_filepath', 'name': None, 'description': 'Optional GMT file to perform inference on multiple gene sets', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'index_col', 'name': None, 'description': 'Column index in the data. Defaults to None, a.k.a., no index', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'outdir', 'name': None, 'description': 'Path to the output directory', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'separator', 'name': None, 'description': 'Separator for the data. Defaults to .', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'samples_on_rows', 'name': None, 'description': 'Flag that indicates that data contain the samples on rows. Defaults to False.', 'type': [{'type': 'boolean?'}], 'default_value': None}], 'outputs': [{'id': 'resdir', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['cosifer/resdir']}], 'steps': [{'id': 'cosifer', 'name': None, 'description': None, 'sink_ids': ['cosifer/resdir']}], 'links': [{'id': 'data_matrix', 'source_id': 'data_matrix', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'separator', 'source_id': 'separator', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'index_col', 'source_id': 'index_col', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'gmt_filepath', 'source_id': 'gmt_filepath', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'outdir', 'source_id': 'outdir', 'sink_id': 'cosifer', 'name': None, 'default_value': None}, {'id': 'samples_on_rows', 'source_id': 'samples_on_rows', 'sink_id': 'cosifer', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 118,
    "text_field": "['cosifer-workflow.cwl']",
    "raw_text_content": "class: Workflow\ncwlVersion: v1.0\nid: cosifer_workflow\nlabel: cosifer-workflow\n\ninputs:\n  data_matrix: {type: File, doc: \"Gene expression data matrix\"}\n  gmt_filepath: {type: \"File?\", doc: \"Optional GMT file to perform inference on multiple gene sets\"}\n  index_col: {type: \"int?\", doc: \"Column index in the data. Defaults to None, a.k.a., no index\"}\n  outdir: {type: string, doc: \"Path to the output directory\"}\n  separator: {type: \"string?\", doc: \"Separator for the data. Defaults to .\"}\n  samples_on_rows: {type: \"boolean?\", doc: \"Flag that indicates that data contain the samples on rows. Defaults to False.\"}\n\noutputs:\n  resdir: {type: Directory, outputSource: cosifer/resdir}\n\nsteps:\n  cosifer:\n    run: ./cosifer.cwl\n    in:\n      data_matrix: data_matrix\n      separator: separator\n      index_col: index_col\n      gmt_filepath: gmt_filepath\n      outdir: outdir\n      samples_on_rows: samples_on_rows\n    out: [resdir]",
    "p_tag_content": "Inference framework for reconstructing networks using a consensus approach between multiple methods and data sources.  Manica, Matteo, Charlotte, Bunne, Roland, Mathis, Joris, Cadow, Mehmet Eren, Ahsen, Gustavo A, Stolovitzky, and María Rodríguez, Martínez. \"COSIFER: a python package for the consensus inference of molecular interaction networks\".Bioinformatics (2020). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/118?version=1 Views:4306Downloads:230 Created: 5th May 2021 at 16:50 Last updated: 21st Apr 2023 at 11:50 None Teams:EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics,EuroScienceGateway Organizations:Barcelona Supercomputing Center (BSC-CNS),EJP-RD Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 544,
    "discussion_links": "[{'id': '104', 'label': 'Original Python Workflows', 'url': 'https://github.com/bioexcel/biobb_hpc_workflows'}]",
    "title": "Molecular Dynamics Simulation",
    "license": "Apache-2.0",
    "description": "CWL version of the md_list.py workflow for HPC. This performs a system setup and runs a molecular dynamics simulation on the structure passed to this workflow. This workflow uses the md\\_gather.cwl sub-workflow to gather the outputs together to return these.\nTo work with more than one structure this workflow can be called from either the md\\_launch.cwl workflow, or the md\\_launch\\_mutate.cwl workflow. These use scatter for parallelising the workflow. md\\_launch.cwl operates on a list of individual input molecule files. md\\_launch\\_mutate.cwl operates on a single input molecule file, and a list of mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will indicate that the molecule should be simulated without any mutation being applied.",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/121?version=1', 'commit': 'afa7458cd45f38cf30831f882c4babdc4884ecec', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/121/git/1/tree', 'doi': '10.48546/workflowhub.workflow.121.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-05-20T14:41:19.000Z",
    "updated_at": "2023-01-16T13:49:52.000Z",
    "doi": "10.48546/workflowhub.workflow.121.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_pdb_file', 'name': 'Input file', 'description': 'Molecule to process (PDB format)', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_editconf_config', 'name': 'Editconf configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_grompp_genion_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_genion_config', 'name': 'Genion configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_grompp_min_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_make_ndx_config', 'name': 'GROMACS make_ndx configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_grompp_nvt_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_grompp_npt_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_grompp_md_config', 'name': 'GROMACS grompp configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_mdrun_md_config', 'name': 'GROMACS mdrun configuration dictionary', 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'dir', 'name': 'whole workflow output', 'description': 'outputs from the whole workflow, containing these optional files:\\nstep14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\\nstep14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\\nstep14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\\n                                   simulation from the last step of the setup process.\\nstep13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\\n                                   of the simulation, the molecular topology and all the simulation parameters.\\nstep5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\\n                                   readable format.\\n', 'type': [{'type': 'Directory'}], 'source_ids': ['step15_gather_outputs/project_work_dir']}], 'steps': [{'id': 'step1_pdb2gmx', 'name': 'Create Protein System Topology', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.pdb2gmx', 'sink_ids': ['step1_pdb2gmx/output_gro_file', 'step1_pdb2gmx/output_top_zip_file']}, {'id': 'step2_editconf', 'name': 'Create Solvent Box', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.editconf', 'sink_ids': ['step2_editconf/output_gro_file']}, {'id': 'step3_solvate', 'name': 'Fill the Box with Water Molecules', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.solvate', 'sink_ids': ['step3_solvate/output_gro_file', 'step3_solvate/output_top_zip_file']}, {'id': 'step4_grompp_genion', 'name': 'Add Ions - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step4_grompp_genion/output_tpr_file']}, {'id': 'step5_genion', 'name': 'Add Ions - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.genion', 'sink_ids': ['step5_genion/output_gro_file', 'step5_genion/output_top_zip_file']}, {'id': 'step6_grompp_min', 'name': 'Energetically Minimize the System - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step6_grompp_min/output_tpr_file']}, {'id': 'step7_mdrun_min', 'name': 'Energetically Minimize the System - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step7_mdrun_min/output_trr_file', 'step7_mdrun_min/output_gro_file', 'step7_mdrun_min/output_edr_file', 'step7_mdrun_min/output_log_file']}, {'id': 'step8_make_ndx', 'name': 'Generate GROMACS index file', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.make_ndx', 'sink_ids': ['step8_make_ndx/output_ndx_file']}, {'id': 'step9_grompp_nvt', 'name': 'Equilibrate the System (NVT) - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step9_grompp_nvt/output_tpr_file']}, {'id': 'step10_mdrun_nvt', 'name': 'Equilibrate the System (NVT) - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step10_mdrun_nvt/output_trr_file', 'step10_mdrun_nvt/output_gro_file', 'step10_mdrun_nvt/output_edr_file', 'step10_mdrun_nvt/output_log_file', 'step10_mdrun_nvt/output_cpt_file']}, {'id': 'step11_grompp_npt', 'name': 'Equilibrate the System (NPT) - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step11_grompp_npt/output_tpr_file']}, {'id': 'step12_mdrun_npt', 'name': 'Equilibrate the System (NPT) - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step12_mdrun_npt/output_trr_file', 'step12_mdrun_npt/output_gro_file', 'step12_mdrun_npt/output_edr_file', 'step12_mdrun_npt/output_log_file', 'step12_mdrun_npt/output_cpt_file']}, {'id': 'step13_grompp_md', 'name': 'Free Molecular Dynamics Simulation - part 1', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp', 'sink_ids': ['step13_grompp_md/output_tpr_file']}, {'id': 'step14_mdrun_md', 'name': 'Free Molecular Dynamics Simulation - part 2', 'description': 'https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun', 'sink_ids': ['step14_mdrun_md/output_trr_file', 'step14_mdrun_md/output_gro_file', 'step14_mdrun_md/output_edr_file', 'step14_mdrun_md/output_log_file', 'step14_mdrun_md/output_cpt_file']}, {'id': 'step15_gather_outputs', 'name': 'Archiving outputs to be returned to user', 'description': 'This uses the local md_gather.cwl workflow to gather all desired output files. A filter for missing files is applied (pickValue: all_non_null), which requires using a runner which is compliant with v1.2.0, or later, CWL standards.\\n', 'sink_ids': ['step15_gather_outputs/project_work_dir']}], 'links': [{'id': 'input_pdb_path', 'source_id': 'step1_pdb_file', 'sink_id': 'step1_pdb2gmx', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step1_pdb2gmx/output_gro_file', 'sink_id': 'step2_editconf', 'name': None, 'default_value': None}, {'id': 'input_solute_gro_path', 'source_id': 'step2_editconf/output_gro_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step1_pdb2gmx/output_top_zip_file', 'sink_id': 'step3_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_grompp_genion_config', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step3_solvate/output_gro_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step4_grompp_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_genion_config', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step4_grompp_genion/output_tpr_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step3_solvate/output_top_zip_file', 'sink_id': 'step5_genion', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_grompp_min_config', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step5_genion/output_gro_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step6_grompp_min', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step6_grompp_min/output_tpr_file', 'sink_id': 'step7_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_make_ndx_config', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step8_make_ndx', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_grompp_nvt_config', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step7_mdrun_min/output_gro_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step9_grompp_nvt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step9_grompp_nvt/output_tpr_file', 'sink_id': 'step10_mdrun_nvt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_grompp_npt_config', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step10_mdrun_nvt/output_gro_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step10_mdrun_nvt/output_cpt_file', 'sink_id': 'step11_grompp_npt', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step11_grompp_npt/output_tpr_file', 'sink_id': 'step12_mdrun_npt', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step13_grompp_md_config', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_gro_path', 'source_id': 'step12_mdrun_npt/output_gro_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_top_zip_path', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_ndx_path', 'source_id': 'step8_make_ndx/output_ndx_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'input_cpt_path', 'source_id': 'step12_mdrun_npt/output_cpt_file', 'sink_id': 'step13_grompp_md', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step14_mdrun_md_config', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'input_tpr_path', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step14_mdrun_md', 'name': None, 'default_value': None}, {'id': 'external_project_file', 'source_id': 'step1_pdb_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_trr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_gro_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step14_mdrun_md/output_cpt_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step13_grompp_md/output_tpr_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}, {'id': 'external_files', 'source_id': 'step5_genion/output_top_zip_file', 'sink_id': 'step15_gather_outputs', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 121,
    "text_field": "['md_list.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.2\nclass: Workflow\nlabel: Molecular Dynamics Simulation.\ndoc: >\n  CWL version of the md_list.cwl workflow for HPC. This performs a system setup and runs\n  a molecular dynamics simulation on the structure passed to this workflow. This workflow\n  uses the md_gather.cwl sub-workflow to gather the outputs together to return these.\n  \n  To work with more than one structure this workflow can be called from either the\n  md_launch.cwl workflow, or the md_launch_mutate.cwl workflow. These use scatter for\n  parallelising the workflow. md_launch.cwl operates on a list of individual input molecule\n  files. md_launch_mutate.cwl operates on a single input molecule file, and a list of\n  mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will\n  indicate that the molecule should be simulated without any mutation being applied.\n\nrequirements:\n  SubworkflowFeatureRequirement: {}\n  MultipleInputFeatureRequirement: {}\n\n\ninputs:\n  step1_pdb_file:\n    label: Input file\n    doc: Molecule to process (PDB format)\n    type: File\n  step2_editconf_config:\n    label: Editconf configuration dictionary\n    type: string\n  step4_grompp_genion_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step5_genion_config:\n    label: Genion configuration dictionary\n    type: string\n  step6_grompp_min_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step8_make_ndx_config:\n    label: GROMACS make_ndx configuration dictionary\n    type: string\n  step9_grompp_nvt_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step11_grompp_npt_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step13_grompp_md_config:\n    label: GROMACS grompp configuration dictionary\n    type: string\n  step14_mdrun_md_config:\n    label: GROMACS mdrun configuration dictionary\n    type: string\n\noutputs:\n  dir:\n    label: whole workflow output\n    doc: |\n      outputs from the whole workflow, containing these optional files:\n      step14_mdrun_md/output_trr_file:   Raw trajectory from the free simulation step\n      step14_mdrun_md/output_gro_file:   Raw structure from the free simulation step.\n      step14_mdrun_md/output_cpt_file:   GROMACS portable checkpoint file, allowing to restore (continue) the\n                                         simulation from the last step of the setup process.\n      step13_grompp_md/output_tpr_file:  GROMACS portable binary run input file, containing the starting structure\n                                         of the simulation, the molecular topology and all the simulation parameters.\n      step5_genion/output_top_zip_file:  GROMACS topology file, containing the molecular topology in an ASCII\n                                         readable format.\n    type: Directory\n    outputSource: step15_gather_outputs/project_work_dir\n\nsteps:\n  step1_pdb2gmx:\n    label: Create Protein System Topology\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.pdb2gmx\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/pdb2gmx.cwl\n    in:\n      input_pdb_path: step1_pdb_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step2_editconf:\n    label: Create Solvent Box\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.editconf\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/editconf.cwl\n    in:\n      input_gro_path: step1_pdb2gmx/output_gro_file\n    out: [output_gro_file]\n\n  step3_solvate:\n    label: Fill the Box with Water Molecules\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.solvate\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/solvate.cwl\n    in:\n      input_solute_gro_path: step2_editconf/output_gro_file\n      input_top_zip_path: step1_pdb2gmx/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step4_grompp_genion:\n    label: Add Ions - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step4_grompp_genion_config\n      input_gro_path: step3_solvate/output_gro_file\n      input_top_zip_path: step3_solvate/output_top_zip_file\n    out: [output_tpr_file]\n\n  step5_genion:\n    label: Add Ions - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.genion\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/genion.cwl\n    in:\n      config: step5_genion_config\n      input_tpr_path: step4_grompp_genion/output_tpr_file\n      input_top_zip_path: step3_solvate/output_top_zip_file\n    out: [output_gro_file, output_top_zip_file]\n\n  step6_grompp_min:\n    label: Energetically Minimize the System - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step6_grompp_min_config\n      input_gro_path: step5_genion/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n    out: [output_tpr_file]\n\n  step7_mdrun_min:\n    label: Energetically Minimize the System - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step6_grompp_min/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file]\n\n  step8_make_ndx:\n    label: Generate GROMACS index file\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.make_ndx\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/make_ndx.cwl\n    in:\n      config: step8_make_ndx_config\n      input_structure_path: step7_mdrun_min/output_gro_file\n    out: [output_ndx_file]\n\n  step9_grompp_nvt:\n    label: Equilibrate the System (NVT) - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step9_grompp_nvt_config\n      input_gro_path: step7_mdrun_min/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n    out: [output_tpr_file]\n\n  step10_mdrun_nvt:\n    label: Equilibrate the System (NVT) - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step9_grompp_nvt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step11_grompp_npt:\n    label: Equilibrate the System (NPT) - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step11_grompp_npt_config\n      input_gro_path: step10_mdrun_nvt/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n      input_cpt_path:  step10_mdrun_nvt/output_cpt_file\n    out: [output_tpr_file]\n\n  step12_mdrun_npt:\n    label: Equilibrate the System (NPT) - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      input_tpr_path: step11_grompp_npt/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step13_grompp_md:\n    label: Free Molecular Dynamics Simulation - part 1\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.grompp\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/grompp.cwl\n    in:\n      config: step13_grompp_md_config\n      input_gro_path: step12_mdrun_npt/output_gro_file\n      input_top_zip_path: step5_genion/output_top_zip_file\n      input_ndx_path: step8_make_ndx/output_ndx_file\n      input_cpt_path:  step12_mdrun_npt/output_cpt_file\n    out: [output_tpr_file]\n\n  step14_mdrun_md:\n    label: Free Molecular Dynamics Simulation - part 2\n    doc: https://biobb-md.readthedocs.io/en/latest/gromacs.html#module-gromacs.mdrun\n    run: biobb/biobb_adapters/cwl/biobb_md/gromacs/mdrun.cwl\n    in:\n      config: step14_mdrun_md_config\n      input_tpr_path: step13_grompp_md/output_tpr_file\n    out: [output_trr_file, output_gro_file, output_edr_file, output_log_file, output_cpt_file]\n\n  step15_gather_outputs:\n    label: Archiving outputs to be returned to user\n    doc: >\n      This uses the local md_gather.cwl workflow to gather all desired output files.\n      A filter for missing files is applied (pickValue: all_non_null), which requires\n      using a runner which is compliant with v1.2.0, or later, CWL standards.\n    in:\n      external_project_file: step1_pdb_file\n      external_files: \n        source:\n          - step14_mdrun_md/output_trr_file\n          - step14_mdrun_md/output_gro_file\n          - step14_mdrun_md/output_cpt_file\n          - step13_grompp_md/output_tpr_file \n          - step5_genion/output_top_zip_file\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    run: md_gather.cwl\n    out: [project_work_dir]",
    "p_tag_content": "CWL version of the md_list.py workflow for HPC. This performs a system setup and runs a molecular dynamics simulation on the structure passed to this workflow. This workflow uses the md_gather.cwl sub-workflow to gather the outputs together to return these.\nTo work with more than one structure this workflow can be called from either the md_launch.cwl workflow, or the md_launch_mutate.cwl workflow. These use scatter for parallelising the workflow. md_launch.cwl operates on a list of individual input molecule files. md_launch_mutate.cwl operates on a single input molecule file, and a list of mutations to apply to that molecule. Within that list of mutations, a value of 'WT' will indicate that the molecule should be simulated without any mutation being applied. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/121?version=1 DOI:10.48546/workflowhub.workflow.121.1 Views:1998Downloads:179 Created: 20th May 2021 at 15:41 Last updated: 20th May 2021 at 15:48 This item has not yet been tagged. None Teams:BioBB Building Blocks,Air Quality Prediction Organizations:The University of Manchester,university of manchester BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 545,
    "discussion_links": [],
    "title": "SPARQL query (in a file) on graph database",
    "license": "Apache-2.0",
    "description": "A workflow querying on an endpoint of a graph database by a file containing a SPARQL query.",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/122?version=1', 'commit': '9e87c28926021389c61cef227c643db33bca3849', 'ref': 'refs/heads/master', 'tree': '/workflows/122/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/122?version=2', 'commit': '39e31d70180c1d82992f640872bce3a574c07066', 'ref': 'refs/heads/master', 'tree': '/workflows/122/git/2/tree', 'doi': None}]",
    "version": 2,
    "revision_comments": "",
    "created_at": "2021-05-26T10:51:51.000Z",
    "updated_at": "2023-01-16T13:49:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'query_file', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'endpoint', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [], 'steps': [], 'links': []}",
    "tools": [],
    "id": 122,
    "text_field": "['sparql-query.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.0\nclass: CommandLineTool\nbaseCommand: [curl, -d]\ninputs:\n  query_file:\n    type: string\n    inputBinding:\n      position: 1\n      prefix: '@'\n      separate: false\n  endpoint:\n    type: string\n    inputBinding:\n      position: 2\noutputs: []",
    "p_tag_content": "A workflow querying on an endpoint of a graph database by a file containing a SPARQL query. Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/122?version=2 Added/updated 1 files Views:2609Downloads:390 Created: 23rd May 2021 at 17:14 Last updated: 26th May 2021 at 11:51 This item has not yet been tagged. None Teams:EOSC-Life-WP6-Demos Organizations:Leiden University Medical Center Teams:EOSC-Life-WP6-Demos Web page:Not specified Team to create the demos for the EOSC-Life work package 6. Space:EOSC-Life-WP6 Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 573,
    "discussion_links": "[{'id': '426', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Quality assessment, amplicon classification and functional prediction",
    "license": "AFL-3.0",
    "description": "Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2. \nIn addition files are exported to their respective subfolders for easier data management in a later stage.\nSteps:  \n    - FastQC (read quality control)\n    - NGTax 2.0\n    - Picrust 2\n    - Export module for ngtax",
    "latest_version": 2,
    "tags": "['Amplicon', 'CWL', 'Classification']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/154?version=1', 'commit': '8002b928b79bec5a3227b24672e1e109afd681c9', 'ref': 'refs/heads/master', 'tree': '/workflows/154/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/154?version=2', 'commit': '6d183280b89c5f52c86307f73627d42f78c193e6', 'ref': 'refs/heads/master', 'tree': '/workflows/154/git/2/tree', 'doi': '10.48546/workflowhub.workflow.154.2'}]",
    "version": 2,
    "revision_comments": "",
    "created_at": "2021-09-30T11:15:19.000Z",
    "updated_at": "2023-01-16T13:51:47.000Z",
    "doi": "10.48546/workflowhub.workflow.154.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'forward_reads', 'name': 'forward reads', 'description': 'forward sequence file locally', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'reverse_reads', 'name': 'reverse reads', 'description': 'reverse sequence file locally', 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_primer', 'name': 'Forward primer', 'description': 'Forward primer used', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'reverse_primer', 'name': 'Reverse primer', 'description': 'Reverse primer used', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'reference_db', 'name': 'Reference database', 'description': 'Reference database used in FASTA format', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'rev_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'for_read_len', 'name': 'Reverse read length', 'description': 'Read length of the reverse read', 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'sample', 'name': 'Sample name', 'description': 'Name of the sample being analysed', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'fragment', 'name': 'Subfragment name', 'description': 'Subfragment that is being analysed (e.g. V1-V3 or V5-region)', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'primersRemoved', 'name': 'Primers are removed', 'description': 'Wether the primers are removed or not from the input files', 'type': [{'type': 'boolean?'}], 'default_value': None}, {'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'metadata', 'name': 'Metadata file', 'description': 'UNLOCK assay metadata file', 'type': [{'type': 'File?'}], 'default_value': None}], 'outputs': [{'id': 'turtle', 'name': None, 'description': 'Used for other workflows', 'type': [{'type': 'File'}], 'source_ids': ['ngtax/turtle']}, {'id': 'files_to_folder_fastqc', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['fastqc_files_to_folder/results']}, {'id': 'files_to_folder_ngtax', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['ngtax_files_to_folder/results']}, {'id': 'files_to_folder_picrust2', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['picrust_files_to_folder/results']}, {'id': 'files_to_folder_phyloseq', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['phyloseq_files_to_folder/results']}], 'steps': [{'id': 'fastqc', 'name': None, 'description': None, 'sink_ids': ['fastqc/html_files']}, {'id': 'reads_to_folder', 'name': None, 'description': None, 'sink_ids': ['reads_to_folder/results']}, {'id': 'ngtax', 'name': None, 'description': None, 'sink_ids': ['ngtax/biom', 'ngtax/turtle']}, {'id': 'ngtax_to_tsv-fasta', 'name': None, 'description': None, 'sink_ids': ['ngtax_to_tsv-fasta/picrust_fasta', 'ngtax_to_tsv-fasta/picrust_tsv', 'ngtax_to_tsv-fasta/physeq_asv', 'ngtax_to_tsv-fasta/physeq_seq', 'ngtax_to_tsv-fasta/physeq_tax', 'ngtax_to_tsv-fasta/physeq_met']}, {'id': 'picrust2', 'name': None, 'description': None, 'sink_ids': ['picrust2/EC_metagenome_out', 'picrust2/PFAM_metagenome_out', 'picrust2/TIGRFAM_metagenome_out', 'picrust2/COG_metagenome_out', 'picrust2/KO_metagenome_out', 'picrust2/intermediate', 'picrust2/pathways_out', 'picrust2/EC_predicted.tsv.gz', 'picrust2/PFAM_predicted.tsv.gz', 'picrust2/TIGRFAM_predicted.tsv.gz', 'picrust2/KO_predicted.tsv.gz', 'picrust2/marker_predicted_and_nsti.tsv.gz', 'picrust2/out.tre']}, {'id': 'folder_compression', 'name': None, 'description': None, 'sink_ids': ['folder_compression/outfile']}, {'id': 'fastqc_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['fastqc_files_to_folder/results']}, {'id': 'ngtax_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['ngtax_files_to_folder/results']}, {'id': 'picrust_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['picrust_files_to_folder/results']}, {'id': 'phyloseq_files_to_folder', 'name': None, 'description': None, 'sink_ids': ['phyloseq_files_to_folder/results']}], 'links': [{'id': 'fastqs', 'source_id': 'forward_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'fastqs', 'source_id': 'reverse_reads', 'sink_id': 'fastqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'forward_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'reverse_reads', 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'reads_to_folder', 'name': None, 'default_value': None}, {'id': 'forward_primer', 'source_id': 'forward_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reverse_primer', 'source_id': 'reverse_primer', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'reference_db', 'source_id': 'reference_db', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'folder', 'source_id': 'reads_to_folder/results', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'rev_read_len', 'source_id': 'rev_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'for_read_len', 'source_id': 'for_read_len', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'sample', 'source_id': 'sample', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'fragment', 'source_id': 'fragment', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'primersRemoved', 'source_id': 'primersRemoved', 'sink_id': 'ngtax', 'name': None, 'default_value': None}, {'id': 'input', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'sample', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'fragment', 'source_id': 'fragment', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'ngtax_to_tsv-fasta', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'sample', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'input_table', 'source_id': 'ngtax_to_tsv-fasta/picrust_tsv', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'picrust2', 'name': None, 'default_value': None}, {'id': 'indir', 'source_id': 'picrust2/intermediate', 'sink_id': 'folder_compression', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'folder_compression', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'fastqc/html_files', 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'fastqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/biom', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax/turtle', 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'ngtax_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/EC_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/PFAM_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/TIGRFAM_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/KO_predicted.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/marker_predicted_and_nsti.tsv.gz', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'picrust2/out.tre', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'folder_compression/outfile', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/EC_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/PFAM_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/TIGRFAM_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/COG_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/KO_metagenome_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'picrust2/pathways_out', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'fasta', 'source_id': 'ngtax_to_tsv-fasta/picrust_fasta', 'sink_id': 'picrust_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_asv', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_seq', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_tax', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'ngtax_to_tsv-fasta/physeq_met', 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'phyloseq_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 154,
    "text_field": "['workflow_ngtax_picrust2.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\n\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n   - class: StepInputExpressionRequirement\n   - class: InlineJavascriptRequirement\n   - class: MultipleInputFeatureRequirement\n\nlabel: Quality assessment, amplicon classification and functional prediction\ndoc: | \n  Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2. \n  In addition files are exported to their respective subfolders for easier data management in a later stage.\n  Steps:  \n      - FastQC (read quality control)\n      - NGTax 2.0\n      - Picrust 2\n      - Export module\n\ninputs:\n  forward_reads:\n    type: File\n    doc: forward sequence file locally\n    label: forward reads\n  reverse_reads:\n    type: File?\n    doc: reverse sequence file locally\n    label: reverse reads\n  forward_primer: \n    type: string\n    doc: Forward primer used\n    label: Forward primer\n  reverse_primer:\n    type: string?\n    doc: Reverse primer used\n    label: Reverse primer\n  reference_db:\n    type: string?\n    doc: Reference database used in FASTA format\n    label: Reference database\n  rev_read_len: \n    type: int?\n    doc: Read length of the reverse read\n    label: Reverse read length\n  for_read_len: \n    type: int\n    doc: Read length of the reverse read\n    label: Reverse read length\n  sample:\n    type: string\n    doc: Name of the sample being analysed\n    label: Sample name\n  fragment:\n    type: string\n    doc: Subfragment that is being analysed (e.g. V1-V3 or V5-region)\n    label: Subfragment name\n  primersRemoved:\n    type: boolean?\n    doc: Wether the primers are removed or not from the input files\n    label: Primers are removed\n    \nsteps:\n############################\n  fastqc:\n    run: ../fastqc/fastqc.cwl\n    in:\n      fastqs: \n        source: [forward_reads, reverse_reads]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    out: [output]\n#############################\n  reads_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [forward_reads, reverse_reads]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination: \n        valueFrom: $(\"reads\")\n    out:\n      [results]\n############################\n  ngtax:\n    run: ../ngtax/ngtax.cwl\n    in:\n      forward_primer: forward_primer\n      reverse_primer: reverse_primer\n      reference_db: reference_db\n      folder: reads_to_folder/results\n      rev_read_len: rev_read_len\n      for_read_len: for_read_len\n      sample: sample\n      fragment: fragment\n      primersRemoved: primersRemoved\n    out: [biom, turtle]\n#############################\n  ngtax_to_tsv-fasta:\n    run: ../ngtax/ngtax_to_tsv-fasta.cwl\n    in:\n        inputfile: ngtax/turtle\n        identifier: sample\n        fragment: fragment\n    out:\n      [picrust_fasta, picrust_tsv, physeq_asv, physeq_seq, physeq_tax]\n############################\n  picrust2:\n    run: ../picrust2/picrust2_pipeline.cwl\n    in:\n        identifier: sample\n        input_table: ngtax_to_tsv-fasta/picrust_tsv\n        fasta: ngtax_to_tsv-fasta/picrust_fasta\n    out: [EC_metagenome_out, EC_predicted.tsv.gz, KO_metagenome_out, KO_predicted.tsv.gz, intermediate, marker_predicted_and_nsti.tsv.gz, out.tre,pathways_out]\n############################\n  fastqc_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [fastqc/output]\n      destination: \n        valueFrom: $(\"Step_1_QualityControl\")\n    out:\n      [results]\n############################\n  ngtax_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [ngtax/biom, ngtax/turtle]\n      destination: \n        valueFrom: $(\"Step_2_Classification\")\n    out:\n      [results]\n############################\n  picrust_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [picrust2/EC_predicted.tsv.gz,picrust2/KO_predicted.tsv.gz,picrust2/marker_predicted_and_nsti.tsv.gz,picrust2/out.tre]\n        linkMerge: merge_flattened\n      folders:\n        source: [picrust2/EC_metagenome_out,picrust2/KO_metagenome_out,picrust2/intermediate,picrust2/pathways_out]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Step_3_PICRUSt2\")\n    out:\n      [results]\n############################\n  phyloseq_files_to_folder:\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [ngtax_to_tsv-fasta/physeq_asv, ngtax_to_tsv-fasta/physeq_seq, ngtax_to_tsv-fasta/physeq_tax]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Step_4_PHYLOSEQ\")\n    out:\n      [results]\n############################\n\noutputs:\n  turtle:\n    type: File\n    doc: Used for other workflows\n    outputSource: ngtax/turtle\n  files_to_folder_fastqc:\n    type: Directory\n    outputSource: fastqc_files_to_folder/results\n  files_to_folder_ngtax:\n    type: Directory\n    outputSource: ngtax_files_to_folder/results\n  files_to_folder_picrust2:\n    type: Directory\n    outputSource: picrust_files_to_folder/results\n  files_to_folder_phyloseq:\n    type: Directory\n    outputSource: phyloseq_files_to_folder/results\n    \n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2021-01-01\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for quality assessment of paired reads and classification using NGTax 2.0 and functional annotation using picrust2.\nIn addition files are exported to their respective subfolders for easier data management in a later stage.\nSteps:- FastQC (read quality control)\n- NGTax 2.0\n- Picrust 2\n- Export module for ngtax Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/154?version=2 DOI:10.48546/workflowhub.workflow.154.2 Added/updated 1 files Views:2913Downloads:424 Created: 30th Aug 2021 at 08:18 Last updated: 11th Oct 2021 at 13:50 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 576,
    "discussion_links": [],
    "title": "Cryo electron microscopy of SARS-CoV-2 spike in prefusion state",
    "license": "Apache-2.0",
    "description": "Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/160?version=1', 'commit': '1529420c03ab77c1baad5ccdc37629a8eddde4d4', 'ref': 'refs/heads/master', 'tree': '/workflows/160/git/1/tree', 'doi': '10.48546/workflowhub.workflow.160.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-14T13:52:01.000Z",
    "updated_at": "2023-01-16T13:52:18.000Z",
    "doi": "10.48546/workflowhub.workflow.160.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*20* Movies imported from /home/ubuntu/scipion/data/tests/relion_tutorial/micrographs/*.mrc, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '379_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/ubuntu/ScipionUserData/projects/testEmpiar3/Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/workflow.json][Scipion workflow]], - [[Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '379_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 160,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: Cryo electron microscopy of SARS-CoV-2 spike in prefusion state\ndoc: Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*20* Movies imported from /home/ubuntu/scipion/data/tests/relion_tutorial/micrographs/*.mrc,\\\n      \\ Is the data phase flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:SetOfMovies\n    out:\n    - 2.outputMovies\n    in: []\n  379_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/ubuntu/ScipionUserData/projects/testEmpiar3/Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/workflow.json][Scipion\n      workflow]], - [[Runs/000379_EmpiarDepositor/extra/SARS-CoV-2-spike/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:SetOfMovies\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://bioportal.bioontology.org/ontologies/CRYOEM/?p=classes&conceptid=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2Fhttp%3A%2F%2Fwww.semanticweb.org%2Fcoss%2Fontologies%2F2020%2F2%2Funtitled-ontology-2%",
    "p_tag_content": "Continuous flexibility analysis of SARS-CoV-2 Spike prefusion structures Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/160?version=1 DOI:10.48546/workflowhub.workflow.160.1 Added/updated 4 files Views:1516Downloads:208 Created: 14th Sep 2021 at 14:52 Last updated: 15th Sep 2021 at 14:14 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 577,
    "discussion_links": [],
    "title": "testEntryTitleNew",
    "license": "Apache-2.0",
    "description": "Cryo-EM processing workflow",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/183?version=1', 'commit': 'a6bdaea233189ddbaca454d4c148ddb2a37d79c3', 'ref': 'refs/heads/master', 'tree': '/workflows/183/git/1/tree', 'doi': '10.48546/workflowhub.workflow.183.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-15T13:56:31.000Z",
    "updated_at": "2023-01-16T13:52:41.000Z",
    "doi": "10.48546/workflowhub.workflow.183.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '87_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/irene/ScipionUserData/projects/testK/Runs/000087_EmpiarDepositor/extra/topFolder/workflow.json][Scipion workflow]], - [[Runs/000087_EmpiarDepositor/extra/topFolder/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '87_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 183,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.json', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: testEntryTitleNew\ndoc: Cryo-EM processing workflow\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase\\\n      \\ flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n    out:\n    - 2.outputMovies\n    in: []\n  87_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/irene/ScipionUserData/projects/testK/Runs/000087_EmpiarDepositor/extra/topFolder/workflow.json][Scipion\n      workflow]], - [[Runs/000087_EmpiarDepositor/extra/topFolder/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://scipion.i2pc.es/ontology/",
    "p_tag_content": "Cryo-EM processing workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/183?version=1 DOI:10.48546/workflowhub.workflow.183.1 Added/updated 5 files Views:1563Downloads:194 Created: 15th Sep 2021 at 14:56 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 578,
    "discussion_links": [],
    "title": "entryTitleTest",
    "license": "Apache-2.0",
    "description": "Cryo-EM processing workflow",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/188?version=1', 'commit': 'be36e5e67e6e688ce4390a02689448045f3c07be', 'ref': 'refs/heads/master', 'tree': '/workflows/188/git/1/tree', 'doi': '10.48546/workflowhub.workflow.188.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-09-15T15:26:44.000Z",
    "updated_at": "2023-01-16T13:52:45.000Z",
    "doi": "10.48546/workflowhub.workflow.188.1",
    "content_blobs": [],
    "creators": [],
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [], 'outputs': [], 'steps': [{'id': '2_ProtImportMovies', 'name': 'pwem - import movies', 'description': '*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase flipped : False, Sampling rate : *1.00* Å/px', 'sink_ids': ['2_ProtImportMovies/2.outputMovies']}, {'id': '87_EmpiarDepositor', 'name': 'empiar - Empiar deposition', 'description': 'Generated deposition files:, - [[/home/irene/ScipionUserData/projects/workflowhub/Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/workflow.json][Scipion workflow]], - [[Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/deposition.json][Deposition json]]', 'sink_ids': []}], 'links': [{'id': '2.outputMovies', 'source_id': '2_ProtImportMovies/2.outputMovies', 'sink_id': '87_EmpiarDepositor', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 188,
    "text_field": "['ro-crate-metadata.json', 'ro-crate-preview.html', 'workflow.cwl', 'workflow.json', 'workflow.svg']",
    "raw_text_content": "cwlVersion: v1.1\nclass: Workflow\nlabel: entryTitleTest\ndoc: Cryo-EM processing workflow\ninputs: []\noutputs: []\nsteps:\n  2_ProtImportMovies:\n    label: pwem - import movies\n    doc: \"*3* Movies imported from /home/irene/testIrene/*.tiff, Is the data phase\\\n      \\ flipped : False, Sampling rate : *1.00* \\u212B/px\"\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs: []\n      outputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n    out:\n    - 2.outputMovies\n    in: []\n  87_EmpiarDepositor:\n    label: empiar - Empiar deposition\n    doc: Generated deposition files:, - [[/home/irene/ScipionUserData/projects/workflowhub/Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/workflow.json][Scipion\n      workflow]], - [[Runs/000087_EmpiarDepositor/extra/topLevelFolderTest/deposition.json][Deposition\n      json]]\n    run:\n      class: CommandLineTool\n      baseCommand: []\n      inputs:\n        2.outputMovies:\n          type: File\n          format: cryoem:CRYOEM_0000096\n      outputs: []\n    out: []\n    in:\n      2.outputMovies:\n        source: 2_ProtImportMovies/2.outputMovies\n$namespaces:\n  cryoem: http://scipion.i2pc.es/ontology/",
    "p_tag_content": "Cryo-EM processing workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/188?version=1 DOI:10.48546/workflowhub.workflow.188.1 Added/updated 5 files Views:1595Downloads:210 Created: 15th Sep 2021 at 16:26 This item has not yet been tagged. None Teams:UX trial team,Scipion CNB Organizations:Spanish National Research Council (CSIC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified A team to try the workflow hub and register workflows Space:Independent Teams Public web page:Not specified Organisms:Not specified"
  },
  {
    "": 606,
    "discussion_links": [],
    "title": "exome-alignment",
    "license": "Apache-2.0",
    "description": "Exome Alignment Workflow",
    "latest_version": 1,
    "tags": "['Alignment', 'cancer', 'pediatric']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/239?version=1', 'commit': '0b2bfbc160dca7ad3facfde5d12ad101079b5b1a', 'ref': 'refs/heads/master', 'tree': '/workflows/239/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-11-19T10:06:37.000Z",
    "updated_at": "2023-01-16T13:55:02.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'fastq_files', 'name': None, 'description': 'List of paired-end input FASTQ files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'reference_fasta', 'name': None, 'description': 'Compress FASTA files with the reference genome chromosomes', 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'readgroup', 'name': None, 'description': 'Parsing header which should correlate to FASTQ files', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'sample_name', 'name': None, 'description': 'Sample name', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'sorted_bam', 'name': None, 'description': 'Sorted aligned BAM file', 'type': [{'type': 'File'}], 'source_ids': ['picard_markduplicates/output']}], 'steps': [{'id': 'gunzip', 'name': None, 'description': None, 'sink_ids': ['gunzip/output']}, {'id': 'picard_dictionary', 'name': None, 'description': None, 'sink_ids': ['picard_dictionary/output']}, {'id': 'cutadapt', 'name': None, 'description': None, 'sink_ids': ['cutadapt/output']}, {'id': 'bwa_index', 'name': None, 'description': None, 'sink_ids': ['bwa_index/output']}, {'id': 'samtools_faidx', 'name': None, 'description': None, 'sink_ids': ['samtools_faidx/output']}, {'id': 'bwa_mem', 'name': None, 'description': None, 'sink_ids': ['bwa_mem/output']}, {'id': 'samtools_sort', 'name': None, 'description': None, 'sink_ids': ['samtools_sort/output']}, {'id': 'picard_markduplicates', 'name': None, 'description': None, 'sink_ids': ['picard_markduplicates/output']}], 'links': [{'id': 'reference_genome', 'source_id': 'reference_fasta', 'sink_id': 'gunzip', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/output', 'sink_id': 'picard_dictionary', 'name': None, 'default_value': None}, {'id': 'raw_sequences', 'source_id': 'fastq_files', 'sink_id': 'cutadapt', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'gunzip/output', 'sink_id': 'bwa_index', 'name': None, 'default_value': None}, {'id': 'sequences', 'source_id': 'gunzip/output', 'sink_id': 'samtools_faidx', 'name': None, 'default_value': None}, {'id': 'sample_name', 'source_id': 'sample_name', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'trimmed_fastq', 'source_id': 'cutadapt/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'read_group', 'source_id': 'readgroup', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'reference_genome', 'source_id': 'bwa_index/output', 'sink_id': 'bwa_mem', 'name': None, 'default_value': None}, {'id': 'bam_unsorted', 'source_id': 'bwa_mem/output', 'sink_id': 'samtools_sort', 'name': None, 'default_value': None}, {'id': 'alignments', 'source_id': 'samtools_sort/output', 'sink_id': 'picard_markduplicates', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 239,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\nid: alignment-workflow\nlabel: alignment_workflow\n\ndoc: |\n  Exome Alignment Workflow\n\nrequirements:\n  MultipleInputFeatureRequirement: {}\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - https://schema.org/version/latest/schemaorg-current-https.rdf\n - http://edamontology.org/EDAM_1.18.owl\n\ninputs:\n  fastq_files: {type: 'File[]', doc: \"List of paired-end input FASTQ files\"}\n  reference_fasta: {type: File, doc: \"Compress FASTA files with the reference genome chromosomes\"}\n  readgroup: {type: string, doc: \"Parsing header which should correlate to FASTQ files\"}\n  sample_name: {type: string, doc: \"Sample name\"}\n\noutputs:\n  sorted_bam: {type: File, outputSource: picard_markduplicates/output, doc: \"Sorted aligned BAM file\"}\n\nsteps:\n  gunzip:\n    run: tools/gunzip.cwl\n    in:\n      reference_genome: reference_fasta\n    out: [output]\n\n  picard_dictionary:\n    run: tools/picard_dictionary.cwl\n    in:\n      reference_genome:\n        source: gunzip/output\n    out: [output]\n\n  cutadapt:\n    run: tools/cutadapt.cwl\n    in:\n      raw_sequences: fastq_files\n    out: [output]\n\n  bwa_index:\n    run: tools/bwa-index.cwl\n    in:\n      reference_genome:\n        source: gunzip/output\n    out: [output]\n\n  samtools_faidx:\n    run: tools/samtools_faidx.cwl\n    in:\n      sequences:\n        source: gunzip/output\n    out: [output]\n\n  bwa_mem:\n    run: tools/bwa-mem.cwl\n    in:\n      sample_name: sample_name\n      trimmed_fastq:\n        source: cutadapt/output\n      read_group: readgroup\n      reference_genome:\n        source: bwa_index/output\n    out: [output]\n\n  samtools_sort:\n    run: tools/samtools_sort.cwl\n    in:\n      bam_unsorted:\n        source: bwa_mem/output\n    out: [output]\n\n  picard_markduplicates:\n    run: tools/picard_markduplicates.cwl\n    in:\n      alignments:\n        source: samtools_sort/output\n    out: [output]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:dateCreated: \"2021-02-19\"\ns:license: https://spdx.org/licenses/Apache-2.0",
    "p_tag_content": "Exome Alignment Workflow Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/239?version=1 Added/updated 1 files Views:1873Downloads:256 Created: 19th Nov 2021 at 10:06 Last updated: 19th Nov 2021 at 10:08 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 616,
    "discussion_links": [],
    "title": "multiAffinity",
    "license": "Apache-2.0",
    "description": "<br>\n\n<img src=\"https://github.com/marbatlle/multiAffinity/raw/main/docs/img/multiAffinty-logo.png\" alt=\"drawing\" width=\"400\"/>\n\n<br>\n\nMultiAffinity enables the study of how gene dysregulation propagates on a multilayer network on a disease of interest, uncovering key genes. Find the detailed documentation for the tool [here](https://marbatlle.github.io/multiAffinity/).\n\n![alt](https://github.com/marbatlle/multiAffinity/raw/main/docs/img/multiAffinity_workflow.png)",
    "latest_version": 1,
    "tags": "['cancer', 'community-detection', 'networks', 'pediatric', 'rna-seq']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/250?version=1', 'commit': '581e04bf8e7ad39949d1a725b61657f7e490fc43', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/250/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2021-12-14T10:01:12.000Z",
    "updated_at": "2023-04-21T11:42:40.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/4', 'family_name': 'Rodriguez-Navas', 'given_name': 'Laura', 'affiliation': 'Barcelona Supercomputing Center (BSC-CNS), ELIXIR', 'orcid': 'https://orcid.org/0000-0003-4929-1219'}]",
    "other_creators": "Mar Batlle",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'counts', 'name': None, 'description': 'Count Matrices of the RNA-Seq studies - List of input CSV files, separated by commas', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'metadata', 'name': None, 'description': 'Metadata of the RNA-Seq studies - List of input CSV files, separated by commas', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'layers', 'name': None, 'description': 'Layers of the multilayer networks - List of input CSV files, separated by commas', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'approach', 'name': None, 'description': 'Computes correlation on each community or respect all genes, local or global approach (default is local)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'output_dir', 'name': None, 'description': 'Defines name for output folder', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'padj', 'name': None, 'description': \"Sets significance value for DESeq2, RRA, and Spearman's Corr (default is 0.05)\", 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'LFC', 'name': None, 'description': 'Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'control_id', 'name': None, 'description': 'Defines metadata label for the control samples (default is Normal)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'multiXrank_r', 'name': None, 'description': 'Global restart probability for multiXrank, given by float between 0 and 1 (default is 0.15)', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'multiXrank_selfloops', 'name': None, 'description': 'Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'Molti_modularity', 'name': None, 'description': 'Sets Newman modularity resolution parameter on molTI-DREAM (default is 1)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'Molti_Louvain', 'name': None, 'description': 'Switches to randomized Louvain on molTI-DREAM and sets num. of randomizations (default is 5)', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'min_nodes', 'name': None, 'description': 'Defines minimum number of nodes required to describe a community (default is 7)', 'type': [{'type': 'int?'}], 'default_value': None}], 'outputs': [{'id': 'output', 'name': None, 'description': 'Contains degs, communities and affinity information', 'type': [{'type': 'Directory'}], 'source_ids': ['tool/output']}], 'steps': [{'id': 'tool', 'name': None, 'description': None, 'sink_ids': ['tool/output']}], 'links': [{'id': 'counts', 'source_id': 'counts', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'metadata', 'source_id': 'metadata', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'layers', 'source_id': 'layers', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'approach', 'source_id': 'approach', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'output_dir', 'source_id': 'output_dir', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'padj', 'source_id': 'padj', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'LFC', 'source_id': 'LFC', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'multiXrank_r', 'source_id': 'multiXrank_r', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'control_id', 'source_id': 'control_id', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'Molti_modularity', 'source_id': 'Molti_modularity', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'multiXrank_selfloops', 'source_id': 'multiXrank_selfloops', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'Molti_Louvain', 'source_id': 'Molti_Louvain', 'sink_id': 'tool', 'name': None, 'default_value': None}, {'id': 'min_nodes', 'source_id': 'min_nodes', 'sink_id': 'tool', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 250,
    "text_field": "['multiaffinity-workflow.cwl']",
    "raw_text_content": "cwlVersion: v1.0\nclass: Workflow\nid: multiaffinity_workflow\nlabel: multiaffinity-workflow\n\n$namespaces:\n  s: http://schema.org/\n\ninputs:\n  counts: {type: 'File[]', doc: \"Count Matrices of the RNA-Seq studies - List of input CSV files, separated by commas\"}\n  metadata: {type: 'File[]', doc: \"Metadata of the RNA-Seq studies - List of input CSV files, separated by commas\"}\n  layers: {type: 'File[]?', doc: \"Layers of the multilayer networks - List of input CSV files, separated by commas\"}\n  approach: {type: 'string?', doc: \"Computes correlation on each community or respect all genes, local or global approach (default is local)\"}\n  output_dir: {type: 'string?', doc: \"Defines name for output folder\"}\n  padj: {type: 'string?', doc: \"Sets significance value for DESeq2, RRA, and Spearman's Corr (default is 0.05)\"}\n  LFC: {type: 'string?', doc: \"Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)\"}\n  control_id: {type: 'string?', doc: \"Defines metadata label for the control samples (default is Normal)\"}\n  multiXrank_r: {type: 'string?', doc: \"Global restart probability for multiXrank, given by float between 0 and 1 (default is 0.15)\"}\n  multiXrank_selfloops: {type: 'int?', doc: \"Defines whether self loops are removed or not, takes values 0 or 1 (default is 1)\"}\n  Molti_modularity: {type: 'int?', doc: \"Sets Newman modularity resolution parameter on molTI-DREAM (default is 1)\"}\n  Molti_Louvain: {type: 'int?', doc: \"Switches to randomized Louvain on molTI-DREAM and sets num. of randomizations (default is 5)\"}\n  min_nodes: {type: 'int?', doc: \"Defines minimum number of nodes required to describe a community (default is 7)\"}\n\noutputs:\n  output: {type: Directory, outputSource: tool/output, doc: \"Contains degs, communities and affinity information\"}\n\nsteps:\n  tool:\n    run: ./multiaffinity.cwl\n    in:\n      counts: counts\n      metadata: metadata\n      layers: layers\n      approach: approach\n      output_dir: output_dir\n      padj: padj\n      LFC: LFC\n      multiXrank_r: multiXrank_r\n      control_id: control_id\n      Molti_modularity: Molti_modularity\n      multiXrank_selfloops: multiXrank_selfloops\n      Molti_Louvain: Molti_Louvain\n      min_nodes: min_nodes\n    out: [output]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8508-6234\n    s:email: mailto:mar.batlle@bsc.es\n    s:name: Mar Batlle\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0003-4929-1219\n    s:email: mailto:laura.rodriguez@bsc.es\n    s:name: Laura Rodríguez-Navas\n\ns:dateCreated: \"2021-09-15",
    "p_tag_content": "MultiAffinity enables the study of how gene dysregulation propagates on a multilayer network on a disease of interest, uncovering key genes. Find the detailed documentation for the toolhere.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/250?version=1 Mar Batlle Views:1485Downloads:206 Created: 14th Dec 2021 at 10:01 Last updated: 21st Apr 2023 at 12:06 None Teams:GalaxyProject SARS-CoV-2,nf-core viralrecon,EOSC-Life - Demonstrator 7: Rare Diseases,iPC: individualizedPaediatricCure,EJPRD WP13 case-studies workflows,TransBioNet,OpenEBench,ELIXIR Proteomics Organizations:Barcelona Supercomputing Center (BSC-CNS),ELIXIR Expertise:Bioinformatics,Computer Science,AI,Machine Learning Computer Engineer in Barcelona Supercomputing Center (BSC) A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified Space:Independent Teams Public web page:https://ipc-project.eu/ Start date: 1st Jan 2019 End date: 31st May 2023 Organisms:Not specified"
  },
  {
    "": 619,
    "discussion_links": "[{'id': '424', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Nanopore Guppy Basecalling Assembly Workflow",
    "license": "Apache-2.0",
    "description": "### - deprecated - \n\nWorkflow for sequencing with ONT Nanopore, from basecalling to assembly.\n  - Guppy (basecalling of raw reads)\n  - MinIONQC (quality check)\n  - FASTQ merging from multi into one file\n  - Kraken2 (taxonomic classification)\n  - Krona (classification visualization)\n  - Flye (de novo assembly)\n  - Medaka (assembly polishing)\n  - QUAST (assembly quality reports)\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/253?version=1', 'commit': '62ee0fe4f4ab53a3ae317da1d9de2838fd7481cf', 'ref': 'refs/heads/master', 'tree': '/workflows/253/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2022-01-06T07:36:38.000Z",
    "updated_at": "2023-01-16T13:56:37.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'number of threads', 'description': 'number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'fast5_files', 'name': 'nanopore reads', 'description': 'folder with Nanopore raw reads', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'configuration_command', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'kraken_database', 'name': None, 'description': 'database location of kraken2', 'type': [{'type': 'Directory'}], 'default_value': None}, {'id': 'basecall_model', 'name': 'basecalling model', 'description': 'basecalling model used with Guppy', 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'guppy_output', 'name': 'Guppy for CPU', 'description': 'Basecalling of raw reads with Guppy', 'type': [{'type': 'Directory'}], 'source_ids': ['guppy_files_to_folder/results']}, {'id': 'minionqc_output', 'name': 'MinION-Quality-Check', 'description': 'Quality check of basecalling with MinIONQC', 'type': [{'type': 'Directory'}], 'source_ids': ['minionqc_files_to_folder/results']}, {'id': 'merge_output', 'name': 'FASTQ files merged', 'description': 'Concatenation of FASTQ files from Guppy', 'type': [{'type': 'Directory'}], 'source_ids': []}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/kraken2_output']}, {'id': 'krona_output', 'name': 'Krona taxonomy visualization', 'description': 'Visual presentation in HTML of Kraken2 results', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/krona_output']}, {'id': 'flye_output', 'name': 'Flye de novo assembler for single-molecule reads', 'description': 'Flye output directory', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/flye_output']}, {'id': 'medaka_output', 'name': 'Medaka polisher', 'description': 'Polishing of Flye assembly', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/medaka_output']}, {'id': 'quast_output', 'name': 'QUAlity assessment', 'description': 'QUAST analysis output', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_nanopore_noguppy/quast_output']}], 'steps': [{'id': 'workflow_basecalling', 'name': 'Guppy-CPU basecalling', 'description': 'Basecalling with Guppy for CPU of raw reads to FASTQ reads with summary', 'sink_ids': ['workflow_basecalling/reads_directory', 'workflow_basecalling/fastq_reads', 'workflow_basecalling/summary', 'workflow_basecalling/telemetry', 'workflow_basecalling/guppy_log']}, {'id': 'workflow_nanopore_noguppy', 'name': 'Nanopore workflow', 'description': 'The rest of the nanopore workflow without basecalling', 'sink_ids': ['workflow_nanopore_noguppy/kraken2_output', 'workflow_nanopore_noguppy/krona_output', 'workflow_nanopore_noguppy/flye_output', 'workflow_nanopore_noguppy/medaka_output', 'workflow_nanopore_noguppy/quast_output']}, {'id': 'guppy_files_to_folder', 'name': 'Guppy output folder', 'description': 'Preparation of Guppy output files to a specific output folder', 'sink_ids': ['guppy_files_to_folder/results']}, {'id': 'workflow_minionqc', 'name': 'MinIONQC quality check', 'description': 'Plots and statistics generated with MinIONQC from basecalling with Guppy', 'sink_ids': ['workflow_minionqc/qc_files']}, {'id': 'minionqc_files_to_folder', 'name': 'MinIONQC output folder', 'description': 'Preparation of MinIONQC output files to a specific output folder', 'sink_ids': ['minionqc_files_to_folder/results']}], 'links': [{'id': 'fast5_files', 'source_id': 'fast5_files', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'configuration_command', 'source_id': 'configuration_command', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_basecalling', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'nanopore_fastq_reads', 'source_id': 'workflow_basecalling/fastq_reads', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'basecall_model', 'sink_id': 'workflow_nanopore_noguppy', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/summary', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/telemetry', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_basecalling/guppy_log', 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'guppy_files_to_folder', 'name': None, 'default_value': None}, {'id': 'seq_summary', 'source_id': 'workflow_basecalling/summary', 'sink_id': 'workflow_minionqc', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_minionqc', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_minionqc/qc_files', 'sink_id': 'minionqc_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'minionqc_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 253,
    "text_field": "['workflow_nanopore.cwl']",
    "raw_text_content": "#!/usr/bin/env cwltool\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: nanopore workflow\ndoc: |\n    Workflow for sequencing with ONT nanopore, from basecalling to assembly quality.\n    Steps:\n      - Guppy (basecalling of raw reads)\n      - MinIONQC (quality check)\n      - FASTQ merging from multi into one file\n      - Kraken2 (taxonomic classification)\n      - Krona (classification visualization)\n      - Flye (de novo assembly)\n      - Medaka (assembly polishing)\n      - QUAST (assembly quality reports)\n\n      The dependencies are either accessible from https://unlock-icat.irods.surfsara.nl (anonymous) or \n      by using the conda / pip environments as shown in https://unlock-icat.irods.surfsara.nl/infrastructure/binaries/scripts/setup.sh\n      \noutputs:\n  guppy_output:\n    label: Guppy for CPU\n    doc: Basecalling of raw reads with Guppy\n    type: Directory\n    outputSource: guppy_files_to_folder/results\n  minionqc_output:\n    label: MinION-Quality-Check\n    doc: Quality check of basecalling with MinIONQC\n    type: Directory\n    outputSource: minionqc_files_to_folder/results\n  merge_output:\n    label: FASTQ files merged\n    doc: Concatenation of FASTQ files from Guppy\n    type: Directory\n  kraken2_output:\n    label: Kraken2 reports\n    doc: Kraken2 taxonomic classification reports\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/kraken2_output\n  krona_output:\n    label: Krona taxonomy visualization\n    doc: Visual presentation in HTML of Kraken2 results\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/krona_output\n  flye_output:\n    label: Flye de novo assembler for single-molecule reads\n    doc: Flye output directory\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/flye_output\n  medaka_output:\n    label: Medaka polisher\n    doc: Polishing of Flye assembly\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/medaka_output\n  quast_output:\n    label: QUAlity assessment\n    doc: QUAST analysis output\n    type: Directory\n    outputSource: workflow_nanopore_noguppy/quast_output\n\ninputs:\n# General\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: identifier used\n  threads:\n    type: int?\n    doc: number of threads to use for computational processes\n    label: number of threads\n    default: 2\n# Guppy\n  fast5_files:\n    type: File[]\n    doc: folder with Nanopore raw reads\n    label: nanopore reads\n  configuration_command:\n    type: string\n# Kraken2\n  kraken_database:\n    type: Directory\n    doc: database location of kraken2\n# Medaka\n  basecall_model:\n    type: string\n    doc: basecalling model used with Guppy\n    label: basecalling model\n\nsteps:\n#############################################\n#### basecalling with Guppy for CPU\n  workflow_basecalling:\n    label: Guppy-CPU basecalling\n    doc: Basecalling with Guppy for CPU of raw reads to FASTQ reads with summary\n    run: ../guppy/guppy.cwl\n    in:\n      fast5_files: fast5_files\n      configuration_command: configuration_command\n      threads: threads\n    out: [reads_directory, fastq_reads, summary, telemetry, guppy_log]\n#############################################\n#### Nanopore classification and assembly workflow\n  workflow_nanopore_noguppy:\n    label: Nanopore workflow\n    doc: The rest of the nanopore workflow without basecalling\n    run: workflow_nanopore_noguppy.cwl\n    in:\n      identifier: identifier\n      threads: threads\n      nanopore_fastq_reads: workflow_basecalling/fastq_reads\n      kraken_database: kraken_database\n      basecall_model: basecall_model\n    out: [kraken2_output, krona_output, flye_output, medaka_output, quast_output]\n#############################################\n#### Move to folder if not part of a workflow\n  guppy_files_to_folder:\n    doc: Preparation of Guppy output files to a specific output folder\n    label: Guppy output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [workflow_basecalling/summary, workflow_basecalling/telemetry, workflow_basecalling/guppy_log]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"1_Guppy_basecalling\")\n    out:\n      [results]\n############################################# LOCAL INSTALL, BUT USE CONDA IF NO CONFLICTS\n#### quality check of basecalling with MinIONQC\n  workflow_minionqc:\n    label: MinIONQC quality check\n    doc: Plots and statistics generated with MinIONQC from basecalling with Guppy\n    run: ../minionqc/minionqc.cwl\n    in:\n      seq_summary: workflow_basecalling/summary\n      threads: threads\n    out: [qc_files]\n#############################################\n#### Move to folder if not part of a workflow\n  minionqc_files_to_folder:\n    doc: Preparation of MinIONQC output files to a specific output folder\n    label: MinIONQC output folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files:\n        source: [workflow_minionqc/qc_files]\n        linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"2_MinIONQC_qualitycheck\")\n    out:\n      [results]\n#############################################\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0002-5516-8391\n    s:email: mailto:german.royvalgarcia@wur.nl\n    s:name: Germán Royval\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2021-12-10\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/\n  edam: http://edamontology.org/\n\n$schemas:\n - http://edamontology.org/EDAM_1.18.owl",
    "p_tag_content": "Workflow for sequencing with ONT Nanopore, from basecalling to assembly. All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/253?version=1 Added/updated 1 files Views:3276Downloads:210 Created: 6th Jan 2022 at 07:36 Last updated: 2nd Nov 2022 at 15:03 This item has not yet been tagged. None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 620,
    "discussion_links": "[{'id': '423', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Nanopore Assembly Workflow - Deprecated -",
    "license": "Apache-2.0",
    "description": "#### - Deprecated -\n#### See our updated hybrid assembly workflow: https://workflowhub.eu/workflows/367\n#### And other workflows: https://workflowhub.eu/projects/16#workflows\n# \n**Workflow for sequencing with ONT Nanopore data, from basecalled reads to (meta)assembly and binning**\n- Workflow Nanopore Quality\n- Kraken2 taxonomic classification of FASTQ reads\n- Flye (de-novo assembly)\n- Medaka (assembly polishing)\n- metaQUAST (assembly quality reports)\n\n**When Illumina reads are provided:** \n  - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n  - Assembly polishing with Pilon<br>\n  - Workflow binnning https://workflowhub.eu/workflows/64?version=11\n      - Metabat2\n      - CheckM\n      - BUSCO\n      - GTDB-Tk\n\n**All tool CWL files and other workflows can be found here:**<br>\n  Tools: https://git.wur.nl/unlock/cwl/-/tree/master/cwl<br>\n  Workflows: https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows<br>",
    "latest_version": 3,
    "tags": "['Genomics', 'Metagenomics', 'nanopore']",
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=1', 'commit': 'babd8b7dc73a6df07ceaea318611423a3c63b545', 'ref': 'refs/heads/master', 'tree': '/workflows/254/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=2', 'commit': '441b6ec155f9c1f2b874f7772e4d5d74719d0bc0', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/254/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/254?version=3', 'commit': '69b53ab3a679673ad857745e9985f0e7fdc6a87a', 'ref': 'refs/heads/master', 'tree': '/workflows/254/git/3/tree', 'doi': None}]",
    "version": 3,
    "revision_comments": "",
    "created_at": "2022-04-20T09:12:09.000Z",
    "updated_at": "2023-02-02T15:16:21.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}, {'profile': '/people/227', 'family_name': 'Royval', 'given_name': 'Germán', 'affiliation': '', 'orcid': 'https://orcid.org/0000-0002-5516-8391'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}, {'label': 'Sequencing quality control', 'identifier': 'http://edamontology.org/operation_3218'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}, {'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/topic_0196'}, {'label': 'Sequencing', 'identifier': 'http://edamontology.org/topic_3168'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': None}, {'id': 'memory', 'name': 'Maximum memory in MB', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 40000}, {'id': 'nanopore_fastq_files', 'name': 'Nanopore reads', 'description': 'List of file paths with Nanopore raw reads in fastq format', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'illumina_forward_reads', 'name': 'illumina forward reads', 'description': 'illumina sequenced forward read file', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'illumina_reverse_reads', 'name': 'illumina reverse reads', 'description': 'illumina sequenced reverse file', 'type': [{'type': 'string[]?'}], 'default_value': None}, {'id': 'use_reference_mapped_reads', 'name': 'Use mapped reads', 'description': 'Continue with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads (Illumina) with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Absolute path with database location of kraken2', 'type': [{'type': 'string'}], 'default_value': '/unlock/references/databases/Kraken2/K2_PlusPF_20210517'}, {'id': 'basecall_model', 'name': 'Basecalling model', 'description': 'Basecalling model used with Guppy', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'metagenome', 'name': 'When working with metagenomes', 'description': 'Metagenome option for the flye assembly', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'filter_references', 'name': 'Contamination reference file(s)', 'description': 'Reference fasta file(s) for contamination filtering', 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'pilon_fixlist', 'name': 'Pilon fix list', 'description': 'A comma-separated list of categories of issues to try to fix', 'type': [{'type': 'string'}], 'default_value': 'snps,gaps,local'}, {'id': 'binning', 'name': 'Run binning workflow', 'description': 'Run with contig binning workflow', 'type': [{'type': 'boolean?'}], 'default_value': False}], 'outputs': [{'id': 'nanopore_quality_output', 'name': 'Read quality and filtering reports', 'description': 'Quality reports', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality_nanopore/reports_to_folder']}, {'id': 'illumina_quality_stats', 'name': 'Filtered statistics', 'description': 'Statistics on quality and preprocessing of the reads', 'type': [{'type': 'Directory'}], 'source_ids': ['workflow_quality_illumina/reports_to_folder']}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory'}], 'source_ids': ['kraken2_files_to_folder/results']}, {'id': 'assembly_output', 'name': 'Assembly output', 'description': 'Output from different assembly steps', 'type': [{'type': 'Directory'}], 'source_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_output', 'name': 'Binning output', 'description': 'Binning outputfolders', 'type': [{'type': 'Directory'}], 'source_ids': ['binning_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality_nanopore', 'name': 'Nanopore quality and filtering workflow', 'description': 'Quality and filtering workflow for nanopore reads', 'sink_ids': ['workflow_quality_nanopore/filtered_reads', 'workflow_quality_nanopore/reports_to_folder']}, {'id': 'workflow_quality_illumina', 'name': 'Illumina quality and filtering workflow', 'description': 'Quality and filtering workflow for illumina reads', 'sink_ids': ['workflow_quality_illumina/QC_reverse_reads', 'workflow_quality_illumina/QC_forward_reads', 'workflow_quality_illumina/reports_to_folder']}, {'id': 'nanopore_kraken2', 'name': 'Kraken2 Nanopore', 'description': 'Taxonomic classification of Nanopore reads', 'sink_ids': ['nanopore_kraken2/standard_report', 'nanopore_kraken2/sample_report']}, {'id': 'illumina_kraken2', 'name': 'Kraken2 Illumina', 'description': 'Taxonomic classification of FASTQ reads', 'sink_ids': ['illumina_kraken2/standard_report', 'illumina_kraken2/sample_report']}, {'id': 'kraken2_compress', 'name': 'Compress kraken2', 'description': 'Compress large kraken2 report file', 'sink_ids': ['kraken2_compress/outfile']}, {'id': 'kraken2_krona', 'name': 'Krona Kraken2', 'description': 'Visualization of kraken2 with Krona', 'sink_ids': ['kraken2_krona/krona_html']}, {'id': 'flye', 'name': 'Nanopore Flye assembly', 'description': 'De novo assembly of single-molecule reads with Flye', 'sink_ids': ['flye/00_assembly', 'flye/10_consensus', 'flye/20_repeat', 'flye/30_contigger', 'flye/40_polishing', 'flye/assembly', 'flye/assembly_info', 'flye/flye_log', 'flye/params']}, {'id': 'medaka', 'name': 'Medaka polishing of assembly', 'description': 'Medaka for polishing of assembled genome', 'sink_ids': ['medaka/polished_assembly', 'medaka/gaps_in_draft_coords']}, {'id': 'metaquast_medaka', 'name': 'assembly evaluation', 'description': 'evaluation of polished assembly with metaQUAST', 'sink_ids': ['metaquast_medaka/metaquast_outdir', 'metaquast_medaka/meta_combined_ref', 'metaquast_medaka/meta_icarusDir', 'metaquast_medaka/metaquast_krona', 'metaquast_medaka/not_aligned', 'metaquast_medaka/meta_downloaded_ref', 'metaquast_medaka/runs_per_reference', 'metaquast_medaka/meta_summary', 'metaquast_medaka/meta_icarus', 'metaquast_medaka/metaquast_log', 'metaquast_medaka/metaquast_report', 'metaquast_medaka/basicStats', 'metaquast_medaka/quast_icarusDir', 'metaquast_medaka/quast_icarusHtml', 'metaquast_medaka/quastReport', 'metaquast_medaka/quastLog', 'metaquast_medaka/transposedReport']}, {'id': 'workflow_pilon', 'name': 'Pilon worklow', 'description': 'Illumina reads assembly polishing with Pilon', 'sink_ids': ['workflow_pilon/pilon_polished_assembly', 'workflow_pilon/vcf', 'workflow_pilon/log']}, {'id': 'metaquast_nanopore_pilon', 'name': 'Illumina assembly evaluation', 'description': 'Illumina evaluation of pilon polished assembly with metaQUAST', 'sink_ids': ['metaquast_nanopore_pilon/metaquast_outdir', 'metaquast_nanopore_pilon/meta_combined_ref', 'metaquast_nanopore_pilon/meta_icarusDir', 'metaquast_nanopore_pilon/metaquast_krona', 'metaquast_nanopore_pilon/not_aligned', 'metaquast_nanopore_pilon/meta_downloaded_ref', 'metaquast_nanopore_pilon/runs_per_reference', 'metaquast_nanopore_pilon/meta_summary', 'metaquast_nanopore_pilon/meta_icarus', 'metaquast_nanopore_pilon/metaquast_log', 'metaquast_nanopore_pilon/metaquast_report', 'metaquast_nanopore_pilon/basicStats', 'metaquast_nanopore_pilon/quast_icarusDir', 'metaquast_nanopore_pilon/quast_icarusHtml', 'metaquast_nanopore_pilon/quastReport', 'metaquast_nanopore_pilon/quastLog', 'metaquast_nanopore_pilon/transposedReport']}, {'id': 'illumina_pilon_readmapping', 'name': 'Read mapping', 'description': 'Illumina read mapping on pilon assembly for binning', 'sink_ids': ['illumina_pilon_readmapping/sam', 'illumina_pilon_readmapping/stats', 'illumina_pilon_readmapping/covstats', 'illumina_pilon_readmapping/log']}, {'id': 'illumina_pilon_sam_to_sorted_bam', 'name': 'sam conversion to sorted bam', 'description': 'Sam file conversion to a sorted bam file', 'sink_ids': ['illumina_pilon_sam_to_sorted_bam/sortedbam']}, {'id': 'workflow_binning', 'name': 'Binning workflow', 'description': 'Binning workflow to create bins', 'sink_ids': ['workflow_binning/metabat2_output', 'workflow_binning/checkm_output', 'workflow_binning/gtdbtk_output', 'workflow_binning/busco_output']}, {'id': 'kraken2_files_to_folder', 'name': 'Kraken2 output folder', 'description': 'Preparation of Kraken2 output files to a specific output folder', 'sink_ids': ['kraken2_files_to_folder/results']}, {'id': 'flye_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['flye_files_to_folder/results']}, {'id': 'metaquast_medaka_files_to_folder', 'name': 'Nanopore metaQUAST output folder', 'description': 'Preparation of metaQUAST output files to a specific output folder', 'sink_ids': ['metaquast_medaka_files_to_folder/results']}, {'id': 'medaka_files_to_folder', 'name': 'Medaka output folder', 'description': 'Preparation of Medaka output files to a specific output folder', 'sink_ids': ['medaka_files_to_folder/results']}, {'id': 'metaquast_pilon_files_to_folder', 'name': 'Illumina metaQUAST output folder', 'description': 'Preparation of QUAST output files to a specific output folder', 'sink_ids': ['metaquast_pilon_files_to_folder/results']}, {'id': 'pilon_files_to_folder', 'name': 'Pilon output folder', 'description': 'Preparation of pilon output files to a specific output folder', 'sink_ids': ['pilon_files_to_folder/results']}, {'id': 'assembly_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_files_to_folder', 'name': 'Binning output folder', 'description': 'Preparation of quast output files to a specific output folder', 'sink_ids': ['binning_files_to_folder/results']}], 'links': [{'id': 'reads', 'source_id': 'nanopore_fastq_files', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': 1}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'illumina_reverse_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': 2}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': True}, {'id': 'inputfile', 'source_id': 'nanopore_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'illumina_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'nano_raw', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'metagenome', 'source_id': 'metagenome', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'flye/assembly', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'basecall_model', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'fixlist', 'source_id': 'pilon_fixlist', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'metaquast_nanopore_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'metaquast_nanopore_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'illumina_pilon_readmapping', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'illumina_pilon_readmapping/sam', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_pilon_sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'illumina_pilon_sam_to_sorted_bam/sortedbam', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_binning', 'name': None, 'default_value': 1}, {'id': 'files', 'source_id': 'kraken2_compress/outfile', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_krona/krona_html', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly_info', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/flye_log', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/params', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/metaquast_report', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/quastReport', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/metaquast_krona', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/not_aligned', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/runs_per_reference', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/polished_assembly', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/gaps_in_draft_coords', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka_files_to_folder/results', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_nanopore_pilon/metaquast_report', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_nanopore_pilon/quastReport', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_nanopore_pilon/metaquast_krona', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_nanopore_pilon/not_aligned', 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/vcf', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_pilon/log', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_pilon_files_to_folder/results', 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'pilon_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'flye_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'medaka_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'pilon_files_to_folder/results', 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'assembly_files_to_folder', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/metabat2_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/checkm_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/gtdbtk_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_binning/busco_output', 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'binning_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 254,
    "text_field": "['workflow_nanopore_assembly.cwl', 'workflow_nanopore_noguppy.cwl']",
    "raw_text_content": "",
    "p_tag_content": "Workflow for sequencing with ONT Nanopore data, from basecalled reads to (meta)assembly and binning When Illumina reads are provided: All tool CWL files and other workflows can be found here:Tools:https://git.wur.nl/unlock/cwl/-/tree/master/cwlWorkflows:https://git.wur.nl/unlock/cwl/-/tree/master/cwl/workflows Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/254?version=3 Added/updated 1 files Views:3370Downloads:477 Created: 6th Jan 2022 at 07:38 Last updated: 2nd Feb 2023 at 15:16 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows Teams:Not specified Organizations:Not specified A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 621,
    "discussion_links": "[{'id': '231', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '232', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/ligand-parameterization'}, {'id': '233', 'label': 'Documentation', 'url': 'https://biobb-wf-ligand-parameterization.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL GMX Automatic Ligand Parameterization tutorial",
    "license": "Apache-2.0",
    "description": "# Automatic Ligand parameterization tutorial using BioExcel Building Blocks (biobb)\n\n***\n\nThis tutorial aims to illustrate the process of **ligand parameterization** for a **small molecule**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **Sulfasalazine** protein (3-letter code SAS), used to treat rheumatoid arthritis, ulcerative colitis, and Crohn's disease.\n\n**OpenBabel and ACPype** packages are used to **add hydrogens, energetically minimize the structure**, and **generate parameters** for the **GROMACS** package. With *Generalized Amber Force Field (GAFF) forcefield and AM1-BCC* charges.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/255?version=1', 'commit': 'f7acba5a04b799f9a3d45f17a657f9efe9bff804', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/255/git/1/tree', 'doi': '10.48546/workflowhub.workflow.255.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/255?version=2', 'commit': 'dda947f32836f66202a3b1fdc30dc3d36ef12533', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/255/git/2/tree', 'doi': '10.48546/workflowhub.workflow.255.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T12:24:16.000Z",
    "updated_at": "2023-06-06T12:33:16.000Z",
    "doi": "10.48546/workflowhub.workflow.255.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step2_babel_minimize_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_babel_minimize_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_babel_minimize_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_gro', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_itp', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_acpype_params_gmx_output_path_top', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step2_babel_minimize_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step2_babel_minimize/output_path']}, {'id': 'step3_acpype_params_gmx_out1', 'name': 'output_path_gro', 'description': 'Path to the GRO output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_gro']}, {'id': 'step3_acpype_params_gmx_out2', 'name': 'output_path_itp', 'description': 'Path to the ITP output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_itp']}, {'id': 'step3_acpype_params_gmx_out3', 'name': 'output_path_top', 'description': 'Path to the TOP output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_acpype_params_gmx/output_path_top']}], 'steps': [{'id': 'step2_babel_minimize', 'name': 'BabelMinimize', 'description': 'Energetically minimize small molecules.', 'sink_ids': ['step2_babel_minimize/output_path']}, {'id': 'step3_acpype_params_gmx', 'name': 'AcpypeParamsGMX', 'description': 'Small molecule parameterization for GROMACS MD package.', 'sink_ids': ['step3_acpype_params_gmx/output_path_gro', 'step3_acpype_params_gmx/output_path_itp', 'step3_acpype_params_gmx/output_path_top']}], 'links': [{'id': 'config', 'source_id': 'step2_babel_minimize_config', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step2_babel_minimize_input_path', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step2_babel_minimize_output_path', 'sink_id': 'step2_babel_minimize', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_acpype_params_gmx_config', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step2_babel_minimize/output_path', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_gro', 'source_id': 'step3_acpype_params_gmx_output_path_gro', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_itp', 'source_id': 'step3_acpype_params_gmx_output_path_itp', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}, {'id': 'output_path_top', 'source_id': 'step3_acpype_params_gmx_output_path_top', 'sink_id': 'step3_acpype_params_gmx', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 255,
    "text_field": "['biobb_adapters', 'README.md', 'acpype_params_gmx.cwl', 'babel_minimize.cwl', 'ligand.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorial aims to illustrate the process ofligand parameterizationfor asmall molecule, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theSulfasalazineprotein (3-letter code SAS), used to treat rheumatoid arthritis, ulcerative colitis, and Crohn's disease. OpenBabel and ACPypepackages are used toadd hydrogens, energetically minimize the structure, andgenerate parametersfor theGROMACSpackage. WithGeneralized Amber Force Field (GAFF) forcefield and AM1-BCCcharges. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/255?version=2 DOI:10.48546/workflowhub.workflow.255.2 Updated workflow descriptors Views:2883Downloads:542 Created: 10th Jan 2022 at 10:39 Last updated: 17th Mar 2022 at 14:06 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 622,
    "discussion_links": "[{'id': '239', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '240', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/vs_fpocket'}, {'id': '241', 'label': 'Documentation', 'url': 'https://biobb-wf-virtual-screening.readthedocs.io/en/latest/fpocket_tutorial.html'}, {'id': '242', 'label': 'Launch on MyBinder', 'url': 'https://bioexcel-binder.tsi.ebi.ac.uk/v2/gh/bioexcel/biobb_wf_virtual-screening/master?filepath=%2Fbiobb_wf_virtual-screening%2Fnotebooks%2Ffpocket%2Fwf_vs_fpocket.ipynb'}]",
    "title": "Protein-ligand docking (fpocket)",
    "license": "Apache-2.0",
    "description": "This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb).",
    "latest_version": 1,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/257?version=1', 'commit': 'a397c3b47ce92c68e5619fc4470256e1aa11315a', 'ref': 'refs/heads/master', 'tree': '/workflows/257/git/1/tree', 'doi': '10.48546/workflowhub.workflow.257.1'}]",
    "version": 1,
    "revision_comments": "",
    "created_at": "2022-01-10T11:48:32.000Z",
    "updated_at": "2023-01-16T13:56:53.000Z",
    "doi": "10.48546/workflowhub.workflow.257.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_fpocket_select_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_input_pockets_zip', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pdb', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pqr', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_pdbqt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step1_fpocket_select_out1', 'name': 'output_pocket_pdb', 'description': 'Path to the PDB file with the cavity found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pdb']}, {'id': 'step1_fpocket_select_out2', 'name': 'output_pocket_pqr', 'description': 'Path to the PQR file with the pocket found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box_out1', 'name': 'output_pdb_path', 'description': 'PDB including the annotation of the box center and size as REMARKs', 'type': [{'type': 'File'}], 'source_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens_out1', 'name': 'output_structure_path', 'description': 'Output structure file path', 'type': [{'type': 'File'}], 'source_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run_out1', 'name': 'output_pdbqt_path', 'description': 'Path to the output PDBQT file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_pdbqt_path']}, {'id': 'step5_autodock_vina_run_out2', 'name': 'output_log_path', 'description': 'Path to the log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'steps': [{'id': 'step1_fpocket_select', 'name': 'FPocketSelect', 'description': 'Selects a single pocket in the outputs of the fpocket building block..', 'sink_ids': ['step1_fpocket_select/output_pocket_pdb', 'step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box', 'name': 'Box', 'description': 'This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.', 'sink_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens', 'name': 'StrCheckAddHydrogens', 'description': 'This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.', 'sink_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run', 'name': 'AutoDockVinaRun', 'description': 'Wrapper of the AutoDock Vina software.', 'sink_ids': ['step5_autodock_vina_run/output_pdbqt_path', 'step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'links': [{'id': 'config', 'source_id': 'step1_fpocket_select_config', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'input_pockets_zip', 'source_id': 'step1_fpocket_select_input_pockets_zip', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pdb', 'source_id': 'step1_fpocket_select_output_pocket_pdb', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pqr', 'source_id': 'step1_fpocket_select_output_pocket_pqr', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_box_config', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_fpocket_select/output_pocket_pqr', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_box_output_pdb_path', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_babel_convert_prep_lig_config', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step3_babel_convert_prep_lig_input_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step3_babel_convert_prep_lig_output_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_str_check_add_hydrogens_config', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_str_check_add_hydrogens_input_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step4_str_check_add_hydrogens_output_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_ligand_pdbqt_path', 'source_id': 'step3_babel_convert_prep_lig/output_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_receptor_pdbqt_path', 'source_id': 'step4_str_check_add_hydrogens/output_structure_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_box_path', 'source_id': 'step2_box/output_pdb_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_pdbqt_path', 'source_id': 'step5_autodock_vina_run_output_pdbqt_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_autodock_vina_run_output_log_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_babel_convert_pose_pdb_config', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step5_autodock_vina_run/output_pdbqt_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step6_babel_convert_pose_pdb_output_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 257,
    "text_field": "['workflow.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.0\nclass: Workflow\nlabel: Protein-ligand docking\ndoc: |-\n  This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb).\ninputs:\n  step1_fpocket_select_config: string\n  step1_fpocket_select_input_pockets_zip: File\n  step1_fpocket_select_output_pocket_pdb: string\n  step1_fpocket_select_output_pocket_pqr: string\n  step2_box_config: string\n  step2_box_output_pdb_path: string\n  step3_babel_convert_prep_lig_config: string\n  step3_babel_convert_prep_lig_input_path: File\n  step3_babel_convert_prep_lig_output_path: string\n  step4_str_check_add_hydrogens_config: string\n  step4_str_check_add_hydrogens_input_structure_path: File\n  step4_str_check_add_hydrogens_output_structure_path: string\n  step5_autodock_vina_run_output_pdbqt_path: string\n  step5_autodock_vina_run_output_log_path: string\n  step6_babel_convert_pose_pdb_config: string\n  step6_babel_convert_pose_pdb_output_path: string\noutputs:\n  step1_fpocket_select_out1:\n    label: output_pocket_pdb\n    doc: |-\n      Path to the PDB file with the cavity found by fpocket\n    type: File\n    outputSource: step1_fpocket_select/output_pocket_pdb\n  step1_fpocket_select_out2:\n    label: output_pocket_pqr\n    doc: |-\n      Path to the PQR file with the pocket found by fpocket\n    type: File\n    outputSource: step1_fpocket_select/output_pocket_pqr\n  step2_box_out1:\n    label: output_pdb_path\n    doc: |-\n      PDB including the annotation of the box center and size as REMARKs\n    type: File\n    outputSource: step2_box/output_pdb_path\n  step3_babel_convert_prep_lig_out1:\n    label: output_path\n    doc: |-\n      Path to the output file\n    type: File\n    outputSource: step3_babel_convert_prep_lig/output_path\n  step4_str_check_add_hydrogens_out1:\n    label: output_structure_path\n    doc: |-\n      Output structure file path\n    type: File\n    outputSource: step4_str_check_add_hydrogens/output_structure_path\n  step5_autodock_vina_run_out1:\n    label: output_pdbqt_path\n    doc: |-\n      Path to the output PDBQT file\n    type: File\n    outputSource: step5_autodock_vina_run/output_pdbqt_path\n  step5_autodock_vina_run_out2:\n    label: output_log_path\n    doc: |-\n      Path to the log file\n    type: File\n    outputSource: step5_autodock_vina_run/output_log_path\n  step6_babel_convert_pose_pdb_out1:\n    label: output_path\n    doc: |-\n      Path to the output file\n    type: File\n    outputSource: step6_babel_convert_pose_pdb/output_path\nsteps:\n  step1_fpocket_select:\n    label: FPocketSelect\n    doc: |-\n      Selects a single pocket in the outputs of the fpocket building block..\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/fpocket_select.cwl\n    in:\n      config: step1_fpocket_select_config\n      input_pockets_zip: step1_fpocket_select_input_pockets_zip\n      output_pocket_pdb: step1_fpocket_select_output_pocket_pdb\n      output_pocket_pqr: step1_fpocket_select_output_pocket_pqr\n    out:\n    - output_pocket_pdb\n    - output_pocket_pqr\n  step2_box:\n    label: Box\n    doc: |-\n      This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/box.cwl\n    in:\n      config: step2_box_config\n      input_pdb_path: step1_fpocket_select/output_pocket_pqr\n      output_pdb_path: step2_box_output_pdb_path\n    out:\n    - output_pdb_path\n  step3_babel_convert_prep_lig:\n    label: BabelConvert\n    doc: |-\n      Small molecule format conversion.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_chemistry/babel_convert.cwl\n    in:\n      config: step3_babel_convert_prep_lig_config\n      input_path: step3_babel_convert_prep_lig_input_path\n      output_path: step3_babel_convert_prep_lig_output_path\n    out:\n    - output_path\n  step4_str_check_add_hydrogens:\n    label: StrCheckAddHydrogens\n    doc: |-\n      This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_structure_utils/str_check_add_hydrogens.cwl\n    in:\n      config: step4_str_check_add_hydrogens_config\n      input_structure_path: step4_str_check_add_hydrogens_input_structure_path\n      output_structure_path: step4_str_check_add_hydrogens_output_structure_path\n    out:\n    - output_structure_path\n  step5_autodock_vina_run:\n    label: AutoDockVinaRun\n    doc: |-\n      Wrapper of the AutoDock Vina software.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_vs/autodock_vina_run.cwl\n    in:\n      input_ligand_pdbqt_path: step3_babel_convert_prep_lig/output_path\n      input_receptor_pdbqt_path: step4_str_check_add_hydrogens/output_structure_path\n      input_box_path: step2_box/output_pdb_path\n      output_pdbqt_path: step5_autodock_vina_run_output_pdbqt_path\n      output_log_path: step5_autodock_vina_run_output_log_path\n    out:\n    - output_pdbqt_path\n    - output_log_path\n  step6_babel_convert_pose_pdb:\n    label: BabelConvert\n    doc: |-\n      Small molecule format conversion.\n    run: /home/gbayarri_local/projects/BioBB/biobb_adapters/biobb_adapters/cwl/biobb_chemistry/babel_convert.cwl\n    in:\n      config: step6_babel_convert_pose_pdb_config\n      input_path: step5_autodock_vina_run/output_pdbqt_path\n      output_path: step6_babel_convert_pose_pdb_output_path\n    out:\n    - output_path",
    "p_tag_content": "This workflow performs the process of protein-ligand docking, step by step, using the BioExcel Building Blocks library (biobb). Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/257?version=1 DOI:10.48546/workflowhub.workflow.257.1 Added/updated 1 files Views:1257Downloads:147 Created: 10th Jan 2022 at 11:48 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 623,
    "discussion_links": "[{'id': '243', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '244', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/protein-complex_md_setup'}, {'id': '245', 'label': 'Documentation', 'url': 'https://biobb-wf-protein-complex-md-setup.readthedocs.io/en/latest/tutorial.html'}]",
    "title": "CWL Protein Ligand Complex MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# Protein Ligand Complex MD Setup tutorial using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/complex/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation system** containing a **protein in complex with a ligand**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular example used is the **T4 lysozyme** L99A/M102Q protein (PDB code 3HTB), in complex with the **2-propylphenol** small molecule (3-letter Code JZ4). \n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/258?version=1', 'commit': '2816c507dd61acf6a1f21aecd49aa7284990c32c', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/258/git/1/tree', 'doi': '10.48546/workflowhub.workflow.258.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/258?version=2', 'commit': 'b82813d5302869cbb3925995bbbaf032bbbbdb32', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/258/git/2/tree', 'doi': '10.48546/workflowhub.workflow.258.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-07T10:54:43.000Z",
    "updated_at": "2023-06-07T11:04:49.000Z",
    "doi": "10.48546/workflowhub.workflow.258.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 258,
    "text_field": "['biobb_adapters', 'README.md', 'append_ligand.cwl', 'cat_pdb.cwl', 'editconf.cwl', 'extract_molecule.cwl', 'fix_side_chain.cwl', 'genion.cwl', 'genrestr.cwl', 'gmx_energy.cwl', 'gmx_image.cwl', 'gmx_rgyr.cwl', 'gmx_rms.cwl', 'gmx_trjconv_str.cwl', 'grompp.cwl', 'make_ndx.cwl', 'mdrun.cwl', 'pdb2gmx.cwl', 'reduce_remove_hydrogens.cwl', 'solvate.cwl', 'ions.pdb', 'ligand.gro', 'ligand.itp', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulation systemcontaining aprotein in complex with a ligand, step by step, using theBioExcel Building Blocks library (biobb). The particular example used is theT4 lysozymeL99A/M102Q protein (PDB code 3HTB), in complex with the2-propylphenolsmall molecule (3-letter Code JZ4). This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/258?version=2 DOI:10.48546/workflowhub.workflow.258.2 Updated workflow descriptors Views:2611Downloads:519 Created: 10th Jan 2022 at 11:52 Last updated: 17th Mar 2022 at 09:54 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 624,
    "discussion_links": "[{'id': '247', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '248', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/vs_fpocket'}, {'id': '249', 'label': 'Documentation', 'url': 'https://biobb-wf-virtual-screening.readthedocs.io/en/latest/fpocket_tutorial.html'}]",
    "title": "CWL Protein-ligand Docking tutorial (Fpocket)",
    "license": "Apache-2.0",
    "description": "# Protein-ligand Docking tutorials using BioExcel Building Blocks (biobb)\n\nThis tutorials aim to illustrate the process of **protein-ligand docking**, step by step, using the **BioExcel Building Blocks library (biobb)**. The particular examples used are based on the **Mitogen-activated protein kinase 14** (p38-α) protein (PDB code [3HEC](https://www.rcsb.org/structure/3HEC)), a well-known **Protein Kinase enzyme**,\n in complex with the FDA-approved **Imatinib** (PDB Ligand code [STI](https://www.rcsb.org/ligand/STI), DrugBank Ligand Code [DB00619](https://go.drugbank.com/drugs/DB00619)) and **Dasatinib** (PDB Ligand code [1N1](https://www.rcsb.org/ligand/1N1), DrugBank Ligand Code [DB01254](https://go.drugbank.com/drugs/DB01254)), small **kinase inhibitors** molecules used to treat certain types of **cancer**.\n\nThe tutorials will guide you through the process of identifying the **active site cavity** (pocket) without previous knowledge, and the final prediction of the **protein-ligand complex**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/259?version=1', 'commit': '6fdda2045bc7bf3f10b7654acd45daedc34f12ac', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/259/git/1/tree', 'doi': '10.48546/workflowhub.workflow.259.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/259?version=2', 'commit': '992192ca9b524bac76e6eb011757e51e55dbc278', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/259/git/2/tree', 'doi': '10.48546/workflowhub.workflow.259.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-06T14:57:00.000Z",
    "updated_at": "2023-06-06T15:02:00.000Z",
    "doi": "10.48546/workflowhub.workflow.259.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step1_fpocket_select_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_input_pockets_zip', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pdb', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_fpocket_select_output_pocket_pqr', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_box_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_input_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step3_babel_convert_prep_lig_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step4_str_check_add_hydrogens_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_pdbqt_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_autodock_vina_run_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_babel_convert_pose_pdb_output_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step1_fpocket_select_out1', 'name': 'output_pocket_pdb', 'description': 'Path to the PDB file with the cavity found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pdb']}, {'id': 'step1_fpocket_select_out2', 'name': 'output_pocket_pqr', 'description': 'Path to the PQR file with the pocket found by fpocket', 'type': [{'type': 'File'}], 'source_ids': ['step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box_out1', 'name': 'output_pdb_path', 'description': 'PDB including the annotation of the box center and size as REMARKs', 'type': [{'type': 'File'}], 'source_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens_out1', 'name': 'output_structure_path', 'description': 'Output structure file path', 'type': [{'type': 'File'}], 'source_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run_out1', 'name': 'output_pdbqt_path', 'description': 'Path to the output PDBQT file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_pdbqt_path']}, {'id': 'step5_autodock_vina_run_out2', 'name': 'output_log_path', 'description': 'Path to the log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb_out1', 'name': 'output_path', 'description': 'Path to the output file', 'type': [{'type': 'File'}], 'source_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'steps': [{'id': 'step1_fpocket_select', 'name': 'FPocketSelect', 'description': 'Selects a single pocket in the outputs of the fpocket building block..', 'sink_ids': ['step1_fpocket_select/output_pocket_pdb', 'step1_fpocket_select/output_pocket_pqr']}, {'id': 'step2_box', 'name': 'Box', 'description': 'This class sets the center and the size of a rectangular parallelepiped box around a set of residues or a pocket.', 'sink_ids': ['step2_box/output_pdb_path']}, {'id': 'step3_babel_convert_prep_lig', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step3_babel_convert_prep_lig/output_path']}, {'id': 'step4_str_check_add_hydrogens', 'name': 'StrCheckAddHydrogens', 'description': 'This class is a wrapper of the Structure Checking tool to add hydrogens to a 3D structure.', 'sink_ids': ['step4_str_check_add_hydrogens/output_structure_path']}, {'id': 'step5_autodock_vina_run', 'name': 'AutoDockVinaRun', 'description': 'Wrapper of the AutoDock Vina software.', 'sink_ids': ['step5_autodock_vina_run/output_pdbqt_path', 'step5_autodock_vina_run/output_log_path']}, {'id': 'step6_babel_convert_pose_pdb', 'name': 'BabelConvert', 'description': 'Small molecule format conversion.', 'sink_ids': ['step6_babel_convert_pose_pdb/output_path']}], 'links': [{'id': 'config', 'source_id': 'step1_fpocket_select_config', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'input_pockets_zip', 'source_id': 'step1_fpocket_select_input_pockets_zip', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pdb', 'source_id': 'step1_fpocket_select_output_pocket_pdb', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'output_pocket_pqr', 'source_id': 'step1_fpocket_select_output_pocket_pqr', 'sink_id': 'step1_fpocket_select', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_box_config', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_fpocket_select/output_pocket_pqr', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_box_output_pdb_path', 'sink_id': 'step2_box', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_babel_convert_prep_lig_config', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step3_babel_convert_prep_lig_input_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step3_babel_convert_prep_lig_output_path', 'sink_id': 'step3_babel_convert_prep_lig', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_str_check_add_hydrogens_config', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_structure_path', 'source_id': 'step4_str_check_add_hydrogens_input_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step4_str_check_add_hydrogens_output_structure_path', 'sink_id': 'step4_str_check_add_hydrogens', 'name': None, 'default_value': None}, {'id': 'input_ligand_pdbqt_path', 'source_id': 'step3_babel_convert_prep_lig/output_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_receptor_pdbqt_path', 'source_id': 'step4_str_check_add_hydrogens/output_structure_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'input_box_path', 'source_id': 'step2_box/output_pdb_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_pdbqt_path', 'source_id': 'step5_autodock_vina_run_output_pdbqt_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_autodock_vina_run_output_log_path', 'sink_id': 'step5_autodock_vina_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_babel_convert_pose_pdb_config', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'input_path', 'source_id': 'step5_autodock_vina_run/output_pdbqt_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}, {'id': 'output_path', 'source_id': 'step6_babel_convert_pose_pdb_output_path', 'sink_id': 'step6_babel_convert_pose_pdb', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 259,
    "text_field": "['biobb_adapters', 'README.md', 'all_pockets.zip', 'autodock_vina_run.cwl', 'babel_convert.cwl', 'box.cwl', 'fpocket_select.cwl', 'str_check_add_hydrogens.cwl', 'ligand.pdb', 'protein.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "This tutorials aim to illustrate the process ofprotein-ligand docking, step by step, using theBioExcel Building Blocks library (biobb). The particular examples used are based on theMitogen-activated protein kinase 14(p38-α) protein (PDB code3HEC), a well-knownProtein Kinase enzyme,\nin complex with the FDA-approvedImatinib(PDB Ligand codeSTI, DrugBank Ligand CodeDB00619) andDasatinib(PDB Ligand code1N1, DrugBank Ligand CodeDB01254), smallkinase inhibitorsmolecules used to treat certain types ofcancer. The tutorials will guide you through the process of identifying theactive site cavity(pocket) without previous knowledge, and the final prediction of theprotein-ligand complex. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/259?version=2 DOI:10.48546/workflowhub.workflow.259.2 Updated workflow descriptors Views:2587Downloads:490 Created: 10th Jan 2022 at 11:55 Last updated: 17th Mar 2022 at 10:13 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 625,
    "discussion_links": "[{'id': '251', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '252', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_md_setup'}, {'id': '253', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/mdsetup_tutorial.html'}]",
    "title": "CWL Amber Protein MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/260?version=1', 'commit': '569bbc97a5617a3df32d494c69cffb360f332800', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/260/git/1/tree', 'doi': '10.48546/workflowhub.workflow.260.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/260?version=2', 'commit': '817772879b025350923ed55b5b2ac62f4f8706c6', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/260/git/2/tree', 'doi': '10.48546/workflowhub.workflow.260.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-08T07:26:33.000Z",
    "updated_at": "2023-06-08T07:32:27.000Z",
    "doi": "10.48546/workflowhub.workflow.260.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step0_extract_molecule_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb4amber_run_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_amber_to_pdb_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_input_exp_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step20_rmsd_exp_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step0_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step0_extract_molecule/output_molecule_path']}, {'id': 'step1_pdb4amber_run_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_pdb_path']}, {'id': 'step2_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_top_path']}, {'id': 'step2_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_traj_path']}, {'id': 'step3_sander_mdrun_minH_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_rst_path']}, {'id': 'step3_sander_mdrun_minH_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_traj_path']}, {'id': 'step5_sander_mdrun_min_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_rst_path']}, {'id': 'step5_sander_mdrun_min_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_pdb_path']}, {'id': 'step8_leap_solvate_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_top_path']}, {'id': 'step8_leap_solvate_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_pdb_path']}, {'id': 'step9_leap_add_ions_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_top_path']}, {'id': 'step9_leap_add_ions_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_traj_path']}, {'id': 'step10_sander_mdrun_energy_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_rst_path']}, {'id': 'step10_sander_mdrun_energy_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_traj_path']}, {'id': 'step12_sander_mdrun_warm_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_rst_path']}, {'id': 'step12_sander_mdrun_warm_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_traj_path']}, {'id': 'step14_sander_mdrun_nvt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_rst_path']}, {'id': 'step14_sander_mdrun_nvt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_traj_path']}, {'id': 'step16_sander_mdrun_npt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_rst_path']}, {'id': 'step16_sander_mdrun_npt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_traj_path']}, {'id': 'step18_sander_mdrun_md_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_rst_path']}, {'id': 'step18_sander_mdrun_md_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output analysis', 'type': [{'type': 'File'}], 'source_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory', 'type': [{'type': 'File'}], 'source_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'steps': [{'id': 'step0_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step0_extract_molecule/output_molecule_path']}, {'id': 'step1_pdb4amber_run', 'name': 'Pdb4amberRun', 'description': 'Analyse PDB files and clean them for further usage, especially with the LEaP programs of Amber, using pdb4amber tool from the AmberTools MD package', 'sink_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top', 'name': 'LeapGenTop', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step2_leap_gen_top/output_pdb_path', 'step2_leap_gen_top/output_top_path', 'step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step3_sander_mdrun_minH/output_traj_path', 'step3_sander_mdrun_minH/output_rst_path', 'step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step5_sander_mdrun_min/output_traj_path', 'step5_sander_mdrun_min/output_rst_path', 'step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb', 'name': 'AmberToPDB', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate', 'name': 'LeapSolvate', 'description': 'Creates and solvates a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step8_leap_solvate/output_pdb_path', 'step8_leap_solvate/output_top_path', 'step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions', 'name': 'LeapAddIons', 'description': 'Adds counterions to a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step9_leap_add_ions/output_pdb_path', 'step9_leap_add_ions/output_top_path', 'step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step10_sander_mdrun_energy/output_traj_path', 'step10_sander_mdrun_energy/output_rst_path', 'step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step12_sander_mdrun_warm/output_traj_path', 'step12_sander_mdrun_warm/output_rst_path', 'step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun_nvt/output_traj_path', 'step14_sander_mdrun_nvt/output_rst_path', 'step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step16_sander_mdrun_npt/output_traj_path', 'step16_sander_mdrun_npt/output_rst_path', 'step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step18_sander_mdrun_md/output_traj_path', 'step18_sander_mdrun_md/output_rst_path', 'step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr', 'name': 'CpptrajRgyr', 'description': 'Wrapper of the Ambertools Cpptraj module for computing the radius of gyration (Rgyr) from a given cpptraj compatible trajectory.', 'sink_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image', 'name': 'CpptrajImage', 'description': 'Wrapper of the Ambertools Cpptraj module for correcting periodicity (image) from a given cpptraj trajectory file.', 'sink_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step0_extract_molecule_input_structure_path', 'sink_id': 'step0_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step0_extract_molecule_output_molecule_path', 'sink_id': 'step0_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_extract_molecule/output_molecule_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step1_pdb4amber_run_output_pdb_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_leap_gen_top_config', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb4amber_run/output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_leap_gen_top_output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step2_leap_gen_top_output_top_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step2_leap_gen_top_output_crd_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_sander_mdrun_minH_config', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step3_sander_mdrun_minH_output_traj_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step3_sander_mdrun_minH_output_rst_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_sander_mdrun_minH_output_log_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_process_minout_minH_config', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step3_sander_mdrun_minH/output_log_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step4_process_minout_minH_output_dat_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_sander_mdrun_min_config', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step5_sander_mdrun_min_output_traj_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step5_sander_mdrun_min_output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_sander_mdrun_min_output_log_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_process_minout_min_config', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step5_sander_mdrun_min/output_log_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step6_process_minout_min_output_dat_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step7_amber_to_pdb_output_pdb_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_leap_solvate_config', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_amber_to_pdb/output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_leap_solvate_output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step8_leap_solvate_output_top_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step8_leap_solvate_output_crd_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_leap_add_ions_config', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_leap_solvate/output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step9_leap_add_ions_output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step9_leap_add_ions_output_top_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step9_leap_add_ions_output_crd_path', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step10_sander_mdrun_energy_config', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step9_leap_add_ions/output_top_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step9_leap_add_ions/output_crd_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step9_leap_add_ions/output_crd_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step10_sander_mdrun_energy_output_traj_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step10_sander_mdrun_energy_output_rst_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step10_sander_mdrun_energy_output_log_path', 'sink_id': 'step10_sander_mdrun_energy', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step11_process_minout_energy_config', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step10_sander_mdrun_energy/output_log_path', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step11_process_minout_energy_output_dat_path', 'sink_id': 'step11_process_minout_energy', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step12_sander_mdrun_warm_config', 'sink_id': 'step12_sander_mdrun_warm', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step9_leap_add_ions/output_top_path', 'sink_id': 'step12_sander_mdrun_warm',",
    "tools": [],
    "id": 260,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'cat_pdb.cwl', 'cpptraj_image.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'extract_molecule.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'pdb4amber_run.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'reduce_remove_hydrogens.cwl', 'sander_mdrun.cwl', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/260?version=2 DOI:10.48546/workflowhub.workflow.260.2 Updated workflow descriptors Views:2297Downloads:401 Created: 10th Jan 2022 at 13:24 Last updated: 17th Mar 2022 at 10:24 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 626,
    "discussion_links": "[{'id': '256', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '257', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_md_setup_lig'}, {'id': '258', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/mdsetup_lig_tutorial.html'}]",
    "title": "CWL Amber Protein Ligand Complex MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/261?version=1', 'commit': 'c9cd8a761d59321a668a2de6190b4e3b82f336c9', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/261/git/1/tree', 'doi': '10.48546/workflowhub.workflow.261.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/261?version=2', 'commit': 'b9eafdb1156b1bb84fa51f88250732766685b54e', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/261/git/2/tree', 'doi': '10.48546/workflowhub.workflow.261.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-09T06:44:44.000Z",
    "updated_at": "2023-06-09T07:10:36.000Z",
    "doi": "10.48546/workflowhub.workflow.261.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'step00_extract_molecule_input_structure_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step00_extract_molecule_output_molecule_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step0_cat_pdb_input_structure2', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step0_cat_pdb_output_structure_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step1_pdb4amber_run_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_leap_gen_top_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step2_leap_gen_top_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step3_sander_mdrun_minH_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step4_process_minout_minH_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step5_sander_mdrun_min_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step6_process_minout_min_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step7_amber_to_pdb_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step8_leap_solvate_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step8_leap_solvate_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_input_lib_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step9_leap_add_ions_input_frcmod_path', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_pdb_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_top_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step9_leap_add_ions_output_crd_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step10_sander_mdrun_energy_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step11_process_minout_energy_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step12_sander_mdrun_warm_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step13_process_mdout_warm_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step14_sander_mdrun_nvt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step15_process_mdout_nvt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step16_sander_mdrun_npt_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step17_process_mdout_npt_output_dat_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_traj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_rst_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step18_sander_mdrun_md_output_log_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step19_rmsd_first_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step20_rmsd_exp_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step21_cpptraj_rgyr_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'step22_cpptraj_image_output_cpptraj_path', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'step00_extract_molecule_out1', 'name': 'output_molecule_path', 'description': 'Output molecule file path', 'type': [{'type': 'File'}], 'source_ids': ['step00_extract_molecule/output_molecule_path']}, {'id': 'step0_cat_pdb_out1', 'name': 'output_structure_path', 'description': 'Output protein file path', 'type': [{'type': 'File'}], 'source_ids': ['step0_cat_pdb/output_structure_path']}, {'id': 'step1_pdb4amber_run_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_pdb_path']}, {'id': 'step2_leap_gen_top_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_top_path']}, {'id': 'step2_leap_gen_top_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_traj_path']}, {'id': 'step3_sander_mdrun_minH_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_rst_path']}, {'id': 'step3_sander_mdrun_minH_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_traj_path']}, {'id': 'step5_sander_mdrun_min_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_rst_path']}, {'id': 'step5_sander_mdrun_min_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb_out1', 'name': 'output_pdb_path', 'description': 'Structure PDB file', 'type': [{'type': 'File'}], 'source_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_pdb_path']}, {'id': 'step8_leap_solvate_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_top_path']}, {'id': 'step8_leap_solvate_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions_out1', 'name': 'output_pdb_path', 'description': 'Output 3D structure PDB file matching the topology file', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_pdb_path']}, {'id': 'step9_leap_add_ions_out2', 'name': 'output_top_path', 'description': 'Output topology file (AMBER ParmTop)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_top_path']}, {'id': 'step9_leap_add_ions_out3', 'name': 'output_crd_path', 'description': 'Output coordinates file (AMBER crd)', 'type': [{'type': 'File'}], 'source_ids': ['step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_traj_path']}, {'id': 'step10_sander_mdrun_energy_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_rst_path']}, {'id': 'step10_sander_mdrun_energy_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_traj_path']}, {'id': 'step12_sander_mdrun_warm_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_rst_path']}, {'id': 'step12_sander_mdrun_warm_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_traj_path']}, {'id': 'step14_sander_mdrun_nvt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_rst_path']}, {'id': 'step14_sander_mdrun_nvt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_traj_path']}, {'id': 'step16_sander_mdrun_npt_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_rst_path']}, {'id': 'step16_sander_mdrun_npt_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt_out1', 'name': 'output_dat_path', 'description': 'Dat output file containing data from the specified terms along the minimization process', 'type': [{'type': 'File'}], 'source_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md_out1', 'name': 'output_traj_path', 'description': 'Output trajectory file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_traj_path']}, {'id': 'step18_sander_mdrun_md_out2', 'name': 'output_rst_path', 'description': 'Output restart file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_rst_path']}, {'id': 'step18_sander_mdrun_md_out3', 'name': 'output_log_path', 'description': 'Output log file', 'type': [{'type': 'File'}], 'source_ids': ['step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed analysis', 'type': [{'type': 'File'}], 'source_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output analysis', 'type': [{'type': 'File'}], 'source_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image_out1', 'name': 'output_cpptraj_path', 'description': 'Path to the output processed trajectory', 'type': [{'type': 'File'}], 'source_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'steps': [{'id': 'step00_extract_molecule', 'name': 'ExtractMolecule', 'description': 'This class is a wrapper of the Structure Checking tool to extract a molecule from a 3D structure.', 'sink_ids': ['step00_extract_molecule/output_molecule_path']}, {'id': 'step0_cat_pdb', 'name': 'CatPDB', 'description': 'Class to concat two PDB structures in a single PDB file.', 'sink_ids': ['step0_cat_pdb/output_structure_path']}, {'id': 'step1_pdb4amber_run', 'name': 'Pdb4amberRun', 'description': 'Analyse PDB files and clean them for further usage, especially with the LEaP programs of Amber, using pdb4amber tool from the AmberTools MD package', 'sink_ids': ['step1_pdb4amber_run/output_pdb_path']}, {'id': 'step2_leap_gen_top', 'name': 'LeapGenTop', 'description': 'Generates a MD topology from a molecule structure using tLeap tool from the AmberTools MD package', 'sink_ids': ['step2_leap_gen_top/output_pdb_path', 'step2_leap_gen_top/output_top_path', 'step2_leap_gen_top/output_crd_path']}, {'id': 'step3_sander_mdrun_minH', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step3_sander_mdrun_minH/output_traj_path', 'step3_sander_mdrun_minH/output_rst_path', 'step3_sander_mdrun_minH/output_log_path']}, {'id': 'step4_process_minout_minH', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step4_process_minout_minH/output_dat_path']}, {'id': 'step5_sander_mdrun_min', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step5_sander_mdrun_min/output_traj_path', 'step5_sander_mdrun_min/output_rst_path', 'step5_sander_mdrun_min/output_log_path']}, {'id': 'step6_process_minout_min', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step6_process_minout_min/output_dat_path']}, {'id': 'step7_amber_to_pdb', 'name': 'AmberToPDB', 'description': 'Generates a PDB structure from AMBER topology (parmtop) and coordinates (crd) files, using the ambpdb tool from the AmberTools MD package', 'sink_ids': ['step7_amber_to_pdb/output_pdb_path']}, {'id': 'step8_leap_solvate', 'name': 'LeapSolvate', 'description': 'Creates and solvates a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step8_leap_solvate/output_pdb_path', 'step8_leap_solvate/output_top_path', 'step8_leap_solvate/output_crd_path']}, {'id': 'step9_leap_add_ions', 'name': 'LeapAddIons', 'description': 'Adds counterions to a system box for an AMBER MD system using tLeap tool from the AmberTools MD package', 'sink_ids': ['step9_leap_add_ions/output_pdb_path', 'step9_leap_add_ions/output_top_path', 'step9_leap_add_ions/output_crd_path']}, {'id': 'step10_sander_mdrun_energy', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step10_sander_mdrun_energy/output_traj_path', 'step10_sander_mdrun_energy/output_rst_path', 'step10_sander_mdrun_energy/output_log_path']}, {'id': 'step11_process_minout_energy', 'name': 'ProcessMinOut', 'description': 'Parses the AMBER (sander) minimization output file (log) and dumps statistics that can then be plotted. Using the process_minout.pl tool from the AmberTools MD package', 'sink_ids': ['step11_process_minout_energy/output_dat_path']}, {'id': 'step12_sander_mdrun_warm', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step12_sander_mdrun_warm/output_traj_path', 'step12_sander_mdrun_warm/output_rst_path', 'step12_sander_mdrun_warm/output_log_path']}, {'id': 'step13_process_mdout_warm', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step13_process_mdout_warm/output_dat_path']}, {'id': 'step14_sander_mdrun_nvt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step14_sander_mdrun_nvt/output_traj_path', 'step14_sander_mdrun_nvt/output_rst_path', 'step14_sander_mdrun_nvt/output_log_path']}, {'id': 'step15_process_mdout_nvt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step15_process_mdout_nvt/output_dat_path']}, {'id': 'step16_sander_mdrun_npt', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step16_sander_mdrun_npt/output_traj_path', 'step16_sander_mdrun_npt/output_rst_path', 'step16_sander_mdrun_npt/output_log_path']}, {'id': 'step17_process_mdout_npt', 'name': 'ProcessMDOut', 'description': 'Parses the AMBER (sander) md output file (log) and dumps statistics that can then be plotted. Using the process_mdout.pl tool from the AmberTools MD package', 'sink_ids': ['step17_process_mdout_npt/output_dat_path']}, {'id': 'step18_sander_mdrun_md', 'name': 'SanderMDRun', 'description': 'Runs energy minimization, molecular dynamics, and NMR refinements using sander tool from the AmberTools MD package', 'sink_ids': ['step18_sander_mdrun_md/output_traj_path', 'step18_sander_mdrun_md/output_rst_path', 'step18_sander_mdrun_md/output_log_path']}, {'id': 'step19_rmsd_first', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step19_rmsd_first/output_cpptraj_path']}, {'id': 'step20_rmsd_exp', 'name': 'CpptrajRms', 'description': 'Wrapper of the Ambertools Cpptraj module for calculating the Root Mean Square deviation (RMSd) of a given cpptraj compatible trajectory.', 'sink_ids': ['step20_rmsd_exp/output_cpptraj_path']}, {'id': 'step21_cpptraj_rgyr', 'name': 'CpptrajRgyr', 'description': 'Wrapper of the Ambertools Cpptraj module for computing the radius of gyration (Rgyr) from a given cpptraj compatible trajectory.', 'sink_ids': ['step21_cpptraj_rgyr/output_cpptraj_path']}, {'id': 'step22_cpptraj_image', 'name': 'CpptrajImage', 'description': 'Wrapper of the Ambertools Cpptraj module for correcting periodicity (image) from a given cpptraj trajectory file.', 'sink_ids': ['step22_cpptraj_image/output_cpptraj_path']}], 'links': [{'id': 'input_structure_path', 'source_id': 'step00_extract_molecule_input_structure_path', 'sink_id': 'step00_extract_molecule', 'name': None, 'default_value': None}, {'id': 'output_molecule_path', 'source_id': 'step00_extract_molecule_output_molecule_path', 'sink_id': 'step00_extract_molecule', 'name': None, 'default_value': None}, {'id': 'input_structure1', 'source_id': 'step00_extract_molecule/output_molecule_path', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_structure2', 'source_id': 'step0_cat_pdb_input_structure2', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'output_structure_path', 'source_id': 'step0_cat_pdb_output_structure_path', 'sink_id': 'step0_cat_pdb', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step0_cat_pdb/output_structure_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step1_pdb4amber_run_output_pdb_path', 'sink_id': 'step1_pdb4amber_run', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step2_leap_gen_top_config', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step1_pdb4amber_run/output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_lib_path', 'source_id': 'step2_leap_gen_top_input_lib_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'input_frcmod_path', 'source_id': 'step2_leap_gen_top_input_frcmod_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step2_leap_gen_top_output_pdb_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step2_leap_gen_top_output_top_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step2_leap_gen_top_output_crd_path', 'sink_id': 'step2_leap_gen_top', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step3_sander_mdrun_minH_config', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step2_leap_gen_top/output_crd_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step3_sander_mdrun_minH_output_traj_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step3_sander_mdrun_minH_output_rst_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step3_sander_mdrun_minH_output_log_path', 'sink_id': 'step3_sander_mdrun_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step4_process_minout_minH_config', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step3_sander_mdrun_minH/output_log_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step4_process_minout_minH_output_dat_path', 'sink_id': 'step4_process_minout_minH', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step5_sander_mdrun_min_config', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'input_ref_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_traj_path', 'source_id': 'step5_sander_mdrun_min_output_traj_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_rst_path', 'source_id': 'step5_sander_mdrun_min_output_rst_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'output_log_path', 'source_id': 'step5_sander_mdrun_min_output_log_path', 'sink_id': 'step5_sander_mdrun_min', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step6_process_minout_min_config', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_log_path', 'source_id': 'step5_sander_mdrun_min/output_log_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'output_dat_path', 'source_id': 'step6_process_minout_min_output_dat_path', 'sink_id': 'step6_process_minout_min', 'name': None, 'default_value': None}, {'id': 'input_top_path', 'source_id': 'step2_leap_gen_top/output_top_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'input_crd_path', 'source_id': 'step3_sander_mdrun_minH/output_rst_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step7_amber_to_pdb_output_pdb_path', 'sink_id': 'step7_amber_to_pdb', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step8_leap_solvate_config', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step7_amber_to_pdb/output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_lib_path', 'source_id': 'step8_leap_solvate_input_lib_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'input_frcmod_path', 'source_id': 'step8_leap_solvate_input_frcmod_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_pdb_path', 'source_id': 'step8_leap_solvate_output_pdb_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_top_path', 'source_id': 'step8_leap_solvate_output_top_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'output_crd_path', 'source_id': 'step8_leap_solvate_output_crd_path', 'sink_id': 'step8_leap_solvate', 'name': None, 'default_value': None}, {'id': 'config', 'source_id': 'step9_leap_add_ions_config', 'sink_id': 'step9_leap_add_ions', 'name': None, 'default_value': None}, {'id': 'input_pdb_path', 'source_id': 'step8_leap_solvate/output_pdb_path', 'sink_id': 'step9_leap_add_ions', 'n",
    "tools": [],
    "id": 261,
    "text_field": "['biobb_adapters', 'README.md', 'amber_to_pdb.cwl', 'cat_pdb.cwl', 'cpptraj_image.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'extract_molecule.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'pdb4amber_run.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'reduce_remove_hydrogens.cwl', 'sander_mdrun.cwl', 'heteroatoms.pdb', 'input_frcmod.zip', 'input_lib.zip', 'ions.pdb', 'structure.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/261?version=2 DOI:10.48546/workflowhub.workflow.261.2 Updated workflow descriptors Views:2687Downloads:503 Created: 10th Jan 2022 at 15:27 Last updated: 17th Mar 2022 at 10:35 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 627,
    "discussion_links": "[{'id': '260', 'label': 'BioExcel Workflows', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows'}, {'id': '261', 'label': 'Tutorial', 'url': 'https://mmb.irbbarcelona.org/biobb/workflows/tutorials/amber_abcsetup'}, {'id': '262', 'label': 'Documentation', 'url': 'https://biobb-wf-amber-md-setup.readthedocs.io/en/latest/abcsetup_tutorial.html'}]",
    "title": "CWL ABC MD Setup tutorial",
    "license": "Apache-2.0",
    "description": "# AMBER Protein MD Setup tutorials using BioExcel Building Blocks (biobb)\n\n**Based on the official [GROMACS tutorial](http://www.mdtutorials.com/gmx/lysozyme/index.html).**\n\n***\n\nThis tutorial aims to illustrate the process of **setting up a simulation** system containing a **protein**, step by step, using the **BioExcel Building Blocks library (biobb)** wrapping the **Ambertools MD package**.\n\n***\n\n## Copyright & Licensing\nThis software has been developed in the [MMB group](http://mmb.irbbarcelona.org) at the [BSC](http://www.bsc.es/) & [IRB](https://www.irbbarcelona.org/) for the [European BioExcel](http://bioexcel.eu/), funded by the European Commission (EU H2020 [823830](http://cordis.europa.eu/projects/823830), EU H2020 [675728](http://cordis.europa.eu/projects/675728)).\n\n* (c) 2015-2022 [Barcelona Supercomputing Center](https://www.bsc.es/)\n* (c) 2015-2022 [Institute for Research in Biomedicine](https://www.irbbarcelona.org/)\n\nLicensed under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file LICENSE for details.\n\n![](https://bioexcel.eu/wp-content/uploads/2019/04/Bioexcell_logo_1080px_transp.png \"Bioexcel\")",
    "latest_version": 2,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': None, 'url': 'https://workflowhub.eu/workflows/262?version=1', 'commit': 'c3a41d929d94bc5b5130ae33f44922d59170c319', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/262/git/1/tree', 'doi': '10.48546/workflowhub.workflow.262.1'}, {'version': 2, 'revision_comments': 'Updated workflow descriptors', 'url': 'https://workflowhub.eu/workflows/262?version=2', 'commit': '62d05f1208abc6a6ac532456486ecda97165a3df', 'ref': 'refs/tags/Version-2', 'tree': '/workflows/262/git/2/tree', 'doi': '10.48546/workflowhub.workflow.262.2'}]",
    "version": 2,
    "revision_comments": "Updated workflow descriptors",
    "created_at": "2023-06-12T08:27:43.000Z",
    "updated_at": "2023-06-12T08:35:34.000Z",
    "doi": "10.48546/workflowhub.workflow.262.2",
    "content_blobs": [],
    "creators": "[{'profile': '/people/57', 'family_name': 'Hospital', 'given_name': 'Adam', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0002-8291-8071'}, {'profile': '/people/47', 'family_name': 'Bayarri', 'given_name': 'Genís', 'affiliation': 'Institute for Research in Biomedicine (IRB)', 'orcid': 'https://orcid.org/0000-0003-0513-0288'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "",
    "tools": [],
    "id": 262,
    "text_field": "['ABCix_config_files', 'biobb_adapters', 'md.in', 'md.in.ORIG', 'step1.in', 'step10.in', 'step2.in', 'step3.in', 'step4.in', 'step5.in', 'step6.in', 'step7.in', 'step8.in', 'step9.in', 'README.md', 'cpptraj_image.cwl', 'cpptraj_randomize_ions.cwl', 'cpptraj_rgyr.cwl', 'cpptraj_rms.cwl', 'leap_add_ions.cwl', 'leap_gen_top.cwl', 'leap_solvate.cwl', 'parmed_hmassrepartition.cwl', 'process_mdout.cwl', 'process_minout.cwl', 'sander_mdrun.cwl', 'sequence.pdb', 'workflow.cwl', 'workflow_input_descriptions.yml']",
    "raw_text_content": "",
    "p_tag_content": "Based on the officialGROMACS tutorial. This tutorial aims to illustrate the process ofsetting up a simulationsystem containing aprotein, step by step, using theBioExcel Building Blocks library (biobb)wrapping theAmbertools MD package. This software has been developed in theMMB groupat theBSC&IRBfor theEuropean BioExcel, funded by the European Commission (EU H2020823830, EU H2020675728). Licensed under theApache License 2.0, see the file LICENSE for details.  Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/262?version=2 DOI:10.48546/workflowhub.workflow.262.2 Updated workflow descriptors Views:2531Downloads:493 Created: 11th Jan 2022 at 08:14 Last updated: 17th Mar 2022 at 10:44 This item has not yet been tagged. None Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) Teams:BioBB Building Blocks Organizations:Institute for Research in Biomedicine (IRB) BioExcel is the leading European Centre of Excellence for Computational Biomolecular Research. Established in 2015, the centre has grown into a major research and innovation hub for scientific computing. BioExcel develops some of the most popular applications for modelling and simulations of biomolecular systems. A broad range of additional pre-/post-processing tools are integrated with the core applications within user-friendly workflows and container solutions. The software stack comes with\n... Teams:BioBB Building Blocks,BioExcel Best Practice Guides Web page:https://bioexcel.eu/ TheBioExcel Building Blocks (biobb)software library is a collection of Python wrappers on top of popular biomolecular simulation tools. This library offers a layer of interoperability between the wrapped tools, which make them compatible and prepared to be directly interconnected to build complex biomolecular workflows. The building blocks can be used in many different workflow systems, including Galaxy, CWL, Jupyter Notebook and PyCOMPSs – notably their\n... Space:BioExcel Public web page:https://mmb.irbbarcelona.org/biobb/ Organisms:SARS-CoV-2"
  },
  {
    "": 634,
    "discussion_links": [],
    "title": "MGnify - amplicon analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline",
    "latest_version": 1,
    "tags": "['CWL', 'Metagenomics', 'rna', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/361?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/361/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:28:11.000Z",
    "updated_at": "2023-01-16T14:01:07.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'single_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reverse_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'qc_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'stats_file_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unite_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_otu_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'itsonedb_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb_otu_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-statistics', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'hashsum_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['before-qc/input_files_hashsum_paired']}, {'id': 'hashsum_single', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/input_files_hashsum_single']}, {'id': 'fastp_filtering_json_report', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/fastp_filtering_json']}, {'id': 'gz_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/gz_files']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence-categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'ITS-length', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/ITS-length']}, {'id': 'suppressed_upload', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/suppressed_upload']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/filtered_fasta', 'before-qc/qc-statistics', 'before-qc/qc_summary', 'before-qc/qc-status', 'before-qc/input_files_hashsum_paired', 'before-qc/input_files_hashsum_single', 'before-qc/fastp_filtering_json']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/taxonomy-summary_folder', 'after-qc/suppressed_upload', 'after-qc/sequence-categorisation_folder', 'after-qc/rna-count', 'after-qc/gz_files', 'after-qc/ITS-length', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}], 'links': [{'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'single_reads', 'source_id': 'single_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'qc_min_length', 'source_id': 'qc_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'stats_file_name', 'source_id': 'stats_file_name', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_db', 'source_id': 'unite_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_tax', 'source_id': 'unite_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_otu_file', 'source_id': 'unite_otu_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_label', 'source_id': 'unite_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb', 'source_id': 'itsonedb', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_tax', 'source_id': 'itsonedb_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_otu_file', 'source_id': 'itsonedb_otu_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_label', 'source_id': 'itsonedb_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}]}",
    "tools": [],
    "id": 361,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "os: linux\n\nsudo: true\nlanguage: python\npython: 3.6\nservices:\n  - docker\n\nenv:\n  - TOOL=\"Validate\" CONF_SCRIPT=\"travis/conformance-tests.sh\"\n#  - TOOL=\"SUPPRESS\" TEST_SUPPRESS_SUBWF=\"travis/cwltest.sh\"\n\ninstall:\n  - travis/install-nodejs.sh\n  - pip install -r travis/requirements.txt\n\nbefore_script:\n  - pip freeze\n  - pwd\n\nscript:\n  - bash ${CONF_SCRIPT}\n#  - bash  ${TEST_SUPPRESS_SUBWF} travis/tests/amplicon-suppress/1.yml\n\n<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>MGnify - amplicon analysis pipeline</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"sEvBeMFtp0PkqOzE1d2cPKnYcdthNe5k3QV+9hxddzBg3JR58EI9oydd7g1lSWSk3/9v0lrrQ+MdR6vpUFixqQ==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/361?version=1\",\n  \"description\": \"MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\\r\\n\\r\\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline\\r\\n\",\n  \"name\": \"MGnify - amplicon analysis pipeline\",\n  \"url\": \"https://workflowhub.eu/workflows/361?version=1\",\n  \"image\": \"https://workflowhub.eu/workflows/382/diagram?version=1\",\n  \"keywords\": \"CWL, Metagenomics, rna, workflow\",\n  \"version\": 1,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20L%20Mitchell\",\n      \"name\": \"Alex L Mitchell\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alexandre%20Almeida\",\n      \"name\": \"Alexandre Almeida\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Martin%20Beracochea\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Miguel%20Boland\",\n      \"name\": \"Miguel Boland\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Josephine%20Burgin\",\n      \"name\": \"Josephine Burgin\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Guy%20Cochrane\",\n      \"name\": \"Guy Cochrane\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Michael%20R%20Crusoe\",\n      \"name\": \"Michael R Crusoe\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Varsha%20Kale\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Simon%20C%20Potter\",\n      \"name\": \"Simon C Potter\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Lorna%20J%20Richardson\",\n      \"name\": \"Lorna J Richardson\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Ekaterina%20Sakharova\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Maxim%20Scheremetjew\",\n      \"name\": \"Maxim Scheremetjew\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Anton%20Korobeynikov\",\n      \"name\": \"Anton Korobeynikov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20Shlemov\",\n      \"name\": \"Alex Shlemov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Olga%20Kunyavskaya\",\n      \"name\": \"Olga Kunyavskaya\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alla%20Lapidus\",\n      \"name\": \"Alla Lapidus\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Robert%20D%20Finn\",\n      \"name\": \"Robert D Finn\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/9\",\n      \"name\": \"MGnify\"\n    }\n  ],\n  \"dateCreated\": \"2022-06-07T08:28:11Z\",\n  \"dateModified\": \"2023-01-16T14:01:07Z\",\n  \"isPartOf\": [\n\n  ],\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-single_reads\",\n      \"name\": \"single_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-forward_reads\",\n      \"name\": \"forward_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-reverse_reads\",\n      \"name\": \"reverse_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-qc_min_length\",\n      \"name\": \"qc_min_length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-stats_file_name\",\n      \"name\": \"stats_file_name\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_db\",\n      \"name\": \"ssu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_db\",\n      \"name\": \"lsu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_tax\",\n      \"name\": \"ssu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_tax\",\n      \"name\": \"lsu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_otus\",\n      \"name\": \"ssu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_otus\",\n      \"name\": \"lsu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-rfam_models\",\n      \"name\": \"rfam_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-rfam_model_clans\",\n      \"name\": \"rfam_model_clans\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_label\",\n      \"name\": \"ssu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_label\",\n      \"name\": \"lsu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-5s_pattern\",\n      \"name\": \"5s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-5.8s_pattern\",\n      \"name\": \"5.8s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_db\",\n      \"name\": \"unite_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_tax\",\n      \"name\": \"unite_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_otu_file\",\n      \"name\": \"unite_otu_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_label\",\n      \"name\": \"unite_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb\",\n      \"name\": \"itsonedb\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_tax\",\n      \"name\": \"itsonedb_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_otu_file\",\n      \"name\": \"itsonedb_otu_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_label\",\n      \"name\": \"itsonedb_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"output\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc-statistics\",\n      \"name\": \"qc-statistics\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc_summary\",\n      \"name\": \"qc_summary\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc-status\",\n      \"name\": \"qc-status\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-hashsum_paired\",\n      \"name\": \"hashsum_paired\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-hashsum_single\",\n      \"name\": \"hashsum_single\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-fastp_filtering_json_report\",\n      \"name\": \"fastp_filtering_json_report\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-gz_files\",\n      \"name\": \"gz_files\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-sequence-categorisation_folder\",\n      \"name\": \"sequence-categorisation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-taxonomy-summary_folder\",\n      \"name\": \"taxonomy-summary_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-rna-count\",\n      \"name\": \"rna-count\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-ITS-length\",\n      \"name\": \"ITS-length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-suppressed_upload\",\n      \"name\": \"suppressed_upload\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-completed_flag_file\",\n      \"name\": \"completed_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-no_tax_flag_file\",\n      \"name\": \"no_tax_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F361%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: tests.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=382&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"MGnify - amplicon analysis pipeline\" href=\"/workflows/361?version=1\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      MGnify - amplicon analysis pipeline              <div class=\"version\">v5.0.7</div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/EBI-Metagenomics/pipeline-v5.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/361/ro_crate?version=1\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <p>MGnify (<a rel=\"nofollow\" href=\"http://www.ebi.ac.uk/metagenomics\">http://www.ebi.ac.uk/metagenomics</a>) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.</p>\n<p>Documentation: <a rel=\"nofollow\" href=\"https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline\">https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline</a></p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n                    <embed type=\"image/svg+xml\" src=\"/workflows/361/diagram?version=1\" class=\"svg-pan-zoom\" width=\"1000\" height=\"500\"></embed>\n                    <p class=\"help-block\">Click and drag the diagram to pan, double click or use the controls to zoom.</p>\n                </div>\n              </div>\n            </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/361?version=1\">https://workflowhub.eu/workflows/361?version=1</a></p>\n\n            \n            \n          </div>\n        </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"workflow-internals\">\n    <h2>Inputs</h2>\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-hover steps\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"id\">single_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">forward_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">reverse_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">qc_min_length</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>int</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">stats_file_name</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_otus</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_otus</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">rfam_models</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string[]</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">rfam_model_clans</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_label</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_label</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">5s_pattern</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">5.8s_pattern</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">unite_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">unite_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>stri",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/361?version=1 Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:2707Downloads:233 Created: 7th Jun 2022 at 09:28 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 635,
    "discussion_links": "[{'id': '437', 'label': 'Gitter', 'url': 'https://gitter.im/microbiome-informatics/community?utm_source=share-link&utm_medium=link&utm_campaign=share-link'}]",
    "title": "MGnify - raw-reads analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline",
    "latest_version": 1,
    "tags": "['CWL', 'Metagenomics', 'Workflows']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/362?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/362/git/1/tree', 'doi': '10.48546/workflowhub.workflow.362.1'}]",
    "version": 1,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:40:40.000Z",
    "updated_at": "2023-01-16T14:01:12.000Z",
    "doi": "10.48546/workflowhub.workflow.362.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/355', 'family_name': 'Sakharova', 'given_name': 'Ekaterina', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0001-6867-2039'}, {'profile': '/people/354', 'family_name': 'Kale', 'given_name': 'Varsha', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0002-3503-6383'}, {'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'single_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reverse_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'qc_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'other_ncRNA_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_postfixes', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'cgc_chunk_size', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'func_ann_names_ips', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'func_ann_names_hmmer', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_omit_alignment', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_name_database', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hmmsearch_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_db', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'EggNOG_diamond_db', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'EggNOG_data_dir', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'InterProScan_databases', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_applications', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'InterProScan_outputFormat', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ips_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ko_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'go_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-statistics', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'hashsum_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['before-qc/input_files_hashsum_paired']}, {'id': 'hashsum_single', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/input_files_hashsum_single']}, {'id': 'fastp_filtering_json_report', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/fastp_filtering_json']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence_categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'motus_output', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/motus_output']}, {'id': 'compressed_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/compressed_files']}, {'id': 'functional_annotation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/functional_annotation_folder']}, {'id': 'stats', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/stats']}, {'id': 'chunking_nucleotides', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_nucleotides']}, {'id': 'chunking_proteins', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_proteins']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_cds_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_no_cds_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/qc-statistics', 'before-qc/qc_summary', 'before-qc/qc-status', 'before-qc/motus_input', 'before-qc/filtered_fasta', 'before-qc/input_files_hashsum_paired', 'before-qc/input_files_hashsum_single', 'before-qc/fastp_filtering_json']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/motus_output', 'after-qc/sequence_categorisation_folder', 'after-qc/taxonomy-summary_folder', 'after-qc/rna-count', 'after-qc/compressed_files', 'after-qc/functional_annotation_folder', 'after-qc/stats', 'after-qc/chunking_nucleotides', 'after-qc/chunking_proteins', 'after-qc/count_CDS', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}, {'id': 'touch_no_cds_flag', 'name': None, 'description': None, 'sink_ids': ['touch_no_cds_flag/created_file']}], 'links': [{'id': 'single_reads', 'source_id': 'single_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'qc_min_length', 'source_id': 'qc_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'motus_input', 'source_id': 'before-qc/motus_input', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'other_ncRNA_models', 'source_id': 'other_ncRNA_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_config', 'source_id': 'CGC_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_postfixes', 'source_id': 'CGC_postfixes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'cgc_chunk_size', 'source_id': 'cgc_chunk_size', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'source_id': 'protein_chunk_size_hmm', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'source_id': 'protein_chunk_size_IPS', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_ips', 'source_id': 'func_ann_names_ips', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_hmmer', 'source_id': 'func_ann_names_hmmer', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'source_id': 'HMM_gathering_bit_score', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_omit_alignment', 'source_id': 'HMM_omit_alignment', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_name_database', 'source_id': 'HMM_name_database', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'hmmsearch_header', 'source_id': 'hmmsearch_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_db', 'source_id': 'EggNOG_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_diamond_db', 'source_id': 'EggNOG_diamond_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_data_dir', 'source_id': 'EggNOG_data_dir', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_databases', 'source_id': 'InterProScan_databases', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_applications', 'source_id': 'InterProScan_applications', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_outputFormat', 'source_id': 'InterProScan_outputFormat', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ips_header', 'source_id': 'ips_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'go_config', 'source_id': 'go_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ko_file', 'source_id': 'ko_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}, {'id': 'value', 'source_id': 'after-qc/count_CDS', 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': 'no-cds'}]}",
    "tools": [],
    "id": 362,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "os: linux\n\nsudo: true\nlanguage: python\npython: 3.6\nservices:\n  - docker\n\nenv:\n  - TOOL=\"Validate\" CONF_SCRIPT=\"travis/conformance-tests.sh\"\n#  - TOOL=\"SUPPRESS\" TEST_SUPPRESS_SUBWF=\"travis/cwltest.sh\"\n\ninstall:\n  - travis/install-nodejs.sh\n  - pip install -r travis/requirements.txt\n\nbefore_script:\n  - pip freeze\n  - pwd\n\nscript:\n  - bash ${CONF_SCRIPT}\n#  - bash  ${TEST_SUPPRESS_SUBWF} travis/tests/amplicon-suppress/1.yml\n\n<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>MGnify - raw-reads analysis pipeline</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"KYOYDTXqk+JA6T1fF5UdUuPiRQtGu+3leDQ/dQgBN8EYYiPzByppAByAHiRy1Ul3lkdehuHOWN7UV5udXRwR4w==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/362?version=1\",\n  \"description\": \"MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\\r\\n\\r\\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline\",\n  \"name\": \"MGnify - raw-reads analysis pipeline\",\n  \"url\": \"https://workflowhub.eu/workflows/362?version=1\",\n  \"image\": \"https://workflowhub.eu/workflows/383/diagram?version=1\",\n  \"keywords\": \"Workflows, CWL, Metagenomics\",\n  \"version\": 1,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/355\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/354\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/27\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20L%20Mitchell\",\n      \"name\": \"Alex L Mitchell\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alexandre%20Almeida\",\n      \"name\": \"Alexandre Almeida\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Martin%20Beracochea\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Miguel%20Boland\",\n      \"name\": \"Miguel Boland\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Josephine%20Burgin\",\n      \"name\": \"Josephine Burgin\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Guy%20Cochrane\",\n      \"name\": \"Guy Cochrane\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Michael%20R%20Crusoe\",\n      \"name\": \"Michael R Crusoe\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Varsha%20Kale\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Simon%20C%20Potter\",\n      \"name\": \"Simon C Potter\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Lorna%20J%20Richardson\",\n      \"name\": \"Lorna J Richardson\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Ekaterina%20Sakharova\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Maxim%20Scheremetjew\",\n      \"name\": \"Maxim Scheremetjew\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Anton%20Korobeynikov\",\n      \"name\": \"Anton Korobeynikov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20Shlemov\",\n      \"name\": \"Alex Shlemov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Olga%20Kunyavskaya\",\n      \"name\": \"Olga Kunyavskaya\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alla%20Lapidus\",\n      \"name\": \"Alla Lapidus\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Robert%20D%20Finn\",\n      \"name\": \"Robert D Finn\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/9\",\n      \"name\": \"MGnify\"\n    }\n  ],\n  \"dateCreated\": \"2022-06-07T08:40:40Z\",\n  \"dateModified\": \"2023-01-16T14:01:12Z\",\n  \"isPartOf\": [\n\n  ],\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-single_reads\",\n      \"name\": \"single_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-forward_reads\",\n      \"name\": \"forward_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-reverse_reads\",\n      \"name\": \"reverse_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-qc_min_length\",\n      \"name\": \"qc_min_length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_db\",\n      \"name\": \"ssu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_db\",\n      \"name\": \"lsu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_tax\",\n      \"name\": \"ssu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_tax\",\n      \"name\": \"lsu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_otus\",\n      \"name\": \"ssu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_otus\",\n      \"name\": \"lsu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-rfam_models\",\n      \"name\": \"rfam_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-rfam_model_clans\",\n      \"name\": \"rfam_model_clans\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-other_ncRNA_models\",\n      \"name\": \"other_ncRNA_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_label\",\n      \"name\": \"ssu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_label\",\n      \"name\": \"lsu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-5s_pattern\",\n      \"name\": \"5s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-5.8s_pattern\",\n      \"name\": \"5.8s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-CGC_config\",\n      \"name\": \"CGC_config\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-CGC_postfixes\",\n      \"name\": \"CGC_postfixes\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-cgc_chunk_size\",\n      \"name\": \"cgc_chunk_size\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-protein_chunk_size_hmm\",\n      \"name\": \"protein_chunk_size_hmm\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-protein_chunk_size_IPS\",\n      \"name\": \"protein_chunk_size_IPS\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-func_ann_names_ips\",\n      \"name\": \"func_ann_names_ips\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-func_ann_names_hmmer\",\n      \"name\": \"func_ann_names_hmmer\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_gathering_bit_score\",\n      \"name\": \"HMM_gathering_bit_score\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_omit_alignment\",\n      \"name\": \"HMM_omit_alignment\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_name_database\",\n      \"name\": \"HMM_name_database\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-hmmsearch_header\",\n      \"name\": \"hmmsearch_header\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_db\",\n      \"name\": \"EggNOG_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_diamond_db\",\n      \"name\": \"EggNOG_diamond_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_data_dir\",\n      \"name\": \"EggNOG_data_dir\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_databases\",\n      \"name\": \"InterProScan_databases\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_applications\",\n      \"name\": \"InterProScan_applications\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_outputFormat\",\n      \"name\": \"InterProScan_outputFormat\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ips_header\",\n      \"name\": \"ips_header\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ko_file\",\n      \"name\": \"ko_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-go_config\",\n      \"name\": \"go_config\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"output\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc-statistics\",\n      \"name\": \"qc-statistics\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc_summary\",\n      \"name\": \"qc_summary\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc-status\",\n      \"name\": \"qc-status\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-hashsum_paired\",\n      \"name\": \"hashsum_paired\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-hashsum_single\",\n      \"name\": \"hashsum_single\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-fastp_filtering_json_report\",\n      \"name\": \"fastp_filtering_json_report\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-sequence-categorisation_folder\",\n      \"name\": \"sequence-categorisation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-taxonomy-summary_folder\",\n      \"name\": \"taxonomy-summary_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-rna-count\",\n      \"name\": \"rna-count\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-motus_output\",\n      \"name\": \"motus_output\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-compressed_files\",\n      \"name\": \"compressed_files\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-functional_annotation_folder\",\n      \"name\": \"functional_annotation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-stats\",\n      \"name\": \"stats\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-chunking_nucleotides\",\n      \"name\": \"chunking_nucleotides\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-chunking_proteins\",\n      \"name\": \"chunking_proteins\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-completed_flag_file\",\n      \"name\": \"completed_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-no_cds_flag_file\",\n      \"name\": \"no_cds_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-no_tax_flag_file\",\n      \"name\": \"no_tax_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F362%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: tests.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=383&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"MGnify - raw-reads analysis pipeline\" href=\"/workflows/362?version=1\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      MGnify - raw-reads analysis pipeline              <div class=\"version\">v5.0.7</div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/EBI-Metagenomics/pipeline-v5.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/362/ro_crate?version=1\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <p>MGnify (<a rel=\"nofollow\" href=\"http://www.ebi.ac.uk/metagenomics\">http://www.ebi.ac.uk/metagenomics</a>) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.</p>\n<p>Documentation: <a rel=\"nofollow\" href=\"https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline\">https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline</a></p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n                    <embed type=\"image/svg+xml\" src=\"/workflows/362/diagram?version=1\" class=\"svg-pan-zoom\" width=\"1000\" height=\"500\"></embed>\n                    <p class=\"help-block\">Click and drag the diagram to pan, double click or use the controls to zoom.</p>\n                </div>\n              </div>\n            </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/362?version=1\">https://workflowhub.eu/workflows/362?version=1</a></p>\n\n            \n                <p>\n      <b>DOI:</b> <a target=\"_blank\" href=\"https://doi.org/10.48546/workflowhub.workflow.362.1\">10.48546/workflowhub.workflow.362.1</a><span class=\"doi_icon\"></span>\n    </p>\n\n          </div>\n        </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"workflow-internals\">\n    <h2>Inputs</h2>\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-hover steps\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"id\">single_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">forward_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">reverse_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">qc_min_length</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>int</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/362?version=1 DOI:10.48546/workflowhub.workflow.362.1 Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:2929Downloads:217 Created: 7th Jun 2022 at 09:40 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify Organizations:EMBL-EBI MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 640,
    "discussion_links": "[{'id': '444', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "(Hybrid) Metagenomics workflow",
    "license": "Apache-2.0",
    "description": "### Workflow (hybrid) metagenomic assembly and binning + GEMs\n_Accepts both Illumina and Long reads (ONT/PacBio)_\n\n- **Workflow Illumina Quality:** https://workflowhub.eu/workflows/336?version=1\t\n- **Workflow LongRead Quality:** https://workflowhub.eu/workflows/337\n    \n- Kraken2 taxonomic classification of FASTQ reads\n- SPAdes/Flye (Assembly)\n- QUAST (Assembly quality report)\n\n**Workflow binnning** https://workflowhub.eu/workflows/64?version=11  (optional)\n- Metabat2/MaxBin2/SemiBin\n- DAS Tool\n- CheckM\n- BUSCO\n- GTDB-Tk\n  \n**Workflow Genome-scale metabolic models** https://workflowhub.eu/workflows/372 (optional)\n- CarveMe (GEM generation)\n- MEMOTE (GEM test suite)\n- SMETANA (Species METabolic interaction ANAlysis)\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl<br>\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Assembly', 'Metagenomics', 'binning', 'illumina']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/367?version=1', 'commit': '1e42c47f241ebba8c3caf7bc7dd13f0a903f4888', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/367/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-06-14T08:14:10.000Z",
    "updated_at": "2024-01-02T12:20:13.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}, {'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/topic_0196'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'illumina_forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence file path', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'illumina_reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence file path', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'pacbio_reads', 'name': 'PacBio reads', 'description': 'File with PacBio reads locally', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'nanopore_reads', 'name': 'PacBio reads', 'description': 'File with PacBio reads locally', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Contamination reference file', 'description': 'bbmap reference fasta file paths for contamination filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'use_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Continue with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'keep_filtered_reads', 'name': 'Keep filtered reads', 'description': 'Keep filtered reads in the final output', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Absolute path with database location of kraken2', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'gtdbtk_data', 'name': 'gtdbtk data directory', 'description': 'Directory containing the GTDBTK repository', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'busco_data', 'name': 'BUSCO dataset', 'description': 'Path to the BUSCO dataset download location', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'ont_basecall_model', 'name': 'ONT Basecalling model', 'description': 'Basecalling model used with guppy default r941_min_high. \\nAvailable: r941_trans, r941_flip213, r941_flip235, r941_min_fast, r941_min_high, r941_prom_fast, r941_prom_high. (required)\\n', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'pilon_fixlist', 'name': 'Pilon fix list', 'description': 'A comma-separated list of categories of issues to try to fix', 'type': [{'type': 'string'}], 'default_value': 'snps,gaps,local'}, {'id': 'metagenome', 'name': 'When working with metagenomes', 'description': 'Metagenome option for assemblers', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'run_spades', 'name': 'Use SPAdes', 'description': 'Run with SPAdes assembler', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'run_flye', 'name': 'Use Flye', 'description': 'Run with Flye assembler', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_pilon', 'name': 'Use Pilon', 'description': 'Run with Pilon illumina assembly polishing', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'binning', 'name': 'Run binning workflow', 'description': 'Run with contig binning workflow', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_GEM', 'name': 'Run GEM workflow', 'description': 'Run the community genomescale metabolic models workflow on bins', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_smetana', 'name': 'Run SMETANA', 'description': 'Run SMETANA (Species METabolic interaction ANAlysis)', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Memory usage (MB)', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'destination', 'name': 'Output Destination (prov only)', 'description': 'Not used in this workflow. Output destination used for cwl-prov reporting only.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'read_filtering_output_keep', 'name': 'Read filtering output', 'description': 'Read filtering stats + filtered reads', 'type': [{'type': 'Directory?'}], 'source_ids': ['keep_readfilter_files_to_folder/results']}, {'id': 'read_filtering_output', 'name': 'Read filtering output', 'description': 'Read filtering stats + filtered reads', 'type': [{'type': 'Directory?'}], 'source_ids': ['readfilter_files_to_folder/results']}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory?'}], 'source_ids': ['kraken2_files_to_folder/results']}, {'id': 'assembly_output', 'name': 'Assembly output', 'description': 'Output from different assembly steps', 'type': [{'type': 'Directory'}], 'source_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_output', 'name': 'Binning output', 'description': 'Binning outputfolders', 'type': [{'type': 'Directory?'}], 'source_ids': ['binning_files_to_folder/results']}, {'id': 'gem_output', 'name': 'Community GEM output', 'description': 'Community GEM output folder', 'type': [{'type': 'Directory?'}], 'source_ids': ['GEM_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality_illumina', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['workflow_quality_illumina/QC_reverse_reads', 'workflow_quality_illumina/QC_forward_reads', 'workflow_quality_illumina/reports_folder']}, {'id': 'workflow_quality_nanopore', 'name': 'Nanopore quality and filtering workflow', 'description': 'Quality and filtering workflow for nanopore reads', 'sink_ids': ['workflow_quality_nanopore/filtered_reads', 'workflow_quality_nanopore/reports_folder']}, {'id': 'nanopore_kraken2', 'name': 'Kraken2 Nanopore', 'description': 'Taxonomic classification of nanopore FASTQ reads', 'sink_ids': ['nanopore_kraken2/standard_report', 'nanopore_kraken2/sample_report']}, {'id': 'illumina_kraken2', 'name': 'Kraken2 Illumina', 'description': 'Taxonomic classification of illumina FASTQ reads', 'sink_ids': ['illumina_kraken2/standard_report', 'illumina_kraken2/sample_report']}, {'id': 'kraken2_compress', 'name': 'Compress kraken2', 'description': 'Compress large kraken2 report file', 'sink_ids': ['kraken2_compress/outfile']}, {'id': 'kraken2_krona', 'name': 'Krona Kraken2', 'description': 'Visualization of kraken2 with Krona', 'sink_ids': ['kraken2_krona/krona_html']}, {'id': 'spades', 'name': 'SPAdes assembly', 'description': 'Genome assembly using spades with illumina/pacbio reads', 'sink_ids': ['spades/contigs', 'spades/scaffolds', 'spades/assembly_graph', 'spades/contigs_assembly_paths', 'spades/scaffolds_assembly_paths', 'spades/contigs_before_rr', 'spades/params', 'spades/log', 'spades/internal_config', 'spades/internal_dataset']}, {'id': 'compress_spades', 'name': 'SPAdes compressed', 'description': 'Compress the large Spades assembly output files', 'sink_ids': ['compress_spades/outfile']}, {'id': 'flye', 'name': 'Nanopore Flye assembly', 'description': 'De novo assembly of single-molecule reads with Flye', 'sink_ids': ['flye/00_assembly', 'flye/10_consensus', 'flye/20_repeat', 'flye/30_contigger', 'flye/40_polishing', 'flye/assembly', 'flye/assembly_info', 'flye/flye_log', 'flye/params']}, {'id': 'medaka', 'name': 'Medaka polishing of assembly', 'description': 'Medaka for polishing of assembled genome', 'sink_ids': ['medaka/polished_assembly', 'medaka/gaps_in_draft_coords']}, {'id': 'metaquast_medaka', 'name': 'assembly evaluation', 'description': 'evaluation of polished assembly with metaQUAST', 'sink_ids': ['metaquast_medaka/metaquast_outdir', 'metaquast_medaka/meta_combined_ref', 'metaquast_medaka/meta_icarusDir', 'metaquast_medaka/metaquast_krona', 'metaquast_medaka/not_aligned', 'metaquast_medaka/meta_downloaded_ref', 'metaquast_medaka/runs_per_reference', 'metaquast_medaka/meta_summary', 'metaquast_medaka/meta_icarus', 'metaquast_medaka/metaquast_log', 'metaquast_medaka/metaquast_report', 'metaquast_medaka/basicStats', 'metaquast_medaka/quast_icarusDir', 'metaquast_medaka/quast_icarusHtml', 'metaquast_medaka/quastReport', 'metaquast_medaka/quastLog', 'metaquast_medaka/transposedReport']}, {'id': 'workflow_pilon', 'name': 'Pilon worklow', 'description': 'Illumina reads assembly polishing with Pilon', 'sink_ids': ['workflow_pilon/pilon_polished_assembly', 'workflow_pilon/vcf', 'workflow_pilon/log']}, {'id': 'metaquast_pilon', 'name': 'Illumina assembly evaluation', 'description': 'Illumina evaluation of pilon polished assembly with metaQUAST', 'sink_ids': ['metaquast_pilon/metaquast_outdir', 'metaquast_pilon/meta_combined_ref', 'metaquast_pilon/meta_icarusDir', 'metaquast_pilon/metaquast_krona', 'metaquast_pilon/not_aligned', 'metaquast_pilon/meta_downloaded_ref', 'metaquast_pilon/runs_per_reference', 'metaquast_pilon/meta_summary', 'metaquast_pilon/meta_icarus', 'metaquast_pilon/metaquast_log', 'metaquast_pilon/metaquast_report', 'metaquast_pilon/basicStats', 'metaquast_pilon/quast_icarusDir', 'metaquast_pilon/quast_icarusHtml', 'metaquast_pilon/quastReport', 'metaquast_pilon/quastLog', 'metaquast_pilon/transposedReport']}, {'id': 'bbmap', 'name': 'BBmap read mapping', 'description': 'Illumina read mapping using BBmap on assembled contigs', 'sink_ids': ['bbmap/sam', 'bbmap/stats', 'bbmap/covstats', 'bbmap/log']}, {'id': 'sam_to_sorted_bam', 'name': 'sam conversion to sorted bam', 'description': 'Sam file conversion to a sorted indexed bam file', 'sink_ids': ['sam_to_sorted_bam/sortedbam']}, {'id': 'contig_read_counts', 'name': 'Samtools idxstats', 'description': 'Reports alignment summary statistics', 'sink_ids': ['contig_read_counts/contigReadCounts']}, {'id': 'workflow_binning', 'name': 'Binning workflow', 'description': 'Binning workflow to create bins', 'sink_ids': ['workflow_binning/bins', 'workflow_binning/metabat2_output', 'workflow_binning/checkm_output', 'workflow_binning/gtdbtk_output', 'workflow_binning/busco_output', 'workflow_binning/bins_summary_table', 'workflow_binning/eukrep_fasta', 'workflow_binning/eukrep_stats_file']}, {'id': 'workflow_GEM', 'name': 'GEM workflow', 'description': 'CarveMe community genomescale metabolic models workflow from bins', 'sink_ids': ['workflow_GEM/carveme_gems_folder', 'workflow_GEM/protein_fasta_folder', 'workflow_GEM/memote_folder', 'workflow_GEM/smetana_output', 'workflow_GEM/gemstats_out']}, {'id': 'keep_readfilter_files_to_folder', 'name': 'Read filtering output folder', 'description': 'Preparation of read filtering output files to a specific output folder', 'sink_ids': ['keep_readfilter_files_to_folder/results']}, {'id': 'readfilter_files_to_folder', 'name': 'Read filtering output folder', 'description': 'Preparation of read filtering output files to a specific output folder', 'sink_ids': ['readfilter_files_to_folder/results']}, {'id': 'kraken2_files_to_folder', 'name': 'Kraken2 output folder', 'description': 'Preparation of Kraken2 output files to a specific output folder', 'sink_ids': ['kraken2_files_to_folder/results']}, {'id': 'spades_files_to_folder', 'name': 'SPADES output to folder', 'description': 'Preparation of SPAdes output files to a specific output folder', 'sink_ids': ['spades_files_to_folder/results']}, {'id': 'flye_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['flye_files_to_folder/results']}, {'id': 'metaquast_medaka_files_to_folder', 'name': 'Nanopore metaQUAST output folder', 'description': 'Preparation of metaQUAST output files to a specific output folder', 'sink_ids': ['metaquast_medaka_files_to_folder/results']}, {'id': 'medaka_files_to_folder', 'name': 'Medaka output folder', 'description': 'Preparation of Medaka output files to a specific output folder', 'sink_ids': ['medaka_files_to_folder/results']}, {'id': 'metaquast_pilon_files_to_folder', 'name': 'Illumina metaQUAST output folder', 'description': 'Preparation of QUAST output files to a specific output folder', 'sink_ids': ['metaquast_pilon_files_to_folder/results']}, {'id': 'pilon_files_to_folder', 'name': 'Pilon output folder', 'description': 'Preparation of pilon output files to a specific output folder', 'sink_ids': ['pilon_files_to_folder/results']}, {'id': 'assembly_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_files_to_folder', 'name': 'Binning output to folder', 'description': 'Preparation of binning output files and folders to a specific output folder', 'sink_ids': ['binning_files_to_folder/results']}, {'id': 'GEM_files_to_folder', 'name': 'GEM workflow output to folder', 'description': 'Preparation of GEM workflow output files and folders to a specific output folder', 'sink_ids': ['GEM_files_to_folder/results']}], 'links': [{'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'illumina_reverse_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': 1}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': 1}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'illumina_raw_forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': True}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'nanopore_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'illumina_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'pacbio_reads', 'source_id': 'pacbio_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'metagenomics', 'source_id': None, 'sink_id': 'spades', 'name': None, 'default_value': True}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/scaffolds', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/assembly_graph', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs_before_rr', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs_assembly_paths', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/scaffolds_assembly_paths', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'run_flye', 'source_id': 'run_flye', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'nano_raw', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'metagenome', 'source_id': 'metagenome', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'flye/assembly', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'ont_basecall_model', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'run_pilon', 'source_id': 'run_pilon', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'fixlist', 'source_id': 'pilon_fixlist', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'run_pilon', 'source_id': 'run_pilon', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'medaka/polished_assembly', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'spades/scaffolds', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'bbmap/sam', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'sam_to_sorted_bam/sortedbam', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'busco_data', 'source_id': 'busco_data', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'sam_to_sorted_bam/sortedbam', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_binning', 'name': None, 'default_value': 1}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'run_smetana', 'source_id': 'run_smetana', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'run_GEM', 'source_id': 'run_GEM', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'workflow_binning/bins', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'keep_filtered_reads', 'source_id': 'keep_filtered_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_nanopore/reports_folder', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_illumina/reports_folder', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'keep_filtered_reads', 'source_id': 'keep_filtered_reads', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_nanopore/reports_folder', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_illumina/reports_folder', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_compress/outfile', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_krona/krona_html', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_spades/outfile', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/params', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/log', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/internal_config', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/internal_dataset', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_flye', 'source_id': 'run_flye', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly_info', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/flye_log', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/params', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/metaquast_report', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/quastReport', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/metaquast_krona', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/not_aligned', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/runs_per_reference', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/polished_assembly', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/gaps_in_draft_coords', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders',",
    "tools": [],
    "id": 367,
    "text_field": "['workflow_metagenomics_assembly.cwl', 'workflow_metagenomics_assembly_packed.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: (Hybrid) Metagenomics workflow\ndoc: |\n  **Workflow (hybrid) metagenomic assembly and binning  **<br>\n    - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n      - FastQC (control)\n      - fastp (quality trimming)\n      - kraken2 (taxonomy)\n      - bbmap contamination filter\n    - Workflow Longread Quality:\t\n      - NanoPlot (control)\n      - filtlong (quality trimming)\n      - kraken2 (taxonomy)\n      - minimap2 contamination filter\n    - Kraken2 taxonomic classification of FASTQ reads\n    - SPAdes/Flye (Assembly)\n    - QUAST (Assembly quality report)\n\n    (optional)\n    - Workflow binnning https://workflowhub.eu/workflows/64?version=11\n      - Metabat2/MaxBin2/SemiBin\n      - DAS Tool\n      - CheckM\n      - BUSCO\n      - GTDB-Tk\n\n    (optional)\n    - Workflow Genome-scale metabolic models https://workflowhub.eu/workflows/372\n      - CarveMe (GEM generation)\n      - MEMOTE (GEM test suite)\n      - SMETANA (Species METabolic interaction ANAlysis)\n\n  Other UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://gitlab.com/m-unlock/cwl/-/tree/master/cwl <br>\n    Workflows: https://gitlab.com/m-unlock/cwl/-/tree/master/cwl/workflows<br>\n\n  **How to setup and use an UNLOCK workflow:**<br>\n  https://m-unlock.gitlab.io/docs/setup/setup.html<br>\n\noutputs:\n  read_filtering_output_keep:\n    label: Read filtering output\n    doc: Read filtering stats + filtered reads\n    type: Directory?\n    outputSource: keep_readfilter_files_to_folder/results\n  read_filtering_output:\n    label: Read filtering output\n    doc: Read filtering stats + filtered reads\n    type: Directory?\n    outputSource: readfilter_files_to_folder/results\n  assembly_output:\n    label: Assembly output\n    doc: Output from different assembly steps\n    type: Directory\n    outputSource: assembly_files_to_folder/results\n  # bam_output:\n  #   label: BAM files\n  #   doc: Mapping results in indexed BAM format\n  #   type: Directory?\n  #   outputSource: sorted_bam_files_to_folder/results\n  binning_output:\n    label: Binning output\n    doc: Binning outputfolders\n    type: Directory?\n    outputSource: binning_files_to_folder/results\n  gem_output:\n    label: Community GEM output\n    doc: Community GEM output folder\n    type: Directory?\n    outputSource: GEM_files_to_folder/results\n\ninputs:\n  identifier:\n    type: string\n    label: Identifier\n    doc: Identifier for this dataset used in this workflow (required)\n  illumina_forward_reads:\n    type: File[]?\n    doc: Illumina Forward sequence file(s)\n    label: Forward reads\n    loadListing: no_listing\n  illumina_reverse_reads:\n    type: File[]?\n    label: Reverse reads\n    doc: Illumina Reverse sequence file(s)\n    loadListing: no_listing\n  pacbio_reads:\n    type: File[]?\n    label: PacBio reads\n    doc: File(s) with PacBio reads in FASTQ format\n    loadListing: no_listing\n  nanopore_reads:\n    type: File[]?\n    label: Oxford Nanopore reads\n    doc: File(s) with Oxford Nanopore reads in FASTQ format\n    loadListing: no_listing\n  fastq_rich:\n    type: boolean\n    doc: | \n          Input fastq is generated by albacore, MinKNOW or guppy  with additional information concerning channel and time. \n          Used to creating more informative quality plots (default false)\n    label: Fastq rich (ONT)\n    default: false\n\n# Longread defaults taken from nf-core MAG\n  longread_minimum_length:\n    type: int?\n    doc: Minimum read length threshold (default 1000)\n    label: Minimum read length\n    default: 1000\n  longread_keep_percent:\n    type: float?\n    doc: Keep only this percentage of the best reads (measured by bases) (default 90)\n    label: Keep percentage\n    default: 90\n  longread_length_weight:\n    type: float?\n    doc: Weight given to the length score (default 10)\n    label: Length weigth\n    default: 10\n\n  filter_references:\n    type: File[]?\n    doc: Reference fasta file(s) used for pre-filtering. Can be gzipped (not mixed)\n    label: Reference file(s)\n    loadListing: no_listing\n  use_reference_mapped_reads:\n    type: boolean?\n    doc: Continue with reads mapped to the given reference (default false)\n    label: Keep mapped reads\n    default: false\n  keep_filtered_reads:\n    type: boolean?\n    doc: Keep filtered reads in the final output (default false)\n    label: Keep filtered reads\n    default: false\n  deduplicate:\n    type: boolean?\n    doc: Remove exact duplicate reads Illumina reads with fastp (default false)\n    label: Deduplicate reads\n    default: false\n  kraken2_confidence:\n    type: float?\n    label: Kraken2 confidence threshold\n    doc: Confidence score threshold must be in [0, 1] (default 0.0) \n  kraken2_database:\n    type: Directory[]?\n    doc: Database location of kraken2\n    label: Kraken2 database\n    default: []\n    loadListing: no_listing\n  gtdbtk_data:\n    type: Directory?\n    doc: Directory containing the GTDBTK repository\n    label: gtdbtk data directory\n    loadListing: no_listing\n  busco_data:\n    type: Directory?\n    label: BUSCO dataset\n    doc: Path to the BUSCO dataset downloaded location\n    loadListing: no_listing\n  ont_basecall_model:\n    type: string?\n    label: ONT Basecalling model for MEDAKA\n    doc: |\n      Used in MEDAKA\n      Basecalling model used with guppy default r941_min_high.\n      Available: r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r1041_e82_400bps_fast_g615, r1041_e82_400bps_fast_variant_g615, r1041_e82_400bps_hac_g615, r1041_e82_400bps_hac_variant_g615, r1041_e82_400bps_sup_g615, r1041_e82_400bps_sup_variant_g615, r104_e81_fast_g5015, r104_e81_fast_variant_g5015, r104_e81_hac_g5015, r104_e81_hac_variant_g5015, r104_e81_sup_g5015, r104_e81_sup_g610, r104_e81_sup_variant_g610, r10_min_high_g303, r10_min_high_g340, r941_e81_fast_g514, r941_e81_fast_variant_g514, r941_e81_hac_g514, r941_e81_hac_variant_g514, r941_e81_sup_g514, r941_e81_sup_variant_g514, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360, r941_sup_plant_g610, r941_sup_plant_variant_g610\n      (required for Medaka)\n  pilon_fixlist:\n    type: string?\n    label: Pilon fix list\n    doc: |\n      A comma-separated list of categories of issues to try to fix:\n        \"snps\": try to fix individual base errors;\n        \"indels\": try to fix small indels;\n        \"gaps\": try to fill gaps;\n        \"local\": try to detect and fix local misassemblies;\n        \"all\": all of the above (default);\n        \"bases\": shorthand for \"snps\" and \"indels\" (for back compatibility);\n        default; snps,gaps,local (conservative)\n    default: \"snps,gaps,local\"\n  genome_size:\n    type: string?\n    label: Genome Size\n    doc: Estimated genome size (for example, 5m or 2.6g)\n  metagenome:\n    type: boolean?\n    default: true\n    doc: Metagenome option for assemblers (default true)\n    label: When working with metagenomes\n  semibin_environment:\n    type: string?\n    doc: SemiBin built-in models; human_gut/dog_gut/ocean/soil/cat_gut/human_oral/mouse_gut/pig_gut/built_environment/wastewater/chicken_caecum/global (default global)\n    label: SemiBin Environment\n    default: global\n  # TODO Selection for binning to use spades or flye\n  run_spades:\n    type: boolean?\n    label: Use SPAdes\n    doc: Run with SPAdes assembler (default true)\n    default: true\n  only_assembler_mode_spades:\n    type: boolean?\n    label: Only spades assembler\n    doc: Run spades in only assembler mode (without read error correction) (default false)\n    default: false\n  run_flye:\n    type: boolean?\n    label: Use Flye\n    doc: Run with Flye assembler (default false)\n    default: false\n  run_pilon:\n    type: boolean?\n    label: Use Pilon\n    doc: Run with Pilon illumina assembly polishing (default false)\n    default: false\n  run_medaka:\n    type: boolean?\n    label: Use Medaka\n    doc: Run with Mekada assembly polishing with nanopore reads (default false)\n    default: false\n  binning:\n    type: boolean?\n    label: Run binning workflow\n    doc: Run with contig binning workflow (default false)\n    default: false\n  run_GEM:\n    type: boolean?\n    label: Run GEM workflow\n    doc: | \n          Run the community GEnomescale Metabolic models workflow on bins. (default false)\n          NOTE: Uses by default private docker containers \n    default: false\n  run_smetana:\n    type: boolean?\n    label: Run SMETANA\n    doc: Run SMETANA (Species METabolic interaction ANAlysis) (default false)\n    default: false\n  skip_qc_unfiltered:\n    type: boolean?\n    doc: Skip quality analyses of unfiltered input reads (default false)\n    label: Skip QC unfiltered\n    default: false\n\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes (default 2)\n    label: Number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: Maximum memory usage in megabytes (default 8GB)\n    label: Memory usage (MB)\n    default: 8000\n\n  destination:\n    type: string?\n    label: Output Destination (prov only)\n    doc: Not used in this workflow. Output destination used for cwl-prov reporting only.\n\nsteps:\n#############################################\n#### Preparation of reference files\n  prepare_fasta_db:\n    label: Prepare references\n    doc: Prepare references to a single fasta file and unique headers\n    when: $(inputs.fasta_files !== null && inputs.fasta_files.length !== 0)\n    run: ../tools/bbmap/prepare_fasta_db.cwl\n    in:\n      fasta_files: filter_references\n      output_file_name:\n        valueFrom: \"filter-reference_prepared.fa.gz\"\n    out: [fasta_db]\n\n#############################################\n#### Quality workflow ILLUMINA\n  workflow_quality_illumina:\n    label: Quality and filtering workflow\n    doc: Quality, filtering and taxonomic classification of Illumina reads\n    when: $(inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: workflow_illumina_quality.cwl\n    in:\n      identifier: identifier\n      forward_reads: illumina_forward_reads\n      reverse_reads: illumina_reverse_reads\n      skip_qc_unfiltered: skip_qc_unfiltered\n      deduplicate: deduplicate\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n        pickValue: all_non_null\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      memory: memory\n      threads: threads\n      step:\n        default: 1\n    out: [QC_reverse_reads, QC_forward_reads, reports_folder, kraken2_folder]\n\n#############################################\n#### Quality workflow Oxford Nanopore\n  workflow_quality_nanopore:\n    label: Oxford Nanopore quality workflow\n    doc: Quality, filtering and taxonomic classification workflow for Oxford Nanopore reads\n    when: $(inputs.longreads !== null && inputs.longreads !== 0)\n    run: workflow_longread_quality.cwl\n    in:\n      identifier: identifier\n      longreads: nanopore_reads\n      fastq_rich: fastq_rich\n      readtype:\n        default: \"Nanopore\"\n      skip_qc_unfiltered: skip_qc_unfiltered\n      keep_percent: longread_keep_percent\n      minimum_length: longread_minimum_length\n      length_weight: longread_length_weight\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n        pickValue: all_non_null\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      threads: threads\n      step:\n        default: 1\n    out: [filtered_reads, filtlong_log, reference_filter_longreads_log, nanoplot_unfiltered_folder, nanoplot_filtered_folder, kraken2_folder]\n#############################################\n#### Quality workflow PacBio\n  workflow_quality_pacbio:\n    label: PacBio quality and filtering workflow\n    doc: Quality, filtering and taxonomic classification for PacBio reads\n    when: $(inputs.longreads !== null && inputs.longreads !== 0)\n    run: workflow_longread_quality.cwl\n    in:\n      identifier: identifier\n      longreads: pacbio_reads\n      readtype:\n        default: \"PacBio\"\n      skip_qc_unfiltered: skip_qc_unfiltered\n      keep_percent: longread_keep_percent\n      minimum_length: longread_minimum_length\n      length_weight: longread_length_weight\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      threads: threads\n      step:\n        default: 1\n    out: [filtered_reads, filtlong_log, reference_filter_longreads_log, nanoplot_unfiltered_folder, nanoplot_filtered_folder, kraken2_folder]\n\n#############################################\n#### Assembly using SPAdes\n  spades:\n    doc: Genome assembly using SPAdes with illumina and or long reads\n    label: SPAdes assembly\n    when: $(inputs.run_spades && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/spades/spades.cwl\n    in:\n      run_spades: run_spades\n\n      forward_reads:\n        source: [ workflow_quality_illumina/QC_forward_reads ]\n        linkMerge: merge_nested\n      reverse_reads:\n        source: [ workflow_quality_illumina/QC_reverse_reads ]\n        linkMerge: merge_nested\n      pacbio_reads:\n        source: workflow_quality_pacbio/filtered_reads\n        valueFrom:\n          ${\n            var reads = null;\n            if (self !== null) { reads = [self]; }\n            return reads;\n          }\n      nanopore_reads:\n        source: workflow_quality_nanopore/filtered_reads\n        valueFrom:\n          ${\n            var reads = null;\n            if (self !== null) { reads = [self]; }\n            return reads;\n          }\n      only_assembler: only_assembler_mode_spades\n      metagenome: metagenome\n      memory: memory\n      threads: threads\n    out: [contigs, scaffolds, assembly_graph, contigs_assembly_paths, scaffolds_assembly_paths, contigs_before_rr, params, log, internal_config, internal_dataset]\n\n  compress_spades:\n    label: SPAdes compressed\n    doc: Compress the large Spades assembly output files\n    when: $(inputs.run_spades && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/bash/pigz.cwl\n    scatter: [inputfile]\n    scatterMethod: dotproduct\n    in:\n      run_spades: run_spades\n      forward_reads: illumina_forward_reads\n\n      threads: threads\n      inputfile:\n        source: [spades/contigs, spades/scaffolds,spades/assembly_graph,spades/contigs_before_rr, spades/contigs_assembly_paths,spades/scaffolds_assembly_paths]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    out: [outfile]\n\n#############################################\n#### De novo assembly with Flye\n  flye:\n    label: Flye assembly\n    doc: De novo assembly of single-molecule reads with Flye\n    when: $(inputs.run_flye)\n    run: ../tools/flye/flye.cwl\n    in:\n      run_flye: run_flye\n\n      nano_raw: workflow_quality_nanopore/filtered_reads\n      pacbio_raw: workflow_quality_pacbio/filtered_reads\n      threads: threads\n      metagenome: metagenome\n      genome_size: genome_size\n    out: [00_assembly, 10_consensus, 20_repeat, 30_contigger, 40_polishing, assembly, assembly_info, flye_log, params]\n\n#############################################\n#### Polishing of assembled genome with Medaka\n  medaka:\n    label: Medaka polishing of assembly\n    doc: Medaka for (ont reads) polishing of a assembled genome\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/medaka/medaka_consensus_py.cwl\n    in:\n      run_medaka: run_medaka\n\n      nanopore_reads: nanopore_reads\n      threads: threads\n      draft_assembly:\n        source:\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      reads: workflow_quality_nanopore/filtered_reads\n      basecall_model: ont_basecall_model\n    out: [polished_assembly, gaps_in_draft_coords] # probs, calls_to_draft\n  metaquast_medaka:\n    label: assembly evaluation\n    doc: evaluation of polished assembly with metaQUAST\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads !== 0)\n    run: ../tools/quast/metaquast.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n      assembly: medaka/polished_assembly\n      threads: threads\n    out: [metaquast_outdir, meta_combined_ref, meta_icarusDir, metaquast_krona, not_aligned, meta_downloaded_ref, runs_per_reference, meta_summary, meta_icarus, metaquast_log, metaquast_report, basicStats, quast_icarusDir, quast_icarusHtml, quastReport, quastLog, transposedReport]\n\n#############################################\n#### Workflow Pilon assembly polishing\n  workflow_pilon:\n    label: Pilon worklow\n    doc: Illumina reads assembly polishing with Pilon\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: workflow_pilon_mapping.cwl\n    in:\n      run_pilon: run_pilon\n\n      identifier:\n        source: identifier\n        valueFrom: $(self)_scaffolds\n      assembly:\n        source:\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      illumina_forward_reads: workflow_quality_illumina/QC_forward_reads\n      illumina_reverse_reads: workflow_quality_illumina/QC_reverse_reads\n      fixlist: pilon_fixlist\n      threads: threads\n      memory: memory\n    out: [pilon_polished_assembly, vcf, log]\n\n#############################################\n# #### Assembly quality assessment using quast\n#   quast:\n#     doc: Genome assembly quality assessment using Quast\n#     label: Quast workflow\n#     run: ../tools/quast/quast.cwl\n#     in:\n#       assembly: workflow_pilon/pilon_polished_assembly\n#     out: [basicStats, icarusDir, icarusHtml, quastReport, quastLog, transposedReport]\n#############################################\n#### Assembly evaluation with QUAST\n  metaquast_pilon:\n    label: Illumina assembly evaluation\n    doc: Illumina evaluation of pilon polished assembly with metaQUAST\n    when: $(inputs.run_pilon && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/quast/metaquast.cwl\n    in:\n      run_pilon: run_pilon\n      forward_reads: illumina_forward_reads\n\n      assembly: workflow_pilon/pilon_polished_assembly\n      threads: threads\n    out: [metaquast_outdir, meta_combined_ref, meta_icarusDir, metaquast_krona, not_aligned, meta_downloaded_ref, runs_per_reference, meta_summary, meta_icarus, metaquast_log, metaquast_report, basicStats, quast_icarusDir, quast_icarusHtml, quastReport, quastLog, transposedReport]\n\n#############################################\n#### Read mapping using BBmap for binning\n  bbmap:\n    label: BBmap read mapping\n    doc: Illumina read mapping using BBmap on assembled contigs\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/bbmap/bbmap.cwl\n    in:\n      binning: binning\n\n      identifier: identifier\n      reference:\n        source:\n        - workflow_pilon/pilon_polished_assembly\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      forward_reads: workflow_quality_illumina/QC_forward_reads\n      reverse_reads: workflow_quality_illumina/QC_reverse_reads\n      memory: memory\n      threads: threads\n    out: [sam, stats, covstats, log]\n#############################################\n#### Convert sam file to sorted bam for binning\n  sam_to_sorted_bam:\n    label: sam conversion to sorted bam\n    doc: Sam file conversion to a sorted indexed bam file\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/samtools/sam_to_sorted-bam.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      identifier: identifier\n      sam: bbmap/sam\n      threads: threads\n    out: [sortedbam]\n#############################################\n#### reports per contig alignment statistics\n  contig_read_counts:\n    label: Samtools idxstats\n    doc: Reports alignment summary statistics\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/samtools/samtools_idxstats.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      identifier: identifier\n      bam_file: sam_to_sorted_bam/sortedbam\n      threads: threads\n    out: [contigReadCounts]\n\n#############################################\n#### Binning workflow\n  workflow_binning:\n    label: Binning workflow\n    doc: Binning workflow to create bins\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: workflow_metagenomics_binning.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      busco_data: busco_data\n      identifier: identifier\n      gtdbtk_data: gtdbtk_data\n      semibin_environment: semibin_environment\n      assembly:\n        source:\n        - workflow_pilon/pilon_polished_assembly\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      bam_file: sam_to_sorted_bam/sortedbam\n      threads: threads\n      memory: memory\n      step:\n        default: 1\n    out: [bins,das_tool_output, maxbin2_output, semibin_output, metabat2_output,checkm_output, gtdbtk_output, busco_output, bins_summary_table, bins_read_stats, eukrep_fasta, eukrep_stats_file]\n#############################################\n#### GEM workflow\n  workflow_GEM:\n    label: GEM workflow\n    doc: CarveMe community genomescale metabolic models workflow from bins\n    when: $(inputs.binning && inputs.run_GEM)\n    run: workflow_metagenomics_GEM.cwl\n    in:\n      binning: binning\n      run_smetana: run_smetana\n      run_GEM: run_GEM\n\n      identifier: identifier\n      bins: workflow_binning/bins\n      threads: threads\n    out: [carveme_gems_folder,protein_fasta_folder,memote_folder,smetana_output,gemstats_out]\n\n#############################################\n\n# OUTPUT FOLDER PREPARATION #\n\n#############################################\n#### Filtered reads output folder (keep)\n  keep_readfilter_files_to_folder:\n    doc: Preparation of read filtering output files to a specific output folder\n    label: Read filtering output folder\n    when: $(inputs.keep_filtered_reads)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      keep_filtered_reads: keep_filtered_reads\n\n      files:\n        source: [workflow_quality_nanopore/filtered_reads, workflow_quality_pacbio/filtered_reads, workflow_quality_illumina/QC_forward_reads, workflow_quality_illumina/QC_reverse_reads, workflow_quality_nanopore/filtlong_log, workflow_quality_nanopore/reference_filter_longreads_log, workflow_quality_pacbio/filtlong_log, workflow_quality_pacbio/reference_filter_longreads_log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [workflow_quality_pacbio/kraken2_folder, workflow_quality_nanopore/kraken2_folder, workflow_quality_illumina/kraken2_folder, workflow_quality_illumina/reports_folder, workflow_quality_nanopore/nanoplot_unfiltered_folder, workflow_quality_nanopore/nanoplot_filtered_folder, workflow_quality_pacbio/nanoplot_unfiltered_folder, workflow_quality_pacbio/nanoplot_filtered_folder]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Read_filtering_and_classification\")\n    out:\n      [results]\n#############################################\n#### Filtered reads output folder\n  readfilter_files_to_folder:\n    doc: Preparation of read filtering output files to a specific output folder\n    label: Read filtering output folder\n    when: $(inputs.keep_filtered_reads == false)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      keep_filtered_reads: keep_filtered_reads\n\n      files:\n        source: [workflow_quality_nanopore/filtlong_log, workflow_quality_nanopore/reference_filter_longreads_log, workflow_quality_pacbio/filtlong_log, workflow_quality_pacbio/reference_filter_longreads_log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [workflow_quality_pacbio/kraken2_folder, workflow_quality_nanopore/kraken2_folder, workflow_quality_illumina/kraken2_folder, workflow_quality_illumina/reports_folder, workflow_quality_nanopore/nanoplot_unfiltered_folder, workflow_quality_nanopore/nanoplot_filtered_folder, workflow_quality_pacbio/nanoplot_unfiltered_folder, workflow_quality_pacbio/nanoplot_filtered_folder]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Read_filtering_and_classification\")\n    out:\n      [results]\n\n#############################################\n#### SPAdes Output folder\n  spades_files_to_folder:\n    doc: Preparation of SPAdes output files to a specific output folder\n    label: SPADES output to folder\n    when: $(inputs.run_spades)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_spades: run_spades\n\n      files:\n        source: [compress_spades/outfile, spades/params, spades/log, spades/internal_config, spades/internal_dataset]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"SPAdes_Assembly\")\n    out:\n      [results]\n#############################################\n#### Flye output folder\n  flye_files_to_folder:\n    doc: Preparation of Flye output files to a specific output folder\n    label: Flye output folder\n    when: $(inputs.run_flye)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_flye: run_flye\n\n      files:\n        source: [flye/assembly, flye/assembly_info, flye/flye_log, flye/params]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      # folders:\n        # source: [workflow_flye/00_assembly, workflow_flye/10_consensus, workflow_flye/20_repeat, workflow_flye/30_contigger, workflow_flye/40_polishing]\n        # linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Flye_Assembly\")\n    out:\n      [results]\n#############################################\n#### Medaka metaQUAST output folder\n  metaquast_medaka_files_to_folder:\n    doc: Preparation of metaQUAST output files to a specific output folder\n    label: Medaka metaQUAST output folder\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n\n      files:\n        source: [metaquast_medaka/metaquast_report, metaquast_medaka/quastReport]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_medaka/metaquast_krona, metaquast_medaka/not_aligned, metaquast_medaka/runs_per_reference]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"QUAST_Medaka_assembly_quality\")\n    out:\n      [results]\n#############################################\n#### Medaka + metaquast output folder\n  medaka_files_to_folder:\n    doc: Preparation of Medaka output files to a specific output folder\n    label: Medaka output folder\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n\n      files:\n        source: [medaka/polished_assembly, medaka/gaps_in_draft_coords] # , workflow_medaka/probs, workflow_medaka/calls_to_draft\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_medaka_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Medaka_assembly_polishing\")\n    out:\n      [results]\n#############################################\n#### Pilon metaQUAST output folder\n  metaquast_pilon_files_to_folder:\n    doc: Preparation of QUAST output files to a specific output folder\n    label: Illumina metaQUAST output folder\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_pilon: run_pilon\n      illumina_forward_reads: illumina_forward_reads\n\n      files:\n        source: [metaquast_pilon/metaquast_report, metaquast_pilon/quastReport]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_pilon/metaquast_krona, metaquast_pilon/not_aligned]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"QUAST_Illumina_polished_assembly_quality\")\n    out:\n      [results]\n#############################################\n#### Pilon + metaQUAST output folder\n  pilon_files_to_folder:\n    doc: Preparation of pilon output files to a specific output folder\n    label: Pilon output folder\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_pilon: run_pilon\n      illumina_forward_reads: illumina_forward_reads\n\n      files:\n        source: [workflow_pilon/vcf, workflow_pilon/pilon_polished_assembly, workflow_pilon/log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_pilon_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Illumina_polished_assembly\")\n    out:\n      [results]\n\n\n#############################################\n#### Combined assembly steps output folder\n  assembly_files_to_folder:\n    doc: Preparation of Flye output files to a specific output folder\n    label: Flye output folder\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      folders:\n        source: [spades_files_to_folder/results, flye_files_to_folder/results, medaka_files_to_folder/results, pilon_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Assembly\")\n    out:\n      [results]\n#############################################\n#### BAM files output folder\n  # sorted_bam_files_to_folder:\n  #   doc: Preparation of mapped reads (sorted bam files) to a specific output folder\n  #   label: Mapped reads output to folder\n  #   when: $(inputs.binning)\n  #   run: ../tools/expressions/files_to_folder.cwl\n  #   in:\n  #     binning: binning\n  #     files:\n  #       source: [sam_to_sorted_bam/sortedbam, bbmap/stats, contig_read_counts/contigReadCounts, bbmap/covstats, bbmap/log]\n  #       linkMerge: merge_flattened\n  #     destination:\n  #       valueFrom: $(\"5_BBMAP_ReadMapping\")\n  #   out:\n  #     [results]\n#############################################\n#### Binning output folder\n  binning_files_to_folder:\n    doc: Preparation of binning output files and folders to a specific output folder\n    label: Binning output to folder\n    when: $(inputs.binning)\n    run: ../too",
    "p_tag_content": "Accepts both Illumina and Long reads (ONT/PacBio) Workflow Illumina Quality:https://workflowhub.eu/workflows/336?version=1 Workflow LongRead Quality:https://workflowhub.eu/workflows/337 Kraken2 taxonomic classification of FASTQ reads SPAdes/Flye (Assembly) QUAST (Assembly quality report) Workflow binnninghttps://workflowhub.eu/workflows/64?version=11(optional) Workflow Genome-scale metabolic modelshttps://workflowhub.eu/workflows/372(optional) Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/367?version=1 Initial commit Views:2641Downloads:216 Created: 14th Jun 2022 at 09:14 Last updated: 7th Apr 2023 at 15:10 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 641,
    "discussion_links": "[{'id': '475', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Metagenomic GEMs from Assembly",
    "license": "Apache-2.0",
    "description": "### Workflow for Metagenomics from bins to metabolic models (GEMs)\n\n**Summary**\n  - Prodigal gene prediction\n  - CarveMe genome scale metabolic model reconstruction\n  - MEMOTE for metabolic model testing\n  - SMETANA Species METabolic interaction ANAlysis\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nTools: https://gitlab.com/m-unlock/cwl<br>\nWorkflows: https://gitlab.com/m-unlock/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['GEM', 'Genomics', 'Metagenomics', 'carveme', 'memote']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/372?version=1', 'commit': 'dfc8e9c43ea7eaa418b01496b0f551a96914a83a', 'ref': 'refs/heads/master', 'tree': '/workflows/372/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-07-07T08:23:15.000Z",
    "updated_at": "2023-01-16T14:01:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Metabolic pathway prediction', 'identifier': 'http://edamontology.org/operation_3929'}]",
    "topic_annotations": "[{'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence analysis', 'identifier': 'http://edamontology.org/topic_0080'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bins', 'name': 'Genome/bin', 'description': 'Bin/genome fasta files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'solver', 'name': None, 'description': 'Solver to be used in MEMOTE and SMETANA (defaul; cplex)', 'type': [{'type': 'string'}], 'default_value': 'cplex'}, {'id': 'threads', 'name': 'number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'destination', 'name': 'Output Destination (prov only)', 'description': 'Not used in this workflow. Output destination used for cwl-prov reporting only.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'carveme_gems_folder', 'name': 'CarveMe GEMs folder', 'description': 'CarveMe metabolic models folder', 'type': [{'type': 'Directory'}], 'source_ids': ['carveme_files_to_folder/results']}, {'id': 'protein_fasta_folder', 'name': 'Protein files folder', 'description': 'Prodigal predicted proteins (compressed) fasta files', 'type': [{'type': 'Directory'}], 'source_ids': ['prodigal_files_to_folder/results']}, {'id': 'memote_folder', 'name': 'MEMOTE outputs folder', 'description': 'MEMOTE outputs folder', 'type': [{'type': 'Directory'}], 'source_ids': ['memote_files_to_folder/results']}, {'id': 'smetana_output', 'name': 'SMETANA output', 'description': 'SMETANA detailed output table', 'type': [{'type': 'File'}], 'source_ids': ['smetana/detailed_output_tsv']}, {'id': 'gemstats_out', 'name': 'GEMstats', 'description': 'CarveMe GEM statistics', 'type': [{'type': 'File'}], 'source_ids': ['gemstats/carveme_GEMstats']}], 'steps': [{'id': 'prodigal', 'name': 'prodigal', 'description': 'prodigal gene/protein prediction', 'sink_ids': ['prodigal/predicted_proteins_faa']}, {'id': 'compress_prodigal', 'name': 'Compress proteins', 'description': 'Compress prodigal protein files', 'sink_ids': ['compress_prodigal/outfile']}, {'id': 'carveme', 'name': 'CarveMe', 'description': 'Genome-scale metabolic models reconstruction with CarveMe', 'sink_ids': ['carveme/carveme_gem']}, {'id': 'compress_carveme', 'name': 'Compress GEM', 'description': 'Compress CarveMe GEM', 'sink_ids': ['compress_carveme/outfile']}, {'id': 'gemstats', 'name': 'GEM stats', 'description': 'CarveMe GEM statistics', 'sink_ids': ['gemstats/carveme_GEMstats']}, {'id': 'smetana', 'name': 'SMETANA', 'description': 'Species METabolic interaction ANAlysis', 'sink_ids': ['smetana/detailed_output_tsv']}, {'id': 'memote_report_snapshot', 'name': 'MEMOTE report snapshot', 'description': \"Take a snapshot of a model's state and generate a report.\", 'sink_ids': ['memote_report_snapshot/report_html']}, {'id': 'memote_run', 'name': 'MEMOTE report snapshot', 'description': 'MEMOTE run analsis', 'sink_ids': ['memote_run/run_json']}, {'id': 'carveme_files_to_folder', 'name': 'CarveMe GEMs to folder', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['carveme_files_to_folder/results']}, {'id': 'prodigal_files_to_folder', 'name': 'Prodigal proteins to folder', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['prodigal_files_to_folder/results']}, {'id': 'memote_files_to_folder', 'name': 'MEMOTE output', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['memote_files_to_folder/results']}], 'links': [{'id': 'input_fasta', 'source_id': 'bins', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'single_mode', 'source_id': None, 'sink_id': 'prodigal', 'name': None, 'default_value': True}, {'id': 'inputfile', 'source_id': 'prodigal/predicted_proteins_faa', 'sink_id': 'compress_prodigal', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_prodigal', 'name': None, 'default_value': None}, {'id': 'protein_file', 'source_id': 'prodigal/predicted_proteins_faa', 'sink_id': 'carveme', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'carveme/carveme_gem', 'sink_id': 'compress_carveme', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_carveme', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'gemstats', 'name': None, 'default_value': None}, {'id': 'carveme_gems', 'source_id': 'carveme/carveme_gem', 'sink_id': 'gemstats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'solver', 'source_id': 'solver', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': None}, {'id': 'report_snapshot', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_produced_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_consumed_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_produced_with_open_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_consumed_with_open_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'memote_run', 'name': None, 'default_value': None}, {'id': 'run', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_produced_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_consumed_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_produced_with_open_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_consumed_with_open_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'files', 'source_id': 'compress_carveme/outfile', 'sink_id': 'carveme_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'carveme_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_prodigal/outfile', 'sink_id': 'prodigal_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'prodigal_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'memote_report_snapshot/report_html', 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'memote_run/run_json', 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 372,
    "text_field": "['workflow_metagenomics_GEM.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Metagenomic Binning from Assembly\ndoc: |\n  Workflow for Metagenomics from bins to metabolic model.<br>\n  Summary\n    - Prodigal gene prediction\n    - CarveMe genome scale metabolic model reconstruction\n    - MEMOTE for metabolic model testing\n    - SMETANA Species METabolic interaction ANAlysis\n\n  Other UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n  \n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://gitlab.com/m-unlock/cwl<br>\n    Workflows: https://gitlab.com/m-unlock/cwl/workflows<br>\n\n  **How to setup and use execute an UNLOCK workflow:**<br>\n  https://m-unlock.gitlab.io/docs/setup/setup.html<br>\n\noutputs:\n  carveme_gems_folder:\n    label: CarveMe GEMs folder\n    doc: CarveMe metabolic models folder\n    type: Directory\n    outputSource: carveme_files_to_folder/results\n  protein_fasta_folder:\n    label: Protein files folder\n    doc: Prodigal predicted proteins (compressed) fasta files\n    type: Directory\n    outputSource: prodigal_files_to_folder/results\n  memote_folder:\n    label: MEMOTE outputs folder\n    doc: MEMOTE outputs folder\n    type: Directory\n    outputSource: memote_files_to_folder/results\n\n  smetana_output:\n    label: SMETANA output\n    doc: SMETANA detailed output table\n    type: File\n    outputSource: smetana/detailed_output_tsv\n\n  gemstats_out:\n    label: GEMstats\n    doc: CarveMe GEM statistics\n    type: File\n    outputSource: gemstats/carveme_GEMstats\n\ninputs:\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: Identifier used\n  bins:\n    type: File[]\n    doc: Bin/genome fasta files\n    label: Genome/bin\n  solver:\n    type: string\n    doc: Solver to be used in MEMOTE and SMETANA (defaul; cplex)\n    default: \"cplex\"\n\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes\n    label: number of threads\n    default: 2\n\n\n  destination:\n    type: string?\n    label: Output Destination (prov only)\n    doc: Not used in this workflow. Output destination used for cwl-prov reporting only.\n\nsteps:\n#############################################\n#### Prodigal\n  prodigal:\n    label: prodigal\n    doc: prodigal gene/protein prediction\n    run: ../prodigal/prodigal.cwl\n    scatter: [input_fasta]\n    in:\n      input_fasta: bins\n      single_mode:\n        default: true\n    out: [predicted_proteins_faa]\n\n  compress_prodigal:\n    label: Compress proteins\n    doc: Compress prodigal protein files\n    run: ../bash/pigz.cwl\n    scatter: inputfile\n    in:\n      inputfile: \n        source: [prodigal/predicted_proteins_faa]\n        linkMerge: merge_flattened\n      threads: threads\n    out: [outfile]\n#############################################\n#### CarveMe\n  carveme:\n    label: CarveMe\n    doc: Genome-scale metabolic models reconstruction with CarveMe\n    run: ../carveme/carveme.cwl\n    scatter: [protein_file]\n    in:\n      protein_file: prodigal/predicted_proteins_faa\n    out: [carveme_gem]\n\n  compress_carveme:\n    label: Compress GEM\n    doc: Compress CarveMe GEM\n    run: ../bash/pigz.cwl\n    scatter: inputfile\n    in:\n      inputfile: \n        source: [carveme/carveme_gem]\n        linkMerge: merge_flattened\n      threads: threads\n    out: [outfile]\n#############################################\n#### GEM statistics\n  gemstats:\n    label: GEM stats\n    doc: CarveMe GEM statistics\n    run: ../carveme/GEMstats.cwl\n    in:\n      identifier: identifier\n      carveme_gems: carveme/carveme_gem\n    out: [carveme_GEMstats]\n#############################################\n#### SMETANA\n  smetana:\n    label: SMETANA\n    doc: Species METabolic interaction ANAlysis\n    run: ../smetana/smetana.cwl\n    in:\n      identifier: identifier\n      GEM: carveme/carveme_gem\n      solver: solver\n    out: [detailed_output_tsv]\n\n#############################################\n#### MEMOTE REPORT AND RUN\n  memote_report_snapshot:\n    label: MEMOTE report snapshot\n    doc: Take a snapshot of a model's state and generate a report. \n    run: ../memote/memote.cwl\n    scatter: [GEM]\n    in:\n      GEM: carveme/carveme_gem\n      report_snapshot:\n        default: true\n      skip_test_find_metabolites_produced_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_consumed_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_not_produced_with_open_bounds:\n        default: true\n      skip_test_find_metabolites_not_consumed_with_open_bounds:\n        default: true\n    out: [report_html]\n\n  memote_run:\n    label: MEMOTE report snapshot\n    doc: MEMOTE run analsis \n    run: ../memote/memote.cwl\n    scatter: [GEM]\n    in:\n      GEM: carveme/carveme_gem\n      run:\n        default: true\n      skip_test_find_metabolites_produced_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_consumed_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_not_produced_with_open_bounds:\n        default: true\n      skip_test_find_metabolites_not_consumed_with_open_bounds:\n        default: true\n    out: [run_json]\n\n#############################################\n#### Move to folder if not part of a workflow\n  carveme_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: CarveMe GEMs to folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [compress_carveme/outfile]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"CarveMe_GEMs\"\n    out:\n      [results]\n#############################################\n#### Move to folder if not part of a workflow\n  prodigal_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: Prodigal proteins to folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [compress_prodigal/outfile]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"Prodigal_proteins\"\n    out:\n      [results]\n#############################################\n#### Move to folder if not part of a workflow\n  memote_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: MEMOTE output\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [memote_report_snapshot/report_html,memote_run/run_json]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"MEMOTE\"\n    out:\n      [results]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2022-06-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/",
    "p_tag_content": "Summary Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:Tools:https://gitlab.com/m-unlock/cwlWorkflows:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/372?version=1 Initial commit Views:1990Downloads:182 Created: 7th Jul 2022 at 09:23 Last updated: 2nd Nov 2022 at 15:41 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 650,
    "discussion_links": [],
    "title": "A workflow for marine Genomic Observatories data analysis",
    "license": "Apache-2.0",
    "description": "# metaGOflow: A workflow for marine Genomic Observatories' data analysis\n\n![logo](https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png)\n\n\n## An EOSC-Life project\n\nThe workflows developed in the framework of this project are based on `pipeline-v5` of the MGnify resource.\n\n> This branch is a child of the [`pipeline_5.1`](https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1) branch\n> that contains all CWL descriptions of the MGnify pipeline version 5.1.\n\n## Dependencies\n\nTo run metaGOflow you need to make sure you have the following set on your computing environmnet first:\n\n- python3 [v 3.8+]\n- [Docker](https://www.docker.com) [v 19.+] or [Singularity](https://apptainer.org) [v 3.7.+]/[Apptainer](https://apptainer.org) [v 1.+]\n- [cwltool](https://github.com/common-workflow-language/cwltool) [v 3.+]\n- [rdflib](https://rdflib.readthedocs.io/en/stable/) [v 6.+]\n- [rdflib-jsonld](https://pypi.org/project/rdflib-jsonld/) [v 0.6.2]\n- [ro-crate-py](https://github.com/ResearchObject/ro-crate-py) [v 0.7.0]\n- [pyyaml](https://pypi.org/project/PyYAML/) [v 6.0]\n- [Node.js](https://nodejs.org/) [v 10.24.0+]\n- Available storage ~235GB for databases\n\n### Storage while running\n\nDepending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.\n\n## Installation\n\n### Get the EOSC-Life marine GOs workflow\n\n```bash\ngit clone https://github.com/emo-bon/MetaGOflow\ncd MetaGOflow\n```\n\n### Download necessary databases (~235GB)\n\nYou can download databases for the EOSC-Life GOs workflow by running the\n`download_dbs.sh` script under the `Installation` folder.\n\n```bash\nbash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \n```\nIf you have one or more already in your system, then create a symbolic link pointing\nat the `ref-dbs` folder or at one of its subfolders/files.\n\nThe final structure of the DB directory should be like the following:\n\n````bash\nuser@server:~/MetaGOflow: ls ref-dbs/\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\n````\n\n## How to run\n\n### Ensure that `Node.js` is installed on your system before running metaGOflow\n\nIf you have root access on your system, you can run the commands below to install it:\n\n##### DEBIAN/UBUNTU\n```bash\nsudo apt-get update -y\nsudo apt-get install -y nodejs\n```\n\n##### RH/CentOS\n```bash\nsudo yum install rh-nodejs<stream version> (e.g. rh-nodejs10)\n```\n\n### Set up the environment\n\n#### Run once - Setup environment\n\n- ```bash\n  conda create -n EOSC-CWL python=3.8\n  ```\n\n- ```bash\n  conda activate EOSC-CWL\n  ```\n\n- ```bash\n  pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\n\n  ```\n\n#### Run every time\n\n```bash\nconda activate EOSC-CWL\n``` \n\n### Run the workflow\n\n- Edit the `config.yml` file to set the parameter values of your choice. For selecting all the steps, then set to `true` the variables in lines [2-6].\n\n#### Using Singularity\n\n##### Standalone\n- run:\n   ```bash\n   ./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n   ``\n\n##### Using a cluster with a queueing system (e.g. SLURM)\n\n- Create a job file (e.g., SBATCH file)\n\n- Enable Singularity, e.g. module load Singularity & all other dependencies \n\n- Add the run line to the job file\n\n\n#### Using Docker\n\n##### Standalone\n- run:\n    ``` bash\n    ./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n  ```\n  HINT: If you are using Docker, you may need to run the above command without the `-s' flag.\n\n## Testing samples\nThe samples are available in the `test_input` folder.\n\nWe provide metaGOflow with partial samples from the Human Metagenome Project ([SRR1620013](https://www.ebi.ac.uk/ena/browser/view/SRR1620013) and [SRR1620014](https://www.ebi.ac.uk/ena/browser/view/SRR1620014))\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. \n\n\n## Hints and tips\n\n1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`.\n\n2. `RuntimeError`: slurm currently does not support shared caching, because it does not support cleaning up a worker\n   after the last job finishes.\n   Set the `--disableCaching` flag if you want to use this batch system.\n\n3. In case you are having errors like:\n\n```\ncwltool.errors.WorkflowException: Singularity is not available for this tool\n```\n\nYou may run the following command:\n\n```\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n```\n\n## Contribution\n\nTo make contribution to the project a bit easier, all the MGnify `conditionals` and `subworkflows` under\nthe `workflows/` directory that are not used in the metaGOflow framework, have been removed.   \nHowever, all the MGnify `tools/` and `utils/` are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their own `conditionals` and/or `subworkflows` by exploiting the\ncurrently supported `tools` and `utils` as well as by developing new `tools` and/or `utils`.\n\n\n<!-- cwltool --print-dot my-wf.cwl | dot -Tsvg > my-wf.svg -->",
    "latest_version": 3,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'running version with workaround in conditionals\\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=1', 'remote': 'https://github.com/emo-bon/pipeline-v5.git', 'commit': '28122db6839b3ca7a285dfc55dc7cc9bf98c3d46', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #38 from emo-bon/fix-bugs\\r\\n\\r\\nFixes logical expression to keep tmp. \\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=2', 'remote': 'https://github.com/emo-bon/MetaGOflow', 'commit': 'deb5427d5130d0cb5f42fabeed36488a6c31389f', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'Merge pull request #38 from emo-bon/fix-bugs\\r\\n\\r\\nFixes logical expression to keep tmp. \\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=3', 'remote': 'https://github.com/emo-bon/MetaGOflow.git', 'commit': 'deb5427d5130d0cb5f42fabeed36488a6c31389f', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/3/tree', 'doi': '10.48546/workflowhub.workflow.384.3'}]",
    "version": 3,
    "revision_comments": "Merge pull request #38 from emo-bon/fix-bugs\n\nFixes logical expression to keep tmp.",
    "created_at": "2023-05-16T20:41:04.000Z",
    "updated_at": "2023-05-16T22:01:12.000Z",
    "doi": "10.48546/workflowhub.workflow.384.3",
    "content_blobs": [],
    "creators": "[{'profile': '/people/253', 'family_name': 'Zafeiropoulos', 'given_name': 'Haris', 'affiliation': 'IMBBC-HCMR', 'orcid': 'https://orcid.org/0000-0002-4405-6802'}, {'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 384,
    "text_field": "['.github', 'workflows', 'Installation', 'templates', 'docker', 'scripts_bash', 'scripts_python2', 'scripts_python3', 'environment', 'schemas', 'test_input', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'yml-formats', 'EggNOG', 'GFF', 'Genome_properties', 'KEGG_analysis', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'accessioning', 'add_run_to_db', 'assign_MGYC', 'assign_MGYP', 'scripts', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'filtering_fasta', 'post-processing', 'GFF_antismash', 'fix_embl_gbk', 'fix_geneclusters_txt', 'reformat_antismash', 'rename_contigs', 'move_antismash_summary', 'generate_mapfile', 'index_fasta', 'CRISPRCasFinder', 'Combined_gene_caller', 'CGC', 'FragGeneScan', 'Prodigal', 'EggNOG-Parse', 'GO-slim', 'owltools', 'InterProScan', 'types-ymls', 'Pfam-Parse', 'RNA_prediction', 'biom-convert', 'cmsearch-deoverlap', 'cmsearch', 'easel', 'extract-coords', 'get_subunits_coords', 'get_subunits_fasta', 'krona', 'mapseq', 'mapseq2biom', 'pull_ncrnas', 'Raw_reads', 'mOTUs', 'SeqPrep', 'Trimmomatic', 'ymls-types', 'chunks', 'dna_chunker', 'fastp', 'fetch-tool', 'hmmer', 'hmmer_tab_modification', 'hmmscan', 'hmmsearch', 'mask-for-ITS', 'bash_scripts', 'bedtools', 'qc-filtering', 'qc-stats', 'summaries', 'utils', 'add_header', 'count_lines', 'fastq_to_fasta', 'generate_checksum', 'make_csv', 'pigz', 'remove_header', 'result-file-chunker', 'old_scripts', 'return_directory', 'workflows', 'conditionals', 'pseudo_files', 'subworkflows', 'assembly', 'cmsearch', 'functional-annotation', 'hmmer', 'db', 'raw_reads', 'cgc', '.editorconfig', 'conda.yml', '.gitignore', 'download_dbs.sh', 'get_singularity_images.sh', 'default.yml', 'LICENSE', 'README.md', 'config.yml', 'docker_build.sh', 'docker_push.sh', 'Dockerfile', 'add_header', 'add_symbol_json.sh', 'antismash_json_generation', 'awk_tool', 'biom-convert.sh', 'clean_motus_output.sh', 'diamond_post_run_join.sh', 'empty_tax.sh', 'esl-ssplit.sh', 'format_bedfile', 'pull_ncrnas.sh', 'remove_symbol.sh', 'run_antismash_short.sh', 'run_samtools_docker.sh', 'Dockerfile', 'MGRAST_base.py', 'run_quality_filtering.py', 'Dockerfile', 'antismash_rename_contigs.py', 'antismash_to_gff.py', 'antismash_to_gff_nojson.py', 'build_assembly_gff.py', 'change_antismash_output.py', 'change_geneclusters_ctg.py', 'change_geneclusters_ctg_js.py', 'count_fastq.py', 'count_lines.py', 'fastq_to_fasta.py', 'functional_stats.py', 'generate_checksum.py', 'generate_mapfile_prodigal.py', 'get_subunits.py', 'get_subunits_coords.py', 'give_pathways.py', 'hmmscan_tab.py', 'its-length-new.py', 'its-length.py', 'make_csv.py', 'move_antismash_summary.py', 'parsing_hmmscan.py', 'reformat-antismash.py', 'split_to_chunks.py', 'write_summaries.py', 'README.md', 'antismash.yml', 'interproscan.yml', 'toil.yml', 'ro-crate-metadata-example.json', 'run_wf.sh', 'EDAM_1.16.owl', 'EDAM_1.18.owl', 'EDAM_1.20.owl', 'slurm_run.sh', 'software_versions.tsv', 'test_1_fwd_HWLTKDRXY_600000.fastq.gz', 'test_2_rev_HWLTKDRXY_600000.fastq.gz', 'wgs-paired-SRR1620013_1.fastq.gz', 'wgs-paired-SRR1620013_2.fastq.gz', 'diamond_join.cwl', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'Diamond.blastp.cwl', 'Dockerfile', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Dockerfile', 'eggnog.cwl', 'build_assembly_gff.py', 'gff_generation.cwl', 'Dockerfile', 'genome_properties.cwl', 'give_pathways.py', 'kegg_pathways.cwl', 'make_graphs.py', 'modification_table.cwl', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'Dockerfile', 'add_run_db.cwl', 'assign_mgyc.cwl', 'assign_mgyp.cwl', 'add_run.py', 'assign_mgyc.py', 'assign_mgyp_db.py', '__init__.py', 'Dockerfile', '__init__.py', 'antismash_v4.cwl', 'install_4.2.0.sh', 'run_antismash_short.sh', 'check_value.cwl', 'filtering_fasta_for_antismash.cwl', '__init__.py', 'antismash_to_gff.cwl', 'antismash_to_gff_nojson.py', '__init__.py', 'change_antismash_output.py', 'change_output.cwl', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', '__init__.py', 'reformat-antismash.cwl', 'reformat-antismash.py', '__init__.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', '__init__.py', 'move_antismash_summary.cwl', 'move_antismash_summary.py', '__init__.py', 'generate_mapfile_prodigal.cwl', 'generate_mapfile_prodigal.py', 'fasta_index.cwl', 'run_samtools_docker.sh', 'CRISPRCasFinder.cwl', 'CRISPRCasFinder2Fasta.cwl', 'CRISPRCasFinder2GFF.cwl', 'Dockerfile', 'crisprcf2fasta.py', 'crisprcf2gff.py', 'runCRISPRCasFinderl.cwl', 'Dockerfile', '__init__.py', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'Dockerfile', 'Dockerfile', 'FGS.cwl', 'Dockerfile', 'prodigal.cwl', '__init__.py', 'faselector', 'post-processing.cwl', 'unite_protein_predictions.py', 'eggnog_annotations.cwl', 'eggnog_annotations.yml', 'Dockerfile', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'Dockerfile', 'InterProScan-v5.cwl', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'pfam_annotations.cwl', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert.cwl', 'biom-convert.sh', 'Dockerfile', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap.pl', 'Dockerfile', 'infernal-cmsearch-v1.1.2.cwl', 'Dockerfile', 'esl-index.sh', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs.cwl', 'Dockerfile', 'awk_tool', 'extract-coords.cwl', 'extract-coords_awk.cwl', 'get_subunits_coords.cwl', 'get_subunits_coords.py', '__init__.py', 'get_subunits.cwl', 'get_subunits.py', 'Dockerfile', 'krona.cwl', 'Dockerfile', 'mapseq.cwl', 'Dockerfile', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'Dockerfile', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'mOTUs.cwl', 'mOTUs_download_db.py', 'Dockerfile', 'seqprep.cwl', 'Dockerfile', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-SE.cwl', 'trimmomatic', 'trimmomatic-0.36.jar', 'trimmomatic.jar', 'trimmomatic_help.txt', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'protein_chunker.cwl', 'split_to_chunks.py', 'Dockerfile', 'fastp.cwl', 'fastp.yml', 'Dockerfile.fetch_tool', 'fetchdata-config-template.json', 'get_raw_data.sh', 'get_raw_data_run.cwl', 'get_raw_data_run.yml', 'Dockerfile', '__init__.py', '__init__.py', 'hmmer_tab_modification.cwl', 'hmmscan_tab.py', '__init__.py', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.yml', 'Dockerfile', 'bedtools.cwl', 'format-bedfile.cwl', 'its-length-new.py', 'suppress_tax.cwl', 'qc-filtering.cwl', 'run_quality_filtering.py', 'MGRAST_base.py', 'qc-stats.cwl', 'functional_stats.cwl', 'functional_stats.py', 'write_summaries.cwl', 'write_summaries.py', 'add_header', 'add_header.cwl', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_lines.cwl', 'count_lines.py', 'count_number_lines.cwl', 'create_yml.py', 'edit-ro-crate.py', 'fastq_to_fasta.cwl', 'fastq_to_fasta.py', 'generate_checksum.cwl', 'generate_checksum.py', 'make_csv.cwl', 'make_csv.py', 'make_flatten.cwl', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', 'remove_headers.cwl', 'remove_headers.yml', 'Dockerfile', 'create_chunks_file.cwl', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'run_result_file_chunker.py', 'result_chunker.cwl', 'result_chunker_subwf.cwl', 'split_fasta.cwl', 'split_fasta_by_size.sh', 'split_tsv.cwl', 'return_directory.cwl', 'size_file.cwl', 'touch_file.cwl', 'Func_ann_and_post_proccessing-subwf.cwl', 'megahit.cwl', 'qc.cwl', 'rna-prediction.cwl', 'gos_wf.cwl', 'gos_wf.svg', 'pseudo.merged.cmsearch.all.tblout.deoverlapped', 'pseudo.merged.fasta', 'pseudo.merged.unfiltered.fasta', 'pseudo.merged_CDS.faa', 'pseudo_1_clean.fastq.trimmed.fasta', 'pseudo_2_clean.fastq.trimmed.fasta', 'eggnog-subwf.cwl', 'chunking-subwf-IPS.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-assembly.cwl', 'cmsearch-multimodel-raw-data.cwl', 'func_summaries.cwl', 'functional-annotation.cwl', 'post-proccessing-go-pfam-stats-subwf.cwl', 'chunking-subwf-hmmscan.cwl', 'chunking-subwf-hmmsearch.cwl', 'test.hmm', 'test.hmm.h3f', 'test.hmm.h3i', 'test.hmm.h3m', 'test.hmm.h3p', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'predict_proteins_reads.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl']",
    "raw_text_content": "<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>A workflow for marine Genomic Observatories data analysis</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"3i0Bsx9k+iMBEOPlpzVxdAast6SHwz1YTS/klNB9xgg6+gI1J9lA835UPBQXdxaDp/xDEMfH/4bvCrBz7MAoZw==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/384?version=3\",\n  \"description\": \"# metaGOflow: A workflow for marine Genomic Observatories' data analysis\\r\\n\\r\\n![logo](https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png)\\r\\n\\r\\n\\r\\n## An EOSC-Life project\\r\\n\\r\\nThe workflows developed in the framework of this project are based on `pipeline-v5` of the MGnify resource.\\r\\n\\r\\n&gt; This branch is a child of the [`pipeline_5.1`](https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1) branch\\r\\n&gt; that contains all CWL descriptions of the MGnify pipeline version 5.1.\\r\\n\\r\\n## Dependencies\\r\\n\\r\\nTo run metaGOflow you need to make sure you have the following set on your computing environmnet first:\\r\\n\\r\\n- python3 [v 3.8+]\\r\\n- [Docker](https://www.docker.com) [v 19.+] or [Singularity](https://apptainer.org) [v 3.7.+]/[Apptainer](https://apptainer.org) [v 1.+]\\r\\n- [cwltool](https://github.com/common-workflow-language/cwltool) [v 3.+]\\r\\n- [rdflib](https://rdflib.readthedocs.io/en/stable/) [v 6.+]\\r\\n- [rdflib-jsonld](https://pypi.org/project/rdflib-jsonld/) [v 0.6.2]\\r\\n- [ro-crate-py](https://github.com/ResearchObject/ro-crate-py) [v 0.7.0]\\r\\n- [pyyaml](https://pypi.org/project/PyYAML/) [v 6.0]\\r\\n- [Node.js](https://nodejs.org/) [v 10.24.0+]\\r\\n- Available storage ~235GB for databases\\r\\n\\r\\n### Storage while running\\r\\n\\r\\nDepending on the analysis you are about to run, disk requirements vary.\\r\\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.\\r\\n\\r\\n## Installation\\r\\n\\r\\n### Get the EOSC-Life marine GOs workflow\\r\\n\\r\\n```bash\\r\\ngit clone https://github.com/emo-bon/MetaGOflow\\r\\ncd MetaGOflow\\r\\n```\\r\\n\\r\\n### Download necessary databases (~235GB)\\r\\n\\r\\nYou can download databases for the EOSC-Life GOs workflow by running the\\r\\n`download_dbs.sh` script under the `Installation` folder.\\r\\n\\r\\n```bash\\r\\nbash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \\r\\n```\\r\\nIf you have one or more already in your system, then create a symbolic link pointing\\r\\nat the `ref-dbs` folder or at one of its subfolders/files.\\r\\n\\r\\nThe final structure of the DB directory should be like the following:\\r\\n\\r\\n````bash\\r\\nuser@server:~/MetaGOflow: ls ref-dbs/\\r\\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\\r\\n````\\r\\n\\r\\n## How to run\\r\\n\\r\\n### Ensure that `Node.js` is installed on your system before running metaGOflow\\r\\n\\r\\nIf you have root access on your system, you can run the commands below to install it:\\r\\n\\r\\n##### DEBIAN/UBUNTU\\r\\n```bash\\r\\nsudo apt-get update -y\\r\\nsudo apt-get install -y nodejs\\r\\n```\\r\\n\\r\\n##### RH/CentOS\\r\\n```bash\\r\\nsudo yum install rh-nodejs (e.g. rh-nodejs10)\\r\\n```\\r\\n\\r\\n### Set up the environment\\r\\n\\r\\n#### Run once - Setup environment\\r\\n\\r\\n- ```bash\\r\\n  conda create -n EOSC-CWL python=3.8\\r\\n  ```\\r\\n\\r\\n- ```bash\\r\\n  conda activate EOSC-CWL\\r\\n  ```\\r\\n\\r\\n- ```bash\\r\\n  pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\\r\\n\\r\\n  ```\\r\\n\\r\\n#### Run every time\\r\\n\\r\\n```bash\\r\\nconda activate EOSC-CWL\\r\\n``` \\r\\n\\r\\n### Run the workflow\\r\\n\\r\\n- Edit the `config.yml` file to set the parameter values of your choice. For selecting all the steps, then set to `true` the variables in lines [2-6].\\r\\n\\r\\n#### Using Singularity\\r\\n\\r\\n##### Standalone\\r\\n- run:\\r\\n   ```bash\\r\\n   ./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\\r\\n   ``\\r\\n\\r\\n##### Using a cluster with a queueing system (e.g. SLURM)\\r\\n\\r\\n- Create a job file (e.g., SBATCH file)\\r\\n\\r\\n- Enable Singularity, e.g. module load Singularity &amp; all other dependencies \\r\\n\\r\\n- Add the run line to the job file\\r\\n\\r\\n\\r\\n#### Using Docker\\r\\n\\r\\n##### Standalone\\r\\n- run:\\r\\n    ``` bash\\r\\n    ./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\\r\\n  ```\\r\\n  HINT: If you are using Docker, you may need to run the above command without the `-s' flag.\\r\\n\\r\\n## Testing samples\\r\\nThe samples are available in the `test_input` folder.\\r\\n\\r\\nWe provide metaGOflow with partial samples from the Human Metagenome Project ([SRR1620013](https://www.ebi.ac.uk/ena/browser/view/SRR1620013) and [SRR1620014](https://www.ebi.ac.uk/ena/browser/view/SRR1620014))\\r\\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. \\r\\n\\r\\n\\r\\n## Hints and tips\\r\\n\\r\\n1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`.\\r\\n\\r\\n2. `RuntimeError`: slurm currently does not support shared caching, because it does not support cleaning up a worker\\r\\n   after the last job finishes.\\r\\n   Set the `--disableCaching` flag if you want to use this batch system.\\r\\n\\r\\n3. In case you are having errors like:\\r\\n\\r\\n```\\r\\ncwltool.errors.WorkflowException: Singularity is not available for this tool\\r\\n```\\r\\n\\r\\nYou may run the following command:\\r\\n\\r\\n```\\r\\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\\r\\n```\\r\\n\\r\\n## Contribution\\r\\n\\r\\nTo make contribution to the project a bit easier, all the MGnify `conditionals` and `subworkflows` under\\r\\nthe `workflows/` directory that are not used in the metaGOflow framework, have been removed.   \\r\\nHowever, all the MGnify `tools/` and `utils/` are available in this repo, even if they are not invoked in the current\\r\\nversion of metaGOflow.\\r\\nThis way, we hope we encourage people to implement their own `conditionals` and/or `subworkflows` by exploiting the\\r\\ncurrently supported `tools` and `utils` as well as by developing new `tools` and/or `utils`.\\r\\n\\r\\n\\r\\n\\r\\n\",\n  \"name\": \"A workflow for marine Genomic Observatories data analysis\",\n  \"url\": \"https://workflowhub.eu/workflows/384?version=3\",\n  \"keywords\": \"\",\n  \"version\": 3,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/253\",\n      \"name\": \"Haris Zafeiropoulos\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/27\",\n      \"name\": \"Martin Beracochea\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/85\",\n      \"name\": \"emo-bon\"\n    }\n  ],\n  \"dateCreated\": \"2023-05-16T20:41:04Z\",\n  \"dateModified\": \"2023-05-16T22:01:12Z\",\n  \"isPartOf\": [\n\n  ],\n  \"isBasedOn\": \"https://workflowhub.eu/workflows/384?version=2\",\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n\n  ],\n  \"output\": [\n\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F384%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: conda.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=588&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"A workflow for marine Genomic Observatories data analysis\" href=\"/workflows/384?version=3\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      A workflow for marine Genomic Observatories data analysis              <div class=\"version\">\n                <a class=\"dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                  eosc-life-gos @ deb5427 (latest)<span class=\"caret\"></span>\n                </a>\n                <ul class=\"dropdown-menu\" role=\"menu\">\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=3\">                            eosc-life-gos @ deb5427 (latest)<br/>\n</a>                      </li>\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=2\">                            eosc-life-gos @ deb5427 <br/>\n</a>                      </li>\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=1\">                            eosc-life-gos @ 28122db (earliest)<br/>\n</a>                      </li>\n                </ul>\n              </div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/emo-bon/MetaGOflow.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/384/ro_crate?version=3\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <h1>metaGOflow: A workflow for marine Genomic Observatories' data analysis</h1>\n<p><img src=\"https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png\" alt=\"logo\" /></p>\n<h2>An EOSC-Life project</h2>\n<p>The workflows developed in the framework of this project are based on <code>pipeline-v5</code> of the MGnify resource.</p>\n<blockquote>\n<p>This branch is a child of the <a rel=\"nofollow\" href=\"https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1\"><code>pipeline_5.1</code></a> branch\nthat contains all CWL descriptions of the MGnify pipeline version 5.1.</p>\n</blockquote>\n<h2>Dependencies</h2>\n<p>To run metaGOflow you need to make sure you have the following set on your computing environmnet first:</p>\n<ul>\n<li>python3 [v 3.8+]</li>\n<li><a rel=\"nofollow\" href=\"https://www.docker.com\">Docker</a> [v 19.+] or <a rel=\"nofollow\" href=\"https://apptainer.org\">Singularity</a> [v 3.7.+]/<a rel=\"nofollow\" href=\"https://apptainer.org\">Apptainer</a> [v 1.+]</li>\n<li><a rel=\"nofollow\" href=\"https://github.com/common-workflow-language/cwltool\">cwltool</a> [v 3.+]</li>\n<li><a rel=\"nofollow\" href=\"https://rdflib.readthedocs.io/en/stable/\">rdflib</a> [v 6.+]</li>\n<li><a rel=\"nofollow\" href=\"https://pypi.org/project/rdflib-jsonld/\">rdflib-jsonld</a> [v 0.6.2]</li>\n<li><a rel=\"nofollow\" href=\"https://github.com/ResearchObject/ro-crate-py\">ro-crate-py</a> [v 0.7.0]</li>\n<li><a rel=\"nofollow\" href=\"https://pypi.org/project/PyYAML/\">pyyaml</a> [v 6.0]</li>\n<li><a rel=\"nofollow\" href=\"https://nodejs.org/\">Node.js</a> [v 10.24.0+]</li>\n<li>Available storage ~235GB for databases</li>\n</ul>\n<h3>Storage while running</h3>\n<p>Depending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.</p>\n<h2>Installation</h2>\n<h3>Get the EOSC-Life marine GOs workflow</h3>\n<pre lang=\"bash\"><code>git clone https://github.com/emo-bon/MetaGOflow\ncd MetaGOflow\n</code></pre>\n<h3>Download necessary databases (~235GB)</h3>\n<p>You can download databases for the EOSC-Life GOs workflow by running the\n<code>download_dbs.sh</code> script under the <code>Installation</code> folder.</p>\n<pre lang=\"bash\"><code>bash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \n</code></pre>\n<p>If you have one or more already in your system, then create a symbolic link pointing\nat the <code>ref-dbs</code> folder or at one of its subfolders/files.</p>\n<p>The final structure of the DB directory should be like the following:</p>\n<pre lang=\"bash\"><code>user@server:~/MetaGOflow: ls ref-dbs/\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\n</code></pre>\n<h2>How to run</h2>\n<h3>Ensure that <code>Node.js</code> is installed on your system before running metaGOflow</h3>\n<p>If you have root access on your system, you can run the commands below to install it:</p>\n<h5>DEBIAN/UBUNTU</h5>\n<pre lang=\"bash\"><code>sudo apt-get update -y\nsudo apt-get install -y nodejs\n</code></pre>\n<h5>RH/CentOS</h5>\n<pre lang=\"bash\"><code>sudo yum install rh-nodejs (e.g. rh-nodejs10)\n</code></pre>\n<h3>Set up the environment</h3>\n<h4>Run once - Setup environment</h4>\n<ul>\n<li>\n<pre lang=\"bash\"><code>conda create -n EOSC-CWL python=3.8\n</code></pre>\n</li>\n<li>\n<pre lang=\"bash\"><code>conda activate EOSC-CWL\n</code></pre>\n</li>\n<li>\n<pre lang=\"bash\"><code>pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\n\n</code></pre>\n</li>\n</ul>\n<h4>Run every time</h4>\n<pre lang=\"bash\"><code>conda activate EOSC-CWL\n</code></pre>\n<h3>Run the workflow</h3>\n<ul>\n<li>Edit the <code>config.yml</code> file to set the parameter values of your choice. For selecting all the steps, then set to <code>true</code> the variables in lines [2-6].</li>\n</ul>\n<h4>Using Singularity</h4>\n<h5>Standalone</h5>\n<ul>\n<li>run:\n<pre lang=\"bash\"><code>./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n``\n\n</code></pre>\n</li>\n</ul>\n<h5>Using a cluster with a queueing system (e.g. SLURM)</h5>\n<ul>\n<li>\n<p>Create a job file (e.g., SBATCH file)</p>\n</li>\n<li>\n<p>Enable Singularity, e.g. module load Singularity &amp; all other dependencies</p>\n</li>\n<li>\n<p>Add the run line to the job file</p>\n</li>\n</ul>\n<h4>Using Docker</h4>\n<h5>Standalone</h5>\n<ul>\n<li>run:\n<pre lang=\"bash\"><code>./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n</code></pre>\nHINT: If you are using Docker, you may need to run the above command without the `-s' flag.</li>\n</ul>\n<h2>Testing samples</h2>\n<p>The samples are available in the <code>test_input</code> folder.</p>\n<p>We provide metaGOflow with partial samples from the Human Metagenome Project (<a rel=\"nofollow\" href=\"https://www.ebi.ac.uk/ena/browser/view/SRR1620013\">SRR1620013</a> and <a rel=\"nofollow\" href=\"https://www.ebi.ac.uk/ena/browser/view/SRR1620014\">SRR1620014</a>)\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way.</p>\n<h2>Hints and tips</h2>\n<ol>\n<li>\n<p>In case you are using Docker, it is strongly recommended to <strong>avoid</strong> installing it through <code>snap</code>.</p>\n</li>\n<li>\n<p><code>RuntimeError</code>: slurm currently does not support shared caching, because it does not support cleaning up a worker\nafter the last job finishes.\nSet the <code>--disableCaching</code> flag if you want to use this batch system.</p>\n</li>\n<li>\n<p>In case you are having errors like:</p>\n</li>\n</ol>\n<pre><code>cwltool.errors.WorkflowException: Singularity is not available for this tool\n</code></pre>\n<p>You may run the following command:</p>\n<pre><code>singularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n</code></pre>\n<h2>Contribution</h2>\n<p>To make contribution to the project a bit easier, all the MGnify <code>conditionals</code> and <code>subworkflows</code> under\nthe <code>workflows/</code> directory that are not used in the metaGOflow framework, have been removed.<br />\nHowever, all the MGnify <code>tools/</code> and <code>utils/</code> are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their own <code>conditionals</code> and/or <code>subworkflows</code> by exploiting the\ncurrently supported <code>tools</code> and <code>utils</code> as well as by developing new <code>tools</code> and/or <code>utils</code>.</p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n          <div class=\"alert alert-warning\">Could not render the workflow diagram.</div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/384?version=3\">https://workflowhub.eu/workflows/384?version=3</a></p>\n\n            \n                <p>\n      <b>DOI:</b> <a target=\"_blank\" href=\"https://doi.org/10.48546/workflowhub.workflow.384.3\">10.48546/workflowhub.workflow.384.3</a><span class=\"doi_icon\"></span>\n    </p>\n\n          </div>\n        </div>\n\n\n\n        \n\n\n        <h2>Version History</h2>\n<div class=\"list-group\">\n      <div class=\"list-group-item list-group-item-info\">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=3\">eosc-life-gos @ deb5427 (latest)</a>\n        <small>\n          Created 16th May 2023 at 21:41\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>Merge pull request #38 from emo-bon/fix-bugs</p>\n<p>Fixes logical expression to keep tmp.</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>deb5427</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n      <div class=\"list-group-item \">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=2\">eosc-life-gos @ deb5427 </a>\n        <small>\n          Created 16th May 2023 at 21:38\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>Merge pull request #38 from emo-bon/fix-bugs</p>\n<p>Fixes logical expression to keep tmp.</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>deb5427</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n      <div class=\"list-group-item \">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=1\">eosc-life-gos @ 28122db (earliest)</a>\n        <small>\n          Created 19th Sep 2022 at 19:00\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>running version with workaround in conditionals</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>28122db</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n</div>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        \n  \n<div class=\"panel panel-default\" id=\"author-box\"><div class=\"panel-heading\"><img alt=\"help\" data-tooltip=\"These are the people that created the item, along with the person who submitted it. Sometimes the submitter may have uploaded the item on behalf of its contributors, but was not involved in creating it.\" style=\"vertical-align: middle;\" src=\"/assets/famfamfam_silk/information-8cfe563be76fb11b27c8ba778f5d40ce6800b244d6ca58ef6e9973308efbe534.png\" /> Creators and Submitter</div><div class=\"panel-body\">\n    <h5 class=\"author-list-title\">Creators</h5>\n\n\n    <ul class=\"author-list\">\n            <li class=\"author-list-item\"><a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=253&amp;resource_type=Person\" data-tooltip=\"Haris Zafeiropoulos\" href=\"/people/253\"><img alt=\"\" src=\"/assets/avatar-images/134-20x20.png\" /></a> <a href=\"/people/253\">Haris Zafeiropoulos</a></li>\n            <li class=\"author-list-item\"><a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=27&amp;resource_type=Person\" data-tooltip=\"Martin Beracochea\" href=\"/people/27\"><img alt=\"\" src=\"/assets/avatar-images/18-20x20.png\" /></a> <a href=\"/people/27\">Martin Beracochea</a></li>\n    </ul>\n\n\n    <h5 class=\"author-list-title\">Submitter</h5>\n\n  <ul class=\"author-list\">\n    <li class=\"author-list-item\">\n        <a tooltip_suffix=\" (Submitter)\" class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=253&amp;resource_type=Person\" data-tooltip=\"Haris Zafeiropoulos  (Submitter)\" href=\"/people/253\"><img alt=\"\" src=\"/assets/avatar-images/134-20x20.png\" /></a>        <a href=\"/people/253\">Haris Zafeiropoulos</a>\n    </li>\n  </ul>\n</div></div>\n\n\n    \n<div class=\"panel panel-default\">\n  <div class=\"panel-heading\">\n    <button class=\"btn-default btn btn-xs clipboard-btn pull-right\" data-clipboard-target=\"#citation\">\n      <span class=\"glyphicon glyphicon-copy\" aria-hidden=\"true\"></span>\n      Copy\n    </button>\n    Citation\n  </div>\n  <div class=\"panel-body\">\n    <div id=\"citation\" class=\"well well-sm citation-box\">\n        <div data-citation-style=\"apa\">\n  Zafeiropoulos, H., &amp; Beracochea, M. (2023). <i>A workflow for marine Genomic Observatories data analysis</i>. WorkflowHub. https://doi.org/10.48546/WORKFLOWHUB.WORKFLOW.384.3\n</div>\n    </div>\n\n    <select id=\"citation-style-select\" class=\"form-control\" data-url=\"/citation/10.48546/workflowhub.workflow.384.3\"><option value=\"aci-materials-journal\">ACI Materials Journal</option>\n<option value=\"acm-sig-proceedings-long-author-list\">ACM SIG Proceedings (&quot;et al.&quot; for 15+ authors)</option>\n<option value=\"acm-sig-proceedings\">ACM SIG Proceedings (&quot;et al.&quot; for 3+ authors)</option>\n<option value=\"acm-sigchi-proceedings\">ACM SIGCHI Proceedings (2016)</option>\n<option value=\"acm-sigchi-proceedings-extended-abstract-format\">ACM SIGCHI Proceedings - Extended Abstract Format</option>\n<option value=\"acm-siggraph\">ACM SIGGRAPH</option>\n<option value=\"acme-an-international-journal-for-critical-geographies\">ACME: An International Journal for Critical Geographies</option>\n<option value=\"afte-journal\">AFTE Journal</option>\n<option value=\"aib-studi\">AIB studi (Italian)</option>\n<option value=\"aids\">AIDS</option>\n<option value=\"aims-press\">AIMS Press</option>\n<option value=\"ambio\">AMBIO</option>\n<option value=\"associacao-nacional-de-pesquisa-e-ensino-em-transportes\">ANPET - Congresso de Pesquisa e Ensino em Transportes (Portuguese - Brazil)</option>\n<option value=\"asaio-journal\">ASAIO Journal (American Society for Artificial Internal Organs)</option>\n<option value=\"assay-and-drug-development-technologies\">ASSAY and Drug Development Technologies</option>\n<option value=\"academy-of-management-review\">Academy of Management Review</option>\n<option value=\"accident-analysis-and-prevention\">Accident Analysis and Prevention</option>\n<option value=\"acta-amazonica\">Acta Amazonica</option>\n<option value=\"acta-anaesthesiologica-scandinavica\">Acta Anaesthesiologica Scandinavica</option>\n<option value=\"acta-anaesthesiologica-taiwanica\">Acta Anaesthesiologica Taiwanica</option>\n<option value=\"acta-botanica-croatica\">Acta Botanica Croatica</option>\n<option value=\"acta-chiropterologica\">Acta Chiropterologica</option>\n<option value=\"acta-ichthyologica-et-piscatoria\">Acta Ichthyologica et Piscatoria</option>\n<option value=\"acta-medica-peruana\">Acta Médica Peruana</option>\n<option value=\"acta-naturae\">Acta Naturae</option>\n<option value=\"acta-neurobiologiae-experimentalis\">Acta Neurobiologiae Experimentalis</option>\n<option value=\"acta-neurochirurgica\">Acta Neurochirurgica</option>\n<option value=\"acta-ophthalmolo",
    "p_tag_content": "The workflows developed in the framework of this project are based onpipeline-v5of the MGnify resource. This branch is a child of thepipeline_5.1branch\nthat contains all CWL descriptions of the MGnify pipeline version 5.1. To run metaGOflow you need to make sure you have the following set on your computing environmnet first: Depending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases. You can download databases for the EOSC-Life GOs workflow by running thedownload_dbs.shscript under theInstallationfolder. If you have one or more already in your system, then create a symbolic link pointing\nat theref-dbsfolder or at one of its subfolders/files. The final structure of the DB directory should be like the following: If you have root access on your system, you can run the commands below to install it: Create a job file (e.g., SBATCH file) Enable Singularity, e.g. module load Singularity & all other dependencies Add the run line to the job file The samples are available in thetest_inputfolder. We provide metaGOflow with partial samples from the Human Metagenome Project (SRR1620013andSRR1620014)\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. In case you are using Docker, it is strongly recommended toavoidinstalling it throughsnap. RuntimeError: slurm currently does not support shared caching, because it does not support cleaning up a worker\nafter the last job finishes.\nSet the--disableCachingflag if you want to use this batch system. In case you are having errors like: You may run the following command: To make contribution to the project a bit easier, all the MGnifyconditionalsandsubworkflowsunder\ntheworkflows/directory that are not used in the metaGOflow framework, have been removed.However, all the MGnifytools/andutils/are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their ownconditionalsand/orsubworkflowsby exploiting the\ncurrently supportedtoolsandutilsas well as by developing newtoolsand/orutils. SEEK ID:https://workflowhub.eu/workflows/384?version=3 DOI:10.48546/workflowhub.workflow.384.3 Merge pull request #38 from emo-bon/fix-bugs Fixes logical expression to keep tmp. Merge pull request #38 from emo-bon/fix-bugs Fixes logical expression to keep tmp. running version with workaround in conditionals Views:3177Downloads:470 Created: 19th Sep 2022 at 19:00 Last updated: 16th May 2023 at 23:00 This item has not yet been tagged. Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:emo-bon Organizations:IMBBC-HCMR Expertise:Metagenomics,amplicon analysis,Microbiology,Systems Biology Tools:CWL I am a bioinformatician working on microbial ecology and ecosystem functioning at the microbial dimension. A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The European Marine Omics Biodiversity Observation Network (EMO-BON) is the European Marine Biological Resource Centre’s (EMBRC) response to the need for ecosystem assessment and biological observation of European coastal waters. EMO BON is producing of genomic biodiversity data from 16 coastal stations at frequent time intervals. rich metadata are collected that allow the traceability of the data. Complementary data that included EOVs are collected together with the genomic data. EMO BON genomic\n... Space:Independent Teams Public web page:https://www.embrc.eu/emo-bon Organisms:Not specified"
  },
  {
    "": 694,
    "discussion_links": [],
    "title": "MGnify - amplicon analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline",
    "latest_version": 1,
    "tags": "['CWL', 'Metagenomics', 'rna', 'workflow']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/361?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/361/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:28:11.000Z",
    "updated_at": "2023-01-16T14:01:07.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": [],
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'single_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reverse_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'qc_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'stats_file_name', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'unite_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_otu_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'unite_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'itsonedb_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb_otu_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'itsonedb_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-statistics', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'hashsum_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['before-qc/input_files_hashsum_paired']}, {'id': 'hashsum_single', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/input_files_hashsum_single']}, {'id': 'fastp_filtering_json_report', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/fastp_filtering_json']}, {'id': 'gz_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/gz_files']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence-categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'ITS-length', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/ITS-length']}, {'id': 'suppressed_upload', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/suppressed_upload']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/filtered_fasta', 'before-qc/qc-statistics', 'before-qc/qc_summary', 'before-qc/qc-status', 'before-qc/input_files_hashsum_paired', 'before-qc/input_files_hashsum_single', 'before-qc/fastp_filtering_json']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/taxonomy-summary_folder', 'after-qc/suppressed_upload', 'after-qc/sequence-categorisation_folder', 'after-qc/rna-count', 'after-qc/gz_files', 'after-qc/ITS-length', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}], 'links': [{'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'single_reads', 'source_id': 'single_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'qc_min_length', 'source_id': 'qc_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'stats_file_name', 'source_id': 'stats_file_name', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_db', 'source_id': 'unite_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_tax', 'source_id': 'unite_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_otu_file', 'source_id': 'unite_otu_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'unite_label', 'source_id': 'unite_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb', 'source_id': 'itsonedb', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_tax', 'source_id': 'itsonedb_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_otu_file', 'source_id': 'itsonedb_otu_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'itsonedb_label', 'source_id': 'itsonedb_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}]}",
    "tools": [],
    "id": 361,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "os: linux\n\nsudo: true\nlanguage: python\npython: 3.6\nservices:\n  - docker\n\nenv:\n  - TOOL=\"Validate\" CONF_SCRIPT=\"travis/conformance-tests.sh\"\n#  - TOOL=\"SUPPRESS\" TEST_SUPPRESS_SUBWF=\"travis/cwltest.sh\"\n\ninstall:\n  - travis/install-nodejs.sh\n  - pip install -r travis/requirements.txt\n\nbefore_script:\n  - pip freeze\n  - pwd\n\nscript:\n  - bash ${CONF_SCRIPT}\n#  - bash  ${TEST_SUPPRESS_SUBWF} travis/tests/amplicon-suppress/1.yml\n\n<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>MGnify - amplicon analysis pipeline</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"sEvBeMFtp0PkqOzE1d2cPKnYcdthNe5k3QV+9hxddzBg3JR58EI9oydd7g1lSWSk3/9v0lrrQ+MdR6vpUFixqQ==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/361?version=1\",\n  \"description\": \"MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\\r\\n\\r\\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline\\r\\n\",\n  \"name\": \"MGnify - amplicon analysis pipeline\",\n  \"url\": \"https://workflowhub.eu/workflows/361?version=1\",\n  \"image\": \"https://workflowhub.eu/workflows/382/diagram?version=1\",\n  \"keywords\": \"CWL, Metagenomics, rna, workflow\",\n  \"version\": 1,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20L%20Mitchell\",\n      \"name\": \"Alex L Mitchell\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alexandre%20Almeida\",\n      \"name\": \"Alexandre Almeida\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Martin%20Beracochea\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Miguel%20Boland\",\n      \"name\": \"Miguel Boland\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Josephine%20Burgin\",\n      \"name\": \"Josephine Burgin\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Guy%20Cochrane\",\n      \"name\": \"Guy Cochrane\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Michael%20R%20Crusoe\",\n      \"name\": \"Michael R Crusoe\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Varsha%20Kale\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Simon%20C%20Potter\",\n      \"name\": \"Simon C Potter\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Lorna%20J%20Richardson\",\n      \"name\": \"Lorna J Richardson\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Ekaterina%20Sakharova\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Maxim%20Scheremetjew\",\n      \"name\": \"Maxim Scheremetjew\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Anton%20Korobeynikov\",\n      \"name\": \"Anton Korobeynikov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20Shlemov\",\n      \"name\": \"Alex Shlemov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Olga%20Kunyavskaya\",\n      \"name\": \"Olga Kunyavskaya\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alla%20Lapidus\",\n      \"name\": \"Alla Lapidus\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Robert%20D%20Finn\",\n      \"name\": \"Robert D Finn\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/9\",\n      \"name\": \"MGnify\"\n    }\n  ],\n  \"dateCreated\": \"2022-06-07T08:28:11Z\",\n  \"dateModified\": \"2023-01-16T14:01:07Z\",\n  \"isPartOf\": [\n\n  ],\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-single_reads\",\n      \"name\": \"single_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-forward_reads\",\n      \"name\": \"forward_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-reverse_reads\",\n      \"name\": \"reverse_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-qc_min_length\",\n      \"name\": \"qc_min_length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-stats_file_name\",\n      \"name\": \"stats_file_name\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_db\",\n      \"name\": \"ssu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_db\",\n      \"name\": \"lsu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_tax\",\n      \"name\": \"ssu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_tax\",\n      \"name\": \"lsu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_otus\",\n      \"name\": \"ssu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_otus\",\n      \"name\": \"lsu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-rfam_models\",\n      \"name\": \"rfam_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-rfam_model_clans\",\n      \"name\": \"rfam_model_clans\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-ssu_label\",\n      \"name\": \"ssu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-lsu_label\",\n      \"name\": \"lsu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-5s_pattern\",\n      \"name\": \"5s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-5.8s_pattern\",\n      \"name\": \"5.8s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_db\",\n      \"name\": \"unite_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_tax\",\n      \"name\": \"unite_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_otu_file\",\n      \"name\": \"unite_otu_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-unite_label\",\n      \"name\": \"unite_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb\",\n      \"name\": \"itsonedb\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_tax\",\n      \"name\": \"itsonedb_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_otu_file\",\n      \"name\": \"itsonedb_otu_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-inputs-itsonedb_label\",\n      \"name\": \"itsonedb_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"output\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc-statistics\",\n      \"name\": \"qc-statistics\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc_summary\",\n      \"name\": \"qc_summary\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-qc-status\",\n      \"name\": \"qc-status\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-hashsum_paired\",\n      \"name\": \"hashsum_paired\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-hashsum_single\",\n      \"name\": \"hashsum_single\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-fastp_filtering_json_report\",\n      \"name\": \"fastp_filtering_json_report\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-gz_files\",\n      \"name\": \"gz_files\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-sequence-categorisation_folder\",\n      \"name\": \"sequence-categorisation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-taxonomy-summary_folder\",\n      \"name\": \"taxonomy-summary_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-rna-count\",\n      \"name\": \"rna-count\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-ITS-length\",\n      \"name\": \"ITS-length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-suppressed_upload\",\n      \"name\": \"suppressed_upload\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-completed_flag_file\",\n      \"name\": \"completed_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___amplicon_analysis_pipeline-outputs-no_tax_flag_file\",\n      \"name\": \"no_tax_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F361%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: tests.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=382&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"MGnify - amplicon analysis pipeline\" href=\"/workflows/361?version=1\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      MGnify - amplicon analysis pipeline              <div class=\"version\">v5.0.7</div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/EBI-Metagenomics/pipeline-v5.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/361/ro_crate?version=1\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <p>MGnify (<a rel=\"nofollow\" href=\"http://www.ebi.ac.uk/metagenomics\">http://www.ebi.ac.uk/metagenomics</a>) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.</p>\n<p>Documentation: <a rel=\"nofollow\" href=\"https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline\">https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline</a></p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n                    <embed type=\"image/svg+xml\" src=\"/workflows/361/diagram?version=1\" class=\"svg-pan-zoom\" width=\"1000\" height=\"500\"></embed>\n                    <p class=\"help-block\">Click and drag the diagram to pan, double click or use the controls to zoom.</p>\n                </div>\n              </div>\n            </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/361?version=1\">https://workflowhub.eu/workflows/361?version=1</a></p>\n\n            \n            \n          </div>\n        </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"workflow-internals\">\n    <h2>Inputs</h2>\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-hover steps\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"id\">single_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">forward_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">reverse_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">qc_min_length</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>int</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">stats_file_name</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_otus</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_otus</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">rfam_models</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string[]</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">rfam_model_clans</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_label</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">lsu_label</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">5s_pattern</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">5.8s_pattern</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>string</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">unite_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">unite_tax</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>stri",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#amplicon-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/361?version=1 Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:2707Downloads:233 Created: 7th Jun 2022 at 09:28 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 695,
    "discussion_links": "[{'id': '437', 'label': 'Gitter', 'url': 'https://gitter.im/microbiome-informatics/community?utm_source=share-link&utm_medium=link&utm_campaign=share-link'}]",
    "title": "MGnify - raw-reads analysis pipeline",
    "license": "Apache-2.0",
    "description": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\n\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline",
    "latest_version": 1,
    "tags": "['CWL', 'Metagenomics', 'Workflows']",
    "versions": "[{'version': 1, 'revision_comments': 'Fix collect_scripts.py', 'url': 'https://workflowhub.eu/workflows/362?version=1', 'remote': 'https://github.com/EBI-Metagenomics/pipeline-v5.git', 'commit': '981aafc0df341a2536ed5059695bb7c33af4d3ee', 'ref': 'refs/tags/v5.0.7', 'tree': '/workflows/362/git/1/tree', 'doi': '10.48546/workflowhub.workflow.362.1'}]",
    "version": 1,
    "revision_comments": "Fix collect_scripts.py",
    "created_at": "2022-06-07T08:40:40.000Z",
    "updated_at": "2023-01-16T14:01:12.000Z",
    "doi": "10.48546/workflowhub.workflow.362.1",
    "content_blobs": [],
    "creators": "[{'profile': '/people/355', 'family_name': 'Sakharova', 'given_name': 'Ekaterina', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0001-6867-2039'}, {'profile': '/people/354', 'family_name': 'Kale', 'given_name': 'Varsha', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0002-3503-6383'}, {'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": "{'inputs': [{'id': 'single_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'forward_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'reverse_reads', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'default_value': None}, {'id': 'qc_min_length', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'ssu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'lsu_db', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'default_value': None}, {'id': 'ssu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_tax', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ssu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_otus', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'rfam_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'rfam_model_clans', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'other_ncRNA_models', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ssu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'lsu_label', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': '5.8s_pattern', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'CGC_postfixes', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'cgc_chunk_size', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'name': None, 'description': None, 'type': [{'type': 'int'}], 'default_value': None}, {'id': 'func_ann_names_ips', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'func_ann_names_hmmer', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_omit_alignment', 'name': None, 'description': None, 'type': [{'type': 'boolean'}], 'default_value': None}, {'id': 'HMM_name_database', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'hmmsearch_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'EggNOG_db', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'EggNOG_diamond_db', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'EggNOG_data_dir', 'name': None, 'description': None, 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'InterProScan_databases', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'InterProScan_applications', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'InterProScan_outputFormat', 'name': None, 'description': None, 'type': [{'type': 'string[]'}], 'default_value': None}, {'id': 'ips_header', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'ko_file', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'go_config', 'name': None, 'description': None, 'type': [{'type': 'string'}], 'default_value': None}], 'outputs': [{'id': 'qc-statistics', 'name': None, 'description': None, 'type': [{'type': 'Directory'}], 'source_ids': ['before-qc/qc-statistics']}, {'id': 'qc_summary', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc_summary']}, {'id': 'qc-status', 'name': None, 'description': None, 'type': [{'type': 'File'}], 'source_ids': ['before-qc/qc-status']}, {'id': 'hashsum_paired', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['before-qc/input_files_hashsum_paired']}, {'id': 'hashsum_single', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/input_files_hashsum_single']}, {'id': 'fastp_filtering_json_report', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['before-qc/fastp_filtering_json']}, {'id': 'sequence-categorisation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/sequence_categorisation_folder']}, {'id': 'taxonomy-summary_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/taxonomy-summary_folder']}, {'id': 'rna-count', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/rna-count']}, {'id': 'motus_output', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/motus_output']}, {'id': 'compressed_files', 'name': None, 'description': None, 'type': [{'type': 'File[]'}], 'source_ids': ['after-qc/compressed_files']}, {'id': 'functional_annotation_folder', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/functional_annotation_folder']}, {'id': 'stats', 'name': None, 'description': None, 'type': [{'type': 'Directory?'}], 'source_ids': ['after-qc/stats']}, {'id': 'chunking_nucleotides', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_nucleotides']}, {'id': 'chunking_proteins', 'name': None, 'description': None, 'type': [{'type': 'File[]?'}], 'source_ids': ['after-qc/chunking_proteins']}, {'id': 'completed_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_file_flag/created_file']}, {'id': 'no_cds_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['touch_no_cds_flag/created_file']}, {'id': 'no_tax_flag_file', 'name': None, 'description': None, 'type': [{'type': 'File?'}], 'source_ids': ['after-qc/optional_tax_file_flag']}], 'steps': [{'id': 'before-qc', 'name': None, 'description': None, 'sink_ids': ['before-qc/qc-statistics', 'before-qc/qc_summary', 'before-qc/qc-status', 'before-qc/motus_input', 'before-qc/filtered_fasta', 'before-qc/input_files_hashsum_paired', 'before-qc/input_files_hashsum_single', 'before-qc/fastp_filtering_json']}, {'id': 'after-qc', 'name': None, 'description': None, 'sink_ids': ['after-qc/motus_output', 'after-qc/sequence_categorisation_folder', 'after-qc/taxonomy-summary_folder', 'after-qc/rna-count', 'after-qc/compressed_files', 'after-qc/functional_annotation_folder', 'after-qc/stats', 'after-qc/chunking_nucleotides', 'after-qc/chunking_proteins', 'after-qc/count_CDS', 'after-qc/optional_tax_file_flag']}, {'id': 'touch_file_flag', 'name': None, 'description': None, 'sink_ids': ['touch_file_flag/created_file']}, {'id': 'touch_no_cds_flag', 'name': None, 'description': None, 'sink_ids': ['touch_no_cds_flag/created_file']}], 'links': [{'id': 'single_reads', 'source_id': 'single_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'forward_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'reverse_reads', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'qc_min_length', 'source_id': 'qc_min_length', 'sink_id': 'before-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'motus_input', 'source_id': 'before-qc/motus_input', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'filtered_fasta', 'source_id': 'before-qc/filtered_fasta', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_db', 'source_id': 'ssu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_db', 'source_id': 'lsu_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_tax', 'source_id': 'ssu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_tax', 'source_id': 'lsu_tax', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_otus', 'source_id': 'ssu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_otus', 'source_id': 'lsu_otus', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_models', 'source_id': 'rfam_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'rfam_model_clans', 'source_id': 'rfam_model_clans', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'other_ncRNA_models', 'source_id': 'other_ncRNA_models', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ssu_label', 'source_id': 'ssu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'lsu_label', 'source_id': 'lsu_label', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5s_pattern', 'source_id': '5s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': '5.8s_pattern', 'source_id': '5.8s_pattern', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_config', 'source_id': 'CGC_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'CGC_postfixes', 'source_id': 'CGC_postfixes', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'cgc_chunk_size', 'source_id': 'cgc_chunk_size', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_hmm', 'source_id': 'protein_chunk_size_hmm', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'protein_chunk_size_IPS', 'source_id': 'protein_chunk_size_IPS', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_ips', 'source_id': 'func_ann_names_ips', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'func_ann_names_hmmer', 'source_id': 'func_ann_names_hmmer', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_gathering_bit_score', 'source_id': 'HMM_gathering_bit_score', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_omit_alignment', 'source_id': 'HMM_omit_alignment', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'HMM_name_database', 'source_id': 'HMM_name_database', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'hmmsearch_header', 'source_id': 'hmmsearch_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_db', 'source_id': 'EggNOG_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_diamond_db', 'source_id': 'EggNOG_diamond_db', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'EggNOG_data_dir', 'source_id': 'EggNOG_data_dir', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_databases', 'source_id': 'InterProScan_databases', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_applications', 'source_id': 'InterProScan_applications', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'InterProScan_outputFormat', 'source_id': 'InterProScan_outputFormat', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ips_header', 'source_id': 'ips_header', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'go_config', 'source_id': 'go_config', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'ko_file', 'source_id': 'ko_file', 'sink_id': 'after-qc', 'name': None, 'default_value': None}, {'id': 'status', 'source_id': 'before-qc/qc-status', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'count', 'source_id': 'after-qc/rna-count', 'sink_id': 'touch_file_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_file_flag', 'name': None, 'default_value': 'wf-completed'}, {'id': 'value', 'source_id': 'after-qc/count_CDS', 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': None}, {'id': 'filename', 'source_id': None, 'sink_id': 'touch_no_cds_flag', 'name': None, 'default_value': 'no-cds'}]}",
    "tools": [],
    "id": 362,
    "text_field": "['cwl_tests', 'tools', 'antismash_gff', 'environments', 'input_examples', 'amplicon', 'assembly', 'output_examples_json', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'Files', 'output_example', 'expected-output', 'EggNOG', 'eggNOG', 'eggnogmapper', 'expected-output', 'GFF', 'expected-output', 'Genome_properties', 'expected-output', 'test-input', 'KEGG_analysis', 'Docker', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'expected-output', 'Viral', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'post-processing', 'fix_embl_gbk', 'fix_geneclusters_txt', 'gff_antismash', 'reformat_antismash', 'rename_contigs', 'test-input', 'test-output', 'ymls', 'move_antismash_summary', 'index_fasta', 'test-input', 'Combined_gene_caller', 'CGC', 'expected-output', 'files', 'GO-slim', 'expected-output', 'owltools', 'test-input', 'InterProScan', 'expected-output', 'Pfam-Parse', 'expected_output', 'test-input', 'RNA_prediction', 'biom-convert', 'expected_output', 'biom-convert', 'empty_tax', 'input', 'cmsearch-deoverlap', 'expected_output', 'test-input', 'cmsearch', 'expected_output', 'test-input', 'easel', 'expected-output', 'test-input', 'extract-coords', 'expected-output', 'test-input', 'get_subunits_coords', 'expected-output', 'test-input', 'get_subunits_fasta', 'expected-input', 'expected-output', 'krona', 'expected-output', 'test-input', 'mapseq', 'expected-output', 'mapseq2biom', 'expected-output', 'test-input', 'pull_ncrnas', 'expected-output', 'Raw_reads', 'mOTUs', 'expected-output', 'test-input', 'SeqPrep', 'Trimmomatic', 'expected_output', 'test-input', 'chunks', 'dna_chunker', 'expected-output-fasta_chunker', 'test-input', 'hmmer', 'db', 'expected-output', 'hmmscan', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'mask-for-ITS', 'bash_scripts', 'expected-output', 'test-input', 'LSU', 'SSU', 'its', 'qc-filtering', 'expected-output', 'test-input', 'qc-stats', 'expected-output', 'qc-statistics', 'test-inputs', 'summaries', 'travis', 'tests', 'amplicon-suppress', 'old_tests_for_tools', 'test-input', 'workflows', 'utils', 'add_header', 'count_lines', 'empty-fasta', 'expected_outputs', 'fasta_chunker', 'fasta_chunker', 'fastq_to_fasta', 'generate_checksum', 'hmmscan_tab_modification', 'expected-output', 'test-input', 'make_csv', 'pigz', 'result-file-chunker', 'test-inputs', 'workflows', 'conditionals', 'amplicon', 'assembly', 'raw-reads', 'profiling', 'subworkflows', 'amplicon', 'assembly', 'raw_reads', 'ymls', '.gitignore', '.travis.yml', 'LICENSE', 'README.md', 'collect_scripts.py', 'README.md', 'run_tests.sh', 'tests.yml', 'antismash_final.embl', 'antismash_geneclusters.txt', 'antismash_gff.yml', 'README.md', 'ebi-conda-py2.yml', 'ebi-conda-py3.yml', 'amplicon-paired-ERR2237853_1.fastq.gz', 'amplicon-paired-ERR2237853_2.fastq.gz', 'amplicon-single-ERR1594332.fastq.gz', 'ERR2237853_MERGED_FASTQ.fasta.gz', 'ERR632171_FASTQ.fasta', 'assembly-SRR1620013_small_FASTA.fasta.gz', 'assembly-SRR1620013_small_FASTA_FASTA.cmsearch.all.tblout.deoverlapped', 'assembly-SRR1620013_small_FASTA_FASTA.fasta', 'geneclusters.json', 'wgs-paired-SRR1620013_1_small.fastq.gz', 'wgs-paired-SRR1620013_2_small.fastq.gz', 'wgs-single-ERR1995312_small.fastq.gz', 'amplicon-paired-ERR2237853.json', 'assembly-SRR1620013_small.json', 'raw-reads.json', 'Dockerfile', 'example_diamond_10', 'example_diamond_10_sorted', 'example_diamond_db', 'example_diamond_10_sorted_join', 'diamond_join.cwl', 'diamond_join.job.yaml', 'diamond_join.test.yaml', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'diamond_sorting.job.yaml', 'diamond_sorting.test.yaml', 'postprocessing_subwf.cwl', 'postprocessing_subwf.job.yml', 'postprocessing_subwf.test.yml', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Diamond.blastp-v0.9.21.cwl', 'Diamond.blastp-v0.9.21.test.job.yaml', 'Diamond.blastp-v0.9.21_docker.cwl', 'Diamond.blastx-v0.9.21.cwl', 'Diamond.blastx-v0.9.21.test.job.yaml', 'Diamond.makedb-v0.9.21.cwl', 'Diamond.makedb-v0.9.21.test.job.yaml', 'Diamond_blastp_test.yml', 'Diamond_blastx_test.yml', 'diamond-subwf.cwl', 'diamond-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA_summary.diamond.gz', 'Dockerfile', 'eggnog.cwl', 'eggnog.yml', '__init__.py', 'annota.py', 'annota_mongo.py', 'common.py', 'orthology.py', 'search.py', 'seqio.py', 'server.py', 'utils.py', 'vars.py', 'version.py', 'emapper.py', 'eggnog-subwf.cwl', 'eggnog-subwf.yml', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.annotations.gz', 'assembly-SRR1620013_small_FASTA_FASTA.emapper.seed_orthologs.gz', 'build_assembly_gff.py', 'assembly-SRR1620013_small_FASTA_FASTA.antismash.gff.gz', 'assembly-SRR1620013_small_FASTA_FASTA.contigs.annotations.gff.gz', 'gff_generation.cwl', 'gff_generation.yml', 'Dockerfile', 'JSON_test_single_protein.fasta', 'LONGFORM_REPORT_test_single_protein.fasta', 'MATCHES_test_single_protein.fasta', 'SUMMARY_FILE_test_single_protein.fasta', 'TABLE_test_single_protein.fasta', 'genome_properties.cwl', 'genome_properties.yml', 'gp_docker.cwl', 'InterProScan.tsv', 'Dockerfile', 'help_commands.txt', 'run_pathways.sh', 'give_pathways.py', 'kegg_pathways.cwl', 'kegg_pathways.yml', 'modification_table.cwl', 'modification_table.yml', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'parsing_hmmscan.yml', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_contigs.tsv', 'assembly-SRR1620013_small_FASTA_FASTA.summary.kegg_pathways', 'make_graphs.py', 'Dockerfile', 'antismash_v4.cwl', 'antismash_v4.yml', 'run_antismash_short.sh', 'antismash_chunking_subwf.cwl', 'antismash_subwf.cwl', 'check_value.cwl', 'check_value.yml', 'filtering_fasta_for_antismash.cwl', 'no_antismash_subwf.cwl', 'change_antismash_output.py', 'change_output.cwl', 'change_output.yml', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', 'antismash_to_gff.cwl', 'antismash_to_gff.py', 'antismash_to_gff.yml', 'reformat_antismash.cwl', 'reformat_antismash.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', 'rename_contigs.yml', 'empty.fasta', 'test-1-contig.embl', 'test-1-contig.table', 'test.2.fasta', 'test.fasta', 'test.fasta.1', 'output-contig-1.embl', 'output-contig-1.gbk', 'wf_antismash.cwl', 'antismash_chunking_subwf.yml', 'antismash_subwf.yml', 'no_antismash_subwf.yml', 'wf_antismash.yml', 'move_antismash_summary.cwl', 'move_antismash_summary.py', 'fasta_index.cwl', 'fasta_index.yml', 'run_samtools.sh', 'test.fasta', 'Dockerfile', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller.yml', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'FGS.cwl', 'FGS.yml', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.faa.gz', 'assembly-SRR1620013_small_FASTA_FASTA_CDS.ffn.gz', 'faselector', '100000_130095.fasta', '100000_130095.fasta.fgs.faa', '100000_130095.fasta.fgs.ffn', '100000_130095.fasta.fgs.out', '100000_130095.fasta.prodigal', '100000_130095.fasta.prodigal.faa', '100000_130095.fasta.prodigal.ffn', 'ERR3414571_FASTA.cmsearch.all.tblout.deoverlapped', 'post-processing.cwl', 'predict_proteins_assemblies.cwl', 'predict_proteins_assemblies.yml', 'predict_proteins_reads.cwl', 'prodigal.cwl', 'run_FGS.sh', 'unite_protein_predictions.py', 'Dockerfile', 'test', 'test_slim', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary.yml', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'ips_out.tsv', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'InterProScan-v5-none_docker.cwl', 'InterProScan-v5.cwl', 'InterProScan-v5.test.job.yaml', 'assembly-SRR1620013_small_FASTA_FASTA.I5.tsv.gz', 'testfile.annotations.pfam', 'pfam_annotations.cwl', 'pfam_annotations.yml', 'testfile.tsv', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert-test.job-input.yml', 'biom-convert.cwl', 'biom-convert.sh', 'biom-convert_test.yml', 'empty_tax.cwl', 'empty_tax.sh', 'empty_tax.yml', 'test-mapseq.hdf5', 'test-mapseq.json', 'test-mapseq.tsv', 'empty.html', 'empty.mseq.tsv', 'empty.txt', 'empty_json.biom', 'LSU.fasta', 'LSU.html', 'LSU.mseq.tsv', 'LSU.txt', 'LSU_json.biom', 'test-mapseq.tsv', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap-v0.02.test.job.yaml', 'cmsearch-deoverlap.pl', '1.cmsearch.tblout.deoverlapped', '1.cmsearch.tblout', 'ribo.claninfo', 'mrum-genome.fa.cmsearch.out', 'mrum-genome.fa.cmsearch_matches.tbl', 'infernal-cmsearch-v1.1.2.cwl', 'infernal-cmsearch.test.job.yaml', 'mrum-genome.fa', 'mt-tmRNA.cm', 'tRNA5.c.cm', 'esl-index.sh', 'esl-sfetch-index-test.yml', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs-test.yml', 'esl-sfetch-manyseqs.cwl', 'test-cmsearch_matched_seqs_with_coords.fasta', 'test.fasta', 'test.fasta.ssi', 'matched_seqs_with_coords', 'test-cmsearch.fasta', 'test.fasta', 'awk_tool', 'matched_seqs_with_coords', 'extract-coords_awk.cwl', 'extract-coords_awk.yml', 'test-cmsearch.txt', '5s', 'LSUs', 'SSUs', 'get_subunits_coords.cwl', 'get_subunits_coords.py', 'get_subunits_coords.yml', 'matched_seqs_with_coords', 'test.get_subunits', '5S.fasta', 'LSU.fasta', 'SSU.fasta', 'prefix_LSU_rRNA_bacteria.RF02541.fa', 'prefix_SSU_rRNA_bacteria.RF00177.fa', 'get_subunits.cwl', 'get_subunits.py', 'get_subunits.yml', 'Dockerfile', 'test.html', 'krona-test.yml', 'krona.cwl', 'test.tsv', 'Dockerfile', 'ERR2237853_MERGED_FASTQ_LSU.fasta.mseq.gz', 'mapseq-test.yml', 'mapseq.cwl', 'Dockerfile', 'test-mapseq.tsv', 'test.txt', 'mapseq2biom-test.yml', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'test-mapseq', 'test-otu', 'cyano_tmRNA', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'pull_ncrnas.yml', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'classifications.motus.biom', 'mOTUs.cwl', 'motus-test.yml', 'unpaired.fq', 'seqprep.cwl', 'seqprep.yml', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-PE.test.job.yaml', 'Trimmomatic-v0.36-SE.cwl', 'Trimmomatic-v0.36-SE.test.job.yaml', 'Trimmomatic_PE_test.yml', 'Trimmomatic_SE_test.yml', 'A1_left_ok.fq.trimmed.fastq', 'A1_left_ok.fq.trimmed.unpaired.fastq', 'A1_right_ok.fq.trimmed.fastq', 'A1_right_ok.fq.trimmed.unpaired.fastq', 'A1_left_ok.fq.gz', 'A1_right_ok.fq.gz', 'A2_left_ok.fq.gz', 'A2_right_ok.fq.gz', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'trimmomatic.sh', 'trimmomatic_help.txt', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'fasta_chunker.yml', '100_150.fasta', '1_100.fasta', 'protein_chunker.cwl', 'protein_chunker.yml', 'remove_headers.cwl', 'remove_headers.yml', 'split_to_chunks.py', 'empty.fasta', 'Dockerfile', 'db_kofam.hmm.h3i', 'assembly-SRR1620013_small_FASTA_FASTA.hmm.tsv.gz', 'chunking-subwf-hmmscan.cwl', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmscan.yml', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.cwl', 'bedtools.yml', 'ITS-maskfile', 'masked-for-its.fasta', 'format-bedfile.cwl', 'format-bedfile.yml', 'its-length-new.py', 'suppress_tax.cwl', 'suppress_tax_test.yml', 'LSU.fasta.gz', 'LSU.tsv', 'SSU-and-LSU', 'SSU.fasta.gz', 'SSU.tsv', 'its.fasta.gz', 'test-cmsearch.fasta', 'stats_summary', 'test_seqs.filtered.fasta', 'qc-filtering-job.yaml', 'qc-filtering.cwl', 'run_quality_filtering.py', 'test_seqs.fasta', 'Dockerfile', 'MGRAST_base.py', 'GC-distribution.out.full', 'GC-distribution.out.full_bin', 'GC-distribution.out.full_pcbin', 'nucleotide-distribution.out.full', 'seq-length.out.full', 'seq-length.out.full_bin', 'seq-length.out.full_pcbin', 'summary.out', 'summary.out', 'qc-stats-job.yaml', 'qc-stats.cwl', 'test.fasta', 'functional_stats.cwl', 'functional_stats.py', 'functional_stats.yml', 'write_summaries.cwl', 'write_summaries.py', 'write_summaries.yml', 'conformance-tests.sh', 'cwltest.sh', 'install-nodejs.sh', 'requirements.txt', '1.run.yml', '1.yml', '.travis_old.yml', 'install-cwl-tools.sh', 'run-diamond.blastp-v0.9.21.sh', 'run-diamond.blastx-v0.9.21.sh', 'tools-validation-tests.sh', 'trimmomatic_path.sh', 'utils-validation-tests.sh', 'workflow-cwl-validation-tests.sh', 'other_ncrnas.yml', 'rna_prediction.yml', 'trim_and_reformat_reads.test.job.yaml', 'test_wf.yml', 'amplicon-wf-single-job.yml', 'add_header', 'add_header.cwl', 'add_header.yml', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_fasta.yml', 'count_fastq_exp.cwl', 'count_lines.cwl', 'count_lines.py', 'count_lines.yml', 'count_number_lines.cwl', 'empty_fasta.cwl', 'empty_fasta.sh', 'test_01_b_test_01_b.fasta', 'test_02_test_02.fasta', 'fasta_chunker.cwl', 'fasta_chunker.test.job.yaml', 'fasta_chunker_test.yml', 'fastp.cwl', 'fastq_to_fasta.cwl', 'fastq_to_fasta.cwltest.yml', 'fastq_to_fasta.py', 'fastq_to_fasta.test.job-input.yaml', 'generate_checksum.cwl', 'generate_checksum.py', 'hmmscan_result.tsv', 'hmmscan_tab.py', 'hmmscan_tab_modification.cwl', 'hmmscan_tab_modification.yml', 'hmmscan_result.tbl', 'make_csv.cwl', 'make_csv.py', 'output', 'test.txt', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', '__init__.py', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'result_chunker.cwl', 'run_result_file_chunker.py', 'return_directory.cwl', 'return_directory.yml', 'test_seqs.fasta', 'test_seqs.fq', 'test_seqs.fq.gz', 'touch_file.cwl', 'amplicon-wf--v.5-cond.cwl', 'assembly-wf--v.5-cond.cwl', 'README', 'amplicon-1.cwl', 'amplicon-2.cwl', 'assembly-1.cwl', 'assembly-2.cwl', 'out_json_parser.py', 'raw-reads-1.cwl', 'raw-reads-2.cwl', 'profiling_parser.py', 'run_profiling.sh', 'raw-reads-wf--v.5-cond.cwl', 'ITS-wf.cwl', 'trim_and_reformat_reads.cwl', 'trimming-not-empty-subwf.cwl', 'CGC-subwf.cwl', 'change_formats_and_names.cwl', 'cmsearch-multimodel-assembly.cwl', 'deal_with_functional_annotation.cwl', 'func_ann_and_post_processing-subwf.cwl', 'functional_annotation.cwl', 'functional_annotation.yml', 'kegg_analysis.cwl', 'kegg_analysis.yml', 'chunking-subwf-IPS.cwl', 'chunking-subwf-hmmsearch.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-raw-data.cwl', 'final_chunking.cwl', 'func_summaries.cwl', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'func_ann_and_post_proccessing-subwf.cwl', 'functional_annotation_raw.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl', 'seqprep-subwf.cwl', 'amplicon-wf--v.5-cond.yml', 'assembly-pipeline-v.5.yml', 'raw-reads--v.5-cond.yml']",
    "raw_text_content": "os: linux\n\nsudo: true\nlanguage: python\npython: 3.6\nservices:\n  - docker\n\nenv:\n  - TOOL=\"Validate\" CONF_SCRIPT=\"travis/conformance-tests.sh\"\n#  - TOOL=\"SUPPRESS\" TEST_SUPPRESS_SUBWF=\"travis/cwltest.sh\"\n\ninstall:\n  - travis/install-nodejs.sh\n  - pip install -r travis/requirements.txt\n\nbefore_script:\n  - pip freeze\n  - pwd\n\nscript:\n  - bash ${CONF_SCRIPT}\n#  - bash  ${TEST_SUPPRESS_SUBWF} travis/tests/amplicon-suppress/1.yml\n\n<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>MGnify - raw-reads analysis pipeline</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"KYOYDTXqk+JA6T1fF5UdUuPiRQtGu+3leDQ/dQgBN8EYYiPzByppAByAHiRy1Ul3lkdehuHOWN7UV5udXRwR4w==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/362?version=1\",\n  \"description\": \"MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.\\r\\n\\r\\nDocumentation: https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline\",\n  \"name\": \"MGnify - raw-reads analysis pipeline\",\n  \"url\": \"https://workflowhub.eu/workflows/362?version=1\",\n  \"image\": \"https://workflowhub.eu/workflows/383/diagram?version=1\",\n  \"keywords\": \"Workflows, CWL, Metagenomics\",\n  \"version\": 1,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/355\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/354\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/27\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20L%20Mitchell\",\n      \"name\": \"Alex L Mitchell\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alexandre%20Almeida\",\n      \"name\": \"Alexandre Almeida\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Martin%20Beracochea\",\n      \"name\": \"Martin Beracochea\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Miguel%20Boland\",\n      \"name\": \"Miguel Boland\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Josephine%20Burgin\",\n      \"name\": \"Josephine Burgin\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Guy%20Cochrane\",\n      \"name\": \"Guy Cochrane\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Michael%20R%20Crusoe\",\n      \"name\": \"Michael R Crusoe\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Varsha%20Kale\",\n      \"name\": \"Varsha Kale\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Simon%20C%20Potter\",\n      \"name\": \"Simon C Potter\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Lorna%20J%20Richardson\",\n      \"name\": \"Lorna J Richardson\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Ekaterina%20Sakharova\",\n      \"name\": \"Ekaterina Sakharova\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Maxim%20Scheremetjew\",\n      \"name\": \"Maxim Scheremetjew\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Anton%20Korobeynikov\",\n      \"name\": \"Anton Korobeynikov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alex%20Shlemov\",\n      \"name\": \"Alex Shlemov\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Olga%20Kunyavskaya\",\n      \"name\": \"Olga Kunyavskaya\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Alla%20Lapidus\",\n      \"name\": \"Alla Lapidus\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"#Robert%20D%20Finn\",\n      \"name\": \"Robert D Finn\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/9\",\n      \"name\": \"MGnify\"\n    }\n  ],\n  \"dateCreated\": \"2022-06-07T08:40:40Z\",\n  \"dateModified\": \"2023-01-16T14:01:12Z\",\n  \"isPartOf\": [\n\n  ],\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-single_reads\",\n      \"name\": \"single_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-forward_reads\",\n      \"name\": \"forward_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-reverse_reads\",\n      \"name\": \"reverse_reads\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-qc_min_length\",\n      \"name\": \"qc_min_length\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_db\",\n      \"name\": \"ssu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_db\",\n      \"name\": \"lsu_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_tax\",\n      \"name\": \"ssu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_tax\",\n      \"name\": \"lsu_tax\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_otus\",\n      \"name\": \"ssu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_otus\",\n      \"name\": \"lsu_otus\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-rfam_models\",\n      \"name\": \"rfam_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-rfam_model_clans\",\n      \"name\": \"rfam_model_clans\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-other_ncRNA_models\",\n      \"name\": \"other_ncRNA_models\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ssu_label\",\n      \"name\": \"ssu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-lsu_label\",\n      \"name\": \"lsu_label\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-5s_pattern\",\n      \"name\": \"5s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-5.8s_pattern\",\n      \"name\": \"5.8s_pattern\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-CGC_config\",\n      \"name\": \"CGC_config\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-CGC_postfixes\",\n      \"name\": \"CGC_postfixes\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-cgc_chunk_size\",\n      \"name\": \"cgc_chunk_size\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-protein_chunk_size_hmm\",\n      \"name\": \"protein_chunk_size_hmm\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-protein_chunk_size_IPS\",\n      \"name\": \"protein_chunk_size_IPS\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-func_ann_names_ips\",\n      \"name\": \"func_ann_names_ips\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-func_ann_names_hmmer\",\n      \"name\": \"func_ann_names_hmmer\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_gathering_bit_score\",\n      \"name\": \"HMM_gathering_bit_score\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_omit_alignment\",\n      \"name\": \"HMM_omit_alignment\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-HMM_name_database\",\n      \"name\": \"HMM_name_database\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-hmmsearch_header\",\n      \"name\": \"hmmsearch_header\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_db\",\n      \"name\": \"EggNOG_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_diamond_db\",\n      \"name\": \"EggNOG_diamond_db\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-EggNOG_data_dir\",\n      \"name\": \"EggNOG_data_dir\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_databases\",\n      \"name\": \"InterProScan_databases\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_applications\",\n      \"name\": \"InterProScan_applications\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-InterProScan_outputFormat\",\n      \"name\": \"InterProScan_outputFormat\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ips_header\",\n      \"name\": \"ips_header\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-ko_file\",\n      \"name\": \"ko_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-inputs-go_config\",\n      \"name\": \"go_config\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"output\": [\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc-statistics\",\n      \"name\": \"qc-statistics\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc_summary\",\n      \"name\": \"qc_summary\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-qc-status\",\n      \"name\": \"qc-status\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-hashsum_paired\",\n      \"name\": \"hashsum_paired\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-hashsum_single\",\n      \"name\": \"hashsum_single\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-fastp_filtering_json_report\",\n      \"name\": \"fastp_filtering_json_report\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-sequence-categorisation_folder\",\n      \"name\": \"sequence-categorisation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-taxonomy-summary_folder\",\n      \"name\": \"taxonomy-summary_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-rna-count\",\n      \"name\": \"rna-count\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-motus_output\",\n      \"name\": \"motus_output\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-compressed_files\",\n      \"name\": \"compressed_files\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-functional_annotation_folder\",\n      \"name\": \"functional_annotation_folder\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-stats\",\n      \"name\": \"stats\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-chunking_nucleotides\",\n      \"name\": \"chunking_nucleotides\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-chunking_proteins\",\n      \"name\": \"chunking_proteins\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-completed_flag_file\",\n      \"name\": \"completed_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-no_cds_flag_file\",\n      \"name\": \"no_cds_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    },\n    {\n      \"@type\": \"FormalParameter\",\n      \"@id\": \"#mgnify___raw_reads_analysis_pipeline-outputs-no_tax_flag_file\",\n      \"name\": \"no_tax_flag_file\",\n      \"dct:conformsTo\": \"https://bioschemas.org/profiles/FormalParameter/1.0-RELEASE/\"\n    }\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F362%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: tests.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=383&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"MGnify - raw-reads analysis pipeline\" href=\"/workflows/362?version=1\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      MGnify - raw-reads analysis pipeline              <div class=\"version\">v5.0.7</div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/EBI-Metagenomics/pipeline-v5.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/362/ro_crate?version=1\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <p>MGnify (<a rel=\"nofollow\" href=\"http://www.ebi.ac.uk/metagenomics\">http://www.ebi.ac.uk/metagenomics</a>) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations.</p>\n<p>Documentation: <a rel=\"nofollow\" href=\"https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline\">https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline</a></p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n                    <embed type=\"image/svg+xml\" src=\"/workflows/362/diagram?version=1\" class=\"svg-pan-zoom\" width=\"1000\" height=\"500\"></embed>\n                    <p class=\"help-block\">Click and drag the diagram to pan, double click or use the controls to zoom.</p>\n                </div>\n              </div>\n            </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/362?version=1\">https://workflowhub.eu/workflows/362?version=1</a></p>\n\n            \n                <p>\n      <b>DOI:</b> <a target=\"_blank\" href=\"https://doi.org/10.48546/workflowhub.workflow.362.1\">10.48546/workflowhub.workflow.362.1</a><span class=\"doi_icon\"></span>\n    </p>\n\n          </div>\n        </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"workflow-internals\">\n    <h2>Inputs</h2>\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-hover steps\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td class=\"id\">single_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">forward_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">reverse_reads</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>File?</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">qc_min_length</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"description\"><span class=\"none_text\">n/a</span></td>\n            <td class=\"type\"><ul class=\"workflow-port-type\"><li><strong>int</strong></li></ul></td>\n          </tr>\n          <tr>\n            <td class=\"id\">ssu_db</td>\n            <td class=\"name\"><span class=\"none_text\">n/a</span></td>",
    "p_tag_content": "MGnify (http://www.ebi.ac.uk/metagenomics) provides a free to use platform for the assembly, analysis and archiving of microbiome data derived from sequencing microbial populations that are present in particular environments. Over the past 2 years, MGnify (formerly EBI Metagenomics) has more than doubled the number of publicly available analysed datasets held within the resource. Recently, an updated approach to data analysis has been unveiled (version 5.0), replacing the previous single pipeline with multiple analysis pipelines that are tailored according to the input data, and that are formally described using the Common Workflow Language, enabling greater provenance, reusability, and reproducibility. MGnify's new analysis pipelines offer additional approaches for taxonomic assertions based on ribosomal internal transcribed spacer regions (ITS1/2) and expanded protein functional annotations. Biochemical pathways and systems predictions have also been added for assembled contigs. MGnify's growing focus on the assembly of metagenomic data has also seen the number of datasets it has assembled and analysed increase six-fold. The non-redundant protein database constructed from the proteins encoded by these assemblies now exceeds 1 billion sequences. Meanwhile, a newly developed contig viewer provides fine-grained visualisation of the assembled contigs and their enriched annotations. Documentation:https://docs.mgnify.org/en/latest/analysis.html#raw-reads-analysis-pipeline Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/362?version=1 DOI:10.48546/workflowhub.workflow.362.1 Fix collect_scripts.py Alex L Mitchell, Alexandre Almeida, Martin Beracochea, Miguel Boland, Josephine Burgin, Guy Cochrane, Michael R Crusoe, Varsha Kale, Simon C Potter, Lorna J Richardson, Ekaterina Sakharova, Maxim Scheremetjew, Anton Korobeynikov, Alex Shlemov, Olga Kunyavskaya, Alla Lapidus, Robert D Finn Views:2929Downloads:217 Created: 7th Jun 2022 at 09:40 None Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:MGnify Organizations:EMBL-EBI MGnify (formerly known as EBI Metagenomics) is a free resource for the assembly, analysis, archiving and browsing all types of microbiome derived sequence data. Space:This Team is not associated with a Space Public web page:https://www.ebi.ac.uk/metagenomics/ Organisms:Not specified Abstract(Expand) Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Authors:Alex L Mitchell,Alexandre Almeida,Martin Beracochea,Miguel Boland,Josephine Burgin,Guy Cochrane,Michael R Crusoe,Varsha Kale,Simon C Potter,Lorna J Richardson,Ekaterina Sakharova,Maxim Scheremetjew,Anton Korobeynikov,Alex Shlemov,Olga Kunyavskaya,Alla Lapidus,Robert D Finn Date Published: 7th Nov 2019 Publication Type: Journal DOI:10.1093/nar/gkz1035 Citation: Nucleic Acids Research,gkz1035"
  },
  {
    "": 700,
    "discussion_links": "[{'id': '444', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "(Hybrid) Metagenomics workflow",
    "license": "Apache-2.0",
    "description": "### Workflow (hybrid) metagenomic assembly and binning + GEMs\n_Accepts both Illumina and Long reads (ONT/PacBio)_\n\n- **Workflow Illumina Quality:** https://workflowhub.eu/workflows/336?version=1\t\n- **Workflow LongRead Quality:** https://workflowhub.eu/workflows/337\n    \n- Kraken2 taxonomic classification of FASTQ reads\n- SPAdes/Flye (Assembly)\n- QUAST (Assembly quality report)\n\n**Workflow binnning** https://workflowhub.eu/workflows/64?version=11  (optional)\n- Metabat2/MaxBin2/SemiBin\n- DAS Tool\n- CheckM\n- BUSCO\n- GTDB-Tk\n  \n**Workflow Genome-scale metabolic models** https://workflowhub.eu/workflows/372 (optional)\n- CarveMe (GEM generation)\n- MEMOTE (GEM test suite)\n- SMETANA (Species METabolic interaction ANAlysis)\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default\n\n**All tool CWL files and other workflows can be found here:**<br>\nhttps://gitlab.com/m-unlock/cwl<br>\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['Assembly', 'Metagenomics', 'binning', 'illumina']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/367?version=1', 'commit': '1e42c47f241ebba8c3caf7bc7dd13f0a903f4888', 'ref': 'refs/tags/Version-1', 'tree': '/workflows/367/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-06-14T08:14:10.000Z",
    "updated_at": "2024-01-02T12:20:13.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/operation_0310'}]",
    "topic_annotations": "[{'label': 'Bioinformatics', 'identifier': 'http://edamontology.org/topic_0091'}, {'label': 'Metagenomic sequencing', 'identifier': 'http://edamontology.org/topic_3837'}, {'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence assembly', 'identifier': 'http://edamontology.org/topic_0196'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'illumina_forward_reads', 'name': 'Forward reads', 'description': 'Forward sequence file path', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'illumina_reverse_reads', 'name': 'Reverse reads', 'description': 'Reverse sequence file path', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'pacbio_reads', 'name': 'PacBio reads', 'description': 'File with PacBio reads locally', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'nanopore_reads', 'name': 'PacBio reads', 'description': 'File with PacBio reads locally', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'filter_references', 'name': 'Contamination reference file', 'description': 'bbmap reference fasta file paths for contamination filtering', 'type': [{'type': 'File[]?'}], 'default_value': None}, {'id': 'use_reference_mapped_reads', 'name': 'Keep mapped reads', 'description': 'Continue with reads mapped to the given reference', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'keep_filtered_reads', 'name': 'Keep filtered reads', 'description': 'Keep filtered reads in the final output', 'type': [{'type': 'boolean'}], 'default_value': False}, {'id': 'deduplicate', 'name': 'Deduplicate reads', 'description': 'Remove exact duplicate reads with fastp', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'kraken_database', 'name': 'Kraken2 database', 'description': 'Absolute path with database location of kraken2', 'type': [{'type': 'Directory[]?'}], 'default_value': []}, {'id': 'gtdbtk_data', 'name': 'gtdbtk data directory', 'description': 'Directory containing the GTDBTK repository', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'busco_data', 'name': 'BUSCO dataset', 'description': 'Path to the BUSCO dataset download location', 'type': [{'type': 'Directory?'}], 'default_value': None}, {'id': 'ont_basecall_model', 'name': 'ONT Basecalling model', 'description': 'Basecalling model used with guppy default r941_min_high. \\nAvailable: r941_trans, r941_flip213, r941_flip235, r941_min_fast, r941_min_high, r941_prom_fast, r941_prom_high. (required)\\n', 'type': [{'type': 'string?'}], 'default_value': None}, {'id': 'pilon_fixlist', 'name': 'Pilon fix list', 'description': 'A comma-separated list of categories of issues to try to fix', 'type': [{'type': 'string'}], 'default_value': 'snps,gaps,local'}, {'id': 'metagenome', 'name': 'When working with metagenomes', 'description': 'Metagenome option for assemblers', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'run_spades', 'name': 'Use SPAdes', 'description': 'Run with SPAdes assembler', 'type': [{'type': 'boolean?'}], 'default_value': True}, {'id': 'run_flye', 'name': 'Use Flye', 'description': 'Run with Flye assembler', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_pilon', 'name': 'Use Pilon', 'description': 'Run with Pilon illumina assembly polishing', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'binning', 'name': 'Run binning workflow', 'description': 'Run with contig binning workflow', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_GEM', 'name': 'Run GEM workflow', 'description': 'Run the community genomescale metabolic models workflow on bins', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'run_smetana', 'name': 'Run SMETANA', 'description': 'Run SMETANA (Species METabolic interaction ANAlysis)', 'type': [{'type': 'boolean?'}], 'default_value': False}, {'id': 'threads', 'name': 'Number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'memory', 'name': 'Memory usage (MB)', 'description': 'Maximum memory usage in megabytes', 'type': [{'type': 'int?'}], 'default_value': 4000}, {'id': 'destination', 'name': 'Output Destination (prov only)', 'description': 'Not used in this workflow. Output destination used for cwl-prov reporting only.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'read_filtering_output_keep', 'name': 'Read filtering output', 'description': 'Read filtering stats + filtered reads', 'type': [{'type': 'Directory?'}], 'source_ids': ['keep_readfilter_files_to_folder/results']}, {'id': 'read_filtering_output', 'name': 'Read filtering output', 'description': 'Read filtering stats + filtered reads', 'type': [{'type': 'Directory?'}], 'source_ids': ['readfilter_files_to_folder/results']}, {'id': 'kraken2_output', 'name': 'Kraken2 reports', 'description': 'Kraken2 taxonomic classification reports', 'type': [{'type': 'Directory?'}], 'source_ids': ['kraken2_files_to_folder/results']}, {'id': 'assembly_output', 'name': 'Assembly output', 'description': 'Output from different assembly steps', 'type': [{'type': 'Directory'}], 'source_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_output', 'name': 'Binning output', 'description': 'Binning outputfolders', 'type': [{'type': 'Directory?'}], 'source_ids': ['binning_files_to_folder/results']}, {'id': 'gem_output', 'name': 'Community GEM output', 'description': 'Community GEM output folder', 'type': [{'type': 'Directory?'}], 'source_ids': ['GEM_files_to_folder/results']}], 'steps': [{'id': 'workflow_quality_illumina', 'name': 'Quality and filtering workflow', 'description': 'Quality assessment of illumina reads with rRNA filtering option', 'sink_ids': ['workflow_quality_illumina/QC_reverse_reads', 'workflow_quality_illumina/QC_forward_reads', 'workflow_quality_illumina/reports_folder']}, {'id': 'workflow_quality_nanopore', 'name': 'Nanopore quality and filtering workflow', 'description': 'Quality and filtering workflow for nanopore reads', 'sink_ids': ['workflow_quality_nanopore/filtered_reads', 'workflow_quality_nanopore/reports_folder']}, {'id': 'nanopore_kraken2', 'name': 'Kraken2 Nanopore', 'description': 'Taxonomic classification of nanopore FASTQ reads', 'sink_ids': ['nanopore_kraken2/standard_report', 'nanopore_kraken2/sample_report']}, {'id': 'illumina_kraken2', 'name': 'Kraken2 Illumina', 'description': 'Taxonomic classification of illumina FASTQ reads', 'sink_ids': ['illumina_kraken2/standard_report', 'illumina_kraken2/sample_report']}, {'id': 'kraken2_compress', 'name': 'Compress kraken2', 'description': 'Compress large kraken2 report file', 'sink_ids': ['kraken2_compress/outfile']}, {'id': 'kraken2_krona', 'name': 'Krona Kraken2', 'description': 'Visualization of kraken2 with Krona', 'sink_ids': ['kraken2_krona/krona_html']}, {'id': 'spades', 'name': 'SPAdes assembly', 'description': 'Genome assembly using spades with illumina/pacbio reads', 'sink_ids': ['spades/contigs', 'spades/scaffolds', 'spades/assembly_graph', 'spades/contigs_assembly_paths', 'spades/scaffolds_assembly_paths', 'spades/contigs_before_rr', 'spades/params', 'spades/log', 'spades/internal_config', 'spades/internal_dataset']}, {'id': 'compress_spades', 'name': 'SPAdes compressed', 'description': 'Compress the large Spades assembly output files', 'sink_ids': ['compress_spades/outfile']}, {'id': 'flye', 'name': 'Nanopore Flye assembly', 'description': 'De novo assembly of single-molecule reads with Flye', 'sink_ids': ['flye/00_assembly', 'flye/10_consensus', 'flye/20_repeat', 'flye/30_contigger', 'flye/40_polishing', 'flye/assembly', 'flye/assembly_info', 'flye/flye_log', 'flye/params']}, {'id': 'medaka', 'name': 'Medaka polishing of assembly', 'description': 'Medaka for polishing of assembled genome', 'sink_ids': ['medaka/polished_assembly', 'medaka/gaps_in_draft_coords']}, {'id': 'metaquast_medaka', 'name': 'assembly evaluation', 'description': 'evaluation of polished assembly with metaQUAST', 'sink_ids': ['metaquast_medaka/metaquast_outdir', 'metaquast_medaka/meta_combined_ref', 'metaquast_medaka/meta_icarusDir', 'metaquast_medaka/metaquast_krona', 'metaquast_medaka/not_aligned', 'metaquast_medaka/meta_downloaded_ref', 'metaquast_medaka/runs_per_reference', 'metaquast_medaka/meta_summary', 'metaquast_medaka/meta_icarus', 'metaquast_medaka/metaquast_log', 'metaquast_medaka/metaquast_report', 'metaquast_medaka/basicStats', 'metaquast_medaka/quast_icarusDir', 'metaquast_medaka/quast_icarusHtml', 'metaquast_medaka/quastReport', 'metaquast_medaka/quastLog', 'metaquast_medaka/transposedReport']}, {'id': 'workflow_pilon', 'name': 'Pilon worklow', 'description': 'Illumina reads assembly polishing with Pilon', 'sink_ids': ['workflow_pilon/pilon_polished_assembly', 'workflow_pilon/vcf', 'workflow_pilon/log']}, {'id': 'metaquast_pilon', 'name': 'Illumina assembly evaluation', 'description': 'Illumina evaluation of pilon polished assembly with metaQUAST', 'sink_ids': ['metaquast_pilon/metaquast_outdir', 'metaquast_pilon/meta_combined_ref', 'metaquast_pilon/meta_icarusDir', 'metaquast_pilon/metaquast_krona', 'metaquast_pilon/not_aligned', 'metaquast_pilon/meta_downloaded_ref', 'metaquast_pilon/runs_per_reference', 'metaquast_pilon/meta_summary', 'metaquast_pilon/meta_icarus', 'metaquast_pilon/metaquast_log', 'metaquast_pilon/metaquast_report', 'metaquast_pilon/basicStats', 'metaquast_pilon/quast_icarusDir', 'metaquast_pilon/quast_icarusHtml', 'metaquast_pilon/quastReport', 'metaquast_pilon/quastLog', 'metaquast_pilon/transposedReport']}, {'id': 'bbmap', 'name': 'BBmap read mapping', 'description': 'Illumina read mapping using BBmap on assembled contigs', 'sink_ids': ['bbmap/sam', 'bbmap/stats', 'bbmap/covstats', 'bbmap/log']}, {'id': 'sam_to_sorted_bam', 'name': 'sam conversion to sorted bam', 'description': 'Sam file conversion to a sorted indexed bam file', 'sink_ids': ['sam_to_sorted_bam/sortedbam']}, {'id': 'contig_read_counts', 'name': 'Samtools idxstats', 'description': 'Reports alignment summary statistics', 'sink_ids': ['contig_read_counts/contigReadCounts']}, {'id': 'workflow_binning', 'name': 'Binning workflow', 'description': 'Binning workflow to create bins', 'sink_ids': ['workflow_binning/bins', 'workflow_binning/metabat2_output', 'workflow_binning/checkm_output', 'workflow_binning/gtdbtk_output', 'workflow_binning/busco_output', 'workflow_binning/bins_summary_table', 'workflow_binning/eukrep_fasta', 'workflow_binning/eukrep_stats_file']}, {'id': 'workflow_GEM', 'name': 'GEM workflow', 'description': 'CarveMe community genomescale metabolic models workflow from bins', 'sink_ids': ['workflow_GEM/carveme_gems_folder', 'workflow_GEM/protein_fasta_folder', 'workflow_GEM/memote_folder', 'workflow_GEM/smetana_output', 'workflow_GEM/gemstats_out']}, {'id': 'keep_readfilter_files_to_folder', 'name': 'Read filtering output folder', 'description': 'Preparation of read filtering output files to a specific output folder', 'sink_ids': ['keep_readfilter_files_to_folder/results']}, {'id': 'readfilter_files_to_folder', 'name': 'Read filtering output folder', 'description': 'Preparation of read filtering output files to a specific output folder', 'sink_ids': ['readfilter_files_to_folder/results']}, {'id': 'kraken2_files_to_folder', 'name': 'Kraken2 output folder', 'description': 'Preparation of Kraken2 output files to a specific output folder', 'sink_ids': ['kraken2_files_to_folder/results']}, {'id': 'spades_files_to_folder', 'name': 'SPADES output to folder', 'description': 'Preparation of SPAdes output files to a specific output folder', 'sink_ids': ['spades_files_to_folder/results']}, {'id': 'flye_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['flye_files_to_folder/results']}, {'id': 'metaquast_medaka_files_to_folder', 'name': 'Nanopore metaQUAST output folder', 'description': 'Preparation of metaQUAST output files to a specific output folder', 'sink_ids': ['metaquast_medaka_files_to_folder/results']}, {'id': 'medaka_files_to_folder', 'name': 'Medaka output folder', 'description': 'Preparation of Medaka output files to a specific output folder', 'sink_ids': ['medaka_files_to_folder/results']}, {'id': 'metaquast_pilon_files_to_folder', 'name': 'Illumina metaQUAST output folder', 'description': 'Preparation of QUAST output files to a specific output folder', 'sink_ids': ['metaquast_pilon_files_to_folder/results']}, {'id': 'pilon_files_to_folder', 'name': 'Pilon output folder', 'description': 'Preparation of pilon output files to a specific output folder', 'sink_ids': ['pilon_files_to_folder/results']}, {'id': 'assembly_files_to_folder', 'name': 'Flye output folder', 'description': 'Preparation of Flye output files to a specific output folder', 'sink_ids': ['assembly_files_to_folder/results']}, {'id': 'binning_files_to_folder', 'name': 'Binning output to folder', 'description': 'Preparation of binning output files and folders to a specific output folder', 'sink_ids': ['binning_files_to_folder/results']}, {'id': 'GEM_files_to_folder', 'name': 'GEM workflow output to folder', 'description': 'Preparation of GEM workflow output files and folders to a specific output folder', 'sink_ids': ['GEM_files_to_folder/results']}], 'links': [{'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'illumina_reverse_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'deduplicate', 'source_id': 'deduplicate', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_illumina', 'name': None, 'default_value': 1}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'filter_references', 'source_id': 'filter_references', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'keep_reference_mapped_reads', 'source_id': 'use_reference_mapped_reads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_quality_nanopore', 'name': None, 'default_value': 1}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'nanopore_kraken2', 'name': None, 'default_value': None}, {'id': 'illumina_raw_forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'tmp_id', 'source_id': 'identifier', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'database', 'source_id': 'kraken_database', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': None}, {'id': 'paired_end', 'source_id': None, 'sink_id': 'illumina_kraken2', 'name': None, 'default_value': True}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'nanopore_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'illumina_kraken2/standard_report', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'kraken2_compress', 'name': None, 'default_value': None}, {'id': 'kraken_database', 'source_id': 'kraken_database', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'kraken', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_krona', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'pacbio_reads', 'source_id': 'pacbio_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'metagenomics', 'source_id': None, 'sink_id': 'spades', 'name': None, 'default_value': True}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'spades', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/scaffolds', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/assembly_graph', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs_before_rr', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/contigs_assembly_paths', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'spades/scaffolds_assembly_paths', 'sink_id': 'compress_spades', 'name': None, 'default_value': None}, {'id': 'run_flye', 'source_id': 'run_flye', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'nano_raw', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'metagenome', 'source_id': 'metagenome', 'sink_id': 'flye', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'flye/assembly', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'draft_assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'reads', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'basecall_model', 'source_id': 'ont_basecall_model', 'sink_id': 'medaka', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metaquast_medaka', 'name': None, 'default_value': None}, {'id': 'run_pilon', 'source_id': 'run_pilon', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'illumina_reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'fixlist', 'source_id': 'pilon_fixlist', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_pilon', 'name': None, 'default_value': None}, {'id': 'run_pilon', 'source_id': 'run_pilon', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'metaquast_pilon', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'medaka/polished_assembly', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reference', 'source_id': 'spades/scaffolds', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'reverse_reads', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'bbmap', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'sam', 'source_id': 'bbmap/sam', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'sam_to_sorted_bam', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'sam_to_sorted_bam/sortedbam', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'contig_read_counts', 'name': None, 'default_value': None}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'forward_reads', 'source_id': 'illumina_forward_reads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'busco_data', 'source_id': 'busco_data', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'gtdbtk_data', 'source_id': 'gtdbtk_data', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'workflow_pilon/pilon_polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'medaka/polished_assembly', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'assembly', 'source_id': 'spades/scaffolds', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'bam_file', 'source_id': 'sam_to_sorted_bam/sortedbam', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'memory', 'source_id': 'memory', 'sink_id': 'workflow_binning', 'name': None, 'default_value': None}, {'id': 'step', 'source_id': None, 'sink_id': 'workflow_binning', 'name': None, 'default_value': 1}, {'id': 'binning', 'source_id': 'binning', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'run_smetana', 'source_id': 'run_smetana', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'run_GEM', 'source_id': 'run_GEM', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'bins', 'source_id': 'workflow_binning/bins', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'workflow_GEM', 'name': None, 'default_value': None}, {'id': 'keep_filtered_reads', 'source_id': 'keep_filtered_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_nanopore/filtered_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_illumina/QC_forward_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'workflow_quality_illumina/QC_reverse_reads', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_nanopore/reports_folder', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_illumina/reports_folder', 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'keep_readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'keep_filtered_reads', 'source_id': 'keep_filtered_reads', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_nanopore/reports_folder', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'workflow_quality_illumina/reports_folder', 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'readfilter_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_compress/outfile', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'kraken2_krona/krona_html', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'nanopore_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'illumina_kraken2/sample_report', 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'kraken2_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_spades', 'source_id': 'run_spades', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_spades/outfile', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/params', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/log', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/internal_config', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'spades/internal_dataset', 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'spades_files_to_folder', 'name': None, 'default_value': None}, {'id': 'run_flye', 'source_id': 'run_flye', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/assembly_info', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/flye_log', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'flye/params', 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'flye_files_to_folder', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/metaquast_report', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'metaquast_medaka/quastReport', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/metaquast_krona', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/not_aligned', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders', 'source_id': 'metaquast_medaka/runs_per_reference', 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'metaquast_medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'nanopore_reads', 'source_id': 'nanopore_reads', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/polished_assembly', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'medaka/gaps_in_draft_coords', 'sink_id': 'medaka_files_to_folder', 'name': None, 'default_value': None}, {'id': 'folders',",
    "tools": [],
    "id": 367,
    "text_field": "['workflow_metagenomics_assembly.cwl', 'workflow_metagenomics_assembly_packed.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: (Hybrid) Metagenomics workflow\ndoc: |\n  **Workflow (hybrid) metagenomic assembly and binning  **<br>\n    - Workflow Illumina Quality: https://workflowhub.eu/workflows/336?version=1\t\n      - FastQC (control)\n      - fastp (quality trimming)\n      - kraken2 (taxonomy)\n      - bbmap contamination filter\n    - Workflow Longread Quality:\t\n      - NanoPlot (control)\n      - filtlong (quality trimming)\n      - kraken2 (taxonomy)\n      - minimap2 contamination filter\n    - Kraken2 taxonomic classification of FASTQ reads\n    - SPAdes/Flye (Assembly)\n    - QUAST (Assembly quality report)\n\n    (optional)\n    - Workflow binnning https://workflowhub.eu/workflows/64?version=11\n      - Metabat2/MaxBin2/SemiBin\n      - DAS Tool\n      - CheckM\n      - BUSCO\n      - GTDB-Tk\n\n    (optional)\n    - Workflow Genome-scale metabolic models https://workflowhub.eu/workflows/372\n      - CarveMe (GEM generation)\n      - MEMOTE (GEM test suite)\n      - SMETANA (Species METabolic interaction ANAlysis)\n\n  Other UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n\n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://gitlab.com/m-unlock/cwl/-/tree/master/cwl <br>\n    Workflows: https://gitlab.com/m-unlock/cwl/-/tree/master/cwl/workflows<br>\n\n  **How to setup and use an UNLOCK workflow:**<br>\n  https://m-unlock.gitlab.io/docs/setup/setup.html<br>\n\noutputs:\n  read_filtering_output_keep:\n    label: Read filtering output\n    doc: Read filtering stats + filtered reads\n    type: Directory?\n    outputSource: keep_readfilter_files_to_folder/results\n  read_filtering_output:\n    label: Read filtering output\n    doc: Read filtering stats + filtered reads\n    type: Directory?\n    outputSource: readfilter_files_to_folder/results\n  assembly_output:\n    label: Assembly output\n    doc: Output from different assembly steps\n    type: Directory\n    outputSource: assembly_files_to_folder/results\n  # bam_output:\n  #   label: BAM files\n  #   doc: Mapping results in indexed BAM format\n  #   type: Directory?\n  #   outputSource: sorted_bam_files_to_folder/results\n  binning_output:\n    label: Binning output\n    doc: Binning outputfolders\n    type: Directory?\n    outputSource: binning_files_to_folder/results\n  gem_output:\n    label: Community GEM output\n    doc: Community GEM output folder\n    type: Directory?\n    outputSource: GEM_files_to_folder/results\n\ninputs:\n  identifier:\n    type: string\n    label: Identifier\n    doc: Identifier for this dataset used in this workflow (required)\n  illumina_forward_reads:\n    type: File[]?\n    doc: Illumina Forward sequence file(s)\n    label: Forward reads\n    loadListing: no_listing\n  illumina_reverse_reads:\n    type: File[]?\n    label: Reverse reads\n    doc: Illumina Reverse sequence file(s)\n    loadListing: no_listing\n  pacbio_reads:\n    type: File[]?\n    label: PacBio reads\n    doc: File(s) with PacBio reads in FASTQ format\n    loadListing: no_listing\n  nanopore_reads:\n    type: File[]?\n    label: Oxford Nanopore reads\n    doc: File(s) with Oxford Nanopore reads in FASTQ format\n    loadListing: no_listing\n  fastq_rich:\n    type: boolean\n    doc: | \n          Input fastq is generated by albacore, MinKNOW or guppy  with additional information concerning channel and time. \n          Used to creating more informative quality plots (default false)\n    label: Fastq rich (ONT)\n    default: false\n\n# Longread defaults taken from nf-core MAG\n  longread_minimum_length:\n    type: int?\n    doc: Minimum read length threshold (default 1000)\n    label: Minimum read length\n    default: 1000\n  longread_keep_percent:\n    type: float?\n    doc: Keep only this percentage of the best reads (measured by bases) (default 90)\n    label: Keep percentage\n    default: 90\n  longread_length_weight:\n    type: float?\n    doc: Weight given to the length score (default 10)\n    label: Length weigth\n    default: 10\n\n  filter_references:\n    type: File[]?\n    doc: Reference fasta file(s) used for pre-filtering. Can be gzipped (not mixed)\n    label: Reference file(s)\n    loadListing: no_listing\n  use_reference_mapped_reads:\n    type: boolean?\n    doc: Continue with reads mapped to the given reference (default false)\n    label: Keep mapped reads\n    default: false\n  keep_filtered_reads:\n    type: boolean?\n    doc: Keep filtered reads in the final output (default false)\n    label: Keep filtered reads\n    default: false\n  deduplicate:\n    type: boolean?\n    doc: Remove exact duplicate reads Illumina reads with fastp (default false)\n    label: Deduplicate reads\n    default: false\n  kraken2_confidence:\n    type: float?\n    label: Kraken2 confidence threshold\n    doc: Confidence score threshold must be in [0, 1] (default 0.0) \n  kraken2_database:\n    type: Directory[]?\n    doc: Database location of kraken2\n    label: Kraken2 database\n    default: []\n    loadListing: no_listing\n  gtdbtk_data:\n    type: Directory?\n    doc: Directory containing the GTDBTK repository\n    label: gtdbtk data directory\n    loadListing: no_listing\n  busco_data:\n    type: Directory?\n    label: BUSCO dataset\n    doc: Path to the BUSCO dataset downloaded location\n    loadListing: no_listing\n  ont_basecall_model:\n    type: string?\n    label: ONT Basecalling model for MEDAKA\n    doc: |\n      Used in MEDAKA\n      Basecalling model used with guppy default r941_min_high.\n      Available: r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r1041_e82_400bps_fast_g615, r1041_e82_400bps_fast_variant_g615, r1041_e82_400bps_hac_g615, r1041_e82_400bps_hac_variant_g615, r1041_e82_400bps_sup_g615, r1041_e82_400bps_sup_variant_g615, r104_e81_fast_g5015, r104_e81_fast_variant_g5015, r104_e81_hac_g5015, r104_e81_hac_variant_g5015, r104_e81_sup_g5015, r104_e81_sup_g610, r104_e81_sup_variant_g610, r10_min_high_g303, r10_min_high_g340, r941_e81_fast_g514, r941_e81_fast_variant_g514, r941_e81_hac_g514, r941_e81_hac_variant_g514, r941_e81_sup_g514, r941_e81_sup_variant_g514, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360, r941_sup_plant_g610, r941_sup_plant_variant_g610\n      (required for Medaka)\n  pilon_fixlist:\n    type: string?\n    label: Pilon fix list\n    doc: |\n      A comma-separated list of categories of issues to try to fix:\n        \"snps\": try to fix individual base errors;\n        \"indels\": try to fix small indels;\n        \"gaps\": try to fill gaps;\n        \"local\": try to detect and fix local misassemblies;\n        \"all\": all of the above (default);\n        \"bases\": shorthand for \"snps\" and \"indels\" (for back compatibility);\n        default; snps,gaps,local (conservative)\n    default: \"snps,gaps,local\"\n  genome_size:\n    type: string?\n    label: Genome Size\n    doc: Estimated genome size (for example, 5m or 2.6g)\n  metagenome:\n    type: boolean?\n    default: true\n    doc: Metagenome option for assemblers (default true)\n    label: When working with metagenomes\n  semibin_environment:\n    type: string?\n    doc: SemiBin built-in models; human_gut/dog_gut/ocean/soil/cat_gut/human_oral/mouse_gut/pig_gut/built_environment/wastewater/chicken_caecum/global (default global)\n    label: SemiBin Environment\n    default: global\n  # TODO Selection for binning to use spades or flye\n  run_spades:\n    type: boolean?\n    label: Use SPAdes\n    doc: Run with SPAdes assembler (default true)\n    default: true\n  only_assembler_mode_spades:\n    type: boolean?\n    label: Only spades assembler\n    doc: Run spades in only assembler mode (without read error correction) (default false)\n    default: false\n  run_flye:\n    type: boolean?\n    label: Use Flye\n    doc: Run with Flye assembler (default false)\n    default: false\n  run_pilon:\n    type: boolean?\n    label: Use Pilon\n    doc: Run with Pilon illumina assembly polishing (default false)\n    default: false\n  run_medaka:\n    type: boolean?\n    label: Use Medaka\n    doc: Run with Mekada assembly polishing with nanopore reads (default false)\n    default: false\n  binning:\n    type: boolean?\n    label: Run binning workflow\n    doc: Run with contig binning workflow (default false)\n    default: false\n  run_GEM:\n    type: boolean?\n    label: Run GEM workflow\n    doc: | \n          Run the community GEnomescale Metabolic models workflow on bins. (default false)\n          NOTE: Uses by default private docker containers \n    default: false\n  run_smetana:\n    type: boolean?\n    label: Run SMETANA\n    doc: Run SMETANA (Species METabolic interaction ANAlysis) (default false)\n    default: false\n  skip_qc_unfiltered:\n    type: boolean?\n    doc: Skip quality analyses of unfiltered input reads (default false)\n    label: Skip QC unfiltered\n    default: false\n\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes (default 2)\n    label: Number of threads\n    default: 2\n  memory:\n    type: int?\n    doc: Maximum memory usage in megabytes (default 8GB)\n    label: Memory usage (MB)\n    default: 8000\n\n  destination:\n    type: string?\n    label: Output Destination (prov only)\n    doc: Not used in this workflow. Output destination used for cwl-prov reporting only.\n\nsteps:\n#############################################\n#### Preparation of reference files\n  prepare_fasta_db:\n    label: Prepare references\n    doc: Prepare references to a single fasta file and unique headers\n    when: $(inputs.fasta_files !== null && inputs.fasta_files.length !== 0)\n    run: ../tools/bbmap/prepare_fasta_db.cwl\n    in:\n      fasta_files: filter_references\n      output_file_name:\n        valueFrom: \"filter-reference_prepared.fa.gz\"\n    out: [fasta_db]\n\n#############################################\n#### Quality workflow ILLUMINA\n  workflow_quality_illumina:\n    label: Quality and filtering workflow\n    doc: Quality, filtering and taxonomic classification of Illumina reads\n    when: $(inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: workflow_illumina_quality.cwl\n    in:\n      identifier: identifier\n      forward_reads: illumina_forward_reads\n      reverse_reads: illumina_reverse_reads\n      skip_qc_unfiltered: skip_qc_unfiltered\n      deduplicate: deduplicate\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n        pickValue: all_non_null\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      memory: memory\n      threads: threads\n      step:\n        default: 1\n    out: [QC_reverse_reads, QC_forward_reads, reports_folder, kraken2_folder]\n\n#############################################\n#### Quality workflow Oxford Nanopore\n  workflow_quality_nanopore:\n    label: Oxford Nanopore quality workflow\n    doc: Quality, filtering and taxonomic classification workflow for Oxford Nanopore reads\n    when: $(inputs.longreads !== null && inputs.longreads !== 0)\n    run: workflow_longread_quality.cwl\n    in:\n      identifier: identifier\n      longreads: nanopore_reads\n      fastq_rich: fastq_rich\n      readtype:\n        default: \"Nanopore\"\n      skip_qc_unfiltered: skip_qc_unfiltered\n      keep_percent: longread_keep_percent\n      minimum_length: longread_minimum_length\n      length_weight: longread_length_weight\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n        pickValue: all_non_null\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      threads: threads\n      step:\n        default: 1\n    out: [filtered_reads, filtlong_log, reference_filter_longreads_log, nanoplot_unfiltered_folder, nanoplot_filtered_folder, kraken2_folder]\n#############################################\n#### Quality workflow PacBio\n  workflow_quality_pacbio:\n    label: PacBio quality and filtering workflow\n    doc: Quality, filtering and taxonomic classification for PacBio reads\n    when: $(inputs.longreads !== null && inputs.longreads !== 0)\n    run: workflow_longread_quality.cwl\n    in:\n      identifier: identifier\n      longreads: pacbio_reads\n      readtype:\n        default: \"PacBio\"\n      skip_qc_unfiltered: skip_qc_unfiltered\n      keep_percent: longread_keep_percent\n      minimum_length: longread_minimum_length\n      length_weight: longread_length_weight\n      prepare_reference:\n        default: false\n      filter_references:\n        linkMerge: merge_flattened\n        source: [prepare_fasta_db/fasta_db]\n      keep_reference_mapped_reads: use_reference_mapped_reads\n      kraken2_database: kraken2_database\n      kraken2_confidence: kraken2_confidence\n      threads: threads\n      step:\n        default: 1\n    out: [filtered_reads, filtlong_log, reference_filter_longreads_log, nanoplot_unfiltered_folder, nanoplot_filtered_folder, kraken2_folder]\n\n#############################################\n#### Assembly using SPAdes\n  spades:\n    doc: Genome assembly using SPAdes with illumina and or long reads\n    label: SPAdes assembly\n    when: $(inputs.run_spades && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/spades/spades.cwl\n    in:\n      run_spades: run_spades\n\n      forward_reads:\n        source: [ workflow_quality_illumina/QC_forward_reads ]\n        linkMerge: merge_nested\n      reverse_reads:\n        source: [ workflow_quality_illumina/QC_reverse_reads ]\n        linkMerge: merge_nested\n      pacbio_reads:\n        source: workflow_quality_pacbio/filtered_reads\n        valueFrom:\n          ${\n            var reads = null;\n            if (self !== null) { reads = [self]; }\n            return reads;\n          }\n      nanopore_reads:\n        source: workflow_quality_nanopore/filtered_reads\n        valueFrom:\n          ${\n            var reads = null;\n            if (self !== null) { reads = [self]; }\n            return reads;\n          }\n      only_assembler: only_assembler_mode_spades\n      metagenome: metagenome\n      memory: memory\n      threads: threads\n    out: [contigs, scaffolds, assembly_graph, contigs_assembly_paths, scaffolds_assembly_paths, contigs_before_rr, params, log, internal_config, internal_dataset]\n\n  compress_spades:\n    label: SPAdes compressed\n    doc: Compress the large Spades assembly output files\n    when: $(inputs.run_spades && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/bash/pigz.cwl\n    scatter: [inputfile]\n    scatterMethod: dotproduct\n    in:\n      run_spades: run_spades\n      forward_reads: illumina_forward_reads\n\n      threads: threads\n      inputfile:\n        source: [spades/contigs, spades/scaffolds,spades/assembly_graph,spades/contigs_before_rr, spades/contigs_assembly_paths,spades/scaffolds_assembly_paths]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n    out: [outfile]\n\n#############################################\n#### De novo assembly with Flye\n  flye:\n    label: Flye assembly\n    doc: De novo assembly of single-molecule reads with Flye\n    when: $(inputs.run_flye)\n    run: ../tools/flye/flye.cwl\n    in:\n      run_flye: run_flye\n\n      nano_raw: workflow_quality_nanopore/filtered_reads\n      pacbio_raw: workflow_quality_pacbio/filtered_reads\n      threads: threads\n      metagenome: metagenome\n      genome_size: genome_size\n    out: [00_assembly, 10_consensus, 20_repeat, 30_contigger, 40_polishing, assembly, assembly_info, flye_log, params]\n\n#############################################\n#### Polishing of assembled genome with Medaka\n  medaka:\n    label: Medaka polishing of assembly\n    doc: Medaka for (ont reads) polishing of a assembled genome\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/medaka/medaka_consensus_py.cwl\n    in:\n      run_medaka: run_medaka\n\n      nanopore_reads: nanopore_reads\n      threads: threads\n      draft_assembly:\n        source:\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      reads: workflow_quality_nanopore/filtered_reads\n      basecall_model: ont_basecall_model\n    out: [polished_assembly, gaps_in_draft_coords] # probs, calls_to_draft\n  metaquast_medaka:\n    label: assembly evaluation\n    doc: evaluation of polished assembly with metaQUAST\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads !== 0)\n    run: ../tools/quast/metaquast.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n      assembly: medaka/polished_assembly\n      threads: threads\n    out: [metaquast_outdir, meta_combined_ref, meta_icarusDir, metaquast_krona, not_aligned, meta_downloaded_ref, runs_per_reference, meta_summary, meta_icarus, metaquast_log, metaquast_report, basicStats, quast_icarusDir, quast_icarusHtml, quastReport, quastLog, transposedReport]\n\n#############################################\n#### Workflow Pilon assembly polishing\n  workflow_pilon:\n    label: Pilon worklow\n    doc: Illumina reads assembly polishing with Pilon\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: workflow_pilon_mapping.cwl\n    in:\n      run_pilon: run_pilon\n\n      identifier:\n        source: identifier\n        valueFrom: $(self)_scaffolds\n      assembly:\n        source:\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      illumina_forward_reads: workflow_quality_illumina/QC_forward_reads\n      illumina_reverse_reads: workflow_quality_illumina/QC_reverse_reads\n      fixlist: pilon_fixlist\n      threads: threads\n      memory: memory\n    out: [pilon_polished_assembly, vcf, log]\n\n#############################################\n# #### Assembly quality assessment using quast\n#   quast:\n#     doc: Genome assembly quality assessment using Quast\n#     label: Quast workflow\n#     run: ../tools/quast/quast.cwl\n#     in:\n#       assembly: workflow_pilon/pilon_polished_assembly\n#     out: [basicStats, icarusDir, icarusHtml, quastReport, quastLog, transposedReport]\n#############################################\n#### Assembly evaluation with QUAST\n  metaquast_pilon:\n    label: Illumina assembly evaluation\n    doc: Illumina evaluation of pilon polished assembly with metaQUAST\n    when: $(inputs.run_pilon && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/quast/metaquast.cwl\n    in:\n      run_pilon: run_pilon\n      forward_reads: illumina_forward_reads\n\n      assembly: workflow_pilon/pilon_polished_assembly\n      threads: threads\n    out: [metaquast_outdir, meta_combined_ref, meta_icarusDir, metaquast_krona, not_aligned, meta_downloaded_ref, runs_per_reference, meta_summary, meta_icarus, metaquast_log, metaquast_report, basicStats, quast_icarusDir, quast_icarusHtml, quastReport, quastLog, transposedReport]\n\n#############################################\n#### Read mapping using BBmap for binning\n  bbmap:\n    label: BBmap read mapping\n    doc: Illumina read mapping using BBmap on assembled contigs\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/bbmap/bbmap.cwl\n    in:\n      binning: binning\n\n      identifier: identifier\n      reference:\n        source:\n        - workflow_pilon/pilon_polished_assembly\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      forward_reads: workflow_quality_illumina/QC_forward_reads\n      reverse_reads: workflow_quality_illumina/QC_reverse_reads\n      memory: memory\n      threads: threads\n    out: [sam, stats, covstats, log]\n#############################################\n#### Convert sam file to sorted bam for binning\n  sam_to_sorted_bam:\n    label: sam conversion to sorted bam\n    doc: Sam file conversion to a sorted indexed bam file\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/samtools/sam_to_sorted-bam.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      identifier: identifier\n      sam: bbmap/sam\n      threads: threads\n    out: [sortedbam]\n#############################################\n#### reports per contig alignment statistics\n  contig_read_counts:\n    label: Samtools idxstats\n    doc: Reports alignment summary statistics\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: ../tools/samtools/samtools_idxstats.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      identifier: identifier\n      bam_file: sam_to_sorted_bam/sortedbam\n      threads: threads\n    out: [contigReadCounts]\n\n#############################################\n#### Binning workflow\n  workflow_binning:\n    label: Binning workflow\n    doc: Binning workflow to create bins\n    when: $(inputs.binning && inputs.forward_reads !== null && inputs.forward_reads.length !== 0)\n    run: workflow_metagenomics_binning.cwl\n    in:\n      binning: binning\n      forward_reads: illumina_forward_reads\n\n      busco_data: busco_data\n      identifier: identifier\n      gtdbtk_data: gtdbtk_data\n      semibin_environment: semibin_environment\n      assembly:\n        source:\n        - workflow_pilon/pilon_polished_assembly\n        - medaka/polished_assembly\n        - flye/assembly\n        - spades/scaffolds\n        pickValue: first_non_null\n      bam_file: sam_to_sorted_bam/sortedbam\n      threads: threads\n      memory: memory\n      step:\n        default: 1\n    out: [bins,das_tool_output, maxbin2_output, semibin_output, metabat2_output,checkm_output, gtdbtk_output, busco_output, bins_summary_table, bins_read_stats, eukrep_fasta, eukrep_stats_file]\n#############################################\n#### GEM workflow\n  workflow_GEM:\n    label: GEM workflow\n    doc: CarveMe community genomescale metabolic models workflow from bins\n    when: $(inputs.binning && inputs.run_GEM)\n    run: workflow_metagenomics_GEM.cwl\n    in:\n      binning: binning\n      run_smetana: run_smetana\n      run_GEM: run_GEM\n\n      identifier: identifier\n      bins: workflow_binning/bins\n      threads: threads\n    out: [carveme_gems_folder,protein_fasta_folder,memote_folder,smetana_output,gemstats_out]\n\n#############################################\n\n# OUTPUT FOLDER PREPARATION #\n\n#############################################\n#### Filtered reads output folder (keep)\n  keep_readfilter_files_to_folder:\n    doc: Preparation of read filtering output files to a specific output folder\n    label: Read filtering output folder\n    when: $(inputs.keep_filtered_reads)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      keep_filtered_reads: keep_filtered_reads\n\n      files:\n        source: [workflow_quality_nanopore/filtered_reads, workflow_quality_pacbio/filtered_reads, workflow_quality_illumina/QC_forward_reads, workflow_quality_illumina/QC_reverse_reads, workflow_quality_nanopore/filtlong_log, workflow_quality_nanopore/reference_filter_longreads_log, workflow_quality_pacbio/filtlong_log, workflow_quality_pacbio/reference_filter_longreads_log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [workflow_quality_pacbio/kraken2_folder, workflow_quality_nanopore/kraken2_folder, workflow_quality_illumina/kraken2_folder, workflow_quality_illumina/reports_folder, workflow_quality_nanopore/nanoplot_unfiltered_folder, workflow_quality_nanopore/nanoplot_filtered_folder, workflow_quality_pacbio/nanoplot_unfiltered_folder, workflow_quality_pacbio/nanoplot_filtered_folder]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Read_filtering_and_classification\")\n    out:\n      [results]\n#############################################\n#### Filtered reads output folder\n  readfilter_files_to_folder:\n    doc: Preparation of read filtering output files to a specific output folder\n    label: Read filtering output folder\n    when: $(inputs.keep_filtered_reads == false)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      keep_filtered_reads: keep_filtered_reads\n\n      files:\n        source: [workflow_quality_nanopore/filtlong_log, workflow_quality_nanopore/reference_filter_longreads_log, workflow_quality_pacbio/filtlong_log, workflow_quality_pacbio/reference_filter_longreads_log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [workflow_quality_pacbio/kraken2_folder, workflow_quality_nanopore/kraken2_folder, workflow_quality_illumina/kraken2_folder, workflow_quality_illumina/reports_folder, workflow_quality_nanopore/nanoplot_unfiltered_folder, workflow_quality_nanopore/nanoplot_filtered_folder, workflow_quality_pacbio/nanoplot_unfiltered_folder, workflow_quality_pacbio/nanoplot_filtered_folder]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Read_filtering_and_classification\")\n    out:\n      [results]\n\n#############################################\n#### SPAdes Output folder\n  spades_files_to_folder:\n    doc: Preparation of SPAdes output files to a specific output folder\n    label: SPADES output to folder\n    when: $(inputs.run_spades)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_spades: run_spades\n\n      files:\n        source: [compress_spades/outfile, spades/params, spades/log, spades/internal_config, spades/internal_dataset]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"SPAdes_Assembly\")\n    out:\n      [results]\n#############################################\n#### Flye output folder\n  flye_files_to_folder:\n    doc: Preparation of Flye output files to a specific output folder\n    label: Flye output folder\n    when: $(inputs.run_flye)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_flye: run_flye\n\n      files:\n        source: [flye/assembly, flye/assembly_info, flye/flye_log, flye/params]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      # folders:\n        # source: [workflow_flye/00_assembly, workflow_flye/10_consensus, workflow_flye/20_repeat, workflow_flye/30_contigger, workflow_flye/40_polishing]\n        # linkMerge: merge_flattened\n      destination:\n        valueFrom: $(\"Flye_Assembly\")\n    out:\n      [results]\n#############################################\n#### Medaka metaQUAST output folder\n  metaquast_medaka_files_to_folder:\n    doc: Preparation of metaQUAST output files to a specific output folder\n    label: Medaka metaQUAST output folder\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n\n      files:\n        source: [metaquast_medaka/metaquast_report, metaquast_medaka/quastReport]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_medaka/metaquast_krona, metaquast_medaka/not_aligned, metaquast_medaka/runs_per_reference]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"QUAST_Medaka_assembly_quality\")\n    out:\n      [results]\n#############################################\n#### Medaka + metaquast output folder\n  medaka_files_to_folder:\n    doc: Preparation of Medaka output files to a specific output folder\n    label: Medaka output folder\n    when: $(inputs.run_medaka && inputs.nanopore_reads !== null && inputs.nanopore_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_medaka: run_medaka\n      nanopore_reads: nanopore_reads\n\n      files:\n        source: [medaka/polished_assembly, medaka/gaps_in_draft_coords] # , workflow_medaka/probs, workflow_medaka/calls_to_draft\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_medaka_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Medaka_assembly_polishing\")\n    out:\n      [results]\n#############################################\n#### Pilon metaQUAST output folder\n  metaquast_pilon_files_to_folder:\n    doc: Preparation of QUAST output files to a specific output folder\n    label: Illumina metaQUAST output folder\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_pilon: run_pilon\n      illumina_forward_reads: illumina_forward_reads\n\n      files:\n        source: [metaquast_pilon/metaquast_report, metaquast_pilon/quastReport]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_pilon/metaquast_krona, metaquast_pilon/not_aligned]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"QUAST_Illumina_polished_assembly_quality\")\n    out:\n      [results]\n#############################################\n#### Pilon + metaQUAST output folder\n  pilon_files_to_folder:\n    doc: Preparation of pilon output files to a specific output folder\n    label: Pilon output folder\n    when: $(inputs.run_pilon && inputs.illumina_forward_reads !== null && inputs.illumina_forward_reads.length !== 0)\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      run_pilon: run_pilon\n      illumina_forward_reads: illumina_forward_reads\n\n      files:\n        source: [workflow_pilon/vcf, workflow_pilon/pilon_polished_assembly, workflow_pilon/log]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      folders:\n        source: [metaquast_pilon_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Illumina_polished_assembly\")\n    out:\n      [results]\n\n\n#############################################\n#### Combined assembly steps output folder\n  assembly_files_to_folder:\n    doc: Preparation of Flye output files to a specific output folder\n    label: Flye output folder\n    run: ../tools/expressions/files_to_folder.cwl\n    in:\n      folders:\n        source: [spades_files_to_folder/results, flye_files_to_folder/results, medaka_files_to_folder/results, pilon_files_to_folder/results]\n        linkMerge: merge_flattened\n        pickValue: all_non_null\n      destination:\n        valueFrom: $(\"Assembly\")\n    out:\n      [results]\n#############################################\n#### BAM files output folder\n  # sorted_bam_files_to_folder:\n  #   doc: Preparation of mapped reads (sorted bam files) to a specific output folder\n  #   label: Mapped reads output to folder\n  #   when: $(inputs.binning)\n  #   run: ../tools/expressions/files_to_folder.cwl\n  #   in:\n  #     binning: binning\n  #     files:\n  #       source: [sam_to_sorted_bam/sortedbam, bbmap/stats, contig_read_counts/contigReadCounts, bbmap/covstats, bbmap/log]\n  #       linkMerge: merge_flattened\n  #     destination:\n  #       valueFrom: $(\"5_BBMAP_ReadMapping\")\n  #   out:\n  #     [results]\n#############################################\n#### Binning output folder\n  binning_files_to_folder:\n    doc: Preparation of binning output files and folders to a specific output folder\n    label: Binning output to folder\n    when: $(inputs.binning)\n    run: ../too",
    "p_tag_content": "Accepts both Illumina and Long reads (ONT/PacBio) Workflow Illumina Quality:https://workflowhub.eu/workflows/336?version=1 Workflow LongRead Quality:https://workflowhub.eu/workflows/337 Kraken2 taxonomic classification of FASTQ reads SPAdes/Flye (Assembly) QUAST (Assembly quality report) Workflow binnninghttps://workflowhub.eu/workflows/64?version=11(optional) Workflow Genome-scale metabolic modelshttps://workflowhub.eu/workflows/372(optional) Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:https://gitlab.com/m-unlock/cwl How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/367?version=1 Initial commit Views:2641Downloads:216 Created: 14th Jun 2022 at 09:14 Last updated: 7th Apr 2023 at 15:10 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 701,
    "discussion_links": "[{'id': '475', 'label': 'GitLab Issues', 'url': 'https://gitlab.com/m-unlock/cwl/-/issues'}]",
    "title": "Metagenomic GEMs from Assembly",
    "license": "Apache-2.0",
    "description": "### Workflow for Metagenomics from bins to metabolic models (GEMs)\n\n**Summary**\n  - Prodigal gene prediction\n  - CarveMe genome scale metabolic model reconstruction\n  - MEMOTE for metabolic model testing\n  - SMETANA Species METabolic interaction ANAlysis\n\nOther UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br>\n\n**All tool CWL files and other workflows can be found here:**<br>\nTools: https://gitlab.com/m-unlock/cwl<br>\nWorkflows: https://gitlab.com/m-unlock/cwl/workflows\n\n**How to setup and use an UNLOCK workflow:**<br>\nhttps://m-unlock.gitlab.io/docs/setup/setup.html<br>",
    "latest_version": 1,
    "tags": "['GEM', 'Genomics', 'Metagenomics', 'carveme', 'memote']",
    "versions": "[{'version': 1, 'revision_comments': 'Initial commit', 'url': 'https://workflowhub.eu/workflows/372?version=1', 'commit': 'dfc8e9c43ea7eaa418b01496b0f551a96914a83a', 'ref': 'refs/heads/master', 'tree': '/workflows/372/git/1/tree', 'doi': None}]",
    "version": 1,
    "revision_comments": "Initial commit",
    "created_at": "2022-07-07T08:23:15.000Z",
    "updated_at": "2023-01-16T14:01:55.000Z",
    "doi": "",
    "content_blobs": [],
    "creators": "[{'profile': '/people/84', 'family_name': 'Nijsse', 'given_name': 'Bart', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-9524-5964'}, {'profile': '/people/46', 'family_name': 'Koehorst', 'given_name': 'Jasper', 'affiliation': 'UNLOCK', 'orcid': 'https://orcid.org/0000-0001-8172-8981'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": "[{'label': 'Metabolic pathway prediction', 'identifier': 'http://edamontology.org/operation_3929'}]",
    "topic_annotations": "[{'label': 'Metagenomics', 'identifier': 'http://edamontology.org/topic_3174'}, {'label': 'Sequence analysis', 'identifier': 'http://edamontology.org/topic_0080'}]",
    "internals": "{'inputs': [{'id': 'identifier', 'name': 'Identifier used', 'description': 'Identifier for this dataset used in this workflow', 'type': [{'type': 'string'}], 'default_value': None}, {'id': 'bins', 'name': 'Genome/bin', 'description': 'Bin/genome fasta files', 'type': [{'type': 'File[]'}], 'default_value': None}, {'id': 'solver', 'name': None, 'description': 'Solver to be used in MEMOTE and SMETANA (defaul; cplex)', 'type': [{'type': 'string'}], 'default_value': 'cplex'}, {'id': 'threads', 'name': 'number of threads', 'description': 'Number of threads to use for computational processes', 'type': [{'type': 'int?'}], 'default_value': 2}, {'id': 'destination', 'name': 'Output Destination (prov only)', 'description': 'Not used in this workflow. Output destination used for cwl-prov reporting only.', 'type': [{'type': 'string?'}], 'default_value': None}], 'outputs': [{'id': 'carveme_gems_folder', 'name': 'CarveMe GEMs folder', 'description': 'CarveMe metabolic models folder', 'type': [{'type': 'Directory'}], 'source_ids': ['carveme_files_to_folder/results']}, {'id': 'protein_fasta_folder', 'name': 'Protein files folder', 'description': 'Prodigal predicted proteins (compressed) fasta files', 'type': [{'type': 'Directory'}], 'source_ids': ['prodigal_files_to_folder/results']}, {'id': 'memote_folder', 'name': 'MEMOTE outputs folder', 'description': 'MEMOTE outputs folder', 'type': [{'type': 'Directory'}], 'source_ids': ['memote_files_to_folder/results']}, {'id': 'smetana_output', 'name': 'SMETANA output', 'description': 'SMETANA detailed output table', 'type': [{'type': 'File'}], 'source_ids': ['smetana/detailed_output_tsv']}, {'id': 'gemstats_out', 'name': 'GEMstats', 'description': 'CarveMe GEM statistics', 'type': [{'type': 'File'}], 'source_ids': ['gemstats/carveme_GEMstats']}], 'steps': [{'id': 'prodigal', 'name': 'prodigal', 'description': 'prodigal gene/protein prediction', 'sink_ids': ['prodigal/predicted_proteins_faa']}, {'id': 'compress_prodigal', 'name': 'Compress proteins', 'description': 'Compress prodigal protein files', 'sink_ids': ['compress_prodigal/outfile']}, {'id': 'carveme', 'name': 'CarveMe', 'description': 'Genome-scale metabolic models reconstruction with CarveMe', 'sink_ids': ['carveme/carveme_gem']}, {'id': 'compress_carveme', 'name': 'Compress GEM', 'description': 'Compress CarveMe GEM', 'sink_ids': ['compress_carveme/outfile']}, {'id': 'gemstats', 'name': 'GEM stats', 'description': 'CarveMe GEM statistics', 'sink_ids': ['gemstats/carveme_GEMstats']}, {'id': 'smetana', 'name': 'SMETANA', 'description': 'Species METabolic interaction ANAlysis', 'sink_ids': ['smetana/detailed_output_tsv']}, {'id': 'memote_report_snapshot', 'name': 'MEMOTE report snapshot', 'description': \"Take a snapshot of a model's state and generate a report.\", 'sink_ids': ['memote_report_snapshot/report_html']}, {'id': 'memote_run', 'name': 'MEMOTE report snapshot', 'description': 'MEMOTE run analsis', 'sink_ids': ['memote_run/run_json']}, {'id': 'carveme_files_to_folder', 'name': 'CarveMe GEMs to folder', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['carveme_files_to_folder/results']}, {'id': 'prodigal_files_to_folder', 'name': 'Prodigal proteins to folder', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['prodigal_files_to_folder/results']}, {'id': 'memote_files_to_folder', 'name': 'MEMOTE output', 'description': 'Preparation of workflow output files to a specific output folder', 'sink_ids': ['memote_files_to_folder/results']}], 'links': [{'id': 'input_fasta', 'source_id': 'bins', 'sink_id': 'prodigal', 'name': None, 'default_value': None}, {'id': 'single_mode', 'source_id': None, 'sink_id': 'prodigal', 'name': None, 'default_value': True}, {'id': 'inputfile', 'source_id': 'prodigal/predicted_proteins_faa', 'sink_id': 'compress_prodigal', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_prodigal', 'name': None, 'default_value': None}, {'id': 'protein_file', 'source_id': 'prodigal/predicted_proteins_faa', 'sink_id': 'carveme', 'name': None, 'default_value': None}, {'id': 'inputfile', 'source_id': 'carveme/carveme_gem', 'sink_id': 'compress_carveme', 'name': None, 'default_value': None}, {'id': 'threads', 'source_id': 'threads', 'sink_id': 'compress_carveme', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'gemstats', 'name': None, 'default_value': None}, {'id': 'carveme_gems', 'source_id': 'carveme/carveme_gem', 'sink_id': 'gemstats', 'name': None, 'default_value': None}, {'id': 'identifier', 'source_id': 'identifier', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'solver', 'source_id': 'solver', 'sink_id': 'smetana', 'name': None, 'default_value': None}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': None}, {'id': 'report_snapshot', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_produced_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_consumed_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_produced_with_open_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_consumed_with_open_bounds', 'source_id': None, 'sink_id': 'memote_report_snapshot', 'name': None, 'default_value': True}, {'id': 'GEM', 'source_id': 'carveme/carveme_gem', 'sink_id': 'memote_run', 'name': None, 'default_value': None}, {'id': 'run', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_produced_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_consumed_with_closed_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_produced_with_open_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'skip_test_find_metabolites_not_consumed_with_open_bounds', 'source_id': None, 'sink_id': 'memote_run', 'name': None, 'default_value': True}, {'id': 'files', 'source_id': 'compress_carveme/outfile', 'sink_id': 'carveme_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'carveme_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'compress_prodigal/outfile', 'sink_id': 'prodigal_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'prodigal_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'memote_report_snapshot/report_html', 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}, {'id': 'files', 'source_id': 'memote_run/run_json', 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}, {'id': 'destination', 'source_id': None, 'sink_id': 'memote_files_to_folder', 'name': None, 'default_value': None}]}",
    "tools": [],
    "id": 372,
    "text_field": "['workflow_metagenomics_GEM.cwl']",
    "raw_text_content": "#!/usr/bin/env cwl-runner\ncwlVersion: v1.2\nclass: Workflow\nrequirements:\n  StepInputExpressionRequirement: {}\n  InlineJavascriptRequirement: {}\n  MultipleInputFeatureRequirement: {}\n  SubworkflowFeatureRequirement: {}\n  ScatterFeatureRequirement: {}\n\nlabel: Metagenomic Binning from Assembly\ndoc: |\n  Workflow for Metagenomics from bins to metabolic model.<br>\n  Summary\n    - Prodigal gene prediction\n    - CarveMe genome scale metabolic model reconstruction\n    - MEMOTE for metabolic model testing\n    - SMETANA Species METabolic interaction ANAlysis\n\n  Other UNLOCK workflows on WorkflowHub: https://workflowhub.eu/projects/16/workflows?view=default<br><br>\n  \n  **All tool CWL files and other workflows can be found here:**<br>\n    Tools: https://gitlab.com/m-unlock/cwl<br>\n    Workflows: https://gitlab.com/m-unlock/cwl/workflows<br>\n\n  **How to setup and use execute an UNLOCK workflow:**<br>\n  https://m-unlock.gitlab.io/docs/setup/setup.html<br>\n\noutputs:\n  carveme_gems_folder:\n    label: CarveMe GEMs folder\n    doc: CarveMe metabolic models folder\n    type: Directory\n    outputSource: carveme_files_to_folder/results\n  protein_fasta_folder:\n    label: Protein files folder\n    doc: Prodigal predicted proteins (compressed) fasta files\n    type: Directory\n    outputSource: prodigal_files_to_folder/results\n  memote_folder:\n    label: MEMOTE outputs folder\n    doc: MEMOTE outputs folder\n    type: Directory\n    outputSource: memote_files_to_folder/results\n\n  smetana_output:\n    label: SMETANA output\n    doc: SMETANA detailed output table\n    type: File\n    outputSource: smetana/detailed_output_tsv\n\n  gemstats_out:\n    label: GEMstats\n    doc: CarveMe GEM statistics\n    type: File\n    outputSource: gemstats/carveme_GEMstats\n\ninputs:\n  identifier:\n    type: string\n    doc: Identifier for this dataset used in this workflow\n    label: Identifier used\n  bins:\n    type: File[]\n    doc: Bin/genome fasta files\n    label: Genome/bin\n  solver:\n    type: string\n    doc: Solver to be used in MEMOTE and SMETANA (defaul; cplex)\n    default: \"cplex\"\n\n  threads:\n    type: int?\n    doc: Number of threads to use for computational processes\n    label: number of threads\n    default: 2\n\n\n  destination:\n    type: string?\n    label: Output Destination (prov only)\n    doc: Not used in this workflow. Output destination used for cwl-prov reporting only.\n\nsteps:\n#############################################\n#### Prodigal\n  prodigal:\n    label: prodigal\n    doc: prodigal gene/protein prediction\n    run: ../prodigal/prodigal.cwl\n    scatter: [input_fasta]\n    in:\n      input_fasta: bins\n      single_mode:\n        default: true\n    out: [predicted_proteins_faa]\n\n  compress_prodigal:\n    label: Compress proteins\n    doc: Compress prodigal protein files\n    run: ../bash/pigz.cwl\n    scatter: inputfile\n    in:\n      inputfile: \n        source: [prodigal/predicted_proteins_faa]\n        linkMerge: merge_flattened\n      threads: threads\n    out: [outfile]\n#############################################\n#### CarveMe\n  carveme:\n    label: CarveMe\n    doc: Genome-scale metabolic models reconstruction with CarveMe\n    run: ../carveme/carveme.cwl\n    scatter: [protein_file]\n    in:\n      protein_file: prodigal/predicted_proteins_faa\n    out: [carveme_gem]\n\n  compress_carveme:\n    label: Compress GEM\n    doc: Compress CarveMe GEM\n    run: ../bash/pigz.cwl\n    scatter: inputfile\n    in:\n      inputfile: \n        source: [carveme/carveme_gem]\n        linkMerge: merge_flattened\n      threads: threads\n    out: [outfile]\n#############################################\n#### GEM statistics\n  gemstats:\n    label: GEM stats\n    doc: CarveMe GEM statistics\n    run: ../carveme/GEMstats.cwl\n    in:\n      identifier: identifier\n      carveme_gems: carveme/carveme_gem\n    out: [carveme_GEMstats]\n#############################################\n#### SMETANA\n  smetana:\n    label: SMETANA\n    doc: Species METabolic interaction ANAlysis\n    run: ../smetana/smetana.cwl\n    in:\n      identifier: identifier\n      GEM: carveme/carveme_gem\n      solver: solver\n    out: [detailed_output_tsv]\n\n#############################################\n#### MEMOTE REPORT AND RUN\n  memote_report_snapshot:\n    label: MEMOTE report snapshot\n    doc: Take a snapshot of a model's state and generate a report. \n    run: ../memote/memote.cwl\n    scatter: [GEM]\n    in:\n      GEM: carveme/carveme_gem\n      report_snapshot:\n        default: true\n      skip_test_find_metabolites_produced_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_consumed_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_not_produced_with_open_bounds:\n        default: true\n      skip_test_find_metabolites_not_consumed_with_open_bounds:\n        default: true\n    out: [report_html]\n\n  memote_run:\n    label: MEMOTE report snapshot\n    doc: MEMOTE run analsis \n    run: ../memote/memote.cwl\n    scatter: [GEM]\n    in:\n      GEM: carveme/carveme_gem\n      run:\n        default: true\n      skip_test_find_metabolites_produced_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_consumed_with_closed_bounds:\n        default: true\n      skip_test_find_metabolites_not_produced_with_open_bounds:\n        default: true\n      skip_test_find_metabolites_not_consumed_with_open_bounds:\n        default: true\n    out: [run_json]\n\n#############################################\n#### Move to folder if not part of a workflow\n  carveme_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: CarveMe GEMs to folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [compress_carveme/outfile]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"CarveMe_GEMs\"\n    out:\n      [results]\n#############################################\n#### Move to folder if not part of a workflow\n  prodigal_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: Prodigal proteins to folder\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [compress_prodigal/outfile]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"Prodigal_proteins\"\n    out:\n      [results]\n#############################################\n#### Move to folder if not part of a workflow\n  memote_files_to_folder:\n    doc: Preparation of workflow output files to a specific output folder\n    label: MEMOTE output\n    run: ../expressions/files_to_folder.cwl\n    in:\n      files: \n        source: [memote_report_snapshot/report_html,memote_run/run_json]\n        linkMerge: merge_flattened\n      destination: \n        valueFrom: \"MEMOTE\"\n    out:\n      [results]\n\ns:author:\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-8172-8981\n    s:email: mailto:jasper.koehorst@wur.nl\n    s:name: Jasper Koehorst\n  - class: s:Person\n    s:identifier: https://orcid.org/0000-0001-9524-5964\n    s:email: mailto:bart.nijsse@wur.nl\n    s:name: Bart Nijsse\n\ns:citation: https://m-unlock.nl\ns:codeRepository: https://gitlab.com/m-unlock/cwl\ns:dateCreated: \"2022-06-00\"\ns:license: https://spdx.org/licenses/Apache-2.0 \ns:copyrightHolder: \"UNLOCK - Unlocking Microbial Potential\"\n\n$namespaces:\n  s: https://schema.org/",
    "p_tag_content": "Summary Other UNLOCK workflows on WorkflowHub:https://workflowhub.eu/projects/16/workflows?view=default All tool CWL files and other workflows can be found here:Tools:https://gitlab.com/m-unlock/cwlWorkflows:https://gitlab.com/m-unlock/cwl/workflows How to setup and use an UNLOCK workflow:https://m-unlock.gitlab.io/docs/setup/setup.html Click and drag the diagram to pan, double click or use the controls to zoom. SEEK ID:https://workflowhub.eu/workflows/372?version=1 Initial commit Views:1990Downloads:182 Created: 7th Jul 2022 at 09:23 Last updated: 2nd Nov 2022 at 15:41 None Teams:UNLOCK Organizations:UNLOCK Teams:UNLOCK Organizations:UNLOCK Expertise:Metagenomics Tools:CWL,Workflows A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified An open infrastructure for exploring new horizons for research on microbial communities. Space:Independent Teams Public web page:https://m-unlock.nl Start date: 1st Sep 2020 Organisms:Not specified"
  },
  {
    "": 710,
    "discussion_links": [],
    "title": "A workflow for marine Genomic Observatories data analysis",
    "license": "Apache-2.0",
    "description": "# metaGOflow: A workflow for marine Genomic Observatories' data analysis\n\n![logo](https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png)\n\n\n## An EOSC-Life project\n\nThe workflows developed in the framework of this project are based on `pipeline-v5` of the MGnify resource.\n\n> This branch is a child of the [`pipeline_5.1`](https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1) branch\n> that contains all CWL descriptions of the MGnify pipeline version 5.1.\n\n## Dependencies\n\nTo run metaGOflow you need to make sure you have the following set on your computing environmnet first:\n\n- python3 [v 3.8+]\n- [Docker](https://www.docker.com) [v 19.+] or [Singularity](https://apptainer.org) [v 3.7.+]/[Apptainer](https://apptainer.org) [v 1.+]\n- [cwltool](https://github.com/common-workflow-language/cwltool) [v 3.+]\n- [rdflib](https://rdflib.readthedocs.io/en/stable/) [v 6.+]\n- [rdflib-jsonld](https://pypi.org/project/rdflib-jsonld/) [v 0.6.2]\n- [ro-crate-py](https://github.com/ResearchObject/ro-crate-py) [v 0.7.0]\n- [pyyaml](https://pypi.org/project/PyYAML/) [v 6.0]\n- [Node.js](https://nodejs.org/) [v 10.24.0+]\n- Available storage ~235GB for databases\n\n### Storage while running\n\nDepending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.\n\n## Installation\n\n### Get the EOSC-Life marine GOs workflow\n\n```bash\ngit clone https://github.com/emo-bon/MetaGOflow\ncd MetaGOflow\n```\n\n### Download necessary databases (~235GB)\n\nYou can download databases for the EOSC-Life GOs workflow by running the\n`download_dbs.sh` script under the `Installation` folder.\n\n```bash\nbash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \n```\nIf you have one or more already in your system, then create a symbolic link pointing\nat the `ref-dbs` folder or at one of its subfolders/files.\n\nThe final structure of the DB directory should be like the following:\n\n````bash\nuser@server:~/MetaGOflow: ls ref-dbs/\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\n````\n\n## How to run\n\n### Ensure that `Node.js` is installed on your system before running metaGOflow\n\nIf you have root access on your system, you can run the commands below to install it:\n\n##### DEBIAN/UBUNTU\n```bash\nsudo apt-get update -y\nsudo apt-get install -y nodejs\n```\n\n##### RH/CentOS\n```bash\nsudo yum install rh-nodejs<stream version> (e.g. rh-nodejs10)\n```\n\n### Set up the environment\n\n#### Run once - Setup environment\n\n- ```bash\n  conda create -n EOSC-CWL python=3.8\n  ```\n\n- ```bash\n  conda activate EOSC-CWL\n  ```\n\n- ```bash\n  pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\n\n  ```\n\n#### Run every time\n\n```bash\nconda activate EOSC-CWL\n``` \n\n### Run the workflow\n\n- Edit the `config.yml` file to set the parameter values of your choice. For selecting all the steps, then set to `true` the variables in lines [2-6].\n\n#### Using Singularity\n\n##### Standalone\n- run:\n   ```bash\n   ./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n   ``\n\n##### Using a cluster with a queueing system (e.g. SLURM)\n\n- Create a job file (e.g., SBATCH file)\n\n- Enable Singularity, e.g. module load Singularity & all other dependencies \n\n- Add the run line to the job file\n\n\n#### Using Docker\n\n##### Standalone\n- run:\n    ``` bash\n    ./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n  ```\n  HINT: If you are using Docker, you may need to run the above command without the `-s' flag.\n\n## Testing samples\nThe samples are available in the `test_input` folder.\n\nWe provide metaGOflow with partial samples from the Human Metagenome Project ([SRR1620013](https://www.ebi.ac.uk/ena/browser/view/SRR1620013) and [SRR1620014](https://www.ebi.ac.uk/ena/browser/view/SRR1620014))\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. \n\n\n## Hints and tips\n\n1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`.\n\n2. `RuntimeError`: slurm currently does not support shared caching, because it does not support cleaning up a worker\n   after the last job finishes.\n   Set the `--disableCaching` flag if you want to use this batch system.\n\n3. In case you are having errors like:\n\n```\ncwltool.errors.WorkflowException: Singularity is not available for this tool\n```\n\nYou may run the following command:\n\n```\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n```\n\n## Contribution\n\nTo make contribution to the project a bit easier, all the MGnify `conditionals` and `subworkflows` under\nthe `workflows/` directory that are not used in the metaGOflow framework, have been removed.   \nHowever, all the MGnify `tools/` and `utils/` are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their own `conditionals` and/or `subworkflows` by exploiting the\ncurrently supported `tools` and `utils` as well as by developing new `tools` and/or `utils`.\n\n\n<!-- cwltool --print-dot my-wf.cwl | dot -Tsvg > my-wf.svg -->",
    "latest_version": 3,
    "tags": [],
    "versions": "[{'version': 1, 'revision_comments': 'running version with workaround in conditionals\\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=1', 'remote': 'https://github.com/emo-bon/pipeline-v5.git', 'commit': '28122db6839b3ca7a285dfc55dc7cc9bf98c3d46', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/1/tree', 'doi': None}, {'version': 2, 'revision_comments': 'Merge pull request #38 from emo-bon/fix-bugs\\r\\n\\r\\nFixes logical expression to keep tmp. \\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=2', 'remote': 'https://github.com/emo-bon/MetaGOflow', 'commit': 'deb5427d5130d0cb5f42fabeed36488a6c31389f', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/2/tree', 'doi': None}, {'version': 3, 'revision_comments': 'Merge pull request #38 from emo-bon/fix-bugs\\r\\n\\r\\nFixes logical expression to keep tmp. \\r\\n', 'url': 'https://workflowhub.eu/workflows/384?version=3', 'remote': 'https://github.com/emo-bon/MetaGOflow.git', 'commit': 'deb5427d5130d0cb5f42fabeed36488a6c31389f', 'ref': 'refs/remotes/origin/eosc-life-gos', 'tree': '/workflows/384/git/3/tree', 'doi': '10.48546/workflowhub.workflow.384.3'}]",
    "version": 3,
    "revision_comments": "Merge pull request #38 from emo-bon/fix-bugs\n\nFixes logical expression to keep tmp.",
    "created_at": "2023-05-16T20:41:04.000Z",
    "updated_at": "2023-05-16T22:01:12.000Z",
    "doi": "10.48546/workflowhub.workflow.384.3",
    "content_blobs": [],
    "creators": "[{'profile': '/people/253', 'family_name': 'Zafeiropoulos', 'given_name': 'Haris', 'affiliation': 'IMBBC-HCMR', 'orcid': 'https://orcid.org/0000-0002-4405-6802'}, {'profile': '/people/27', 'family_name': 'Beracochea', 'given_name': 'Martin', 'affiliation': 'EMBL-EBI', 'orcid': 'https://orcid.org/0000-0003-3472-3736'}]",
    "other_creators": "",
    "workflow_class": "{'title': 'Common Workflow Language', 'key': 'cwl', 'description': None}",
    "operation_annotations": [],
    "topic_annotations": [],
    "internals": {},
    "tools": [],
    "id": 384,
    "text_field": "['.github', 'workflows', 'Installation', 'templates', 'docker', 'scripts_bash', 'scripts_python2', 'scripts_python3', 'environment', 'schemas', 'test_input', 'tools', 'Assembly', 'Diamond', 'Diamond-Post-Processing', 'yml-formats', 'EggNOG', 'GFF', 'Genome_properties', 'KEGG_analysis', 'KEGG_pathways', 'Modification', 'Parsing_hmmscan', 'accessioning', 'add_run_to_db', 'assign_MGYC', 'assign_MGYP', 'scripts', 'antismash', 'chunking_antismash_with_conditionals', 'antismash', 'check_value', 'filtering_fasta', 'post-processing', 'GFF_antismash', 'fix_embl_gbk', 'fix_geneclusters_txt', 'reformat_antismash', 'rename_contigs', 'move_antismash_summary', 'generate_mapfile', 'index_fasta', 'CRISPRCasFinder', 'Combined_gene_caller', 'CGC', 'FragGeneScan', 'Prodigal', 'EggNOG-Parse', 'GO-slim', 'owltools', 'InterProScan', 'types-ymls', 'Pfam-Parse', 'RNA_prediction', 'biom-convert', 'cmsearch-deoverlap', 'cmsearch', 'easel', 'extract-coords', 'get_subunits_coords', 'get_subunits_fasta', 'krona', 'mapseq', 'mapseq2biom', 'pull_ncrnas', 'Raw_reads', 'mOTUs', 'SeqPrep', 'Trimmomatic', 'ymls-types', 'chunks', 'dna_chunker', 'fastp', 'fetch-tool', 'hmmer', 'hmmer_tab_modification', 'hmmscan', 'hmmsearch', 'mask-for-ITS', 'bash_scripts', 'bedtools', 'qc-filtering', 'qc-stats', 'summaries', 'utils', 'add_header', 'count_lines', 'fastq_to_fasta', 'generate_checksum', 'make_csv', 'pigz', 'remove_header', 'result-file-chunker', 'old_scripts', 'return_directory', 'workflows', 'conditionals', 'pseudo_files', 'subworkflows', 'assembly', 'cmsearch', 'functional-annotation', 'hmmer', 'db', 'raw_reads', 'cgc', '.editorconfig', 'conda.yml', '.gitignore', 'download_dbs.sh', 'get_singularity_images.sh', 'default.yml', 'LICENSE', 'README.md', 'config.yml', 'docker_build.sh', 'docker_push.sh', 'Dockerfile', 'add_header', 'add_symbol_json.sh', 'antismash_json_generation', 'awk_tool', 'biom-convert.sh', 'clean_motus_output.sh', 'diamond_post_run_join.sh', 'empty_tax.sh', 'esl-ssplit.sh', 'format_bedfile', 'pull_ncrnas.sh', 'remove_symbol.sh', 'run_antismash_short.sh', 'run_samtools_docker.sh', 'Dockerfile', 'MGRAST_base.py', 'run_quality_filtering.py', 'Dockerfile', 'antismash_rename_contigs.py', 'antismash_to_gff.py', 'antismash_to_gff_nojson.py', 'build_assembly_gff.py', 'change_antismash_output.py', 'change_geneclusters_ctg.py', 'change_geneclusters_ctg_js.py', 'count_fastq.py', 'count_lines.py', 'fastq_to_fasta.py', 'functional_stats.py', 'generate_checksum.py', 'generate_mapfile_prodigal.py', 'get_subunits.py', 'get_subunits_coords.py', 'give_pathways.py', 'hmmscan_tab.py', 'its-length-new.py', 'its-length.py', 'make_csv.py', 'move_antismash_summary.py', 'parsing_hmmscan.py', 'reformat-antismash.py', 'split_to_chunks.py', 'write_summaries.py', 'README.md', 'antismash.yml', 'interproscan.yml', 'toil.yml', 'ro-crate-metadata-example.json', 'run_wf.sh', 'EDAM_1.16.owl', 'EDAM_1.18.owl', 'EDAM_1.20.owl', 'slurm_run.sh', 'software_versions.tsv', 'test_1_fwd_HWLTKDRXY_600000.fastq.gz', 'test_2_rev_HWLTKDRXY_600000.fastq.gz', 'wgs-paired-SRR1620013_1.fastq.gz', 'wgs-paired-SRR1620013_2.fastq.gz', 'diamond_join.cwl', 'diamond_post_run_join.sh', 'diamond_sorting.cwl', 'Diamond.blastp.cwl', 'Dockerfile', 'Diamond-output_formats.yaml', 'Diamond-strand_values.yaml', 'Dockerfile', 'eggnog.cwl', 'build_assembly_gff.py', 'gff_generation.cwl', 'Dockerfile', 'genome_properties.cwl', 'give_pathways.py', 'kegg_pathways.cwl', 'make_graphs.py', 'modification_table.cwl', 'parsing_hmmscan.cwl', 'parsing_hmmscan.py', 'Dockerfile', 'add_run_db.cwl', 'assign_mgyc.cwl', 'assign_mgyp.cwl', 'add_run.py', 'assign_mgyc.py', 'assign_mgyp_db.py', '__init__.py', 'Dockerfile', '__init__.py', 'antismash_v4.cwl', 'install_4.2.0.sh', 'run_antismash_short.sh', 'check_value.cwl', 'filtering_fasta_for_antismash.cwl', '__init__.py', 'antismash_to_gff.cwl', 'antismash_to_gff_nojson.py', '__init__.py', 'change_antismash_output.py', 'change_output.cwl', 'change_geneclusters_ctg.py', 'change_geneclusters_txt.cwl', '__init__.py', 'reformat-antismash.cwl', 'reformat-antismash.py', '__init__.py', 'antismash_rename_contigs.py', 'rename_contigs.cwl', '__init__.py', 'move_antismash_summary.cwl', 'move_antismash_summary.py', '__init__.py', 'generate_mapfile_prodigal.cwl', 'generate_mapfile_prodigal.py', 'fasta_index.cwl', 'run_samtools_docker.sh', 'CRISPRCasFinder.cwl', 'CRISPRCasFinder2Fasta.cwl', 'CRISPRCasFinder2GFF.cwl', 'Dockerfile', 'crisprcf2fasta.py', 'crisprcf2gff.py', 'runCRISPRCasFinderl.cwl', 'Dockerfile', '__init__.py', 'combined_gene_caller.cwl', 'combined_gene_caller.py', 'combined_gene_caller_conf.json', 'combined_gene_caller_docker.py', 'Dockerfile', 'Dockerfile', 'FGS.cwl', 'Dockerfile', 'prodigal.cwl', '__init__.py', 'faselector', 'post-processing.cwl', 'unite_protein_predictions.py', 'eggnog_annotations.cwl', 'eggnog_annotations.yml', 'Dockerfile', 'go-basic-metagenomics_release_20160705.obo', 'go-basic-metagenomics_release_20160705.txt', 'go_summary-config.json', 'go_summary.cwl', 'go_summary_pipeline-1.0.py', 'metagenomics_go_slim_banding.txt', 'metagenomics_go_slim_ids.txt', 'owltools', 'owltools-runner-all.jar', 'owltools.vmoptions', 'Dockerfile', 'InterProScan-v5.cwl', 'InterProScan-apps.yaml', 'InterProScan-protein_formats.yaml', 'pfam_annotations.cwl', 'Dockerfile', 'biom-convert-table.yaml', 'biom-convert.cwl', 'biom-convert.sh', 'Dockerfile', 'cmsearch-deoverlap-v0.02.cwl', 'cmsearch-deoverlap.pl', 'Dockerfile', 'infernal-cmsearch-v1.1.2.cwl', 'Dockerfile', 'esl-index.sh', 'esl-sfetch-index.cwl', 'esl-sfetch-manyseqs.cwl', 'Dockerfile', 'awk_tool', 'extract-coords.cwl', 'extract-coords_awk.cwl', 'get_subunits_coords.cwl', 'get_subunits_coords.py', '__init__.py', 'get_subunits.cwl', 'get_subunits.py', 'Dockerfile', 'krona.cwl', 'Dockerfile', 'mapseq.cwl', 'Dockerfile', 'mapseq2biom.cwl', 'mapseq2biom.pl', 'pull_ncrnas.cwl', 'pull_ncrnas.sh', 'Dockerfile', 'clean_motus_output.cwl', 'clean_motus_output.sh', 'mOTUs.cwl', 'mOTUs_download_db.py', 'Dockerfile', 'seqprep.cwl', 'Dockerfile', 'LICENSE', 'Trimmomatic-v0.36-PE.cwl', 'Trimmomatic-v0.36-SE.cwl', 'trimmomatic', 'trimmomatic-0.36.jar', 'trimmomatic.jar', 'trimmomatic_help.txt', 'trimmomatic-end_mode.yaml', 'trimmomatic-illumina_clipping.yaml', 'trimmomatic-max_info.yaml', 'trimmomatic-phred.yaml', 'trimmomatic-sliding_window.yaml', 'Dockerfile', 'esl-ssplit.pl', 'esl-ssplit.sh', 'fasta_chunker.cwl', 'protein_chunker.cwl', 'split_to_chunks.py', 'Dockerfile', 'fastp.cwl', 'fastp.yml', 'Dockerfile.fetch_tool', 'fetchdata-config-template.json', 'get_raw_data.sh', 'get_raw_data_run.cwl', 'get_raw_data_run.yml', 'Dockerfile', '__init__.py', '__init__.py', 'hmmer_tab_modification.cwl', 'hmmscan_tab.py', '__init__.py', 'hmmscan-subwf.cwl', 'hmmscan.cwl', 'hmmsearch.cwl', 'format_bedfile', 'bedtools.yml', 'Dockerfile', 'bedtools.cwl', 'format-bedfile.cwl', 'its-length-new.py', 'suppress_tax.cwl', 'qc-filtering.cwl', 'run_quality_filtering.py', 'MGRAST_base.py', 'qc-stats.cwl', 'functional_stats.cwl', 'functional_stats.py', 'write_summaries.cwl', 'write_summaries.py', 'add_header', 'add_header.cwl', 'clean_fasta_headers.cwl', 'concatenate.cwl', 'count_fasta.cwl', 'count_lines.cwl', 'count_lines.py', 'count_number_lines.cwl', 'create_yml.py', 'edit-ro-crate.py', 'fastq_to_fasta.cwl', 'fastq_to_fasta.py', 'generate_checksum.cwl', 'generate_checksum.py', 'make_csv.cwl', 'make_csv.py', 'make_flatten.cwl', 'make_tab_sep.cwl', 'move.cwl', 'multiple-gunzip.cwl', 'gzip.cwl', 'qc-flag.cwl', 'remove_headers.cwl', 'remove_headers.yml', 'Dockerfile', 'create_chunks_file.cwl', 'chunkFastaResultFileUtil.py', 'chunkTSVFileUtil.py', 'cleaningUtils.py', 'run_result_file_chunker.py', 'result_chunker.cwl', 'result_chunker_subwf.cwl', 'split_fasta.cwl', 'split_fasta_by_size.sh', 'split_tsv.cwl', 'return_directory.cwl', 'size_file.cwl', 'touch_file.cwl', 'Func_ann_and_post_proccessing-subwf.cwl', 'megahit.cwl', 'qc.cwl', 'rna-prediction.cwl', 'gos_wf.cwl', 'gos_wf.svg', 'pseudo.merged.cmsearch.all.tblout.deoverlapped', 'pseudo.merged.fasta', 'pseudo.merged.unfiltered.fasta', 'pseudo.merged_CDS.faa', 'pseudo_1_clean.fastq.trimmed.fasta', 'pseudo_2_clean.fastq.trimmed.fasta', 'eggnog-subwf.cwl', 'chunking-subwf-IPS.cwl', 'classify-otu-visualise.cwl', 'cmsearch-condition.cwl', 'cmsearch-multimodel-assembly.cwl', 'cmsearch-multimodel-raw-data.cwl', 'func_summaries.cwl', 'functional-annotation.cwl', 'post-proccessing-go-pfam-stats-subwf.cwl', 'chunking-subwf-hmmscan.cwl', 'chunking-subwf-hmmsearch.cwl', 'test.hmm', 'test.hmm.h3f', 'test.hmm.h3i', 'test.hmm.h3m', 'test.hmm.h3p', 'other_ncrnas.cwl', 'CGC-subwf.cwl', 'predict_proteins_reads.cwl', 'mOTUs-workflow.cwl', 'rna_prediction-sub-wf.cwl']",
    "raw_text_content": "<!doctype html>\n\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>A workflow for marine Genomic Observatories data analysis</title>\n\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"/assets/favicon-3347f1fa2a35ed9eda71993b279ed800c9959dec99ab98c3e3db1ddaea17b8d0.png\" />\n  <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"3i0Bsx9k+iMBEOPlpzVxdAast6SHwz1YTS/klNB9xgg6+gI1J9lA835UPBQXdxaDp/xDEMfH/4bvCrBz7MAoZw==\" />\n\n  <script type=\"application/ld+json\">{\n  \"@context\": \"https://schema.org\",\n  \"@type\": [\n    \"SoftwareSourceCode\",\n    \"ComputationalWorkflow\"\n  ],\n  \"dct:conformsTo\": \"https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/\",\n  \"@id\": \"https://workflowhub.eu/workflows/384?version=3\",\n  \"description\": \"# metaGOflow: A workflow for marine Genomic Observatories' data analysis\\r\\n\\r\\n![logo](https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png)\\r\\n\\r\\n\\r\\n## An EOSC-Life project\\r\\n\\r\\nThe workflows developed in the framework of this project are based on `pipeline-v5` of the MGnify resource.\\r\\n\\r\\n&gt; This branch is a child of the [`pipeline_5.1`](https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1) branch\\r\\n&gt; that contains all CWL descriptions of the MGnify pipeline version 5.1.\\r\\n\\r\\n## Dependencies\\r\\n\\r\\nTo run metaGOflow you need to make sure you have the following set on your computing environmnet first:\\r\\n\\r\\n- python3 [v 3.8+]\\r\\n- [Docker](https://www.docker.com) [v 19.+] or [Singularity](https://apptainer.org) [v 3.7.+]/[Apptainer](https://apptainer.org) [v 1.+]\\r\\n- [cwltool](https://github.com/common-workflow-language/cwltool) [v 3.+]\\r\\n- [rdflib](https://rdflib.readthedocs.io/en/stable/) [v 6.+]\\r\\n- [rdflib-jsonld](https://pypi.org/project/rdflib-jsonld/) [v 0.6.2]\\r\\n- [ro-crate-py](https://github.com/ResearchObject/ro-crate-py) [v 0.7.0]\\r\\n- [pyyaml](https://pypi.org/project/PyYAML/) [v 6.0]\\r\\n- [Node.js](https://nodejs.org/) [v 10.24.0+]\\r\\n- Available storage ~235GB for databases\\r\\n\\r\\n### Storage while running\\r\\n\\r\\nDepending on the analysis you are about to run, disk requirements vary.\\r\\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.\\r\\n\\r\\n## Installation\\r\\n\\r\\n### Get the EOSC-Life marine GOs workflow\\r\\n\\r\\n```bash\\r\\ngit clone https://github.com/emo-bon/MetaGOflow\\r\\ncd MetaGOflow\\r\\n```\\r\\n\\r\\n### Download necessary databases (~235GB)\\r\\n\\r\\nYou can download databases for the EOSC-Life GOs workflow by running the\\r\\n`download_dbs.sh` script under the `Installation` folder.\\r\\n\\r\\n```bash\\r\\nbash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \\r\\n```\\r\\nIf you have one or more already in your system, then create a symbolic link pointing\\r\\nat the `ref-dbs` folder or at one of its subfolders/files.\\r\\n\\r\\nThe final structure of the DB directory should be like the following:\\r\\n\\r\\n````bash\\r\\nuser@server:~/MetaGOflow: ls ref-dbs/\\r\\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\\r\\n````\\r\\n\\r\\n## How to run\\r\\n\\r\\n### Ensure that `Node.js` is installed on your system before running metaGOflow\\r\\n\\r\\nIf you have root access on your system, you can run the commands below to install it:\\r\\n\\r\\n##### DEBIAN/UBUNTU\\r\\n```bash\\r\\nsudo apt-get update -y\\r\\nsudo apt-get install -y nodejs\\r\\n```\\r\\n\\r\\n##### RH/CentOS\\r\\n```bash\\r\\nsudo yum install rh-nodejs (e.g. rh-nodejs10)\\r\\n```\\r\\n\\r\\n### Set up the environment\\r\\n\\r\\n#### Run once - Setup environment\\r\\n\\r\\n- ```bash\\r\\n  conda create -n EOSC-CWL python=3.8\\r\\n  ```\\r\\n\\r\\n- ```bash\\r\\n  conda activate EOSC-CWL\\r\\n  ```\\r\\n\\r\\n- ```bash\\r\\n  pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\\r\\n\\r\\n  ```\\r\\n\\r\\n#### Run every time\\r\\n\\r\\n```bash\\r\\nconda activate EOSC-CWL\\r\\n``` \\r\\n\\r\\n### Run the workflow\\r\\n\\r\\n- Edit the `config.yml` file to set the parameter values of your choice. For selecting all the steps, then set to `true` the variables in lines [2-6].\\r\\n\\r\\n#### Using Singularity\\r\\n\\r\\n##### Standalone\\r\\n- run:\\r\\n   ```bash\\r\\n   ./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\\r\\n   ``\\r\\n\\r\\n##### Using a cluster with a queueing system (e.g. SLURM)\\r\\n\\r\\n- Create a job file (e.g., SBATCH file)\\r\\n\\r\\n- Enable Singularity, e.g. module load Singularity &amp; all other dependencies \\r\\n\\r\\n- Add the run line to the job file\\r\\n\\r\\n\\r\\n#### Using Docker\\r\\n\\r\\n##### Standalone\\r\\n- run:\\r\\n    ``` bash\\r\\n    ./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\\r\\n  ```\\r\\n  HINT: If you are using Docker, you may need to run the above command without the `-s' flag.\\r\\n\\r\\n## Testing samples\\r\\nThe samples are available in the `test_input` folder.\\r\\n\\r\\nWe provide metaGOflow with partial samples from the Human Metagenome Project ([SRR1620013](https://www.ebi.ac.uk/ena/browser/view/SRR1620013) and [SRR1620014](https://www.ebi.ac.uk/ena/browser/view/SRR1620014))\\r\\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. \\r\\n\\r\\n\\r\\n## Hints and tips\\r\\n\\r\\n1. In case you are using Docker, it is strongly recommended to **avoid** installing it through `snap`.\\r\\n\\r\\n2. `RuntimeError`: slurm currently does not support shared caching, because it does not support cleaning up a worker\\r\\n   after the last job finishes.\\r\\n   Set the `--disableCaching` flag if you want to use this batch system.\\r\\n\\r\\n3. In case you are having errors like:\\r\\n\\r\\n```\\r\\ncwltool.errors.WorkflowException: Singularity is not available for this tool\\r\\n```\\r\\n\\r\\nYou may run the following command:\\r\\n\\r\\n```\\r\\nsingularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\\r\\n```\\r\\n\\r\\n## Contribution\\r\\n\\r\\nTo make contribution to the project a bit easier, all the MGnify `conditionals` and `subworkflows` under\\r\\nthe `workflows/` directory that are not used in the metaGOflow framework, have been removed.   \\r\\nHowever, all the MGnify `tools/` and `utils/` are available in this repo, even if they are not invoked in the current\\r\\nversion of metaGOflow.\\r\\nThis way, we hope we encourage people to implement their own `conditionals` and/or `subworkflows` by exploiting the\\r\\ncurrently supported `tools` and `utils` as well as by developing new `tools` and/or `utils`.\\r\\n\\r\\n\\r\\n\\r\\n\",\n  \"name\": \"A workflow for marine Genomic Observatories data analysis\",\n  \"url\": \"https://workflowhub.eu/workflows/384?version=3\",\n  \"keywords\": \"\",\n  \"version\": 3,\n  \"license\": \"https://spdx.org/licenses/Apache-2.0\",\n  \"creator\": [\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/253\",\n      \"name\": \"Haris Zafeiropoulos\"\n    },\n    {\n      \"@type\": \"Person\",\n      \"@id\": \"https://workflowhub.eu/people/27\",\n      \"name\": \"Martin Beracochea\"\n    }\n  ],\n  \"producer\": [\n    {\n      \"@type\": [\n        \"Project\",\n        \"Organization\"\n      ],\n      \"@id\": \"https://workflowhub.eu/projects/85\",\n      \"name\": \"emo-bon\"\n    }\n  ],\n  \"dateCreated\": \"2023-05-16T20:41:04Z\",\n  \"dateModified\": \"2023-05-16T22:01:12Z\",\n  \"isPartOf\": [\n\n  ],\n  \"isBasedOn\": \"https://workflowhub.eu/workflows/384?version=2\",\n  \"programmingLanguage\": {\n    \"@id\": \"#cwl\",\n    \"@type\": \"ComputerLanguage\",\n    \"name\": \"Common Workflow Language\",\n    \"alternateName\": \"CWL\",\n    \"identifier\": {\n      \"@id\": \"https://w3id.org/cwl/v1.0/\"\n    },\n    \"url\": {\n      \"@id\": \"https://www.commonwl.org/\"\n    }\n  },\n  \"input\": [\n\n  ],\n  \"output\": [\n\n  ],\n  \"sdPublisher\": {\n    \"@type\": \"Organization\",\n    \"@id\": \"https://about.workflowhub.eu/\",\n    \"name\": \"WorkflowHub\",\n    \"url\": \"https://about.workflowhub.eu/\"\n  }\n}</script>\n\n  <link rel=\"stylesheet\" media=\"screen\" href=\"/assets/application-fd4337796a7af073d1a8b2f8bf5d44724a2d6b707bc9ed796221724f67bb3e52.css\" />\n  <script src=\"/assets/application-b437db0a3ff689a75556b94d38ae1c86ab9c8787e57923357fb985542fc47228.js\"></script>\n</head>\n\n<body id=\"body\">\n\n<nav class=\"navbar navbar-default\" role=\"navigation\" id=\"navbar\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-inner\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n        <a class=\"logo_link\" href=\"/\">\n            <img src=\"/assets/logos/workflowhub-411793abbbaf30366f181f4255584b7bb1fa1e6b1d02f59fecb63960545304ef.svg\" />\n</a>    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"navbar-inner\">\n\n      <ul class=\"nav navbar-nav\">\n        <li class=\"dropdown\" id=\"browse-menu\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Browse</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md\">Browse</li>\n    <li role=\"presentation\" class=\"dropdown-header\">Core Resources</li><li><a href=\"/workflows\">Workflows</a></li><li><a href=\"/collections\">Collections</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Other Resources</li><li><a href=\"/publications\">Publications</a></li><li><a href=\"/documents\">Documents</a></li><li><a href=\"/data_files\">Data files</a></li><li><a href=\"/sops\">SOPs</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Directory</li><li><a href=\"/programmes\">Spaces</a></li><li><a href=\"/projects\">Teams</a></li><li><a href=\"/institutions\">Organizations</a></li><li><a href=\"/people\">People</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Experiments</li><li><a href=\"/observation_units\">Observation Units</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Activities</li><li><a href=\"/presentations\">Presentations</a></li><li><a href=\"/events\">Events</a></li>\n\n    <li role=\"presentation\" class=\"dropdown-header\">Samples</li><li><a href=\"/strains\">Strains</a></li><li><a href=\"/organisms\">Organisms</a></li>\n\n    \n  </ul>\n</li>\n\n        \n      </ul>\n\n      \n    <form id=\"search-form\" class=\"navbar-form navbar-left\" action=\"/search\" accept-charset=\"UTF-8\" method=\"get\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" autocomplete=\"off\" />        <div id=\"search_box\">\n\n          <div class=\"input-group\">\n            <input type=\"text\" name=\"q\" id=\"q\" class=\"form-control\" placeholder=\"Search here...\" />\n            <div class=\"input-group-btn\">\n              <input type=\"submit\" value=\"Search\" class=\"btn btn-primary\" data-disable-with=\"Search\" />              <button id=\"adv-search-btn\" data-tooltip=\"Click for more search options\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\">\n                &nbsp;<span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>&nbsp;\n              </button>\n            </div>\n          </div>\n\n          <div id=\"advanced-search\" style=\"display: none\">\n            <div class=\"form-group\">\n              <select name=\"search_type\" id=\"search_type\" class=\"form-control\"><option value=\"\">All</option>\n<option value=\"collections\">Collections</option>\n<option value=\"data_files\">Data files</option>\n<option value=\"documents\">Documents</option>\n<option value=\"events\">Events</option>\n<option value=\"institutions\">Organizations</option>\n<option value=\"observation_units\">Observation units</option>\n<option value=\"organisms\">Organisms</option>\n<option value=\"people\">People</option>\n<option value=\"presentations\">Presentations</option>\n<option value=\"programmes\">Spaces</option>\n<option value=\"projects\">Teams</option>\n<option value=\"publications\">Publications</option>\n<option value=\"sops\">SOP</option>\n<option value=\"strains\">Strains</option>\n<option value=\"workflows\">Workflows</option></select>\n            </div>\n                <div class=\"checkbox\">\n                  <label data-tooltip=\"Checking this box allows external resources to be includes in the search. External resources include:  BioModels Database, ELIXIR TeSS Events. This means the search will take longer, but will include results from other sites\">\n                    <input type=\"checkbox\" name=\"include_external_search\" id=\"include_external_search\" value=\"1\" class=\"checkbox\" /> External\n                  </label>\n                </div>\n          </div>\n        </div>\n</form>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n          <li id=\"navbar_about\" class=\"dropdown\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n      <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>\n      <span class=\"hidden-md\">About</span>\n      <span class=\"caret\"></span>\n    </a>\n    <ul class=\"dropdown-menu\" role=\"menu\">\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/citation\">Cite us</a></li>\n        <li><a target=\"_blank\" href=\"https://about.workflowhub.eu/project/#contact-us\">Contact us</a></li>\n    </ul>\n  </li>\n\n        <li class=\"dropdown\">\n  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\n    <span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span>\n    <span class=\"hidden-md\">Help</span>\n    <span class=\"caret\"></span>\n  </a>\n  <ul class=\"dropdown-menu\" role=\"menu\">\n    <li role=\"presentation\" class=\"dropdown-header visible-md-block\">Help</li>\n    <li><a target=\"_blank\" href=\"/help\">Help documentation</a></li>\n    <li><a href=\"/api\">API documentation</a></li>\n        <li><a target=\"_blank\" href=\"https://github.com/seek4science/seek/issues\">Report an issue</a></li>\n  </ul>\n</li>\n\n            <li><a href=\"/signup\">Register</a></li>\n            <li><a href=\"/login?return_to=%2Fworkflows%2F384%3Ftab%3Dfiles\">Log in</a></li>\n      </ul>\n\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n\n\n<div id=\"content\">\n  \n  <div class=\"container-fluid\">\n\n        <div id=\"error_flash\" class=\"fade in alert alert-danger alert-dismissable\" role=\"alert\"><button class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times</span></button>\n            Couldn&#39;t find path: conda.yml\n</div>\n    \n\n    \n<div class=\"row contribution-header\">\n  <div class=\"col-md-6\">\n      <a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=588&amp;resource_type=Workflow%3A%3AGit%3A%3AVersion\" data-tooltip=\"A workflow for marine Genomic Observatories data analysis\" href=\"/workflows/384?version=3\"><img src=\"/assets/avatars/workflow_types/avatar-cwl-b32b49679c145bfc8ba57b855a03e8bf0ea1264efd73260f884158057a307967.svg\" /></a>    <h1>\n      A workflow for marine Genomic Observatories data analysis              <div class=\"version\">\n                <a class=\"dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                  eosc-life-gos @ deb5427 (latest)<span class=\"caret\"></span>\n                </a>\n                <ul class=\"dropdown-menu\" role=\"menu\">\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=3\">                            eosc-life-gos @ deb5427 (latest)<br/>\n</a>                      </li>\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=2\">                            eosc-life-gos @ deb5427 <br/>\n</a>                      </li>\n                      <li>\n                        <a data-method=\"GET\" href=\"/workflows/384?version=1\">                            eosc-life-gos @ 28122db (earliest)<br/>\n</a>                      </li>\n                </ul>\n              </div>\n    </h1>\n  </div>\n  <div class=\"col-md-6 text-right-md\" id=\"buttons\">\n    \n\n<a target=\"_blank\" class=\"btn btn-default\" href=\"https://github.com/emo-bon/MetaGOflow.git\"><img class=\"icon\" src=\"/assets/logos/GitHub-Mark-16px-bf89446a8379547fb34a2423c4c358b56a3ae8a5d9177e6d971bd28d1f0941cc.png\" />View on GitHub</a>\n\n\n\n\n        <a data-tooltip=\"The Workflow RO-Crate is a package containing the workflow definition, its metadata and supporting resources like test data\" class=\"btn btn-default\" href=\"/workflows/384/ro_crate?version=3\"><img class=\"icon\" src=\"/assets/file_icons/small/ro-crate-e37e2d8e782c8123e4e30a3ad2908acb41ec8d058240bb6413353f78d7d805bc.png\" />Download RO-Crate</a>\n\n\n\n\n  </div>\n</div>\n\n\n\n\n<ul class=\"nav nav-tabs\">\n  <li><a data-target=\"#overview\" data-toggle=\"tab\" aria-controls=\"overview\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span> Overview\n</a></li>\n    <li class=\"active\"><a data-target=\"#files\" data-toggle=\"tab\" aria-controls=\"files\" role=\"tab\">\n      <span class=\"glyphicon glyphicon-folder-close\"></span> Files\n</a></li>\n  <li><a data-target=\"#related-items\" data-toggle=\"tab\" aria-controls=\"related-items\" role=\"tab\">\n    <span class=\"glyphicon glyphicon-th-list\"></span> Related items\n</a></li>\n</ul>\n\n\n<div class=\"tab-content\">\n  <div id=\"overview\" class=\"tab-pane fade\">\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8 box_about_actor\">\n        <strong>Workflow Type: </strong> Common Workflow Language\n        <div style=\"margin-bottom: 5px;\">\n            <span class=\"maturity-level label label-success\">Stable</span>\n\n        </div>\n\n        \n<div id=\"description\" class=\"markdown-body seek-description\">\n  <h1>metaGOflow: A workflow for marine Genomic Observatories' data analysis</h1>\n<p><img src=\"https://raw.githubusercontent.com/hariszaf/metaGOflow-use-case/gh-pages/assets/img/metaGOflow_logo_italics.png\" alt=\"logo\" /></p>\n<h2>An EOSC-Life project</h2>\n<p>The workflows developed in the framework of this project are based on <code>pipeline-v5</code> of the MGnify resource.</p>\n<blockquote>\n<p>This branch is a child of the <a rel=\"nofollow\" href=\"https://github.com/hariszaf/pipeline-v5/tree/pipeline_5.1\"><code>pipeline_5.1</code></a> branch\nthat contains all CWL descriptions of the MGnify pipeline version 5.1.</p>\n</blockquote>\n<h2>Dependencies</h2>\n<p>To run metaGOflow you need to make sure you have the following set on your computing environmnet first:</p>\n<ul>\n<li>python3 [v 3.8+]</li>\n<li><a rel=\"nofollow\" href=\"https://www.docker.com\">Docker</a> [v 19.+] or <a rel=\"nofollow\" href=\"https://apptainer.org\">Singularity</a> [v 3.7.+]/<a rel=\"nofollow\" href=\"https://apptainer.org\">Apptainer</a> [v 1.+]</li>\n<li><a rel=\"nofollow\" href=\"https://github.com/common-workflow-language/cwltool\">cwltool</a> [v 3.+]</li>\n<li><a rel=\"nofollow\" href=\"https://rdflib.readthedocs.io/en/stable/\">rdflib</a> [v 6.+]</li>\n<li><a rel=\"nofollow\" href=\"https://pypi.org/project/rdflib-jsonld/\">rdflib-jsonld</a> [v 0.6.2]</li>\n<li><a rel=\"nofollow\" href=\"https://github.com/ResearchObject/ro-crate-py\">ro-crate-py</a> [v 0.7.0]</li>\n<li><a rel=\"nofollow\" href=\"https://pypi.org/project/PyYAML/\">pyyaml</a> [v 6.0]</li>\n<li><a rel=\"nofollow\" href=\"https://nodejs.org/\">Node.js</a> [v 10.24.0+]</li>\n<li>Available storage ~235GB for databases</li>\n</ul>\n<h3>Storage while running</h3>\n<p>Depending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases.</p>\n<h2>Installation</h2>\n<h3>Get the EOSC-Life marine GOs workflow</h3>\n<pre lang=\"bash\"><code>git clone https://github.com/emo-bon/MetaGOflow\ncd MetaGOflow\n</code></pre>\n<h3>Download necessary databases (~235GB)</h3>\n<p>You can download databases for the EOSC-Life GOs workflow by running the\n<code>download_dbs.sh</code> script under the <code>Installation</code> folder.</p>\n<pre lang=\"bash\"><code>bash Installation/download_dbs.sh -f [Output Directory e.g. ref-dbs] \n</code></pre>\n<p>If you have one or more already in your system, then create a symbolic link pointing\nat the <code>ref-dbs</code> folder or at one of its subfolders/files.</p>\n<p>The final structure of the DB directory should be like the following:</p>\n<pre lang=\"bash\"><code>user@server:~/MetaGOflow: ls ref-dbs/\ndb_kofam/  diamond/  eggnog/  GO-slim/  interproscan-5.57-90.0/  kegg_pathways/  kofam_ko_desc.tsv  Rfam/  silva_lsu/  silva_ssu/\n</code></pre>\n<h2>How to run</h2>\n<h3>Ensure that <code>Node.js</code> is installed on your system before running metaGOflow</h3>\n<p>If you have root access on your system, you can run the commands below to install it:</p>\n<h5>DEBIAN/UBUNTU</h5>\n<pre lang=\"bash\"><code>sudo apt-get update -y\nsudo apt-get install -y nodejs\n</code></pre>\n<h5>RH/CentOS</h5>\n<pre lang=\"bash\"><code>sudo yum install rh-nodejs (e.g. rh-nodejs10)\n</code></pre>\n<h3>Set up the environment</h3>\n<h4>Run once - Setup environment</h4>\n<ul>\n<li>\n<pre lang=\"bash\"><code>conda create -n EOSC-CWL python=3.8\n</code></pre>\n</li>\n<li>\n<pre lang=\"bash\"><code>conda activate EOSC-CWL\n</code></pre>\n</li>\n<li>\n<pre lang=\"bash\"><code>pip install cwlref-runner cwltool[all] rdflib-jsonld rocrate pyyaml\n\n</code></pre>\n</li>\n</ul>\n<h4>Run every time</h4>\n<pre lang=\"bash\"><code>conda activate EOSC-CWL\n</code></pre>\n<h3>Run the workflow</h3>\n<ul>\n<li>Edit the <code>config.yml</code> file to set the parameter values of your choice. For selecting all the steps, then set to <code>true</code> the variables in lines [2-6].</li>\n</ul>\n<h4>Using Singularity</h4>\n<h5>Standalone</h5>\n<ul>\n<li>run:\n<pre lang=\"bash\"><code>./run_wf.sh -s -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n``\n\n</code></pre>\n</li>\n</ul>\n<h5>Using a cluster with a queueing system (e.g. SLURM)</h5>\n<ul>\n<li>\n<p>Create a job file (e.g., SBATCH file)</p>\n</li>\n<li>\n<p>Enable Singularity, e.g. module load Singularity &amp; all other dependencies</p>\n</li>\n<li>\n<p>Add the run line to the job file</p>\n</li>\n</ul>\n<h4>Using Docker</h4>\n<h5>Standalone</h5>\n<ul>\n<li>run:\n<pre lang=\"bash\"><code>./run_wf.sh -n osd-short -d short-test-case -f test_input/wgs-paired-SRR1620013_1.fastq.gz -r test_input/wgs-paired-SRR1620013_2.fastq.gz\n</code></pre>\nHINT: If you are using Docker, you may need to run the above command without the `-s' flag.</li>\n</ul>\n<h2>Testing samples</h2>\n<p>The samples are available in the <code>test_input</code> folder.</p>\n<p>We provide metaGOflow with partial samples from the Human Metagenome Project (<a rel=\"nofollow\" href=\"https://www.ebi.ac.uk/ena/browser/view/SRR1620013\">SRR1620013</a> and <a rel=\"nofollow\" href=\"https://www.ebi.ac.uk/ena/browser/view/SRR1620014\">SRR1620014</a>)\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way.</p>\n<h2>Hints and tips</h2>\n<ol>\n<li>\n<p>In case you are using Docker, it is strongly recommended to <strong>avoid</strong> installing it through <code>snap</code>.</p>\n</li>\n<li>\n<p><code>RuntimeError</code>: slurm currently does not support shared caching, because it does not support cleaning up a worker\nafter the last job finishes.\nSet the <code>--disableCaching</code> flag if you want to use this batch system.</p>\n</li>\n<li>\n<p>In case you are having errors like:</p>\n</li>\n</ol>\n<pre><code>cwltool.errors.WorkflowException: Singularity is not available for this tool\n</code></pre>\n<p>You may run the following command:</p>\n<pre><code>singularity pull --force --name debian:stable-slim.sif docker://debian:stable-sli\n</code></pre>\n<h2>Contribution</h2>\n<p>To make contribution to the project a bit easier, all the MGnify <code>conditionals</code> and <code>subworkflows</code> under\nthe <code>workflows/</code> directory that are not used in the metaGOflow framework, have been removed.<br />\nHowever, all the MGnify <code>tools/</code> and <code>utils/</code> are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their own <code>conditionals</code> and/or <code>subworkflows</code> by exploiting the\ncurrently supported <code>tools</code> and <code>utils</code> as well as by developing new <code>tools</code> and/or <code>utils</code>.</p>\n\n</div>\n\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"workflow-diagram\">\n          <div class=\"alert alert-warning\">Could not render the workflow diagram.</div>\n\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <p class=\"id\"><strong>SEEK ID:</strong> <a href=\"https://workflowhub.eu/workflows/384?version=3\">https://workflowhub.eu/workflows/384?version=3</a></p>\n\n            \n                <p>\n      <b>DOI:</b> <a target=\"_blank\" href=\"https://doi.org/10.48546/workflowhub.workflow.384.3\">10.48546/workflowhub.workflow.384.3</a><span class=\"doi_icon\"></span>\n    </p>\n\n          </div>\n        </div>\n\n\n\n        \n\n\n        <h2>Version History</h2>\n<div class=\"list-group\">\n      <div class=\"list-group-item list-group-item-info\">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=3\">eosc-life-gos @ deb5427 (latest)</a>\n        <small>\n          Created 16th May 2023 at 21:41\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>Merge pull request #38 from emo-bon/fix-bugs</p>\n<p>Fixes logical expression to keep tmp.</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>deb5427</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n      <div class=\"list-group-item \">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=2\">eosc-life-gos @ deb5427 </a>\n        <small>\n          Created 16th May 2023 at 21:38\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>Merge pull request #38 from emo-bon/fix-bugs</p>\n<p>Fixes logical expression to keep tmp.</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>deb5427</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n      <div class=\"list-group-item \">\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <h4 class=\"list-group-item-heading\">\n        <a href=\"/workflows/384?version=1\">eosc-life-gos @ 28122db (earliest)</a>\n        <small>\n          Created 19th Sep 2022 at 19:00\n          by <a href=\"/people/253\">Haris Zafeiropoulos</a>\n        </small>\n      </h4>\n\n      <div class=\"list-group-item-text auto-collapse\">\n        <p>running version with workaround in conditionals</p>\n\n      </div>\n      <br/>\n      <span class=\"mutability label label-success\" title=\"This version is frozen and will not change.\">Frozen</span>\n        <code><img class=\"icon\" src=\"/assets/famfamfam_silk/arrow_branch-0d579eef4464c5d76cbb7e137dd1f87c7bde9cba499d2d7e912cebfb0d816090.png\" />eosc-life-gos</code>\n      <code>28122db</code>\n\n    </div>\n    <div class=\"col-sm-4 text-right\">\n    </div>\n  </div>\n</div>\n</div>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        \n  \n<div class=\"panel panel-default\" id=\"author-box\"><div class=\"panel-heading\"><img alt=\"help\" data-tooltip=\"These are the people that created the item, along with the person who submitted it. Sometimes the submitter may have uploaded the item on behalf of its contributors, but was not involved in creating it.\" style=\"vertical-align: middle;\" src=\"/assets/famfamfam_silk/information-8cfe563be76fb11b27c8ba778f5d40ce6800b244d6ca58ef6e9973308efbe534.png\" /> Creators and Submitter</div><div class=\"panel-body\">\n    <h5 class=\"author-list-title\">Creators</h5>\n\n\n    <ul class=\"author-list\">\n            <li class=\"author-list-item\"><a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=253&amp;resource_type=Person\" data-tooltip=\"Haris Zafeiropoulos\" href=\"/people/253\"><img alt=\"\" src=\"/assets/avatar-images/134-20x20.png\" /></a> <a href=\"/people/253\">Haris Zafeiropoulos</a></li>\n            <li class=\"author-list-item\"><a class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=27&amp;resource_type=Person\" data-tooltip=\"Martin Beracochea\" href=\"/people/27\"><img alt=\"\" src=\"/assets/avatar-images/18-20x20.png\" /></a> <a href=\"/people/27\">Martin Beracochea</a></li>\n    </ul>\n\n\n    <h5 class=\"author-list-title\">Submitter</h5>\n\n  <ul class=\"author-list\">\n    <li class=\"author-list-item\">\n        <a tooltip_suffix=\" (Submitter)\" class=\"favouritable\" data-favourite-url=\"/favourites/add?resource_id=253&amp;resource_type=Person\" data-tooltip=\"Haris Zafeiropoulos  (Submitter)\" href=\"/people/253\"><img alt=\"\" src=\"/assets/avatar-images/134-20x20.png\" /></a>        <a href=\"/people/253\">Haris Zafeiropoulos</a>\n    </li>\n  </ul>\n</div></div>\n\n\n    \n<div class=\"panel panel-default\">\n  <div class=\"panel-heading\">\n    <button class=\"btn-default btn btn-xs clipboard-btn pull-right\" data-clipboard-target=\"#citation\">\n      <span class=\"glyphicon glyphicon-copy\" aria-hidden=\"true\"></span>\n      Copy\n    </button>\n    Citation\n  </div>\n  <div class=\"panel-body\">\n    <div id=\"citation\" class=\"well well-sm citation-box\">\n        <div data-citation-style=\"apa\">\n  Zafeiropoulos, H., &amp; Beracochea, M. (2023). <i>A workflow for marine Genomic Observatories data analysis</i>. WorkflowHub. https://doi.org/10.48546/WORKFLOWHUB.WORKFLOW.384.3\n</div>\n    </div>\n\n    <select id=\"citation-style-select\" class=\"form-control\" data-url=\"/citation/10.48546/workflowhub.workflow.384.3\"><option value=\"aci-materials-journal\">ACI Materials Journal</option>\n<option value=\"acm-sig-proceedings-long-author-list\">ACM SIG Proceedings (&quot;et al.&quot; for 15+ authors)</option>\n<option value=\"acm-sig-proceedings\">ACM SIG Proceedings (&quot;et al.&quot; for 3+ authors)</option>\n<option value=\"acm-sigchi-proceedings\">ACM SIGCHI Proceedings (2016)</option>\n<option value=\"acm-sigchi-proceedings-extended-abstract-format\">ACM SIGCHI Proceedings - Extended Abstract Format</option>\n<option value=\"acm-siggraph\">ACM SIGGRAPH</option>\n<option value=\"acme-an-international-journal-for-critical-geographies\">ACME: An International Journal for Critical Geographies</option>\n<option value=\"afte-journal\">AFTE Journal</option>\n<option value=\"aib-studi\">AIB studi (Italian)</option>\n<option value=\"aids\">AIDS</option>\n<option value=\"aims-press\">AIMS Press</option>\n<option value=\"ambio\">AMBIO</option>\n<option value=\"associacao-nacional-de-pesquisa-e-ensino-em-transportes\">ANPET - Congresso de Pesquisa e Ensino em Transportes (Portuguese - Brazil)</option>\n<option value=\"asaio-journal\">ASAIO Journal (American Society for Artificial Internal Organs)</option>\n<option value=\"assay-and-drug-development-technologies\">ASSAY and Drug Development Technologies</option>\n<option value=\"academy-of-management-review\">Academy of Management Review</option>\n<option value=\"accident-analysis-and-prevention\">Accident Analysis and Prevention</option>\n<option value=\"acta-amazonica\">Acta Amazonica</option>\n<option value=\"acta-anaesthesiologica-scandinavica\">Acta Anaesthesiologica Scandinavica</option>\n<option value=\"acta-anaesthesiologica-taiwanica\">Acta Anaesthesiologica Taiwanica</option>\n<option value=\"acta-botanica-croatica\">Acta Botanica Croatica</option>\n<option value=\"acta-chiropterologica\">Acta Chiropterologica</option>\n<option value=\"acta-ichthyologica-et-piscatoria\">Acta Ichthyologica et Piscatoria</option>\n<option value=\"acta-medica-peruana\">Acta Médica Peruana</option>\n<option value=\"acta-naturae\">Acta Naturae</option>\n<option value=\"acta-neurobiologiae-experimentalis\">Acta Neurobiologiae Experimentalis</option>\n<option value=\"acta-neurochirurgica\">Acta Neurochirurgica</option>\n<option value=\"acta-ophthalmolo",
    "p_tag_content": "The workflows developed in the framework of this project are based onpipeline-v5of the MGnify resource. This branch is a child of thepipeline_5.1branch\nthat contains all CWL descriptions of the MGnify pipeline version 5.1. To run metaGOflow you need to make sure you have the following set on your computing environmnet first: Depending on the analysis you are about to run, disk requirements vary.\nIndicatively, you may have a look at the metaGOflow publication for computing resources used in various cases. You can download databases for the EOSC-Life GOs workflow by running thedownload_dbs.shscript under theInstallationfolder. If you have one or more already in your system, then create a symbolic link pointing\nat theref-dbsfolder or at one of its subfolders/files. The final structure of the DB directory should be like the following: If you have root access on your system, you can run the commands below to install it: Create a job file (e.g., SBATCH file) Enable Singularity, e.g. module load Singularity & all other dependencies Add the run line to the job file The samples are available in thetest_inputfolder. We provide metaGOflow with partial samples from the Human Metagenome Project (SRR1620013andSRR1620014)\nThey are partial as only a small part of their sequences have been kept, in terms for the pipeline to test in a fast way. In case you are using Docker, it is strongly recommended toavoidinstalling it throughsnap. RuntimeError: slurm currently does not support shared caching, because it does not support cleaning up a worker\nafter the last job finishes.\nSet the--disableCachingflag if you want to use this batch system. In case you are having errors like: You may run the following command: To make contribution to the project a bit easier, all the MGnifyconditionalsandsubworkflowsunder\ntheworkflows/directory that are not used in the metaGOflow framework, have been removed.However, all the MGnifytools/andutils/are available in this repo, even if they are not invoked in the current\nversion of metaGOflow.\nThis way, we hope we encourage people to implement their ownconditionalsand/orsubworkflowsby exploiting the\ncurrently supportedtoolsandutilsas well as by developing newtoolsand/orutils. SEEK ID:https://workflowhub.eu/workflows/384?version=3 DOI:10.48546/workflowhub.workflow.384.3 Merge pull request #38 from emo-bon/fix-bugs Fixes logical expression to keep tmp. Merge pull request #38 from emo-bon/fix-bugs Fixes logical expression to keep tmp. running version with workaround in conditionals Views:3177Downloads:470 Created: 19th Sep 2022 at 19:00 Last updated: 16th May 2023 at 23:00 This item has not yet been tagged. Teams:MGnify,HoloFood at MGnify Organizations:EMBL-EBI Teams:emo-bon Organizations:IMBBC-HCMR Expertise:Metagenomics,amplicon analysis,Microbiology,Systems Biology Tools:CWL I am a bioinformatician working on microbial ecology and ecosystem functioning at the microbial dimension. A space managed by WorkflowHub administrators for teams that don't want/need to manage their own space. Teams:IBISBA Workflows,NMR Workflow,UNLOCK,NanoGalaxy,Galaxy Climate,PNDB,IMBforge,COVID-19 PubSeq: Public SARS-CoV-2 Sequence Resource,LBI-RUD,Nick-test-team,usegalaxy-eu,Italy-Covid-data-Portal,UX trial team,Integrated and Urban Plant Pathology Laboratory,SARS-CoV-2 Data Hubs,lmjxteam2,virAnnot pipeline,Ay Lab,iPC: individualizedPaediatricCure,Harkany Lab,MOLGENIS,EJPRD WP13 case-studies workflows,Common Workflow Language (CWL) community,Testing,SeBiMER,IAA-CSIC,MAB - ATGC,Probabilistic graphical models,GenX,Snakemake-Workflows,ODA,IPK BIT,CO2MICS Lab,FAME,CHU Limoges - UF9481 Bioinformatique / CNR Herpesvirus,Quadram Institute Bioscience - Bioinformatics,HecatombDevelopment,Institute of Human Genetics,Testing RO Crates,Test Team,Applied Computational Biology at IEG/HMGU,INFRAFRONTIER workflows,OME,TransBioNet,OpenEBench,Bioinformatics and Biostatistics (BIO2 ) Core,VIB Bioinformatics Core,CRC Cohort,ICAN,MustafaVoh,Single Cell Unit,CO-Graph,emo-bon,TestEMBL-EBIOntology,CINECA,Toxicology community,Pitagora-Network,Workflows Australia,Medizinisches Proteom-Center, Medical Bioinformatics,AGRF BIO,EU-Openscreen,X-omics,ELIXIR Belgium,URGI,Size Inc,GA-VirReport Team,The Boucher Lab,Air Quality Prediction,pyiron,CAPSID,Edinburgh Genomics,Defragmentation TS,NBIS,Phytoplankton Analysis,Seq4AMR,Workflow registry test,Read2Map,SKM3,ParslRNA-Seq: an efficient and scalable RNAseq analysis workflow for studies of differentiated gene expression,de.NBI Cloud,Meta-NanoSim,ILVO Plant Health,EMERGEN-BIOINFO,KircherLab,Apis-wings,BCCM_ULC,Dessimoz Lab,TRON gGmbH,GEMS at MLZ,Computational Science at HZDR,Big data in biomedicine,TRE-FX,MISTIC,Guigó lab,Statistical genetics,Delineating Regions-of-interest for Mass Spectrometry Imaging by Multimodally Corroborated Spatial Segmentation,WES,Bioinformatics Unit @ CRG,Bioinformatics Innovation Lab,BSC-CES,ELIXIR Proteomics,Black Ochre Data Labs,Zavolan Lab,Metabolomics-Reproducibility,Team Cardio,NGFF Tools,Bioinformatics workflows for life science,Workflows for geographic science,Pacific-deep-sea-sponges-microbiome,CSFG,SNAKE,Katdetectr,INFRAFRONTIER GmbH,PerMedCoE,Euro-BioImaging,EOSC-Life WP3 OC Team, cross RI project,ANSES-Ploufragan,SANBI Pathogen Bioinformatics,Biodata Analysis Group,DeSci Labs,Erasmus MC - Viroscience Bioinformatics,ARA-dev,Mendel Centre for Plant Genomics and Proteomics,Metagenomic tools,WorkflowEng,Polygenic Score Catalog,bpm,scNTImpute,Systems Biotechnology laboratory,Cimorgh IT solutions,MLme: Machine Learning Made Easy,Hurwitz Lab,Dioscuri TDA,Scipion CNB,System Biotechnology laboratory,yPublish - Bioinfo tools,NIH CFDE Playbook Workflow Partnership,MMV-Lab,EMBL-CBA,EBP-Nor,Evaluation of Swin Transformer and knowledge transfer for denoising of super-resolution structured illumination microscopy data,Bioinformatics Laboratory for Genomics and Biodiversity (LBGB),multi-analysis dFC,CholGen,RNA group,Plant Genomes Pipelines in Galaxy,Pathogen Genomic Laboratory,Chemical Data Lab,JiangLab,Pangenome database project,HP2NET - Framework for construction of phylogenetic networks on High Performance Computing (HPC) environment,Center for Open Bioimage Analysis,Generalized Open-Source Workflows for Atomistic Molecular Dynamics Simulations of Viral Helicases,Historical DNA genome skimming,QCDIS,Peter Menzel's Team,NHM Clark group,ESRF Workflow System (Ewoks),Kalbe Bioinformatics,Nextflow4Metabolomics,GBCS,CEMCOF,Jackson Laboratory NGS-Ops,Schwartz Lab,BRAIN - Biomedical Research on Adult Intracranial Neoplasms,Cancer Therapeutics and Drug Safety,Deepdefense,Mid-Ohio Regional Planning Commission,MGSSB,Institute for Human Genetics and Genomic Medicine Aachen,FengTaoSMU,EGA,Plant-Food-Research-Open,KrauthammerLab,Geo Workflows,grassland pDT,FunGIALab,CRIM - Computer Research Institute of Montréal,Medvedeva Lab,Metagenlab,FAIR-EASE,Protein-protein and protein-nucleic acid binding site prediction research,Culhane Lab,IDUN - Drug Delivery and Sensing,Edge Computing DAG Task Scheduling Research Group Web page:Not specified The European Marine Omics Biodiversity Observation Network (EMO-BON) is the European Marine Biological Resource Centre’s (EMBRC) response to the need for ecosystem assessment and biological observation of European coastal waters. EMO BON is producing of genomic biodiversity data from 16 coastal stations at frequent time intervals. rich metadata are collected that allow the traceability of the data. Complementary data that included EOVs are collected together with the genomic data. EMO BON genomic\n... Space:Independent Teams Public web page:https://www.embrc.eu/emo-bon Organisms:Not specified"
  }
]